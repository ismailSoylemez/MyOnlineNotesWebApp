<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Nest</name>
  </assembly>
  <members>
    <member name="T:Nest.IAggregate">
      <summary>
            Aggregation response for an aggregation request
            </summary>
    </member>
    <member name="P:Nest.IAggregate.Meta">
      <summary>
            Metadata for the aggregation
            </summary>
    </member>
    <member name="T:Nest.AggregateDictionary">
      <summary>
            Contains aggregates that are returned by Elasticsearch. In NEST, Aggregation always refers to an aggregation
            request to Elasticsearch and an Aggregate describes an aggregation response.
            </summary>
    </member>
    <member name="T:Nest.IAggregation">
      <summary>
            Represents an aggregation on the request
            </summary>
    </member>
    <member name="P:Nest.IAggregation.Meta">
      <summary>
            metadata to associate with the individual aggregation at request time that
            will be returned in place at response time
            </summary>
    </member>
    <member name="P:Nest.IAggregation.Name">
      <summary>
            name of the aggregation
            </summary>
    </member>
    <member name="T:Nest.AggregationBase">
      <inheritdoc />
    </member>
    <member name="P:Nest.AggregationBase.Meta">
      <inheritdoc />
    </member>
    <member name="P:Nest.AggregationBase.Nest#IAggregation#Name">
      <inheritdoc />
    </member>
    <member name="T:Nest.AggregationCombinator">
      <summary>
            Combines aggregations into a single list of aggregations
            </summary>
    </member>
    <member name="T:Nest.AggregationDictionary">
      <summary>
            Describes aggregations that we would like to execute on Elasticsearch.
            <para />
            In NEST Aggregation always refers to an aggregation
            sent to Elasticsearch and an Aggregate describes an aggregation returned from Elasticsearch.
            </summary>
    </member>
    <member name="P:Nest.IAggregationContainer.Parent">
      <inheritdoc cref="T:Nest.IParentAggregation" />
    </member>
    <member name="P:Nest.AggregationContainer.Parent">
      <inheritdoc cref="T:Nest.IParentAggregation" />
    </member>
    <member name="M:Nest.AggregationContainerDescriptor`1.Parent``1(System.String,System.Func{Nest.ParentAggregationDescriptor{`0,``0},Nest.IParentAggregation})">
      <inheritdoc cref="T:Nest.IParentAggregation" />
    </member>
    <member name="M:Nest.AggregationContainerDescriptor`1._SetInnerAggregation``2(System.String,System.Func{``0,``1},System.Action{Nest.IAggregationContainer,``1})">
      <summary>
            Fluent methods do not assign to properties on `this` directly but on IAggregationContainers inside
            `this.Aggregations[string, IContainer]
            </summary>
    </member>
    <member name="P:Nest.IAutoDateHistogramAggregation.MinimumInterval">
      <summary>
            Specify the minimum rounding interval that should be used. This can make the collection process
            more efficient, as the aggregation will not attempt to round at any interval lower than this.
            </summary>
    </member>
    <member name="M:Nest.AutoDateHistogramAggregationDescriptor`1.MinimumInterval(System.Nullable{Nest.MinimumInterval})">
      <summary>
            Specify the minimum rounding interval that should be used. This can make the collection process
            more efficient, as the aggregation will not attempt to round at any interval lower than this.
            </summary>
      <inheritdoc cref="P:Nest.IAutoDateHistogramAggregation.MinimumInterval" />
    </member>
    <member name="P:Nest.SingleBucketAggregate.DocCount">
      <summary>
            Count of documents in the bucket
            </summary>
    </member>
    <member name="T:Nest.MultiBucketAggregate`1">
      <summary>
            Aggregation response for a bucket aggregation
            </summary>
      <typeparam name="TBucket">
      </typeparam>
    </member>
    <member name="P:Nest.MultiBucketAggregate`1.Buckets">
      <summary>
            The buckets into which results are grouped
            </summary>
    </member>
    <member name="P:Nest.MultiBucketAggregate`1.Meta">
      <inheritdoc />
    </member>
    <member name="T:Nest.CompositeBucketAggregate">
      <summary>
            Aggregation response of <see cref="T:Nest.CompositeAggregation" /></summary>
    </member>
    <member name="P:Nest.CompositeBucketAggregate.AfterKey">
      <summary>
            The composite key of the last bucket returned
            in the response before any filtering by pipeline aggregations.
            If all buckets are filtered/removed by pipeline aggregations,
            <see cref="P:Nest.CompositeBucketAggregate.AfterKey" /> will contain the composite key of the last bucket before filtering.
            </summary>
      <remarks> Valid for Elasticsearch 6.3.0+ </remarks>
    </member>
    <member name="T:Nest.BucketAggregate">
      <summary>
            Intermediate Aggregation response, transformed to a more specific
            aggregation response when requested.
            </summary>
    </member>
    <member name="T:Nest.ICompositeAggregation">
      <summary>
            A multi-bucket aggregation that creates composite buckets from different sources.
            </summary>
    </member>
    <member name="P:Nest.ICompositeAggregation.After">
      <summary>
            Used to retrieve the composite buckets that are after the
            last composite buckets returned in a previous round
            </summary>
    </member>
    <member name="P:Nest.ICompositeAggregation.Size">
      <summary>
            Defines how many composite buckets should be returned.
            Each composite bucket is considered as a single bucket so
            setting a size of 10 will return the first 10 composite buckets
            created from the values source.
            </summary>
    </member>
    <member name="P:Nest.ICompositeAggregation.Sources">
      <summary>
            Controls the sources that should be used to build the composite buckets
            </summary>
    </member>
    <member name="T:Nest.CompositeAggregation">
      <inheritdoc cref="T:Nest.ICompositeAggregation" />
    </member>
    <member name="P:Nest.CompositeAggregation.After">
      <summary>
            Used to retrieve the composite buckets that are after the
            last composite buckets returned in a previous round
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CompositeAggregation.Size">
      <summary>
            Defines how many composite buckets should be returned.
            Each composite bucket is considered as a single bucket so
            setting a size of 10 will return the first 10 composite buckets
            created from the values source.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CompositeAggregation.Sources">
      <summary>
            Controls the sources that should be used to build the composite buckets
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.CompositeAggregationDescriptor`1">
      <inheritdoc cref="T:Nest.ICompositeAggregation" />
    </member>
    <member name="M:Nest.CompositeAggregationDescriptor`1.Sources(System.Func{Nest.CompositeAggregationSourcesDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ICompositeAggregationSource}}})">
      <summary>
            Controls the sources that should be used to build the composite buckets
            </summary>
      <inheritdoc cref="P:Nest.ICompositeAggregation.Sources" />
    </member>
    <member name="M:Nest.CompositeAggregationDescriptor`1.Size(System.Nullable{System.Int32})">
      <summary>
            Defines how many composite buckets should be returned.
            Each composite bucket is considered as a single bucket so
            setting a size of 10 will return the first 10 composite buckets
            created from the values source.
            </summary>
      <inheritdoc cref="P:Nest.ICompositeAggregation.Size" />
    </member>
    <member name="M:Nest.CompositeAggregationDescriptor`1.After(Nest.CompositeKey)">
      <summary>
            Used to retrieve the composite buckets that are after the
            last composite buckets returned in a previous round
            </summary>
      <inheritdoc cref="P:Nest.ICompositeAggregation.After" />
    </member>
    <member name="T:Nest.ICompositeAggregationSource">
      <summary>
            A values source for <see cref="T:Nest.ICompositeAggregation" /></summary>
    </member>
    <member name="P:Nest.ICompositeAggregationSource.Field">
      <summary>
            The field from which to extract value
            </summary>
    </member>
    <member name="P:Nest.ICompositeAggregationSource.MissingBucket">
      <summary>
            By default documents without a value for a given source are ignored. It is possible to include
            them in the response as null by setting this to true
            </summary>
    </member>
    <member name="P:Nest.ICompositeAggregationSource.Name">
      <summary>
            The name of the source
            </summary>
    </member>
    <member name="P:Nest.ICompositeAggregationSource.Order">
      <summary>
            Defines the direction of sorting for each
            value source. Defaults to <see cref="F:Nest.SortOrder.Ascending" /></summary>
    </member>
    <member name="P:Nest.ICompositeAggregationSource.SourceType">
      <summary>
            The type of the source
            </summary>
    </member>
    <member name="T:Nest.CompositeAggregationSourceBase">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompositeAggregationSourceBase.Field">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompositeAggregationSourceBase.MissingBucket">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompositeAggregationSourceBase.Order">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompositeAggregationSourceBase.SourceType">
      <inheritdoc cref="P:Nest.ICompositeAggregationSource.SourceType" />
    </member>
    <member name="P:Nest.CompositeAggregationSourceBase.Nest#ICompositeAggregationSource#Name">
      <inheritdoc />
    </member>
    <member name="T:Nest.CompositeAggregationSourcesDescriptor`1">
      <inheritdoc cref="T:Nest.ICompositeAggregationSource" />
    </member>
    <member name="M:Nest.CompositeAggregationSourcesDescriptor`1.Terms(System.String,System.Func{Nest.TermsCompositeAggregationSourceDescriptor{`0},Nest.ITermsCompositeAggregationSource})">
      <inheritdoc cref="T:Nest.ITermsCompositeAggregationSource" />
    </member>
    <member name="M:Nest.CompositeAggregationSourcesDescriptor`1.Histogram(System.String,System.Func{Nest.HistogramCompositeAggregationSourceDescriptor{`0},Nest.IHistogramCompositeAggregationSource})">
      <inheritdoc cref="T:Nest.IHistogramCompositeAggregationSource" />
    </member>
    <member name="M:Nest.CompositeAggregationSourcesDescriptor`1.DateHistogram(System.String,System.Func{Nest.DateHistogramCompositeAggregationSourceDescriptor{`0},Nest.IDateHistogramCompositeAggregationSource})">
      <inheritdoc cref="T:Nest.IDateHistogramCompositeAggregationSource" />
    </member>
    <member name="T:Nest.CompositeAggregationSourceDescriptorBase`3">
      <inheritdoc cref="T:Nest.ICompositeAggregationSource" />
    </member>
    <member name="M:Nest.CompositeAggregationSourceDescriptorBase`3.Field(Nest.Field)">
      <summary>
            The field from which to extract value
            </summary>
      <inheritdoc cref="P:Nest.ICompositeAggregationSource.Field" />
    </member>
    <member name="M:Nest.CompositeAggregationSourceDescriptorBase`3.Field``1(System.Linq.Expressions.Expression{System.Func{`2,``0}})">
      <inheritdoc cref="P:Nest.ICompositeAggregationSource.Field" />
    </member>
    <member name="M:Nest.CompositeAggregationSourceDescriptorBase`3.Order(System.Nullable{Nest.SortOrder})">
      <summary>
            Defines the direction of sorting for each
            value source. Defaults to <see cref="F:Nest.SortOrder.Ascending" /></summary>
      <inheritdoc cref="P:Nest.ICompositeAggregationSource.Order" />
    </member>
    <member name="M:Nest.CompositeAggregationSourceDescriptorBase`3.MissingBucket(System.Nullable{System.Boolean})">
      <summary>
            By default documents without a value for a given source are ignored. It is possible to include
            them in the response as null by setting this to true
            </summary>
      <inheritdoc cref="P:Nest.ICompositeAggregationSource.MissingBucket" />
    </member>
    <member name="T:Nest.CompositeBucket">
      <summary>
            A bucket with a composite key
            </summary>
    </member>
    <member name="P:Nest.CompositeBucket.DocCount">
      <summary>
            The count of documents
            </summary>
    </member>
    <member name="P:Nest.CompositeBucket.Key">
      <summary>
            The bucket key
            </summary>
    </member>
    <member name="T:Nest.CompositeKey">
      <summary>
            A key for a <see cref="T:Nest.CompositeBucket" /></summary>
    </member>
    <member name="M:Nest.CompositeKey.TryGetValue(System.String,System.String@)">
      <summary>
            Tries to get a value with the given key as a string. Returns <c>false</c> if the key does
            not exist or is not a string.
            </summary>
    </member>
    <member name="M:Nest.CompositeKey.TryGetValue(System.String,System.Double@)">
      <summary>
            Tries to get a value with the given key as a double. Returns <c>false</c> if the key does
            not exist or is not a double.
            </summary>
    </member>
    <member name="M:Nest.CompositeKey.TryGetValue(System.String,System.Int32@)">
      <summary>
            Tries to get a value with the given key as a int. Returns <c>false</c> if the key does
            not exist or is not a int.
            </summary>
    </member>
    <member name="M:Nest.CompositeKey.TryGetValue(System.String,System.Int64@)">
      <summary>
            Tries to get a value with the given key as a long. Returns <c>false</c> if the key does
            not exist or is not a long.
            </summary>
    </member>
    <member name="M:Nest.CompositeKey.TryGetValue(System.String,System.DateTime@)">
      <summary>
            Tries to get a value with the given key as a DateTime. Returns <c>false</c> if the key does
            not exist or cannot be converted to a DateTime.
            </summary>
    </member>
    <member name="M:Nest.CompositeKey.TryGetValue(System.String,System.DateTimeOffset@)">
      <summary>
            Tries to get a value with the given key as a DateTimeOffset. Returns <c>false</c> if the key does
            not exist or cannot be converted to a DateTimeOffset.
            </summary>
    </member>
    <member name="T:Nest.IDateHistogramCompositeAggregationSource">
      <summary>
            A values source that can be applied on date values to build fixed size interval over the values.
            The interval parameter defines a date/time expression that determines how values should be transformed.
            For instance an interval set to month will translate any values to its closest month interval..
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramCompositeAggregationSource.Format">
      <summary>
            Return a formatted date string as the key instead an epoch long
            </summary>
      <remarks> Valid for Elasticsearch 6.3.0+ </remarks>
    </member>
    <member name="P:Nest.IDateHistogramCompositeAggregationSource.Interval">
      <summary>
            	The interval to use when bucketing documents
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramCompositeAggregationSource.TimeZone">
      <summary>
            Used to indicate that bucketing should use a different time zone.
            Time zones may either be specified as an ISO 8601 UTC offset (e.g. +01:00 or -08:00)
            or as a timezone id, an identifier used in the TZ database like America/Los_Angeles.
            </summary>
    </member>
    <member name="T:Nest.DateHistogramCompositeAggregationSource">
      <inheritdoc cref="T:Nest.IDateHistogramCompositeAggregationSource" />
    </member>
    <member name="P:Nest.DateHistogramCompositeAggregationSource.Format">
      <summary>
            Return a formatted date string as the key instead an epoch long
            </summary>
      <remarks> Valid for Elasticsearch 6.3.0+ </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramCompositeAggregationSource.Interval">
      <summary>
            	The interval to use when bucketing documents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramCompositeAggregationSource.TimeZone">
      <summary>
            Used to indicate that bucketing should use a different time zone.
            Time zones may either be specified as an ISO 8601 UTC offset (e.g. +01:00 or -08:00)
            or as a timezone id, an identifier used in the TZ database like America/Los_Angeles.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramCompositeAggregationSource.SourceType">
      <inheritdoc />
    </member>
    <member name="T:Nest.DateHistogramCompositeAggregationSourceDescriptor`1">
      <inheritdoc cref="T:Nest.IDateHistogramCompositeAggregationSource" />
    </member>
    <member name="M:Nest.DateHistogramCompositeAggregationSourceDescriptor`1.Interval(System.Nullable{Nest.DateInterval})">
      <summary>
            	The interval to use when bucketing documents
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramCompositeAggregationSource.Interval" />
    </member>
    <member name="M:Nest.DateHistogramCompositeAggregationSourceDescriptor`1.Interval(Nest.Time)">
      <summary>
            	The interval to use when bucketing documents
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramCompositeAggregationSource.Interval" />
    </member>
    <member name="M:Nest.DateHistogramCompositeAggregationSourceDescriptor`1.TimeZone(System.String)">
      <summary>
            Used to indicate that bucketing should use a different time zone.
            Time zones may either be specified as an ISO 8601 UTC offset (e.g. +01:00 or -08:00)
            or as a timezone id, an identifier used in the TZ database like America/Los_Angeles.
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramCompositeAggregationSource.TimeZone" />
    </member>
    <member name="M:Nest.DateHistogramCompositeAggregationSourceDescriptor`1.Format(System.String)">
      <summary>
            Return a formatted date string as the key instead an epoch long
            </summary>
      <remarks> Valid for Elasticsearch 6.3.0+ </remarks>
      <inheritdoc cref="P:Nest.IDateHistogramCompositeAggregationSource.TimeZone" />
    </member>
    <member name="T:Nest.IHistogramCompositeAggregationSource">
      <summary>
            A value source that can be applied on numeric values to build fixed size interval over the values.
            The interval parameter defines how the numeric values should be transformed.
            For instance an interval set to 5 will translate any numeric values to its closest interval,
            a value of 101 would be translated to 100 which is the key for the interval between 100 and 105.
            </summary>
    </member>
    <member name="P:Nest.IHistogramCompositeAggregationSource.Interval">
      <summary>
            The interval to use when bucketing documents
            </summary>
    </member>
    <member name="P:Nest.IHistogramCompositeAggregationSource.Script">
      <summary>
            A script to create the values for the composite buckets
            </summary>
    </member>
    <member name="T:Nest.HistogramCompositeAggregationSource">
      <inheritdoc cref="T:Nest.IHistogramCompositeAggregationSource" />
    </member>
    <member name="P:Nest.HistogramCompositeAggregationSource.Interval">
      <summary>
            The interval to use when bucketing documents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HistogramCompositeAggregationSource.Script">
      <summary>
            A script to create the values for the composite buckets
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HistogramCompositeAggregationSource.SourceType">
      <inheritdoc />
    </member>
    <member name="T:Nest.HistogramCompositeAggregationSourceDescriptor`1">
      <inheritdoc cref="T:Nest.IHistogramCompositeAggregationSource" />
    </member>
    <member name="M:Nest.HistogramCompositeAggregationSourceDescriptor`1.Interval(System.Nullable{System.Double})">
      <summary>
            The interval to use when bucketing documents
            </summary>
      <inheritdoc cref="P:Nest.IHistogramCompositeAggregationSource.Interval" />
    </member>
    <member name="M:Nest.HistogramCompositeAggregationSourceDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            A script to create the values for the composite buckets
            </summary>
      <inheritdoc cref="P:Nest.IHistogramCompositeAggregationSource.Script" />
    </member>
    <member name="T:Nest.ITermsCompositeAggregationSource">
      <summary>
            A values source that is equivalent to a simple terms aggregation.
            The values are extracted from a field or a script exactly like the terms aggregation.
            </summary>
    </member>
    <member name="P:Nest.ITermsCompositeAggregationSource.Script">
      <summary>
            A script to create the values for the composite buckets
            </summary>
    </member>
    <member name="T:Nest.TermsCompositeAggregationSource">
      <inheritdoc cref="T:Nest.ITermsCompositeAggregationSource" />
    </member>
    <member name="P:Nest.TermsCompositeAggregationSource.Script">
      <summary>
            A script to create the values for the composite buckets
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermsCompositeAggregationSource.SourceType">
      <inheritdoc />
    </member>
    <member name="T:Nest.TermsCompositeAggregationSourceDescriptor`1">
      <inheritdoc cref="T:Nest.ITermsCompositeAggregationSource" />
    </member>
    <member name="M:Nest.TermsCompositeAggregationSourceDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            A script to create the values for the composite buckets
            </summary>
      <inheritdoc cref="P:Nest.ITermsCompositeAggregationSource.Script" />
    </member>
    <member name="P:Nest.FiltersAggregation.OtherBucket">
      <summary>
            Gets or sets whether to add a bucket to the response which will contain all documents
            that do not match any of the given filters.
            When set to <c>true</c>, the other bucket will be returned either in a bucket
            (named "_other_" by default) if named filters are being used,
             or as the last bucket if anonymous filters are being used
            When set to <c>false</c>, does not compute
            the other bucket.
            </summary>
    </member>
    <member name="P:Nest.FiltersAggregation.OtherBucketKey">
      <summary>
            Gets or sets the key for the other bucket to a value other than the default "_other_".
            Setting this parameter will implicitly set the <see cref="P:Nest.FiltersAggregation.OtherBucket" /> parameter to true
            </summary>
    </member>
    <member name="M:Nest.FiltersAggregationDescriptor`1.OtherBucket(System.Nullable{System.Boolean})">
      <summary>
            Adds a bucket to the response which will contain all documents
            that do not match any of the given filters.
            When set to <c>true</c>, the other bucket will be returned either in a bucket
            (named "_other_" by default) if named filters are being used,
             or as the last bucket if anonymous filters are being used
            When set to <c>false</c>, does not compute
            the other bucket.
            </summary>
      <param name="otherBucket">whether to set the other bucket</param>
      <returns>the <see cref="T:Nest.FiltersAggregationDescriptor`1" /></returns>
    </member>
    <member name="M:Nest.FiltersAggregationDescriptor`1.OtherBucketKey(System.String)">
      <summary>
            Sets the key for the other bucket to a value other than the default "_other_".
            Setting this parameter will implicitly set the <see cref="M:Nest.FiltersAggregationDescriptor`1.OtherBucket(System.Nullable{System.Boolean})" /> parameter to true
            </summary>
      <param name="otherBucketKey">the name for the other bucket</param>
      <returns>the <see cref="T:Nest.FiltersAggregationDescriptor`1" /></returns>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision1">
      <summary>
            5,009.4km x 4,992.6km
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision2">
      <summary>
            1,252.3km x 624.1km
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision3">
      <summary>
            156.5km x 156km
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision4">
      <summary>
            39.1km x 19.5km
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision5">
      <summary>
            4.9km x 4.9km
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision6">
      <summary>
            1.2km x 609.4m
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision7">
      <summary>
            152.9m x 152.4m
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision8">
      <summary>
            38.2m x 19m
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision9">
      <summary>
            4.8m x 4.8m
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision10">
      <summary>
            1.2m x 59.5cm
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision11">
      <summary>
            14.9cm x 14.9cm
            </summary>
    </member>
    <member name="F:Nest.GeoHashPrecision.Precision12">
      <summary>
            3.7cm x 1.9cm
            </summary>
    </member>
    <member name="P:Nest.IGeoTileGridAggregation.Field">
      <summary>
            The name of the field indexed with GeoPoints.
            </summary>
    </member>
    <member name="P:Nest.IGeoTileGridAggregation.Precision">
      <summary>
            The zoom of the key used to define cells/buckets in the results.
            </summary>
    </member>
    <member name="P:Nest.IGeoTileGridAggregation.ShardSize">
      <summary>
            To allow for more accurate counting of the top cells returned in the final result the aggregation.
            </summary>
    </member>
    <member name="P:Nest.IGeoTileGridAggregation.Size">
      <summary>
            The maximum number of geohash buckets to return.
            </summary>
    </member>
    <member name="P:Nest.GeoTileGridAggregation.Field">
      <summary>
            The name of the field indexed with GeoPoints.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoTileGridAggregation.Precision">
      <summary>
            The zoom of the key used to define cells/buckets in the results.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoTileGridAggregation.ShardSize">
      <summary>
            To allow for more accurate counting of the top cells returned in the final result the aggregation.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoTileGridAggregation.Size">
      <summary>
            The maximum number of geohash buckets to return.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GeoTileGridAggregationDescriptor`1.Field(Nest.Field)">
      <summary>
            The name of the field indexed with GeoPoints.
            </summary>
      <inheritdoc cref="P:Nest.IGeoTileGridAggregation.Field" />
    </member>
    <member name="M:Nest.GeoTileGridAggregationDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IGeoTileGridAggregation.Field" />
    </member>
    <member name="M:Nest.GeoTileGridAggregationDescriptor`1.Size(System.Nullable{System.Int32})">
      <summary>
            The maximum number of geohash buckets to return.
            </summary>
      <inheritdoc cref="P:Nest.IGeoTileGridAggregation.Size" />
    </member>
    <member name="M:Nest.GeoTileGridAggregationDescriptor`1.ShardSize(System.Nullable{System.Int32})">
      <summary>
            To allow for more accurate counting of the top cells returned in the final result the aggregation.
            </summary>
      <inheritdoc cref="P:Nest.IGeoTileGridAggregation.ShardSize" />
    </member>
    <member name="M:Nest.GeoTileGridAggregationDescriptor`1.Precision(System.Nullable{Nest.GeoTilePrecision})">
      <summary>
            The zoom of the key used to define cells/buckets in the results.
            </summary>
      <inheritdoc cref="P:Nest.IGeoTileGridAggregation.Precision" />
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision0">
      <summary>
            Whole world
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision2">
      <summary>
            Subcontinental area
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision3">
      <summary>
            Largest Country
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision5">
      <summary>
            Large African Country
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision6">
      <summary>
            Large European Country
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision7">
      <summary>
            Small Country / US State
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision9">
      <summary>
            Wide Area / Large Metropolitan Area
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision10">
      <summary>
            Metropolitan Area
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision11">
      <summary>
            City
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision12">
      <summary>
            City / Town / District
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision13">
      <summary>
            Village / Suburb
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision15">
      <summary>
            Small Road
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision16">
      <summary>
            Street
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision17">
      <summary>
            Block / Park / Addresses
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision18">
      <summary>
            Some Buildings / Trees
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision19">
      <summary>
            Local highway / Crossing
            </summary>
    </member>
    <member name="F:Nest.GeoTilePrecision.Precision29">
      <summary>
            Produces cells that cover less than a 10cm by 10cm of land and so high-precision
            requests can be very costly in terms of RAM and result sizes.
            </summary>
    </member>
    <member name="T:Nest.IpRangeBucket">
      <summary>
            A bucket for an <see cref="T:Nest.IpRangeAggregation" /></summary>
    </member>
    <member name="P:Nest.IpRangeBucket.DocCount">
      <summary>
            The count of documents in the bucket
            </summary>
    </member>
    <member name="P:Nest.IpRangeBucket.From">
      <summary>
            The IP address from
            </summary>
    </member>
    <member name="P:Nest.IpRangeBucket.Key">
      <summary>
            The key for the bucket
            </summary>
    </member>
    <member name="P:Nest.IpRangeBucket.To">
      <summary>
            The IP address to
            </summary>
    </member>
    <member name="T:Nest.IParentAggregation">
      <summary>
            A special single bucket aggregation that selects parent documents that
            have the specified type, as defined in a join field.
            </summary>
      <remarks>
            Valid only in Elasticsearch 6.6.0+
            </remarks>
    </member>
    <member name="P:Nest.IParentAggregation.Type">
      <summary>
            The type for the child in the parent/child relationship
            </summary>
    </member>
    <member name="T:Nest.ParentAggregation">
      <inheritdoc cref="T:Nest.IParentAggregation" />
    </member>
    <member name="T:Nest.ParentAggregationDescriptor`2">
      <inheritdoc cref="T:Nest.IParentAggregation" />
    </member>
    <member name="T:Nest.IRareTermsAggregation">
      <summary>
            A multi-bucket value source based aggregation which finds "rare" terms — terms that are at the long-tail of the distribution
            and are not frequent. Conceptually, this is like a terms aggregation that is sorted by _count ascending.
            </summary>
    </member>
    <member name="P:Nest.IRareTermsAggregation.Exclude">
      <summary>
            Terms that should be excluded from the aggregation
            </summary>
    </member>
    <member name="P:Nest.IRareTermsAggregation.Field">
      <summary>
            The field to find rare terms in
            </summary>
    </member>
    <member name="P:Nest.IRareTermsAggregation.Include">
      <summary>
            Terms that should be included in the aggregation
            </summary>
    </member>
    <member name="P:Nest.IRareTermsAggregation.MaximumDocumentCount">
      <summary>
            The maximum number of documents a term should appear in.
            Defaults to <c>1</c></summary>
    </member>
    <member name="P:Nest.IRareTermsAggregation.Missing">
      <summary>
            The value that should be used if a document does not have the field being aggregated
            </summary>
    </member>
    <member name="P:Nest.IRareTermsAggregation.Precision">
      <summary>
            The precision of the internal CuckooFilters. Smaller precision leads to better approximation,
            but higher memory usage. Cannot be smaller than 0.00001. Defaults to 0.01
            </summary>
    </member>
    <member name="T:Nest.RareTermsAggregation">
      <inheritdoc cref="T:Nest.IRareTermsAggregation" />
    </member>
    <member name="P:Nest.RareTermsAggregation.Exclude">
      <summary>
            Terms that should be excluded from the aggregation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RareTermsAggregation.Field">
      <summary>
            The field to find rare terms in
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RareTermsAggregation.Include">
      <summary>
            Terms that should be included in the aggregation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RareTermsAggregation.MaximumDocumentCount">
      <summary>
            The maximum number of documents a term should appear in.
            Defaults to <c>1</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RareTermsAggregation.Missing">
      <summary>
            The value that should be used if a document does not have the field being aggregated
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RareTermsAggregation.Precision">
      <summary>
            The precision of the internal CuckooFilters. Smaller precision leads to better approximation,
            but higher memory usage. Cannot be smaller than 0.00001. Defaults to 0.01
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.RareTermsAggregationDescriptor`1">
      <inheritdoc cref="T:Nest.IRareTermsAggregation" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to find rare terms in
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Field" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Field" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.MaximumDocumentCount(System.Nullable{System.Int64})">
      <summary>
            The maximum number of documents a term should appear in.
            Defaults to <c>1</c></summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.MaximumDocumentCount" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Include(System.Int64,System.Int64)">
      <summary>
            Terms that should be included in the aggregation
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Include" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Include(System.String)">
      <summary>
            Terms that should be included in the aggregation
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Include" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Include(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Terms that should be included in the aggregation
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Include" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Exclude(System.String)">
      <summary>
            Terms that should be excluded from the aggregation
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Exclude" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Exclude(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Terms that should be excluded from the aggregation
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Exclude" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Missing(System.Object)">
      <summary>
            The value that should be used if a document does not have the field being aggregated
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Missing" />
    </member>
    <member name="M:Nest.RareTermsAggregationDescriptor`1.Precision(System.Nullable{System.Double})">
      <summary>
            The precision of the internal CuckooFilters. Smaller precision leads to better approximation,
            but higher memory usage. Cannot be smaller than 0.00001. Defaults to 0.01
            </summary>
      <inheritdoc cref="P:Nest.IRareTermsAggregation.Precision" />
    </member>
    <member name="P:Nest.SignificantTermsAggregate`1.BgCount">
      <summary>
            The background count
            </summary>
    </member>
    <member name="P:Nest.SignificantTermsAggregate`1.DocCount">
      <summary>
            The document count
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.BackgroundFilter">
      <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.ChiSquare">
      <summary>
            Use chi square to calculate significance score
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.Exclude">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.ExecutionHint">
      <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.Field">
      <summary>
            The field on which to run the aggregation
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.GoogleNormalizedDistance">
      <summary>
            Use Google normalized distance to calculate significance score
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.Include">
      <summary>
            Include term values for which buckets will be created.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.MinimumDocumentCount">
      <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.MutualInformation">
      <summary>
            Use mutual information to calculate significance score
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.PercentageScore">
      <summary>
            Use percentage to calculate significance score.
            <para>
            A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.
            </para></summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.Script">
      <summary>
            Use a script to calculate a custom significance score.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.ShardMinimumDocumentCount">
      <summary>
            Regulates the certainty a shard has if the term should actually be added to the candidate
            list or not with respect to the <see cref="P:Nest.ISignificantTermsAggregation.MinimumDocumentCount" />.
            Terms will only be considered if their local shard frequency within
            the set is higher than the <see cref="P:Nest.ISignificantTermsAggregation.ShardMinimumDocumentCount" />.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.ShardSize">
      <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTermsAggregation.Size" /> of terms is selected.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTermsAggregation.Size">
      <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
    </member>
    <member name="P:Nest.SignificantTermsAggregation.BackgroundFilter">
      <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.ChiSquare">
      <summary>
            Use chi square to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.Exclude">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.ExecutionHint">
      <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.Field">
      <summary>
            The field on which to run the aggregation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.GoogleNormalizedDistance">
      <summary>
            Use Google normalized distance to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.Include">
      <summary>
            Include term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.MinimumDocumentCount">
      <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.MutualInformation">
      <summary>
            Use mutual information to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.PercentageScore">
      <summary>
            Use percentage to calculate significance score.
            <para>
            A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.
            </para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.Script">
      <summary>
            Use a script to calculate a custom significance score.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.ShardMinimumDocumentCount">
      <summary>
            Regulates the certainty a shard has if the term should actually be added to the candidate
            list or not with respect to the <see cref="P:Nest.ISignificantTermsAggregation.MinimumDocumentCount" />.
            Terms will only be considered if their local shard frequency within
            the set is higher than the <see cref="P:Nest.ISignificantTermsAggregation.ShardMinimumDocumentCount" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.ShardSize">
      <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTermsAggregation.Size" /> of terms is selected.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTermsAggregation.Size">
      <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Field(Nest.Field)">
      <summary>
            The field on which to run the aggregation
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Size(System.Nullable{System.Int32})">
      <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ExecutionHint(System.Nullable{Nest.TermsAggregationExecutionHint})">
      <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Include(System.String)">
      <summary>
            Include term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Include(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Include term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Exclude(System.String)">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Exclude(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ShardSize(System.Nullable{System.Int32})">
      <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTermsAggregation.Size" /> of terms is selected.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.MinimumDocumentCount(System.Nullable{System.Int64})">
      <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ShardMinimumDocumentCount(System.Nullable{System.Int64})">
      <summary>
            Regulates the certainty a shard has if the term should actually be added to the candidate
            list or not with respect to the <see cref="P:Nest.ISignificantTermsAggregation.MinimumDocumentCount" />.
            Terms will only be considered if their local shard frequency within
            the set is higher than the <see cref="P:Nest.ISignificantTermsAggregation.ShardMinimumDocumentCount" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.MutualInformation(System.Func{Nest.MutualInformationHeuristicDescriptor,Nest.IMutualInformationHeuristic})">
      <summary>
            Use mutual information to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ChiSquare(System.Func{Nest.ChiSquareHeuristicDescriptor,Nest.IChiSquareHeuristic})">
      <summary>
            Use chi square to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.GoogleNormalizedDistance(System.Func{Nest.GoogleNormalizedDistanceHeuristicDescriptor,Nest.IGoogleNormalizedDistanceHeuristic})">
      <summary>
            Use Google normalized distance to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.PercentageScore(System.Func{Nest.PercentageScoreHeuristicDescriptor,Nest.IPercentageScoreHeuristic})">
      <summary>
            Use percentage to calculate significance score.
            <para>
            A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.
            </para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Script(System.Func{Nest.ScriptedHeuristicDescriptor,Nest.IScriptedHeuristic})">
      <summary>
            Use a script to calculate a custom significance score.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SignificantTermsAggregationDescriptor`1.BackgroundFilter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ISignificantTextAggregation">
      <summary>
            An aggregation that returns interesting or unusual occurrences of free-text terms in a set.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.BackgroundFilter">
      <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.ChiSquare">
      <summary>
            Use chi square to calculate significance score
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.Exclude">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.ExecutionHint">
      <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.Field">
      <summary>
            The field on which to run the aggregation
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.FilterDuplicateText">
      <summary>
            Whether to filter out near-duplicate text
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.GoogleNormalizedDistance">
      <summary>
            Use Google normalized distance to calculate significance score
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.Include">
      <summary>
            Include term values for which buckets will be created.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.MinimumDocumentCount">
      <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.MutualInformation">
      <summary>
            Use mutual information to calculate significance score
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.PercentageScore">
      <summary>
            Use percentage to calculate significance score.
            <para>
            A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.
            </para></summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.Script">
      <summary>
            Use a script to calculate a custom significance score.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.ShardMinimumDocumentCount">
      <summary>
            Regulates the certainty a shard has if the term should actually be added to the candidate
            list or not with respect to the <see cref="P:Nest.ISignificantTextAggregation.MinimumDocumentCount" />.
            Terms will only be considered if their local shard frequency within
            the set is higher than the <see cref="P:Nest.ISignificantTextAggregation.ShardMinimumDocumentCount" />.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.ShardSize">
      <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTextAggregation.Size" /> of terms is selected.
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.Size">
      <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
    </member>
    <member name="P:Nest.ISignificantTextAggregation.SourceFields">
      <summary>
            Ordinarily the indexed field name and the original JSON field being
            retrieved share the same name. However with more complex field
            mappings using features like copy_to the source JSON field(s)
            and the indexed field being aggregated can differ.
            In these cases it is possible to list the JSON _source fields
            from which text will be analyzed using <see cref="P:Nest.ISignificantTextAggregation.SourceFields" /></summary>
    </member>
    <member name="T:Nest.SignificantTextAggregation">
      <inheritdoc cref="T:Nest.ISignificantTextAggregation" />
    </member>
    <member name="P:Nest.SignificantTextAggregation.BackgroundFilter">
      <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.ChiSquare">
      <summary>
            Use chi square to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.Exclude">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.ExecutionHint">
      <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.Field">
      <summary>
            The field on which to run the aggregation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.FilterDuplicateText">
      <summary>
            Whether to filter out near-duplicate text
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.GoogleNormalizedDistance">
      <summary>
            Use Google normalized distance to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.Include">
      <summary>
            Include term values for which buckets will be created.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.MinimumDocumentCount">
      <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.MutualInformation">
      <summary>
            Use mutual information to calculate significance score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.PercentageScore">
      <summary>
            Use percentage to calculate significance score.
            <para>
            A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.
            </para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.Script">
      <summary>
            Use a script to calculate a custom significance score.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.ShardMinimumDocumentCount">
      <summary>
            Regulates the certainty a shard has if the term should actually be added to the candidate
            list or not with respect to the <see cref="P:Nest.ISignificantTextAggregation.MinimumDocumentCount" />.
            Terms will only be considered if their local shard frequency within
            the set is higher than the <see cref="P:Nest.ISignificantTextAggregation.ShardMinimumDocumentCount" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.ShardSize">
      <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTextAggregation.Size" /> of terms is selected.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.Size">
      <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SignificantTextAggregation.SourceFields">
      <summary>
            Ordinarily the indexed field name and the original JSON field being
            retrieved share the same name. However with more complex field
            mappings using features like copy_to the source JSON field(s)
            and the indexed field being aggregated can differ.
            In these cases it is possible to list the JSON _source fields
            from which text will be analyzed using <see cref="P:Nest.ISignificantTextAggregation.SourceFields" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SignificantTextAggregationDescriptor`1">
      <inheritdoc cref="T:Nest.ISignificantTextAggregation" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Field(Nest.Field)">
      <summary>
            The field on which to run the aggregation
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Field" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Field" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Size(System.Nullable{System.Int32})">
      <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Size" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.ExecutionHint(System.Nullable{Nest.TermsAggregationExecutionHint})">
      <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.ExecutionHint" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Include(System.String)">
      <summary>
            Include term values for which buckets will be created.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Include" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Include(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Include term values for which buckets will be created.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Include" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Exclude(System.String)">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Exclude" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Exclude(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Exclude term values for which buckets will be created.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Exclude" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.ShardSize(System.Nullable{System.Int32})">
      <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTextAggregation.Size" /> of terms is selected.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.ShardSize" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.MinimumDocumentCount(System.Nullable{System.Int64})">
      <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.MinimumDocumentCount" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.ShardMinimumDocumentCount(System.Nullable{System.Int64})">
      <summary>
            Regulates the certainty a shard has if the term should actually be added to the candidate
            list or not with respect to the <see cref="P:Nest.ISignificantTextAggregation.MinimumDocumentCount" />.
            Terms will only be considered if their local shard frequency within
            the set is higher than the <see cref="P:Nest.ISignificantTextAggregation.ShardMinimumDocumentCount" />.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.ShardMinimumDocumentCount" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.MutualInformation(System.Func{Nest.MutualInformationHeuristicDescriptor,Nest.IMutualInformationHeuristic})">
      <summary>
            Use mutual information to calculate significance score
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.MutualInformation" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.ChiSquare(System.Func{Nest.ChiSquareHeuristicDescriptor,Nest.IChiSquareHeuristic})">
      <summary>
            Use chi square to calculate significance score
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.ChiSquare" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.GoogleNormalizedDistance(System.Func{Nest.GoogleNormalizedDistanceHeuristicDescriptor,Nest.IGoogleNormalizedDistanceHeuristic})">
      <summary>
            Use Google normalized distance to calculate significance score
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.GoogleNormalizedDistance" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.PercentageScore(System.Func{Nest.PercentageScoreHeuristicDescriptor,Nest.IPercentageScoreHeuristic})">
      <summary>
            Use percentage to calculate significance score.
            <para>
            A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.
            </para></summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.PercentageScore" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.Script(System.Func{Nest.ScriptedHeuristicDescriptor,Nest.IScriptedHeuristic})">
      <summary>
            Use a script to calculate a custom significance score.
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.Script" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.BackgroundFilter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.BackgroundFilter" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.FilterDuplicateText(System.Nullable{System.Boolean})">
      <summary>
            Whether to filter out near-duplicate text
            </summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.FilterDuplicateText" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.SourceFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            Ordinarily the indexed field name and the original JSON field being
            retrieved share the same name. However with more complex field
            mappings using features like copy_to the source JSON field(s)
            and the indexed field being aggregated can differ.
            In these cases it is possible to list the JSON _source fields
            from which text will be analyzed using <see cref="P:Nest.ISignificantTextAggregation.SourceFields" /></summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.SourceFields" />
    </member>
    <member name="M:Nest.SignificantTextAggregationDescriptor`1.SourceFields(Nest.Fields)">
      <summary>
            Ordinarily the indexed field name and the original JSON field being
            retrieved share the same name. However with more complex field
            mappings using features like copy_to the source JSON field(s)
            and the indexed field being aggregated can differ.
            In these cases it is possible to list the JSON _source fields
            from which text will be analyzed using <see cref="P:Nest.ISignificantTextAggregation.SourceFields" /></summary>
      <inheritdoc cref="P:Nest.ISignificantTextAggregation.SourceFields" />
    </member>
    <member name="T:Nest.TermsAggregationCollectMode">
      <summary>
            Determines how the terms aggregation is executed
            </summary>
    </member>
    <member name="F:Nest.TermsAggregationCollectMode.DepthFirst">
      <summary>
            Order by using field values directly in order to aggregate data per-bucket
            </summary>
    </member>
    <member name="F:Nest.TermsAggregationCollectMode.BreadthFirst">
      <summary>
            Order by using ordinals of the field values instead of the values themselves
            </summary>
    </member>
    <member name="T:Nest.TermsAggregationExecutionHint">
      <summary>
            Determines how the terms aggregation is executed
            </summary>
    </member>
    <member name="F:Nest.TermsAggregationExecutionHint.Map">
      <summary>
            Order by using field values directly in order to aggregate data per-bucket
            </summary>
    </member>
    <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinals">
      <summary>
            Order by using ordinals of the field and preemptively allocating one bucket per ordinal value
            </summary>
    </member>
    <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinalsHash">
      <summary>
            Order by using ordinals of the field and dynamically allocating one bucket per ordinal value
            </summary>
    </member>
    <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinalsLowCardinality">
      <summary>
            Order by using per-segment ordinals to compute counts and remap these counts to global counts using global ordinals
            </summary>
    </member>
    <member name="T:Nest.TermsExclude">
      <summary>
            Filters which terms to exclude from the response
            </summary>
    </member>
    <member name="M:Nest.TermsExclude.#ctor(System.String)">
      <summary>
            Creates an instance of <see cref="T:Nest.TermsExclude" /> that uses a regular expression pattern
            to determine the terms to exclude from the response
            </summary>
      <param name="pattern">The regular expression pattern</param>
    </member>
    <member name="M:Nest.TermsExclude.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Creates an instance of <see cref="T:Nest.TermsExclude" /> that uses a collection of terms
            to exclude from the response
            </summary>
      <param name="values">The exact terms to exclude</param>
    </member>
    <member name="P:Nest.TermsExclude.Pattern">
      <summary>
            The regular expression pattern to determine terms to exclude from the response
            </summary>
    </member>
    <member name="P:Nest.TermsExclude.Values">
      <summary>
            Collection of terms to exclude from the response
            </summary>
    </member>
    <member name="T:Nest.TermsInclude">
      <summary>
            Filters which terms to include in the response
            </summary>
    </member>
    <member name="M:Nest.TermsInclude.#ctor(System.String)">
      <summary>
            Creates an instance of <see cref="T:Nest.TermsInclude" /> that uses a regular expression pattern
            to determine the terms to include in the response
            </summary>
      <param name="pattern">The regular expression pattern</param>
    </member>
    <member name="M:Nest.TermsInclude.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Creates an instance of <see cref="T:Nest.TermsInclude" /> that uses a collection of terms
            to include in the response
            </summary>
      <param name="values">The exact terms to include</param>
    </member>
    <member name="M:Nest.TermsInclude.#ctor(System.Int64,System.Int64)">
      <summary>
            Creates an instance of <see cref="T:Nest.TermsInclude" /> that partitions the terms into a number of
            partitions to receive in multiple requests. Used to process many unique terms
            </summary>
      <param name="partition">The 0-based partition number for this request</param>
      <param name="numberOfPartitions">The total number of partitions</param>
    </member>
    <member name="P:Nest.TermsInclude.NumberOfPartitions">
      <summary>
            The total number of paritions we are interested in
            </summary>
    </member>
    <member name="P:Nest.TermsInclude.Partition">
      <summary>
            The current partition of terms we are interested in
            </summary>
    </member>
    <member name="P:Nest.TermsInclude.Pattern">
      <summary>
            The regular expression pattern to determine terms to include in the response
            </summary>
    </member>
    <member name="P:Nest.TermsInclude.Values">
      <summary>
            Collection of terms to include in the response
            </summary>
    </member>
    <member name="P:Nest.MatrixAggregateBase.Meta">
      <inheritdoc />
    </member>
    <member name="T:Nest.MatrixStatsMode">
      <summary>
            The matrix_stats aggregation treats each document field as an independent sample.
            The mode parameter controls what array value the aggregation will use for array or
            multi-valued fields.
            </summary>
    </member>
    <member name="F:Nest.MatrixStatsMode.Avg">
      <summary>
            (default) Use the average of all values.
            </summary>
    </member>
    <member name="F:Nest.MatrixStatsMode.Min">
      <summary>
            Pick the lowest value.
            </summary>
    </member>
    <member name="F:Nest.MatrixStatsMode.Max">
      <summary>
            	Pick the highest value.
            </summary>
    </member>
    <member name="F:Nest.MatrixStatsMode.Sum">
      <summary>
            Use the sum of all values.
            </summary>
    </member>
    <member name="F:Nest.MatrixStatsMode.Median">
      <summary>
            Use the median of all values.
            </summary>
    </member>
    <member name="T:Nest.IMedianAbsoluteDeviationAggregation">
      <summary>
             This single-value aggregation approximates the median absolute deviation of its search results.
            
            	Median absolute deviation is a measure of variability. It is a robust statistic, meaning that
             it is useful for describing data that may have outliers, or may not be normally distributed.
             For such data it can be more descriptive than standard deviation.
            
            	It is calculated as the median of each data point’s deviation from the median of the
             entire sample. That is, for a random variable <code>X</code>, the median absolute deviation
             is <code>median(|median(X) - Xi|).</code></summary>
    </member>
    <member name="P:Nest.IMedianAbsoluteDeviationAggregation.Compression">
      <summary>
            TDigest algorithm component that controls memory usage and approximation error.
            By increasing the compression value, you can increase the accuracy
            at the cost of more memory. Larger compression values also make
            the algorithm slower since the underlying tree data structure grows in
            size, resulting in more expensive operations. The default compression value is <c>100</c>.
            </summary>
    </member>
    <member name="T:Nest.MedianAbsoluteDeviationAggregation">
      <inheritdoc cref="T:Nest.IMedianAbsoluteDeviationAggregation" />
    </member>
    <member name="P:Nest.MedianAbsoluteDeviationAggregation.Compression">
      <summary>
            TDigest algorithm component that controls memory usage and approximation error.
            By increasing the compression value, you can increase the accuracy
            at the cost of more memory. Larger compression values also make
            the algorithm slower since the underlying tree data structure grows in
            size, resulting in more expensive operations. The default compression value is <c>100</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.MedianAbsoluteDeviationAggregationDescriptor`1">
      <inheritdoc cref="T:Nest.IMedianAbsoluteDeviationAggregation" />
    </member>
    <member name="M:Nest.MedianAbsoluteDeviationAggregationDescriptor`1.Compression(System.Nullable{System.Double})">
      <summary>
            TDigest algorithm component that controls memory usage and approximation error.
            By increasing the compression value, you can increase the accuracy
            at the cost of more memory. Larger compression values also make
            the algorithm slower since the underlying tree data structure grows in
            size, resulting in more expensive operations. The default compression value is <c>100</c>.
            </summary>
      <inheritdoc cref="P:Nest.IMedianAbsoluteDeviationAggregation.Compression" />
    </member>
    <member name="M:Nest.ScriptedMetricAggregate.Value``1">
      <summary>
            Get the result of the scripted metric aggregation as T
            </summary>
      <typeparam name="T">The type that best represents the result of your scripted metric aggrgation</typeparam>
    </member>
    <member name="P:Nest.IWeightedAverageAggregation.Format">
      <summary> The optional numeric response formatter</summary>
    </member>
    <member name="P:Nest.IWeightedAverageAggregation.Value">
      <summary> The configuration for the field or script that provides the values</summary>
    </member>
    <member name="P:Nest.IWeightedAverageAggregation.ValueType">
      <summary> A hint about the values for pure scripts or unmapped fields </summary>
    </member>
    <member name="P:Nest.IWeightedAverageAggregation.Weight">
      <summary> The configuration for the field or script that provides the weights</summary>
    </member>
    <member name="P:Nest.WeightedAverageAggregation.Format">
      <summary> The optional numeric response formatter</summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.Format" />
    </member>
    <member name="P:Nest.WeightedAverageAggregation.Value">
      <summary> The configuration for the field or script that provides the values</summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.Value" />
    </member>
    <member name="P:Nest.WeightedAverageAggregation.ValueType">
      <summary> A hint about the values for pure scripts or unmapped fields </summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.ValueType" />
    </member>
    <member name="P:Nest.WeightedAverageAggregation.Weight">
      <summary> The configuration for the field or script that provides the weights</summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.Weight" />
    </member>
    <member name="M:Nest.WeightedAverageAggregationDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <inheritdoc cref="P:Nest.IAggregation.Meta" />
    </member>
    <member name="M:Nest.WeightedAverageAggregationDescriptor`1.Value(System.Func{Nest.WeightedAverageValueDescriptor{`0},Nest.IWeightedAverageValue})">
      <summary> The configuration for the field or script that provides the values</summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.Value" />
    </member>
    <member name="M:Nest.WeightedAverageAggregationDescriptor`1.Weight(System.Func{Nest.WeightedAverageValueDescriptor{`0},Nest.IWeightedAverageValue})">
      <summary> The configuration for the field or script that provides the weights</summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.Weight" />
    </member>
    <member name="M:Nest.WeightedAverageAggregationDescriptor`1.Format(System.String)">
      <summary> The optional numeric response formatter</summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.Format" />
    </member>
    <member name="M:Nest.WeightedAverageAggregationDescriptor`1.ValueType(System.Nullable{Nest.ValueType})">
      <summary> A hint about the values for pure scripts or unmapped fields </summary>
      <inheritdoc cref="P:Nest.IWeightedAverageAggregation.ValueType" />
    </member>
    <member name="T:Nest.IWeightedAverageValue">
      <summary>
            The configuration for a field or script that provides a value or weight
            for <see cref="T:Nest.WeightedAverageAggregation" /></summary>
    </member>
    <member name="P:Nest.IWeightedAverageValue.Field">
      <summary>
            The field that values should be extracted from
            </summary>
    </member>
    <member name="P:Nest.IWeightedAverageValue.Missing">
      <summary>
             defines how documents that are missing a value should be treated.
            The default behavior is different for value and weight:
            By default, if the value field is missing the document is ignored and the aggregation
            moves on to the next document.
            If the weight field is missing, it is assumed to have a weight of 1 (like a normal average).
            </summary>
    </member>
    <member name="P:Nest.IWeightedAverageValue.Script">
      <summary>
            A script to derive the value and the weight from
            </summary>
    </member>
    <member name="T:Nest.WeightedAverageValue">
      <inheritdoc />
    </member>
    <member name="P:Nest.WeightedAverageValue.Field">
      <summary>
            The field that values should be extracted from
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WeightedAverageValue.Missing">
      <summary>
             defines how documents that are missing a value should be treated.
            The default behavior is different for value and weight:
            By default, if the value field is missing the document is ignored and the aggregation
            moves on to the next document.
            If the weight field is missing, it is assumed to have a weight of 1 (like a normal average).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WeightedAverageValue.Script">
      <summary>
            A script to derive the value and the weight from
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.WeightedAverageValueDescriptor`1">
      <inheritdoc cref="T:Nest.IWeightedAverageAggregation" />
    </member>
    <member name="M:Nest.WeightedAverageValueDescriptor`1.Field(Nest.Field)">
      <summary>
            The field that values should be extracted from
            </summary>
      <inheritdoc cref="P:Nest.IWeightedAverageValue.Field" />
    </member>
    <member name="M:Nest.WeightedAverageValueDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IWeightedAverageValue.Field" />
    </member>
    <member name="M:Nest.WeightedAverageValueDescriptor`1.Script(System.String)">
      <summary>
            A script to derive the value and the weight from
            </summary>
      <inheritdoc cref="P:Nest.IWeightedAverageValue.Script" />
    </member>
    <member name="M:Nest.WeightedAverageValueDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            A script to derive the value and the weight from
            </summary>
      <inheritdoc cref="P:Nest.IWeightedAverageValue.Script" />
    </member>
    <member name="M:Nest.WeightedAverageValueDescriptor`1.Missing(System.Nullable{System.Double})">
      <summary>
             defines how documents that are missing a value should be treated.
            The default behavior is different for value and weight:
            By default, if the value field is missing the document is ignored and the aggregation
            moves on to the next document.
            If the weight field is missing, it is assumed to have a weight of 1 (like a normal average).
            </summary>
      <inheritdoc cref="P:Nest.IWeightedAverageValue.Missing" />
    </member>
    <member name="T:Nest.ValueType">
      <summary>
            The type of value
            </summary>
    </member>
    <member name="F:Nest.ValueType.String">
      <summary>A string value</summary>
    </member>
    <member name="F:Nest.ValueType.Long">
      <summary>A long value that can be used to represent byte, short, integer and long</summary>
    </member>
    <member name="F:Nest.ValueType.Double">
      <summary>A double value that can be used to represent float and double</summary>
    </member>
    <member name="F:Nest.ValueType.Number">
      <summary>A number value</summary>
    </member>
    <member name="F:Nest.ValueType.Date">
      <summary>A date value</summary>
    </member>
    <member name="F:Nest.ValueType.DateNanos">
      <summary>A date nanos value</summary>
    </member>
    <member name="F:Nest.ValueType.Ip">
      <summary>An IP value</summary>
    </member>
    <member name="F:Nest.ValueType.Numeric">
      <summary>A numeric value</summary>
    </member>
    <member name="F:Nest.ValueType.GeoPoint">
      <summary>A geo_point value</summary>
    </member>
    <member name="F:Nest.ValueType.Boolean">
      <summary>A boolean value</summary>
    </member>
    <member name="T:Nest.IBucketSortAggregation">
      <summary>
            A parent pipeline aggregation which sorts the buckets of its parent multi-bucket aggregation.
            Zero or more sort fields may be specified together with the corresponding sort order.
            Each bucket may be sorted based on its _key, _count or its sub-aggregations.
            In addition, parameters from and size may be set in order to truncate the result buckets.
            </summary>
    </member>
    <member name="P:Nest.IBucketSortAggregation.From">
      <summary>
            Buckets in positions prior to the set value will be truncated
            </summary>
    </member>
    <member name="P:Nest.IBucketSortAggregation.GapPolicy">
      <summary>
            The policy to apply when gaps are found in the data
            </summary>
    </member>
    <member name="P:Nest.IBucketSortAggregation.Size">
      <summary>
            	The number of buckets to return. Defaults to all buckets of the parent aggregation
            </summary>
    </member>
    <member name="P:Nest.IBucketSortAggregation.Sort">
      <summary>
            The list of fields to sort on
            </summary>
    </member>
    <member name="T:Nest.BucketSortAggregation">
      <inheritdoc cref="T:Nest.IBucketSortAggregation" />
    </member>
    <member name="P:Nest.BucketSortAggregation.From">
      <summary>
            Buckets in positions prior to the set value will be truncated
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BucketSortAggregation.GapPolicy">
      <summary>
            The policy to apply when gaps are found in the data
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BucketSortAggregation.Size">
      <summary>
            	The number of buckets to return. Defaults to all buckets of the parent aggregation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BucketSortAggregation.Sort">
      <summary>
            The list of fields to sort on
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.BucketSortAggregationDescriptor`1">
      <inheritdoc cref="T:Nest.IBucketSortAggregation" />
    </member>
    <member name="M:Nest.BucketSortAggregationDescriptor`1.Sort(System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
      <summary>
            The list of fields to sort on
            </summary>
    </member>
    <member name="M:Nest.BucketSortAggregationDescriptor`1.From(System.Nullable{System.Int32})">
      <summary>
            Buckets in positions prior to the set value will be truncated
            </summary>
    </member>
    <member name="M:Nest.BucketSortAggregationDescriptor`1.Size(System.Nullable{System.Int32})">
      <summary>
            	The number of buckets to return. Defaults to all buckets of the parent aggregation
            </summary>
    </member>
    <member name="M:Nest.BucketSortAggregationDescriptor`1.GapPolicy(System.Nullable{Nest.GapPolicy})">
      <summary>
            The policy to apply when gaps are found in the data
            </summary>
    </member>
    <member name="M:Nest.BucketSortAggregationDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            The metadata for the aggregation
            </summary>
    </member>
    <member name="P:Nest.IAggregationVisitor.Depth">
      <summary>
            The current depth of the node being visited
            </summary>
    </member>
    <member name="P:Nest.IAggregationVisitor.Scope">
      <summary>
            Hints the relation with the parent, i.e aggregations contained inside a bucket aggregation will have AggregationVisitorScope.Bucket set.
            </summary>
    </member>
    <member name="M:Nest.IAggregationVisitor.Visit(Nest.IAggregationContainer)">
      <summary>
            Visit the aggregation container just before we dispatch into the aggregation it holds
            </summary>
      <param name="aggregationContainer">
      </param>
    </member>
    <member name="M:Nest.IAggregationVisitor.Visit(Nest.IAggregation)">
      <summary>
            Visit every aggregation item just before they are visited by their specialized Visit() implementation
            </summary>
      <param name="aggregation">The IAggregation object that will be visited</param>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Custom(System.String,System.Func{Nest.CustomAnalyzerDescriptor,Nest.ICustomAnalyzer})">
      <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters,
            and zero or more Char Filters.
            <para>
            The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of
            logical/registered names of token filters.
            </para></summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Keyword(System.String,System.Func{Nest.KeywordAnalyzerDescriptor,Nest.IKeywordAnalyzer})">
      <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on.
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para></summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Language(System.String,System.Func{Nest.LanguageAnalyzerDescriptor,Nest.ILanguageAnalyzer})">
      <summary>
            A set of analyzers aimed at analyzing specific language text.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Pattern(System.String,System.Func{Nest.PatternAnalyzerDescriptor,Nest.IPatternAnalyzer})">
      <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Simple(System.String,System.Func{Nest.SimpleAnalyzerDescriptor,Nest.ISimpleAnalyzer})">
      <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Snowball(System.String,System.Func{Nest.SnowballAnalyzerDescriptor,Nest.ISnowballAnalyzer})">
      <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para>
            The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from
            snowball.tartarus.org.
            </para></summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Standard(System.String,System.Func{Nest.StandardAnalyzerDescriptor,Nest.IStandardAnalyzer})">
      <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token
            Filter.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Stop(System.String,System.Func{Nest.StopAnalyzerDescriptor,Nest.IStopAnalyzer})">
      <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Whitespace(System.String,System.Func{Nest.WhitespaceAnalyzerDescriptor,Nest.IWhitespaceAnalyzer})">
      <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Fingerprint(System.String,System.Func{Nest.FingerprintAnalyzerDescriptor,Nest.IFingerprintAnalyzer})">
      <summary>
            An analyzer of type fingerprint that implements a fingerprinting algorithm which
            is used by the OpenRefine project to assist in clustering.
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Kuromoji(System.String,System.Func{Nest.KuromojiAnalyzerDescriptor,Nest.IKuromojiAnalyzer})">
      <summary>
            An analyzer tailored for japanese that is bootstrapped with defaults.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Nori(System.String,System.Func{Nest.NoriAnalyzerDescriptor,Nest.INoriAnalyzer})">
      <inheritdoc cref="T:Nest.INoriAnalyzer" />
    </member>
    <member name="M:Nest.AnalyzersDescriptor.Icu(System.String,System.Func{Nest.IcuAnalyzerDescriptor,Nest.IIcuAnalyzer})">
      <inheritdoc cref="T:Nest.IIcuAnalyzer" />
    </member>
    <member name="T:Nest.ICustomAnalyzer">
      <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters,
            and zero or more Char Filters.
            <para>
            The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of
            logical/registered names of token filters.
            </para></summary>
    </member>
    <member name="P:Nest.ICustomAnalyzer.CharFilter">
      <summary>
            The logical / registered name of the tokenizer to use.
            </summary>
    </member>
    <member name="P:Nest.ICustomAnalyzer.Filter">
      <summary>
            An optional list of logical / registered name of token filters.
            </summary>
    </member>
    <member name="P:Nest.ICustomAnalyzer.PositionOffsetGap">
      <summary>
            An optional number of positions to increment between each field value of a
            field using this analyzer.
            </summary>
    </member>
    <member name="P:Nest.ICustomAnalyzer.Tokenizer">
      <summary>
            An optional list of logical / registered name of char filters.
            </summary>
    </member>
    <member name="P:Nest.CustomAnalyzer.CharFilter">
      <summary>
            The logical / registered name of the tokenizer to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CustomAnalyzer.Filter">
      <summary>
            An optional list of logical / registered name of token filters.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CustomAnalyzer.PositionOffsetGap">
      <summary>
            An optional number of positions to increment between each field value of a
            field using this analyzer.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CustomAnalyzer.Tokenizer">
      <summary>
            An optional list of logical / registered name of char filters.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomAnalyzerDescriptor.Filters(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomAnalyzerDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomAnalyzerDescriptor.CharFilters(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomAnalyzerDescriptor.CharFilters(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomAnalyzerDescriptor.Tokenizer(System.String)">
      <summary>
            An optional list of logical / registered name of char filters.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomAnalyzerDescriptor.PositionOffsetGap(System.Nullable{System.Int32})">
      <summary>
            An optional number of positions to increment between each field value of a
            field using this analyzer.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IFingerprintAnalyzer">
      <summary>
            The fingerprint analyzer implements a fingerprinting algorithm which
            is used by the OpenRefine project to assist in clustering.
            </summary>
    </member>
    <member name="P:Nest.IFingerprintAnalyzer.MaxOutputSize">
      <summary>
            The maximum token size to emit. Defaults to 255.
            </summary>
    </member>
    <member name="P:Nest.IFingerprintAnalyzer.PreserveOriginal">
      <summary>
            If true, emits both the original and folded version of tokens
            that contain extended characters. Defaults to false
            </summary>
    </member>
    <member name="P:Nest.IFingerprintAnalyzer.Separator">
      <summary>
            The character that separates the tokens after concatenation. Defaults to a space.
            </summary>
    </member>
    <member name="P:Nest.IFingerprintAnalyzer.StopWords">
      <summary>
            A list of stop words to use. Defaults to an empty list
            </summary>
    </member>
    <member name="P:Nest.IFingerprintAnalyzer.StopWordsPath">
      <summary>
            A path(either relative to config location, or absolute) to a stopwords
            file configuration.Each stop word should be in its own "line"
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
    </member>
    <member name="T:Nest.FingerprintAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.FingerprintAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IKeywordAnalyzer">
      <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on.
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para></summary>
    </member>
    <member name="T:Nest.KeywordAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.KeywordAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.ILanguageAnalyzer">
      <summary>
            A set of analyzers aimed at analyzing specific language text.
            </summary>
    </member>
    <member name="P:Nest.ILanguageAnalyzer.StemExclusionList">
      <summary>
            The stem_exclusion parameter allows you to specify an array of lowercase words that should not be stemmed.
            </summary>
    </member>
    <member name="P:Nest.ILanguageAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
    </member>
    <member name="P:Nest.ILanguageAnalyzer.StopwordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
    </member>
    <member name="T:Nest.LanguageAnalyzer">
      <inheritdoc />
    </member>
    <member name="P:Nest.LanguageAnalyzer.Language">
      <inheritdoc />
    </member>
    <member name="P:Nest.LanguageAnalyzer.StemExclusionList">
      <summary>
            The stem_exclusion parameter allows you to specify an array of lowercase words that should not be stemmed.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.LanguageAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.LanguageAnalyzer.StopwordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LanguageAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.INoriAnalyzer">
      <summary>
            The nori analyzer consists of the following tokenizer and token filters:
            <para> - nori_tokenizer</para><para> - nori_part_of_speech token filter</para><para> - nori_readingform token filter</para><para> - lowercase token filter</para></summary>
    </member>
    <member name="P:Nest.INoriAnalyzer.DecompoundMode">
      <inheritdoc cref="P:Nest.INoriTokenizer.DecompoundMode" />
    </member>
    <member name="P:Nest.INoriAnalyzer.StopTags">
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="P:Nest.INoriAnalyzer.UserDictionary">
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionary" />
    </member>
    <member name="T:Nest.NoriAnalyzer">
      <inheritdoc cref="T:Nest.INoriAnalyzer" />
    </member>
    <member name="P:Nest.NoriAnalyzer.DecompoundMode">
      <inheritdoc cref="P:Nest.INoriTokenizer.DecompoundMode" />
    </member>
    <member name="P:Nest.NoriAnalyzer.StopTags">
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="P:Nest.NoriAnalyzer.UserDictionary">
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionary" />
    </member>
    <member name="T:Nest.NoriAnalyzerDescriptor">
      <inheritdoc cref="T:Nest.INoriAnalyzer" />
    </member>
    <member name="M:Nest.NoriAnalyzerDescriptor.DecompoundMode(System.Nullable{Nest.NoriDecompoundMode})">
      <inheritdoc cref="P:Nest.INoriTokenizer.DecompoundMode" />
    </member>
    <member name="M:Nest.NoriAnalyzerDescriptor.UserDictionary(System.String)">
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionary" />
    </member>
    <member name="M:Nest.NoriAnalyzerDescriptor.StopTags(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="M:Nest.NoriAnalyzerDescriptor.StopTags(System.String[])">
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="T:Nest.IPatternAnalyzer">
      <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
    </member>
    <member name="P:Nest.IPatternAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to an empty list
            </summary>
    </member>
    <member name="T:Nest.PatternAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.PatternAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.ISimpleAnalyzer">
      <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
    </member>
    <member name="T:Nest.SimpleAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.SimpleAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.ISnowballAnalyzer">
      <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para>
            The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from
            snowball.tartarus.org.
            </para></summary>
    </member>
    <member name="T:Nest.SnowballAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.SnowballAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IStandardAnalyzer">
      <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token
            Filter.
            </summary>
    </member>
    <member name="P:Nest.IStandardAnalyzer.MaxTokenLength">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
    </member>
    <member name="P:Nest.IStandardAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
    </member>
    <member name="T:Nest.StandardAnalyzer">
      <inheritdoc />
    </member>
    <member name="P:Nest.StandardAnalyzer.MaxTokenLength">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StandardAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StandardAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IStopAnalyzer">
      <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
    </member>
    <member name="P:Nest.IStopAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
    </member>
    <member name="P:Nest.IStopAnalyzer.StopwordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
    </member>
    <member name="T:Nest.StopAnalyzer">
      <inheritdoc />
    </member>
    <member name="P:Nest.StopAnalyzer.StopWords">
      <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StopAnalyzer.StopwordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StopAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IWhitespaceAnalyzer">
      <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
    </member>
    <member name="T:Nest.WhitespaceAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.WhitespaceAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.CharFiltersDescriptor.PatternReplace(System.String,System.Func{Nest.PatternReplaceCharFilterDescriptor,Nest.IPatternReplaceCharFilter})">
      <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis.
            </summary>
    </member>
    <member name="M:Nest.CharFiltersDescriptor.HtmlStrip(System.String,System.Func{Nest.HtmlStripCharFilterDescriptor,Nest.IHtmlStripCharFilter})">
      <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
    </member>
    <member name="M:Nest.CharFiltersDescriptor.Mapping(System.String,System.Func{Nest.MappingCharFilterDescriptor,Nest.IMappingCharFilter})">
      <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
    </member>
    <member name="M:Nest.CharFiltersDescriptor.KuromojiIterationMark(System.String,System.Func{Nest.KuromojiIterationMarkCharFilterDescriptor,Nest.IKuromojiIterationMarkCharFilter})">
      <summary>
            The kuromoji_iteration_mark normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.CharFiltersDescriptor.IcuNormalization(System.String,System.Func{Nest.IcuNormalizationCharFilterDescriptor,Nest.IIcuNormalizationCharFilter})">
      <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="T:Nest.IHtmlStripCharFilter">
      <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
    </member>
    <member name="T:Nest.HtmlStripCharFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.HtmlStripCharFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IMappingCharFilter">
      <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
    </member>
    <member name="T:Nest.MappingCharFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.MappingCharFilter.Mappings">
      <inheritdoc />
    </member>
    <member name="P:Nest.MappingCharFilter.MappingsPath">
      <inheritdoc />
    </member>
    <member name="T:Nest.MappingCharFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.MappingCharFilterDescriptor.Mappings(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.MappingCharFilterDescriptor.Mappings(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.MappingCharFilterDescriptor.MappingsPath(System.String)">
      <inheritdoc />
    </member>
    <member name="T:Nest.IPatternReplaceCharFilter">
      <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis.
            </summary>
    </member>
    <member name="T:Nest.PatternReplaceCharFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternReplaceCharFilter.Flags">
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternReplaceCharFilter.Pattern">
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternReplaceCharFilter.Replacement">
      <inheritdoc />
    </member>
    <member name="T:Nest.PatternReplaceCharFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternReplaceCharFilterDescriptor.Flags(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternReplaceCharFilterDescriptor.Pattern(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternReplaceCharFilterDescriptor.Replacement(System.String)">
      <inheritdoc />
    </member>
    <member name="T:Nest.Language">
      <summary>
            Language types used for language analyzers
            </summary>
    </member>
    <member name="T:Nest.SnowballLanguage">
      <summary>
            Snowball compatible languages
            </summary>
    </member>
    <member name="T:Nest.ICustomNormalizer">
      <summary>
            Normalizers are similar to analyzers except that they may only emit a single token.
            As a consequence, they do not have a tokenizer and only accept a subset of the available
            char filters and token filters. Only the filters that work on a per-character basis are
            allowed. For instance a lowercasing filter would be allowed, but not a stemming filter,
            which needs to look at the keyword as a whole.
            <para>Elasticsearch does not ship with built-in normalizers so far, so the only way to create one is through composing a custom one</para></summary>
    </member>
    <member name="P:Nest.ICustomNormalizer.CharFilter">
      <summary>
            Char filters to normalize the keyword
            </summary>
    </member>
    <member name="P:Nest.ICustomNormalizer.Filter">
      <summary>
            An optional list of logical / registered name of token filters.
            </summary>
    </member>
    <member name="T:Nest.CustomNormalizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.CustomNormalizer.CharFilter">
      <summary>
            Char filters to normalize the keyword
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CustomNormalizer.Filter">
      <summary>
            An optional list of logical / registered name of token filters.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.CustomNormalizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomNormalizerDescriptor.Filters(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomNormalizerDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomNormalizerDescriptor.CharFilters(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.CustomNormalizerDescriptor.CharFilters(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.NormalizersDescriptor.Custom(System.String,System.Func{Nest.CustomNormalizerDescriptor,Nest.ICustomNormalizer})">
      <summary>
            Elasticsearch does not ship with built-in normalizers so far, so the only way to
            get one is by building a custom one. Custom normalizers take a list of char character
            filters and a list of token filters.
            </summary>
    </member>
    <member name="T:Nest.IcuCollationAlternate">
      <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="T:Nest.IcuCollationCaseFirst">
      <summary>
            Controls which case is sorted first when case is not ignored for
            strength tertiary. The default depends on the collation.
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="T:Nest.IcuCollationDecomposition">
      <summary>
            Setting this decomposition property to canonical allows the Collator to handle unnormalized
            text properly, producing the same results as if the text were normalized. If no is set, it
            is the user’s responsibility to insure that all text is already in the appropriate form
            before a comparison or before getting a CollationKey. Adjusting decomposition mode
            allows the user to select between faster and more complete collation behavior. Since a
            great many of the world’s languages do not require text normalization, most locales
            set no as the default decomposition mode.
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="T:Nest.IcuCollationStrength">
      <summary>
            The strength property determines the minimum level of
            difference considered significant during comparison.
            See also: http://icu-project.org/apiref/icu4j/com/ibm/icu/text/Collator.html
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="F:Nest.IcuCollationStrength.Primary">
      <summary>
            Typically, this is used to denote differences between base characters (for example, "a" &lt; "b").
            It is the strongest difference. For example, dictionaries are divided into different sections by
            base character.
            </summary>
    </member>
    <member name="F:Nest.IcuCollationStrength.Secondary">
      <summary>
            Accents in the characters are considered secondary differences (for example, "as" &lt; "às" &lt; "at").
            Other differences between letters can also be considered secondary differences, depending on
            the language. A secondary difference is ignored when there is a primary difference anywhere
            in the strings.
            </summary>
    </member>
    <member name="F:Nest.IcuCollationStrength.Tertiary">
      <summary>
            Upper and lower case differences in characters are distinguished at tertiary strength
            (for example, "ao" &lt; "Ao" &lt; "aò"). In addition, a variant of a letter differs from the base
            form on the tertiary strength (such as "A" and "Ⓐ"). Another example is the difference between
            large and small Kana. A tertiary difference is ignored when there is a primary or secondary
            difference anywhere in the strings.
            </summary>
    </member>
    <member name="F:Nest.IcuCollationStrength.Quaternary">
      <summary>
            When punctuation is ignored (see Ignoring Punctuations in the User Guide) at PRIMARY to
            TERTIARY strength, an additional strength level can be used to distinguish words with
            and without punctuation (for example, "ab" &lt; "a-b" &lt; "aB"). This difference is ignored
            when there is a PRIMARY, SECONDARY or TERTIARY difference. The QUATERNARY strength should
            only be used if ignoring punctuation is required.
            </summary>
    </member>
    <member name="F:Nest.IcuCollationStrength.Indentical">
      <summary>
            When all other strengths are equal, the IDENTICAL strength is used as a tiebreaker.
            The Unicode code point values of the NFD form of each string are compared, just in
            case there is no difference. For example, Hebrew cantellation marks are only
            distinguished at this strength. This strength should be used sparingly, as only code
            point value differences between two strings is an extremely rare occurrence. Using
            this strength substantially decreases the performance for both comparison and collation key
            generation APIs. This strength also increases the size of the collation key.
            </summary>
    </member>
    <member name="T:Nest.IIcuAnalyzer">
      <summary>
            An ICU analyzer that performs basic normalization, tokenization and character folding,
            using the <see cref="T:Nest.IIcuNormalizationCharFilter" /> char filter,
            <see cref="T:Nest.IIcuTokenizer" /> and <see cref="T:Nest.IcuNormalizationTokenFilter" /> token filter
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuAnalyzer.Method">
      <summary>
            Normalization method. Default is <see cref="F:Nest.IcuNormalizationType.CompatibilityCaseFold" /></summary>
    </member>
    <member name="P:Nest.IIcuAnalyzer.Mode">
      <summary>
            Normalization mode. Default is <see cref="F:Nest.IcuNormalizationMode.Compose" /></summary>
    </member>
    <member name="T:Nest.IcuAnalyzer">
      <inheritdoc cref="T:Nest.IIcuAnalyzer" />
    </member>
    <member name="P:Nest.IcuAnalyzer.Method">
      <summary>
            Normalization method. Default is <see cref="F:Nest.IcuNormalizationType.CompatibilityCaseFold" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuAnalyzer.Mode">
      <summary>
            Normalization mode. Default is <see cref="F:Nest.IcuNormalizationMode.Compose" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuAnalyzerDescriptor">
      <inheritdoc cref="T:Nest.IIcuAnalyzer" />
    </member>
    <member name="M:Nest.IcuAnalyzerDescriptor.Method(System.Nullable{Nest.IcuNormalizationType})">
      <summary>
            Normalization method. Default is <see cref="F:Nest.IcuNormalizationType.CompatibilityCaseFold" /></summary>
      <inheritdoc cref="P:Nest.IIcuAnalyzer.Method" />
    </member>
    <member name="M:Nest.IcuAnalyzerDescriptor.Mode(System.Nullable{Nest.IcuNormalizationMode})">
      <summary>
            Normalization mode. Default is <see cref="F:Nest.IcuNormalizationMode.Compose" /></summary>
      <inheritdoc cref="P:Nest.IIcuAnalyzer.Mode" />
    </member>
    <member name="T:Nest.IIcuCollationTokenFilter">
      <summary>
            Collations are used for sorting documents in a language-specific word order. The icu_collation token filter is available to all indices and
            defaults to using the DUCET collation, which is a best-effort attempt at language-neutral sorting.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.Alternate">
      <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.CaseFirst">
      <summary>
            Useful to control which case is sorted first when case is not ignored for strength tertiary.
            The default depends on the collation.
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.CaseLevel">
      <summary>
            Whether case level sorting is required. When strength is set to primary this will ignore accent differences
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.Decomposition">
      <summary>
            Setting this decomposition property to canonical allows the Collator to handle unnormalized text properly,
            producing the same results as if the text were normalized. If no is set, it is the user’s responsibility to
            insure that all text is already in the appropriate form before a comparison or before getting a CollationKey.
            Adjusting decomposition mode allows the user to select between faster and more complete collation behavior.
            Since a great many of the world’s languages do not require text normalization,
            most locales set no as the default decomposition mode.
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.HiraganaQuaternaryMode">
      <summary>
            Distinguishing between Katakana and Hiragana characters in quaternary strength.
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.Numeric">
      <summary>
            Whether digits are sorted according to their numeric representation.
            For example the value egg-9 is sorted before the value egg-21.
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.Strength">
      <summary>
            The strength property determines the minimum level of difference considered significant during comparison.
            </summary>
    </member>
    <member name="P:Nest.IIcuCollationTokenFilter.VariableTop">
      <summary>
            Single character or contraction. Controls what is variable for <see cref="P:Nest.IIcuCollationTokenFilter.Alternate" />.
            </summary>
    </member>
    <member name="T:Nest.IcuCollationTokenFilter">
      <inheritdoc cref="T:Nest.IIcuCollationTokenFilter" />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Alternate">
      <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.CaseFirst">
      <summary>
            Useful to control which case is sorted first when case is not ignored for strength tertiary.
            The default depends on the collation.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.CaseLevel">
      <summary>
            Whether case level sorting is required. When strength is set to primary this will ignore accent differences
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Country">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Decomposition">
      <summary>
            Setting this decomposition property to canonical allows the Collator to handle unnormalized text properly,
            producing the same results as if the text were normalized. If no is set, it is the user’s responsibility to
            insure that all text is already in the appropriate form before a comparison or before getting a CollationKey.
            Adjusting decomposition mode allows the user to select between faster and more complete collation behavior.
            Since a great many of the world’s languages do not require text normalization,
            most locales set no as the default decomposition mode.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.HiraganaQuaternaryMode">
      <summary>
            Distinguishing between Katakana and Hiragana characters in quaternary strength.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Language">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Numeric">
      <summary>
            Whether digits are sorted according to their numeric representation.
            For example the value egg-9 is sorted before the value egg-21.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Strength">
      <summary>
            The strength property determines the minimum level of difference considered significant during comparison.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.VariableTop">
      <summary>
            Single character or contraction. Controls what is variable for <see cref="P:Nest.IIcuCollationTokenFilter.Alternate" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuCollationTokenFilter.Variant">
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuCollationTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IIcuCollationTokenFilter" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Language(System.String)">
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Language" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Country(System.String)">
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Country" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Variant(System.String)">
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Variant" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Strength(System.Nullable{Nest.IcuCollationStrength})">
      <summary>
            The strength property determines the minimum level of difference considered significant during comparison.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Strength" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Decomposition(System.Nullable{Nest.IcuCollationDecomposition})">
      <summary>
            Setting this decomposition property to canonical allows the Collator to handle unnormalized text properly,
            producing the same results as if the text were normalized. If no is set, it is the user’s responsibility to
            insure that all text is already in the appropriate form before a comparison or before getting a CollationKey.
            Adjusting decomposition mode allows the user to select between faster and more complete collation behavior.
            Since a great many of the world’s languages do not require text normalization,
            most locales set no as the default decomposition mode.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Decomposition" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Alternate(System.Nullable{Nest.IcuCollationAlternate})">
      <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Alternate" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.CaseFirst(System.Nullable{Nest.IcuCollationCaseFirst})">
      <summary>
            Useful to control which case is sorted first when case is not ignored for strength tertiary.
            The default depends on the collation.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.CaseFirst" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.CaseLevel(System.Nullable{System.Boolean})">
      <summary>
            Whether case level sorting is required. When strength is set to primary this will ignore accent differences
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.CaseLevel" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.Numeric(System.Nullable{System.Boolean})">
      <summary>
            Whether digits are sorted according to their numeric representation.
            For example the value egg-9 is sorted before the value egg-21.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.Numeric" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.HiraganaQuaternaryMode(System.Nullable{System.Boolean})">
      <summary>
            Distinguishing between Katakana and Hiragana characters in quaternary strength.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.HiraganaQuaternaryMode" />
    </member>
    <member name="M:Nest.IcuCollationTokenFilterDescriptor.VariableTop(System.String)">
      <summary>
            Single character or contraction. Controls what is variable for <see cref="P:Nest.IIcuCollationTokenFilter.Alternate" />.
            </summary>
      <inheritdoc cref="P:Nest.IIcuCollationTokenFilter.VariableTop" />
    </member>
    <member name="T:Nest.IIcuFoldingTokenFilter">
      <summary>
            Case folding of Unicode characters based on UTR#30, like the ASCII-folding token filter on steroids.
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuFoldingTokenFilter.UnicodeSetFilter">
      <summary>
            Which letters are folded can be controlled by specifying the unicodeSetFilter parameter, which accepts a UnicodeSet.
            </summary>
    </member>
    <member name="T:Nest.IcuFoldingTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuFoldingTokenFilter.UnicodeSetFilter">
      <summary>
            Which letters are folded can be controlled by specifying the unicodeSetFilter parameter, which accepts a UnicodeSet.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuFoldingTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuFoldingTokenFilterDescriptor.UnicodeSetFilter(System.String)">
      <summary>
            Which letters are folded can be controlled by specifying the unicodeSetFilter parameter, which accepts a UnicodeSet.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IIcuNormalizationCharFilter">
      <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuNormalizationCharFilter.Mode">
      <summary>
            Set the mode parameter to decompose to convert nfc to nfd or nfkc to nfkd respectively
            </summary>
    </member>
    <member name="P:Nest.IIcuNormalizationCharFilter.Name">
      <summary>
            The type of normalization
            </summary>
    </member>
    <member name="T:Nest.IcuNormalizationCharFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuNormalizationCharFilter.Mode">
      <summary>
            Set the mode parameter to decompose to convert nfc to nfd or nfkc to nfkd respectively
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuNormalizationCharFilter.Name">
      <summary>
            The type of normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuNormalizationCharFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuNormalizationCharFilterDescriptor.Name(System.Nullable{Nest.IcuNormalizationType})">
      <summary>
            The type of normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuNormalizationCharFilterDescriptor.Mode(System.Nullable{Nest.IcuNormalizationMode})">
      <summary>
            Set the mode parameter to decompose to convert nfc to nfd or nfkc to nfkd respectively
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IIcuNormalizationTokenFilter">
      <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuNormalizationTokenFilter.Name">
      <summary>
            The type of normalization
            </summary>
    </member>
    <member name="T:Nest.IcuNormalizationTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuNormalizationTokenFilter.Name">
      <summary>
            The type of normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuNormalizationTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuNormalizationTokenFilterDescriptor.Name(System.Nullable{Nest.IcuNormalizationType})">
      <summary>
            The type of normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IIcuTokenizer">
      <summary>
            Tokenizes text into words on word boundaries, as defined in UAX #29: Unicode Text Segmentation. It behaves much
            like the standard tokenizer, but adds better support for some Asian languages by using a dictionary-based approach
            to identify words in Thai, Lao, Chinese, Japanese, and Korean, and using custom rules to break Myanmar and Khmer
            text into syllables.
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuTokenizer.RuleFiles">
      <summary>
            You can customize the icu-tokenizer behavior by specifying per-script rule files,
            see the RBBI rules syntax reference for a more detailed explanation.
            </summary>
    </member>
    <member name="T:Nest.IcuTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuTokenizer.RuleFiles">
      <summary>
            You can customize the icu-tokenizer behavior by specifying per-script rule files,
            see the RBBI rules syntax reference for a more detailed explanation.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuTokenizerDescriptor.RuleFiles(System.String)">
      <summary>
            You can customize the icu-tokenizer behavior by specifying per-script rule files,
            see the RBBI rules syntax reference for a more detailed explanation.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IIcuTransformTokenFilter">
      <summary>
            Transforms are used to process Unicode text in many different ways, such as case mapping,
            normalization, transliteration and bidirectional text handling.
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="P:Nest.IIcuTransformTokenFilter.Direction">
      <summary>
            Specify text direction with the dir parameter which accepts forward (default) for LTR and reverse for RTL.
            </summary>
    </member>
    <member name="T:Nest.IcuTransformTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.IcuTransformTokenFilter.Direction">
      <summary>
            Specify text direction with the dir parameter which accepts forward (default) for LTR and reverse for RTL.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuTransformTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuTransformTokenFilterDescriptor.Direction(System.Nullable{Nest.IcuTransformDirection})">
      <summary>
            Specify text direction with the dir parameter which accepts forward (default) for LTR and reverse for RTL.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IcuTransformTokenFilterDescriptor.Id(System.String)">
      <inheritdoc />
    </member>
    <member name="T:Nest.IcuNormalizationMode">
      <summary>
            Normalization mode https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="F:Nest.IcuNormalizationMode.Decompose">
      <summary>
            Switch normalization type to decompose
            </summary>
    </member>
    <member name="F:Nest.IcuNormalizationMode.Compose">
      <summary>
            Switch normalization type to compose, which is the default so you'd never need to set this
            Included here for completeness sake because the Java API has it.
            </summary>
    </member>
    <member name="T:Nest.IcuNormalizationType">
      <summary>
            Normalization forms https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="F:Nest.IcuNormalizationType.Canonical">
      <summary>
            Characters are decomposed and then recomposed by canonical equivalence.
            </summary>
    </member>
    <member name="F:Nest.IcuNormalizationType.Compatibility">
      <summary>
            Characters are decomposed by compatibility, then recomposed by canonical equivalence.
            </summary>
    </member>
    <member name="F:Nest.IcuNormalizationType.CompatibilityCaseFold">
      <summary>
            Characters are decomposed by compatibility, then recomposed by canonical equivalence with case folding
            </summary>
    </member>
    <member name="T:Nest.IcuTransformDirection">
      <summary>
            Forward (default) for LTR and reverse for RTL
            </summary>
      <remarks>
            Requires analysis-icu plugin to be installed
            </remarks>
    </member>
    <member name="F:Nest.IcuTransformDirection.Forward">
      <summary>LTR</summary>
    </member>
    <member name="F:Nest.IcuTransformDirection.Reverse">
      <summary> RTL</summary>
    </member>
    <member name="T:Nest.IKuromojiAnalyzer">
      <summary>
            An analyzer tailored for japanese that is bootstrapped with defaults.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="T:Nest.KuromojiAnalyzer">
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiAnalyzerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IKuromojiIterationMarkCharFilter">
      <summary>
            The kuromoji_iteration_mark normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="T:Nest.KuromojiIterationMarkCharFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiIterationMarkCharFilter.NormalizeKana">
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiIterationMarkCharFilter.NormalizeKanji">
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiIterationMarkCharFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiIterationMarkCharFilterDescriptor.NormalizeKanji(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiIterationMarkCharFilterDescriptor.NormalizeKana(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="T:Nest.IKuromojiPartOfSpeechTokenFilter">
      <summary>
            The kuromoji_part_of_speech token filter removes tokens that match a set of part-of-speech tags.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="P:Nest.IKuromojiPartOfSpeechTokenFilter.StopTags">
      <summary>
            An array of part-of-speech tags that should be removed. It defaults to the stoptags.txt file embedded
            in the lucene-analyzer-kuromoji.jar.
            </summary>
    </member>
    <member name="T:Nest.KuromojiPartOfSpeechTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiPartOfSpeechTokenFilter.StopTags">
      <summary>
            An array of part-of-speech tags that should be removed. It defaults to the stoptags.txt file embedded
            in the lucene-analyzer-kuromoji.jar.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiPartOfSpeechTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiPartOfSpeechTokenFilterDescriptor.StopTags(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            An array of part-of-speech tags that should be removed. It defaults to the stoptags.txt file embedded
            in the lucene-analyzer-kuromoji.jar.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiPartOfSpeechTokenFilterDescriptor.StopTags(System.String[])">
      <summary>
            An array of part-of-speech tags that should be removed. It defaults to the stoptags.txt file embedded
            in the lucene-analyzer-kuromoji.jar.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IKuromojiReadingFormTokenFilter">
      <summary>
            The kuromoji_readingform token filter replaces the token with its reading form in either katakana or romaji.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="P:Nest.IKuromojiReadingFormTokenFilter.UseRomaji">
      <summary>
            Whether romaji reading form should be output instead of katakana. Defaults to false.
            </summary>
    </member>
    <member name="T:Nest.KuromojiReadingFormTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiReadingFormTokenFilter.UseRomaji">
      <summary>
            Whether romaji reading form should be output instead of katakana. Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiReadingFormTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiReadingFormTokenFilterDescriptor.UseRomaji(System.Nullable{System.Boolean})">
      <summary>
            Whether romaji reading form should be output instead of katakana. Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IKuromojiStemmerTokenFilter">
      <summary>
            The kuromoji_stemmer token filter normalizes common katakana spelling variations ending in a
            long sound character by removing this character (U+30FC). Only full-width katakana characters are supported.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="P:Nest.IKuromojiStemmerTokenFilter.MinimumLength">
      <summary>
            Katakana words shorter than the minimum length are not stemmed (default is 4).
            </summary>
    </member>
    <member name="T:Nest.KuromojiStemmerTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiStemmerTokenFilter.MinimumLength">
      <summary>
            Katakana words shorter than the minimum length are not stemmed (default is 4).
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiStemmerTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiStemmerTokenFilterDescriptor.MinimumLength(System.Nullable{System.Int32})">
      <summary>
            Katakana words shorter than the minimum length are not stemmed (default is 4).
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiTokenizationMode">
      <summary>
            The tokenization mode determines how the tokenizer handles compound and unknown words.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="F:Nest.KuromojiTokenizationMode.Normal">
      <summary>
            Normal segmentation, no decomposition for compounds
            </summary>
    </member>
    <member name="F:Nest.KuromojiTokenizationMode.Search">
      <summary>
            Segmentation geared towards search. This includes a decompounding process for long nouns,
            also including the full compound token as a synonym.
            </summary>
    </member>
    <member name="F:Nest.KuromojiTokenizationMode.Extended">
      <summary>
            Extended mode outputs unigrams for unknown words.
            </summary>
    </member>
    <member name="T:Nest.IKuromojiTokenizer">
      <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="P:Nest.IKuromojiTokenizer.DiscardPunctuation">
      <summary>
            Whether punctuation should be discarded from the output. Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IKuromojiTokenizer.Mode">
      <summary>
            The tokenization mode determines how the tokenizer handles compound and unknown words.
            </summary>
    </member>
    <member name="P:Nest.IKuromojiTokenizer.NBestCost">
      <summary>
            The nbest_cost parameter specifies an additional Viterbi cost. The KuromojiTokenizer will include all tokens in
            Viterbi paths that are within the nbest_cost value of the best path.
            </summary>
    </member>
    <member name="P:Nest.IKuromojiTokenizer.NBestExamples">
      <summary>
            The nbest_examples can be used to find a nbest_cost value based on examples. For example,
             a value of /箱根山-箱根/成田空港-成田/ indicates that in the texts, 箱根山 (Mt. Hakone) and 成田空港 (Narita Airport)
             we’d like a cost that gives is us 箱根 (Hakone) and 成田 (Narita).
            </summary>
    </member>
    <member name="P:Nest.IKuromojiTokenizer.UserDictionary">
      <summary>
            The Kuromoji tokenizer uses the MeCab-IPADIC dictionary by default. A user_dictionary may be
            appended to the default dictionary.
            </summary>
    </member>
    <member name="T:Nest.KuromojiTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiTokenizer.DiscardPunctuation">
      <summary>
            Whether punctuation should be discarded from the output. Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiTokenizer.Mode">
      <summary>
            The tokenization mode determines how the tokenizer handles compound and unknown words.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiTokenizer.NBestCost">
      <summary>
            The nbest_cost parameter specifies an additional Viterbi cost. The KuromojiTokenizer will include all tokens in
            Viterbi paths that are within the nbest_cost value of the best path.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiTokenizer.NBestExamples">
      <summary>
            The nbest_examples can be used to find a nbest_cost value based on examples. For example,
             a value of /箱根山-箱根/成田空港-成田/ indicates that in the texts, 箱根山 (Mt. Hakone) and 成田空港 (Narita Airport)
             we’d like a cost that gives is us 箱根 (Hakone) and 成田 (Narita).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KuromojiTokenizer.UserDictionary">
      <summary>
            The Kuromoji tokenizer uses the MeCab-IPADIC dictionary by default. A user_dictionary may be
            appended to the default dictionary.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KuromojiTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiTokenizerDescriptor.Mode(System.Nullable{Nest.KuromojiTokenizationMode})">
      <summary>
            The tokenization mode determines how the tokenizer handles compound and unknown words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiTokenizerDescriptor.DiscardPunctuation(System.Nullable{System.Boolean})">
      <summary>
            Whether punctuation should be discarded from the output. Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiTokenizerDescriptor.UserDictionary(System.String)">
      <summary>
            The Kuromoji tokenizer uses the MeCab-IPADIC dictionary by default. A user_dictionary may be
            appended to the default dictionary.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiTokenizerDescriptor.NBestExamples(System.String)">
      <summary>
            The nbest_examples can be used to find a nbest_cost value based on examples. For example,
             a value of /箱根山-箱根/成田空港-成田/ indicates that in the texts, 箱根山 (Mt. Hakone) and 成田空港 (Narita Airport)
             we’d like a cost that gives is us 箱根 (Hakone) and 成田 (Narita).
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KuromojiTokenizerDescriptor.NBestCost(System.Nullable{System.Int32})">
      <summary>
            The nbest_cost parameter specifies an additional Viterbi cost. The KuromojiTokenizer will include all tokens in
            Viterbi paths that are within the nbest_cost value of the best path.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPhoneticTokenFilter">
      <summary>
            A token filter that converts tokens to their phonetic
            representation using Soundex, Metaphone, and a variety of other algorithms.
            </summary>
      <remarks>
            Requires the Phonetic Analysis plugin be installed (analysis-phonetic)
            </remarks>
    </member>
    <member name="P:Nest.IPhoneticTokenFilter.Encoder">
      <summary>
            The type of phonetic encoding to use
            </summary>
    </member>
    <member name="P:Nest.IPhoneticTokenFilter.LanguageSet">
      <summary>
            An array of languages to check. If not specified, then the language will be guessed
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
    </member>
    <member name="P:Nest.IPhoneticTokenFilter.MaxCodeLength">
      <summary>
            The maximum length of the emitted metaphone token. Defaults to <c>4</c></summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.DoubleMetaphone" /> only
            </remarks>
    </member>
    <member name="P:Nest.IPhoneticTokenFilter.NameType">
      <summary>
            Whether names are ashkenazi, sephardic, or generic. Defaults to generic
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
    </member>
    <member name="P:Nest.IPhoneticTokenFilter.Replace">
      <summary>
            The replace parameter (defaults to true) controls if the token processed should be replaced
             with the encoded one (set it to true), or added (set it to false).
            </summary>
    </member>
    <member name="P:Nest.IPhoneticTokenFilter.RuleType">
      <summary>
            Whether matching should be exact or approximate. Defaults to approximate
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
    </member>
    <member name="T:Nest.PhoneticTokenFilter">
      <inheritdoc cref="T:Nest.IPhoneticTokenFilter" />
    </member>
    <member name="P:Nest.PhoneticTokenFilter.Encoder">
      <summary>
            The type of phonetic encoding to use
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhoneticTokenFilter.LanguageSet">
      <summary>
            An array of languages to check. If not specified, then the language will be guessed
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhoneticTokenFilter.MaxCodeLength">
      <summary>
            The maximum length of the emitted metaphone token. Defaults to <c>4</c></summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.DoubleMetaphone" /> only
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhoneticTokenFilter.NameType">
      <summary>
            Whether names are ashkenazi, sephardic, or generic. Defaults to generic
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhoneticTokenFilter.Replace">
      <summary>
            The replace parameter (defaults to true) controls if the token processed should be replaced
             with the encoded one (set it to true), or added (set it to false).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhoneticTokenFilter.RuleType">
      <summary>
            Whether matching should be exact or approximate. Defaults to approximate
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc />
    </member>
    <member name="T:Nest.PhoneticTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IPhoneticTokenFilter" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.Replace(System.Nullable{System.Boolean})">
      <summary>
            The replace parameter (defaults to true) controls if the token processed should be replaced
             with the encoded one (set it to true), or added (set it to false).
            </summary>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.Replace" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.Encoder(System.Nullable{Nest.PhoneticEncoder})">
      <summary>
            The type of phonetic encoding to use
            </summary>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.Encoder" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.MaxCodeLength(System.Nullable{System.Int32})">
      <summary>
            The maximum length of the emitted metaphone token. Defaults to <c>4</c></summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.DoubleMetaphone" /> only
            </remarks>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.MaxCodeLength" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.RuleType(System.Nullable{Nest.PhoneticRuleType})">
      <summary>
            Whether matching should be exact or approximate. Defaults to approximate
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.RuleType" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.NameType(System.Nullable{Nest.PhoneticNameType})">
      <summary>
            Whether names are ashkenazi, sephardic, or generic. Defaults to generic
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.NameType" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.LanguageSet(Nest.PhoneticLanguage[])">
      <summary>
            An array of languages to check. If not specified, then the language will be guessed
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.LanguageSet" />
    </member>
    <member name="M:Nest.PhoneticTokenFilterDescriptor.LanguageSet(System.Collections.Generic.IEnumerable{Nest.PhoneticLanguage})">
      <summary>
            An array of languages to check. If not specified, then the language will be guessed
            </summary>
      <remarks>
            Valid for <see cref="F:Nest.PhoneticEncoder.Beidermorse" /> only
            </remarks>
      <inheritdoc cref="P:Nest.IPhoneticTokenFilter.LanguageSet" />
    </member>
    <member name="T:Nest.IAsciiFoldingTokenFilter">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para></summary>
    </member>
    <member name="T:Nest.AsciiFoldingTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.AsciiFoldingTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.AsciiFoldingTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="T:Nest.ICommonGramsTokenFilter">
      <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para></summary>
    </member>
    <member name="P:Nest.ICommonGramsTokenFilter.CommonWords">
      <summary>
            A list of common words to use.
            </summary>
    </member>
    <member name="P:Nest.ICommonGramsTokenFilter.CommonWordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of common words.
            </summary>
    </member>
    <member name="P:Nest.ICommonGramsTokenFilter.IgnoreCase">
      <summary>
            If true, common words matching will be case insensitive.
            </summary>
    </member>
    <member name="P:Nest.ICommonGramsTokenFilter.QueryMode">
      <summary>
            Generates bigrams then removes common words and single terms followed by a common word.
            </summary>
    </member>
    <member name="T:Nest.CommonGramsTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.CommonGramsTokenFilter.CommonWords">
      <summary>
            A list of common words to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CommonGramsTokenFilter.CommonWordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of common words.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CommonGramsTokenFilter.IgnoreCase">
      <summary>
            If true, common words matching will be case insensitive.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CommonGramsTokenFilter.QueryMode">
      <summary>
            Generates bigrams then removes common words and single terms followed by a common word.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.CommonGramsTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonGramsTokenFilterDescriptor.QueryMode(System.Nullable{System.Boolean})">
      <summary>
            Generates bigrams then removes common words and single terms followed by a common word.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonGramsTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
      <summary>
            If true, common words matching will be case insensitive.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWordsPath(System.String)">
      <summary>
            A path (either relative to config location, or absolute) to a list of common words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWords(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of common words to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWords(System.String[])">
      <summary>
            A list of common words to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ICompoundWordTokenFilter">
      <summary>
            Token filters that allow to decompose compound words.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.HyphenationPatternsPath">
      <summary>
            A path (either relative to config location, or absolute) to a FOP XML hyphenation pattern file.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.MaxSubwordSize">
      <summary>
            Maximum subword size.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.MinSubwordSize">
      <summary>
            Minimum subword size.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.MinWordSize">
      <summary>
            Minimum word size.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.OnlyLongestMatch">
      <summary>
            Only matching the longest.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.WordList">
      <summary>
            A list of words to use.
            </summary>
    </member>
    <member name="P:Nest.ICompoundWordTokenFilter.WordListPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of words.
            </summary>
    </member>
    <member name="P:Nest.CompoundWordTokenFilterBase.MaxSubwordSize">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompoundWordTokenFilterBase.MinSubwordSize">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompoundWordTokenFilterBase.MinWordSize">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompoundWordTokenFilterBase.OnlyLongestMatch">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompoundWordTokenFilterBase.WordList">
      <inheritdoc />
    </member>
    <member name="P:Nest.CompoundWordTokenFilterBase.WordListPath">
      <inheritdoc />
    </member>
    <member name="T:Nest.CompoundWordTokenFilterDescriptorBase`2">
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordList(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of words to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordList(System.String[])">
      <summary>
            A list of words to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordListPath(System.String)">
      <summary>
            A path (either relative to config location, or absolute) to a list of words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.HyphenationPatternsPath(System.String)">
      <summary>
            A path (either relative to config location, or absolute) to a FOP XML hyphenation pattern file.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MinWordSize(System.Nullable{System.Int32})">
      <summary>
            Minimum word size.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MinSubwordSize(System.Nullable{System.Int32})">
      <summary>
            Minimum subword size.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MaxSubwordSize(System.Nullable{System.Int32})">
      <summary>
            Maximum subword size.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.OnlyLongestMatch(System.Nullable{System.Boolean})">
      <summary>
            Only matching the longest.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DictionaryDecompounderTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.DictionaryDecompounderTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IHyphenationDecompounderTokenFilter">
      <summary>
            Token filters that allow to decompose compound words.
            </summary>
    </member>
    <member name="T:Nest.HyphenationDecompounderTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.HyphenationDecompounderTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IConditionTokenFilter">
      <summary>
            The conditional token filter takes a predicate script and a list of subfilters, and
            only applies the subfilters to the current token if it matches the predicate.
            </summary>
    </member>
    <member name="P:Nest.IConditionTokenFilter.Script">
      <summary>
            a predicate script that determines whether or not the filters will be applied
            to the current token.  Note that only inline scripts are supported
            </summary>
    </member>
    <member name="P:Nest.IConditionTokenFilter.Filters">
      <summary>
            a chain of token filters to apply to the current token if the predicate
             matches. These can be any token filters defined elsewhere in the index mappings.
             </summary>
    </member>
    <member name="T:Nest.ConditionTokenFilter">
      <inheritdoc cref="T:Nest.IConditionTokenFilter" />
    </member>
    <member name="P:Nest.ConditionTokenFilter.Script">
      <summary>
            a predicate script that determines whether or not the filters will be applied
            to the current token.  Note that only inline scripts are supported
            </summary>
      <inheritdoc cref="P:Nest.IConditionTokenFilter.Script" />
    </member>
    <member name="P:Nest.ConditionTokenFilter.Filters">
      <summary>
            a chain of token filters to apply to the current token if the predicate
             matches. These can be any token filters defined elsewhere in the index mappings.
             </summary>
      <inheritdoc cref="P:Nest.IConditionTokenFilter.Filters" />
    </member>
    <member name="T:Nest.ConditionTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IConditionTokenFilter" />
    </member>
    <member name="M:Nest.ConditionTokenFilterDescriptor.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            a predicate script that determines whether or not the filters will be applied
            to the current token.  Note that only inline scripts are supported
            </summary>
      <inheritdoc cref="P:Nest.IConditionTokenFilter.Script" />
    </member>
    <member name="M:Nest.ConditionTokenFilterDescriptor.Script(System.String)">
      <summary>
            a predicate script that determines whether or not the filters will be applied
            to the current token.  Note that only inline scripts are supported
            </summary>
      <inheritdoc cref="P:Nest.IConditionTokenFilter.Script" />
    </member>
    <member name="M:Nest.ConditionTokenFilterDescriptor.Filters(System.String[])">
      <summary>
            a chain of token filters to apply to the current token if the predicate
             matches. These can be any token filters defined elsewhere in the index mappings.
             </summary>
      <inheritdoc cref="P:Nest.IConditionTokenFilter.Filters" />
    </member>
    <member name="M:Nest.ConditionTokenFilterDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            a chain of token filters to apply to the current token if the predicate
             matches. These can be any token filters defined elsewhere in the index mappings.
             </summary>
      <inheritdoc cref="P:Nest.IConditionTokenFilter.Filters" />
    </member>
    <member name="T:Nest.IDelimitedPayloadTokenFilter">
      <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
    </member>
    <member name="P:Nest.IDelimitedPayloadTokenFilter.Delimiter">
      <summary>
            Character used for splitting the tokens.
            </summary>
    </member>
    <member name="P:Nest.IDelimitedPayloadTokenFilter.Encoding">
      <summary>
            The type of the payload. int for integer, float for float and identity for characters.
            </summary>
    </member>
    <member name="T:Nest.DelimitedPayloadTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.DelimitedPayloadTokenFilter.Delimiter">
      <summary>
            Character used for splitting the tokens.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DelimitedPayloadTokenFilter.Encoding">
      <summary>
            The type of the payload. int for integer, float for float and identity for characters.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DelimitedPayloadTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.DelimitedPayloadTokenFilterDescriptor.Delimiter(System.Nullable{System.Char})">
      <summary>
            Character used for splitting the tokens.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DelimitedPayloadTokenFilterDescriptor.Encoding(System.Nullable{Nest.DelimitedPayloadEncoding})">
      <summary>
            The type of the payload. int for integer, float for float and identity for characters.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IEdgeNGramTokenFilter">
      <summary>
            A token filter of type edgeNGram.
            </summary>
    </member>
    <member name="P:Nest.IEdgeNGramTokenFilter.MaxGram">
      <summary>
            Defaults to 2.
            </summary>
    </member>
    <member name="P:Nest.IEdgeNGramTokenFilter.MinGram">
      <summary>
            Defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.IEdgeNGramTokenFilter.Side">
      <summary>
            Either front or back. Defaults to front.
            </summary>
    </member>
    <member name="T:Nest.EdgeNGramTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.EdgeNGramTokenFilter.MaxGram">
      <summary>
            Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.EdgeNGramTokenFilter.MinGram">
      <summary>
            Defaults to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.EdgeNGramTokenFilter.Side">
      <summary>
            Either front or back. Defaults to front.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.EdgeNGramTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenFilterDescriptor.MinGram(System.Nullable{System.Int32})">
      <summary>
            Defaults to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenFilterDescriptor.MaxGram(System.Nullable{System.Int32})">
      <summary>
            Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenFilterDescriptor.Side(System.Nullable{Nest.EdgeNGramSide})">
      <summary>
            Either front or back. Defaults to front.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IElisionTokenFilter">
      <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
    </member>
    <member name="P:Nest.IElisionTokenFilter.Articles">
      <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
    </member>
    <member name="P:Nest.IElisionTokenFilter.ArticlesCase">
      <summary>
            Whether articles should be handled case-insensitively. Defaults to <c>false</c>.
            </summary>
    </member>
    <member name="T:Nest.ElisionTokenFilter">
      <inheritdoc cref="T:Nest.IElisionTokenFilter" />
    </member>
    <member name="P:Nest.ElisionTokenFilter.Articles">
      <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ElisionTokenFilter.ArticlesCase">
      <summary>
            Whether articles should be handled case-insensitively. Defaults to <c>false</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ElisionTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IElisionTokenFilter" />
    </member>
    <member name="M:Nest.ElisionTokenFilterDescriptor.Articles(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
      <inheritdoc cref="P:Nest.IElisionTokenFilter.Articles" />
    </member>
    <member name="M:Nest.ElisionTokenFilterDescriptor.Articles(System.String[])">
      <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
      <inheritdoc cref="P:Nest.IElisionTokenFilter.Articles" />
    </member>
    <member name="M:Nest.ElisionTokenFilterDescriptor.ArticlesCase(System.Nullable{System.Boolean})">
      <summary>
            Whether articles should be handled case-insensitively. Defaults to <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.IElisionTokenFilter.ArticlesCase" />
    </member>
    <member name="T:Nest.IFingerprintTokenFilter">
      <summary>
            The fingerprint token filter emits a single token which is useful
            for fingerprinting a body of text, and/or providing a token that can be
            clustered on. It does this by sorting the tokens, deduplicating and
            then concatenating them back into a single token.
            </summary>
    </member>
    <member name="P:Nest.IFingerprintTokenFilter.MaxOutputSize">
      <summary>
            The maximum token size to emit. Defaults to 255.
            </summary>
    </member>
    <member name="P:Nest.IFingerprintTokenFilter.Separator">
      <summary>
            The character that separates the tokens after concatenation.
            Defaults to a space.
            </summary>
    </member>
    <member name="T:Nest.FingerprintTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.FingerprintTokenFilter.MaxOutputSize">
      <summary>
            The maximum token size to emit. Defaults to 255.
            </summary>
    </member>
    <member name="P:Nest.FingerprintTokenFilter.Separator">
      <summary>
            The character that separates the tokens after concatenation.
            Defaults to a space.
            </summary>
    </member>
    <member name="T:Nest.FingerprintTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IHunspellTokenFilter">
      <summary>
             Basic support for hunspell stemming.
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para></summary>
    </member>
    <member name="P:Nest.IHunspellTokenFilter.Dedup">
      <summary>
            If only unique terms should be returned, this needs to be set to true.
            </summary>
    </member>
    <member name="P:Nest.IHunspellTokenFilter.Dictionary">
      <summary>
            The name of a dictionary.The path to your hunspell dictionaries should be configured via
            `indices.analysis.hunspell.dictionary.location` before.
            </summary>
    </member>
    <member name="P:Nest.IHunspellTokenFilter.Locale">
      <summary>
            A locale for this filter. If this is unset, the lang or language are used instead - so one of these has to be set.
            </summary>
    </member>
    <member name="P:Nest.IHunspellTokenFilter.LongestOnly">
      <summary>
            If only the longest term should be returned, set this to true.
            </summary>
    </member>
    <member name="T:Nest.HunspellTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.HunspellTokenFilter.Dedup">
      <summary>
            If only unique terms should be returned, this needs to be set to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HunspellTokenFilter.Dictionary">
      <summary>
            The name of a dictionary.The path to your hunspell dictionaries should be configured via
            `indices.analysis.hunspell.dictionary.location` before.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HunspellTokenFilter.Locale">
      <summary>
            A locale for this filter. If this is unset, the lang or language are used instead - so one of these has to be set.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HunspellTokenFilter.LongestOnly">
      <summary>
            If only the longest term should be returned, set this to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.HunspellTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.HunspellTokenFilterDescriptor.LongestOnly(System.Nullable{System.Boolean})">
      <summary>
            If only the longest term should be returned, set this to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HunspellTokenFilterDescriptor.Dedup(System.Nullable{System.Boolean})">
      <summary>
            If only unique terms should be returned, this needs to be set to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HunspellTokenFilterDescriptor.Locale(System.String)">
      <summary>
            A locale for this filter. If this is unset, the lang or language are used instead - so one of these has to be set.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HunspellTokenFilterDescriptor.Dictionary(System.String)">
      <summary>
            The name of a dictionary.The path to your hunspell dictionaries should be configured via
            `indices.analysis.hunspell.dictionary.location` before.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IKeepTypesTokenFilter">
      <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
    </member>
    <member name="P:Nest.IKeepTypesTokenFilter.Mode">
      <summary> Whether to include or exclude the types provided on <see cref="P:Nest.IKeepTypesTokenFilter.Types" /></summary>
    </member>
    <member name="P:Nest.IKeepTypesTokenFilter.Types">
      <summary> A list of types to keep. </summary>
    </member>
    <member name="T:Nest.KeepTypesTokenFilter">
      <inheritdoc cref="T:Nest.IKeepTypesTokenFilter" />
    </member>
    <member name="P:Nest.KeepTypesTokenFilter.Mode">
      <summary> Whether to include or exclude the types provided on <see cref="P:Nest.IKeepTypesTokenFilter.Types" /></summary>
      <inheritdoc cref="P:Nest.IKeepTypesTokenFilter.Mode" />
    </member>
    <member name="P:Nest.KeepTypesTokenFilter.Types">
      <summary> A list of types to keep. </summary>
      <inheritdoc cref="P:Nest.IKeepTypesTokenFilter.Types" />
    </member>
    <member name="T:Nest.KeepTypesTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IKeepTypesTokenFilter" />
    </member>
    <member name="M:Nest.KeepTypesTokenFilterDescriptor.Types(System.Collections.Generic.IEnumerable{System.String})">
      <summary> A list of types to keep. </summary>
      <inheritdoc cref="P:Nest.IKeepTypesTokenFilter.Types" />
    </member>
    <member name="M:Nest.KeepTypesTokenFilterDescriptor.Types(System.String[])">
      <summary> A list of types to keep. </summary>
      <inheritdoc cref="P:Nest.IKeepTypesTokenFilter.Types" />
    </member>
    <member name="M:Nest.KeepTypesTokenFilterDescriptor.Mode(System.Nullable{Nest.KeepTypesMode})">
      <summary> Whether to include or exclude the types provided on <see cref="P:Nest.IKeepTypesTokenFilter.Types" /></summary>
      <inheritdoc cref="P:Nest.IKeepTypesTokenFilter.Mode" />
    </member>
    <member name="T:Nest.IKeepWordsTokenFilter">
      <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
    </member>
    <member name="P:Nest.IKeepWordsTokenFilter.KeepWords">
      <summary>
            A list of words to keep.
            </summary>
    </member>
    <member name="P:Nest.IKeepWordsTokenFilter.KeepWordsCase">
      <summary>
            A boolean indicating whether to lower case the words.
            </summary>
    </member>
    <member name="P:Nest.IKeepWordsTokenFilter.KeepWordsPath">
      <summary>
            A path to a words file.
            </summary>
    </member>
    <member name="T:Nest.KeepWordsTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.KeepWordsTokenFilter.KeepWords">
      <summary>
            A list of words to keep.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeepWordsTokenFilter.KeepWordsCase">
      <summary>
            A boolean indicating whether to lower case the words.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeepWordsTokenFilter.KeepWordsPath">
      <summary>
            A path to a words file.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KeepWordsTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWordsCase(System.Nullable{System.Boolean})">
      <summary>
            A boolean indicating whether to lower case the words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWordsPath(System.String)">
      <summary>
            A path to a words file.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWords(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of words to keep.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWords(System.String[])">
      <summary>
            A list of words to keep.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IKeywordMarkerTokenFilter">
      <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
    </member>
    <member name="P:Nest.IKeywordMarkerTokenFilter.IgnoreCase">
      <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IKeywordMarkerTokenFilter.Keywords">
      <summary>
            A list of words to use.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
    </member>
    <member name="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of words.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
    </member>
    <member name="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern">
      <summary>
            A regular expression pattern to match against words in the text.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
    </member>
    <member name="T:Nest.KeywordMarkerTokenFilter">
      <inheritdoc cref="T:Nest.IKeywordMarkerTokenFilter" />
    </member>
    <member name="P:Nest.KeywordMarkerTokenFilter.IgnoreCase">
      <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeywordMarkerTokenFilter.Keywords">
      <summary>
            A list of words to use.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeywordMarkerTokenFilter.KeywordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of words.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeywordMarkerTokenFilter.KeywordsPattern">
      <summary>
            A regular expression pattern to match against words in the text.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KeywordMarkerTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IKeywordMarkerTokenFilter" />
    </member>
    <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
      <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
      <inheritdoc cref="P:Nest.IKeywordMarkerTokenFilter.IgnoreCase" />
    </member>
    <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.KeywordsPath(System.String)">
      <summary>
            A path (either relative to config location, or absolute) to a list of words.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" />
    </member>
    <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.KeywordsPattern(System.String)">
      <summary>
            A regular expression pattern to match against words in the text.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" />
    </member>
    <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.Keywords(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of words to use.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" />
    </member>
    <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.Keywords(System.String[])">
      <summary>
            A list of words to use.
            <para></para>
            Cannot specify both <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPattern" /> and <see cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" /> or <see cref="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath" /></summary>
      <inheritdoc cref="P:Nest.IKeywordMarkerTokenFilter.Keywords" />
    </member>
    <member name="T:Nest.IKStemTokenFilter">
      <summary>
            The kstem token filter is a high performance filter for english.
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para></summary>
    </member>
    <member name="T:Nest.KStemTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.KStemTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.ILengthTokenFilter">
      <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
    </member>
    <member name="P:Nest.ILengthTokenFilter.Max">
      <summary>
            The maximum number. Defaults to Integer.MAX_VALUE.
            </summary>
    </member>
    <member name="P:Nest.ILengthTokenFilter.Min">
      <summary>
            The minimum number. Defaults to 0.
            </summary>
    </member>
    <member name="T:Nest.LengthTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.LengthTokenFilter.Max">
      <summary>
            The maximum number. Defaults to Integer.MAX_VALUE.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.LengthTokenFilter.Min">
      <summary>
            The minimum number. Defaults to 0.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LengthTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.LengthTokenFilterDescriptor.Min(System.Nullable{System.Int32})">
      <summary>
            The minimum number. Defaults to 0.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.LengthTokenFilterDescriptor.Max(System.Nullable{System.Int32})">
      <summary>
            The maximum number. Defaults to Integer.MAX_VALUE.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ILimitTokenCountTokenFilter">
      <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
    </member>
    <member name="P:Nest.ILimitTokenCountTokenFilter.ConsumeAllTokens">
      <summary>
            If set to true the filter exhaust the stream even if max_token_count tokens have been consumed already.
            </summary>
    </member>
    <member name="P:Nest.ILimitTokenCountTokenFilter.MaxTokenCount">
      <summary>
            The maximum number of tokens that should be indexed per document and field.
            </summary>
    </member>
    <member name="T:Nest.LimitTokenCountTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.LimitTokenCountTokenFilter.ConsumeAllTokens">
      <summary>
            If set to true the filter exhaust the stream even if max_token_count tokens have been consumed already.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.LimitTokenCountTokenFilter.MaxTokenCount">
      <summary>
            The maximum number of tokens that should be indexed per document and field.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LimitTokenCountTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.LimitTokenCountTokenFilterDescriptor.ConsumeAllToken(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.LimitTokenCountTokenFilterDescriptor.MaxTokenCount(System.Nullable{System.Int32})">
      <summary>
            The maximum number of tokens that should be indexed per document and field.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ILowercaseTokenFilter">
      <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para></summary>
    </member>
    <member name="P:Nest.ILowercaseTokenFilter.Language">
      <summary>
            Lowercase token filter supports Greek, Irish, and Turkish lowercase token filters through the language parameter
            </summary>
    </member>
    <member name="T:Nest.LowercaseTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.LowercaseTokenFilter.Language">
      <summary>
            Lowercase token filter supports Greek, Irish, and Turkish lowercase token filters through the language parameter
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LowercaseTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.LowercaseTokenFilterDescriptor.Language(System.String)">
      <summary>
            Lowercase token filter supports Greek, Irish, and Turkish lowercase token filters through the language parameter
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IMultiplexerTokenFilter">
      <summary>
            A token filter of type multiplexer will emit multiple tokens at the same position, each version of the token having
            been run through a different filter. Identical output tokens at the same position will be removed.
            </summary>
    </member>
    <member name="P:Nest.MultiplexerTokenFilter.Filters">
      <inheritdoc cref="P:Nest.IMultiplexerTokenFilter.Filters" />
    </member>
    <member name="P:Nest.MultiplexerTokenFilter.PreserveOriginal">
      <inheritdoc cref="P:Nest.IMultiplexerTokenFilter.PreserveOriginal" />
    </member>
    <member name="T:Nest.MultiplexerTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IMultiplexerTokenFilter" />
    </member>
    <member name="M:Nest.MultiplexerTokenFilterDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IMultiplexerTokenFilter.Filters" />
    </member>
    <member name="M:Nest.MultiplexerTokenFilterDescriptor.Filters(System.String[])">
      <inheritdoc cref="P:Nest.IMultiplexerTokenFilter.Filters" />
    </member>
    <member name="M:Nest.MultiplexerTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.IMultiplexerTokenFilter.PreserveOriginal" />
    </member>
    <member name="T:Nest.INGramTokenFilter">
      <summary>
            A token filter of type nGram.
            </summary>
    </member>
    <member name="P:Nest.INGramTokenFilter.MaxGram">
      <summary>
            Defaults to 2
            </summary>
    </member>
    <member name="P:Nest.INGramTokenFilter.MinGram">
      <summary>
            Defaults to 1.
            </summary>
    </member>
    <member name="T:Nest.NGramTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.NGramTokenFilter.MaxGram">
      <summary>
            Defaults to 2
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.NGramTokenFilter.MinGram">
      <summary>
            Defaults to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.NGramTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.NGramTokenFilterDescriptor.MinGram(System.Nullable{System.Int32})">
      <summary>
            Defaults to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.NGramTokenFilterDescriptor.MaxGram(System.Nullable{System.Int32})">
      <summary>
            Defaults to 2
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.INoriPartOfSpeechTokenFilter">
      <summary> The nori_part_of_speech token filter removes tokens that match a set of part-of-speech tags. </summary>
    </member>
    <member name="P:Nest.INoriPartOfSpeechTokenFilter.StopTags">
      <summary> An array of part-of-speech tags that should be removed. </summary>
    </member>
    <member name="T:Nest.NoriPartOfSpeechTokenFilter">
      <inheritdoc cref="T:Nest.INoriPartOfSpeechTokenFilter" />
    </member>
    <member name="P:Nest.NoriPartOfSpeechTokenFilter.StopTags">
      <summary> An array of part-of-speech tags that should be removed. </summary>
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="T:Nest.NoriPartOfSpeechTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.INoriPartOfSpeechTokenFilter" />
    </member>
    <member name="M:Nest.NoriPartOfSpeechTokenFilterDescriptor.StopTags(System.Collections.Generic.IEnumerable{System.String})">
      <summary> An array of part-of-speech tags that should be removed. </summary>
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="M:Nest.NoriPartOfSpeechTokenFilterDescriptor.StopTags(System.String[])">
      <summary> An array of part-of-speech tags that should be removed. </summary>
      <inheritdoc cref="P:Nest.INoriPartOfSpeechTokenFilter.StopTags" />
    </member>
    <member name="T:Nest.IPatternCaptureTokenFilter">
      <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular expression.
            </summary>
    </member>
    <member name="P:Nest.IPatternCaptureTokenFilter.Patterns">
      <summary>
            The regular expression patterns to capture
            </summary>
    </member>
    <member name="P:Nest.IPatternCaptureTokenFilter.PreserveOriginal">
      <summary>
            If preserve_original is set to true then it would also emit the original token
            </summary>
    </member>
    <member name="T:Nest.PatternCaptureTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternCaptureTokenFilter.Patterns">
      <summary>
            The regular expression patterns to capture
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternCaptureTokenFilter.PreserveOriginal">
      <summary>
            If preserve_original is set to true then it would also emit the original token
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PatternCaptureTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternCaptureTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
      <summary>
            If preserve_original is set to true then it would also emit the original token
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternCaptureTokenFilterDescriptor.Patterns(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            The regular expression patterns to capture
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternCaptureTokenFilterDescriptor.Patterns(System.String[])">
      <summary>
            The regular expression patterns to capture
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPatternReplaceTokenFilter">
      <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression.
            </summary>
    </member>
    <member name="P:Nest.IPatternReplaceTokenFilter.Flags">
      <summary>
            The flags for the regular expression
            </summary>
    </member>
    <member name="P:Nest.IPatternReplaceTokenFilter.Pattern">
      <summary>
            The regular expression
            </summary>
    </member>
    <member name="P:Nest.IPatternReplaceTokenFilter.Replacement">
      <summary>
            Replacement string
            </summary>
    </member>
    <member name="T:Nest.PatternReplaceTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternReplaceTokenFilter.Flags">
      <summary>
            The flags for the regular expression
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternReplaceTokenFilter.Pattern">
      <summary>
            The regular expression
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternReplaceTokenFilter.Replacement">
      <summary>
            Replacement string
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PatternReplaceTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Flags(System.String)">
      <summary>
            The flags for the regular expression
            </summary>
      <inheritdoc cref="P:Nest.IPatternReplaceTokenFilter.Flags" />
    </member>
    <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Pattern(System.String)">
      <summary>
            The regular expression
            </summary>
      <inheritdoc cref="P:Nest.IPatternReplaceTokenFilter.Pattern" />
    </member>
    <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Replacement(System.String)">
      <summary>
            Replacement string
            </summary>
      <inheritdoc cref="P:Nest.IPatternReplaceTokenFilter.Replacement" />
    </member>
    <member name="T:Nest.IPorterStemTokenFilter">
      <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
    </member>
    <member name="T:Nest.PorterStemTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.PorterStemTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IPredicateTokenFilter">
      <summary>
            The predicate_token_filter token filter takes a predicate script, and removes tokens that do
            not match the predicate.
            </summary>
    </member>
    <member name="P:Nest.IPredicateTokenFilter.Script">
      <summary>
            a predicate script that determines whether or not the current token will
            be emitted.  Note that only inline scripts are supported.
            </summary>
    </member>
    <member name="T:Nest.PredicateTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IPredicateTokenFilter" />
    </member>
    <member name="M:Nest.PredicateTokenFilterDescriptor.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            a predicate script that determines whether or not the current token will
            be emitted.  Note that only inline scripts are supported.
            </summary>
      <inheritdoc cref="P:Nest.IPredicateTokenFilter.Script" />
    </member>
    <member name="M:Nest.PredicateTokenFilterDescriptor.Script(System.String)">
      <summary>
            a predicate script that determines whether or not the current token will
            be emitted.  Note that only inline scripts are supported.
            </summary>
      <inheritdoc cref="P:Nest.IPredicateTokenFilter.Script" />
    </member>
    <member name="T:Nest.IRemoveDuplicatesTokenFilter">
      <summary>
            A token filter that drops identical tokens at the same position
            </summary>
    </member>
    <member name="T:Nest.RemoveDuplicatesTokenFilter">
      <inheritdoc cref="T:Nest.IRemoveDuplicatesTokenFilter" />
    </member>
    <member name="T:Nest.RemoveDuplicatesTokenFilterDescriptor">
      <inheritdoc cref="T:Nest.IRemoveDuplicatesTokenFilter" />
    </member>
    <member name="T:Nest.IReverseTokenFilter">
      <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
    </member>
    <member name="T:Nest.ReverseTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.ReverseTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IShingleTokenFilter">
      <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream.
            <para>In other words, it creates combinations of tokens as a single token. </para></summary>
    </member>
    <member name="P:Nest.IShingleTokenFilter.FillerToken">
      <summary>
            The string to use as a replacement for each position at which there is no actual token in the stream. For instance this string is used if
            the position increment is greater than one when a stop filter is used together with the shingle filter. Defaults to "_"
            </summary>
    </member>
    <member name="P:Nest.IShingleTokenFilter.MaxShingleSize">
      <summary>
            The maximum shingle size. Defaults to 2.
            </summary>
    </member>
    <member name="P:Nest.IShingleTokenFilter.MinShingleSize">
      <summary>
            The minimum shingle size. Defaults to 2.
            </summary>
    </member>
    <member name="P:Nest.IShingleTokenFilter.OutputUnigrams">
      <summary>
            If true the output will contain the input tokens (unigrams) as well as the shingles. Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IShingleTokenFilter.OutputUnigramsIfNoShingles">
      <summary>
            If output_unigrams is false the output will contain the input tokens (unigrams) if no shingles are available.
            <para>Note if output_unigrams is set to true this setting has no effect. Defaults to false.</para></summary>
    </member>
    <member name="P:Nest.IShingleTokenFilter.TokenSeparator">
      <summary>
            The string to use when joining adjacent tokens to form a shingle. Defaults to " ".
            </summary>
    </member>
    <member name="T:Nest.ShingleTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.ShingleTokenFilter.FillerToken">
      <summary>
            The string to use as a replacement for each position at which there is no actual token in the stream. For instance this string is used if
            the position increment is greater than one when a stop filter is used together with the shingle filter. Defaults to "_"
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShingleTokenFilter.MaxShingleSize">
      <summary>
            The maximum shingle size. Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShingleTokenFilter.MinShingleSize">
      <summary>
            The minimum shingle size. Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShingleTokenFilter.OutputUnigrams">
      <summary>
            If true the output will contain the input tokens (unigrams) as well as the shingles. Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShingleTokenFilter.OutputUnigramsIfNoShingles">
      <summary>
            If output_unigrams is false the output will contain the input tokens (unigrams) if no shingles are available.
            <para>Note if output_unigrams is set to true this setting has no effect. Defaults to false.</para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShingleTokenFilter.TokenSeparator">
      <summary>
            The string to use when joining adjacent tokens to form a shingle. Defaults to " ".
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ShingleTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.ShingleTokenFilterDescriptor.OutputUnigrams(System.Nullable{System.Boolean})">
      <summary>
            If true the output will contain the input tokens (unigrams) as well as the shingles. Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShingleTokenFilterDescriptor.OutputUnigramsIfNoShingles(System.Nullable{System.Boolean})">
      <summary>
            If output_unigrams is false the output will contain the input tokens (unigrams) if no shingles are available.
            <para>Note if output_unigrams is set to true this setting has no effect. Defaults to false.</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShingleTokenFilterDescriptor.MinShingleSize(System.Nullable{System.Int32})">
      <summary>
            The minimum shingle size. Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShingleTokenFilterDescriptor.MaxShingleSize(System.Nullable{System.Int32})">
      <summary>
            The maximum shingle size. Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShingleTokenFilterDescriptor.TokenSeparator(System.String)">
      <summary>
            The string to use when joining adjacent tokens to form a shingle. Defaults to " ".
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShingleTokenFilterDescriptor.FillerToken(System.String)">
      <summary>
            The string to use as a replacement for each position at which there is no actual token in the stream. For instance this string is used if
            the position increment is greater than one when a stop filter is used together with the shingle filter. Defaults to "_"
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ISnowballTokenFilter">
      <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
    </member>
    <member name="T:Nest.SnowballTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.SnowballTokenFilter.Language">
      <inheritdoc />
    </member>
    <member name="T:Nest.SnowballTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.SnowballTokenFilterDescriptor.Language(System.Nullable{Nest.SnowballLanguage})">
      <inheritdoc />
    </member>
    <member name="T:Nest.IStemmerOverrideTokenFilter">
      <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by stemmers. Must be placed
            before any stemming filters.
            </summary>
    </member>
    <member name="P:Nest.IStemmerOverrideTokenFilter.Rules">
      <summary>
            A list of mapping rules to use.
            </summary>
    </member>
    <member name="P:Nest.IStemmerOverrideTokenFilter.RulesPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of mappings.
            </summary>
    </member>
    <member name="T:Nest.StemmerOverrideTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.StemmerOverrideTokenFilter.Rules">
      <summary>
            A list of mapping rules to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StemmerOverrideTokenFilter.RulesPath">
      <summary>
            A path (either relative to config location, or absolute) to a list of mappings.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StemmerOverrideTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.Rules(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of mapping rules to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.Rules(System.String[])">
      <summary>
            A list of mapping rules to use.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.RulesPath(System.String)">
      <summary>
            A path (either relative to config location, or absolute) to a list of mappings.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IStemmerTokenFilter">
      <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
    </member>
    <member name="T:Nest.StemmerTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.StemmerTokenFilterDescriptor.Language(System.String)">
      <inheritdoc />
    </member>
    <member name="T:Nest.IStopTokenFilter">
      <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
    </member>
    <member name="P:Nest.IStopTokenFilter.IgnoreCase">
      <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IStopTokenFilter.RemoveTrailing">
      <summary>
            Set to false in order to not ignore the last term of a search if it is a stop word.
            This is very useful for  the completion suggester as a query like green a can
            be extended to green apple even though  you remove stop words in general. Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IStopTokenFilter.StopWords">
      <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
    </member>
    <member name="P:Nest.IStopTokenFilter.StopWordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords
            file configuration. Each stop word should be in its own "line"
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
    </member>
    <member name="T:Nest.StopTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.StopTokenFilter.IgnoreCase">
      <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StopTokenFilter.RemoveTrailing">
      <summary>
            Set to false in order to not ignore the last term of a search if it is a stop word.
            This is very useful for  the completion suggester as a query like green a can
            be extended to green apple even though  you remove stop words in general. Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StopTokenFilter.StopWords">
      <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StopTokenFilter.StopWordsPath">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords
            file configuration. Each stop word should be in its own "line"
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StopTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.StopTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
      <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopTokenFilterDescriptor.RemoveTrailing(System.Nullable{System.Boolean})">
      <summary>
            Set to false in order to not ignore the last term of a search if it is a stop word.
            This is very useful for  the completion suggester as a query like green a can
            be extended to green apple even though  you remove stop words in general. Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopTokenFilterDescriptor.StopWords(Nest.StopWords)">
      <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopTokenFilterDescriptor.StopWords(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopTokenFilterDescriptor.StopWords(System.String[])">
      <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopTokenFilterDescriptor.StopWordsPath(System.String)">
      <summary>
            A path (either relative to config location, or absolute) to a stopwords
            file configuration. Each stop word should be in its own "line"
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ISynonymGraphTokenFilter">
      <summary>
            The synonym_graph token filter allows to easily handle synonyms,
            including multi-word synonyms correctly during the analysis process.
            </summary>
    </member>
    <member name="P:Nest.ISynonymGraphTokenFilter.Lenient">
      <inheritdoc cref="P:Nest.ISynonymTokenFilter.Lenient" />
    </member>
    <member name="P:Nest.ISynonymGraphTokenFilter.SynonymsPath">
      <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
    </member>
    <member name="T:Nest.SynonymGraphTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymGraphTokenFilter.Expand">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymGraphTokenFilter.Format">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymGraphTokenFilter.Lenient">
      <inheritdoc cref="P:Nest.ISynonymTokenFilter.Lenient" />
    </member>
    <member name="P:Nest.SynonymGraphTokenFilter.Synonyms">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymGraphTokenFilter.SynonymsPath">
      <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymGraphTokenFilter.Tokenizer">
      <inheritdoc />
    </member>
    <member name="T:Nest.SynonymGraphTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Expand(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Lenient(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ISynonymTokenFilter.Lenient" />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Tokenizer(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.SynonymsPath(System.String)">
      <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Format(System.Nullable{Nest.SynonymFormat})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Synonyms(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Synonyms(System.String[])">
      <inheritdoc />
    </member>
    <member name="T:Nest.ISynonymTokenFilter">
      <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process.
            </summary>
    </member>
    <member name="P:Nest.ISynonymTokenFilter.Lenient">
      <summary>
            If `true` ignores exceptions while parsing the synonym configuration. It is important
            to note that only those synonym rules which cannot get parsed are ignored.
            </summary>
    </member>
    <member name="P:Nest.ISynonymTokenFilter.SynonymsPath">
      <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
    </member>
    <member name="T:Nest.SynonymTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymTokenFilter.Expand">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymTokenFilter.Format">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymTokenFilter.Lenient">
      <summary>
            If `true` ignores exceptions while parsing the synonym configuration. It is important
            to note that only those synonym rules which cannot get parsed are ignored.
            </summary>
      <inheritdoc cref="P:Nest.ISynonymTokenFilter.Lenient" />
    </member>
    <member name="P:Nest.SynonymTokenFilter.Synonyms">
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymTokenFilter.SynonymsPath">
      <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SynonymTokenFilter.Tokenizer">
      <inheritdoc />
    </member>
    <member name="T:Nest.SynonymTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.Expand(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.Lenient(System.Nullable{System.Boolean})">
      <summary>
            If `true` ignores exceptions while parsing the synonym configuration. It is important
            to note that only those synonym rules which cannot get parsed are ignored.
            </summary>
      <inheritdoc cref="P:Nest.ISynonymTokenFilter.Lenient" />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.Tokenizer(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.SynonymsPath(System.String)">
      <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.Format(System.Nullable{Nest.SynonymFormat})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.Synonyms(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SynonymTokenFilterDescriptor.Synonyms(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.DictionaryDecompounder(System.String,System.Func{Nest.DictionaryDecompounderTokenFilterDescriptor,Nest.IDictionaryDecompounderTokenFilter})">
      <summary>
            Token filters that allow to decompose compound words using a dictionary
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.HyphenationDecompounder(System.String,System.Func{Nest.HyphenationDecompounderTokenFilterDescriptor,Nest.IHyphenationDecompounderTokenFilter})">
      <summary>
            Token filters that allow to decompose compound words using FOP XML
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.EdgeNGram(System.String,System.Func{Nest.EdgeNGramTokenFilterDescriptor,Nest.IEdgeNGramTokenFilter})">
      <summary>
            A token filter of type edgeNGram.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Phonetic(System.String,System.Func{Nest.PhoneticTokenFilterDescriptor,Nest.IPhoneticTokenFilter})">
      <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Shingle(System.String,System.Func{Nest.ShingleTokenFilterDescriptor,Nest.IShingleTokenFilter})">
      <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream.
            <para>In other words, it creates combinations of tokens as a single token. </para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Stop(System.String,System.Func{Nest.StopTokenFilterDescriptor,Nest.IStopTokenFilter})">
      <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Synonym(System.String,System.Func{Nest.SynonymTokenFilterDescriptor,Nest.ISynonymTokenFilter})">
      <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.SynonymGraph(System.String,System.Func{Nest.SynonymGraphTokenFilterDescriptor,Nest.ISynonymGraphTokenFilter})">
      <summary>
            The synonym_graph token filter allows to easily handle synonyms,
            including multi-word synonyms correctly during the analysis process.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.WordDelimiter(System.String,System.Func{Nest.WordDelimiterTokenFilterDescriptor,Nest.IWordDelimiterTokenFilter})">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para>
            not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one
            exists.
            </para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.WordDelimiterGraph(System.String,System.Func{Nest.WordDelimiterGraphTokenFilterDescriptor,Nest.IWordDelimiterGraphTokenFilter})">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para>
            not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one
            exists.
            </para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.AsciiFolding(System.String,System.Func{Nest.AsciiFoldingTokenFilterDescriptor,Nest.IAsciiFoldingTokenFilter})">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para>
            not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one
            exists.
            </para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.CommonGrams(System.String,System.Func{Nest.CommonGramsTokenFilterDescriptor,Nest.ICommonGramsTokenFilter})">
      <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.DelimitedPayload(System.String,System.Func{Nest.DelimitedPayloadTokenFilterDescriptor,Nest.IDelimitedPayloadTokenFilter})">
      <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Elision(System.String,System.Func{Nest.ElisionTokenFilterDescriptor,Nest.IElisionTokenFilter})">
      <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Hunspell(System.String,System.Func{Nest.HunspellTokenFilterDescriptor,Nest.IHunspellTokenFilter})">
      <summary>
             Basic support for hunspell stemming.
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KeepTypes(System.String,System.Func{Nest.KeepTypesTokenFilterDescriptor,Nest.IKeepTypesTokenFilter})">
      <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KeepWords(System.String,System.Func{Nest.KeepWordsTokenFilterDescriptor,Nest.IKeepWordsTokenFilter})">
      <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KeywordMarker(System.String,System.Func{Nest.KeywordMarkerTokenFilterDescriptor,Nest.IKeywordMarkerTokenFilter})">
      <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KStem(System.String,System.Func{Nest.KStemTokenFilterDescriptor,Nest.IKStemTokenFilter})">
      <summary>
            The kstem token filter is a high performance filter for english.
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Length(System.String,System.Func{Nest.LengthTokenFilterDescriptor,Nest.ILengthTokenFilter})">
      <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.LimitTokenCount(System.String,System.Func{Nest.LimitTokenCountTokenFilterDescriptor,Nest.ILimitTokenCountTokenFilter})">
      <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Lowercase(System.String,System.Func{Nest.LowercaseTokenFilterDescriptor,Nest.ILowercaseTokenFilter})">
      <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.NGram(System.String,System.Func{Nest.NGramTokenFilterDescriptor,Nest.INGramTokenFilter})">
      <summary>
            A token filter of type nGram.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.PatternCapture(System.String,System.Func{Nest.PatternCaptureTokenFilterDescriptor,Nest.IPatternCaptureTokenFilter})">
      <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular
            expression.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.PatternReplace(System.String,System.Func{Nest.PatternReplaceTokenFilterDescriptor,Nest.IPatternReplaceTokenFilter})">
      <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.PorterStem(System.String,System.Func{Nest.PorterStemTokenFilterDescriptor,Nest.IPorterStemTokenFilter})">
      <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Reverse(System.String,System.Func{Nest.ReverseTokenFilterDescriptor,Nest.IReverseTokenFilter})">
      <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Snowball(System.String,System.Func{Nest.SnowballTokenFilterDescriptor,Nest.ISnowballTokenFilter})">
      <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Stemmer(System.String,System.Func{Nest.StemmerTokenFilterDescriptor,Nest.IStemmerTokenFilter})">
      <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Predicate(System.String,System.Func{Nest.PredicateTokenFilterDescriptor,Nest.IPredicateTokenFilter})">
      <inheritdoc cref="T:Nest.IPredicateTokenFilter" />
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Condition(System.String,System.Func{Nest.ConditionTokenFilterDescriptor,Nest.IConditionTokenFilter})">
      <inheritdoc cref="T:Nest.IConditionTokenFilter" />
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.StemmerOverride(System.String,System.Func{Nest.StemmerOverrideTokenFilterDescriptor,Nest.IStemmerOverrideTokenFilter})">
      <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by
            stemmers. Must be placed
            before any stemming filters.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Trim(System.String,System.Func{Nest.TrimTokenFilterDescriptor,Nest.ITrimTokenFilter})">
      <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Truncate(System.String,System.Func{Nest.TruncateTokenFilterDescriptor,Nest.ITruncateTokenFilter})">
      <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword
            (single token)
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para></summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Unique(System.String,System.Func{Nest.UniqueTokenFilterDescriptor,Nest.IUniqueTokenFilter})">
      <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the
            token stream
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Uppercase(System.String,System.Func{Nest.UppercaseTokenFilterDescriptor,Nest.IUppercaseTokenFilter})">
      <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Fingerprint(System.String,System.Func{Nest.FingerprintTokenFilterDescriptor,Nest.IFingerprintTokenFilter})">
      <summary>
            A token filter of type fingerprint The fingerprint token filter that emits a single token which is useful
            for fingerprinting a body of text, and/or providing a token that can be clustered on.
            It does this by sorting the tokens, deduplicating and then concatenating them back into a single token.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KuromojiStemmer(System.String,System.Func{Nest.KuromojiStemmerTokenFilterDescriptor,Nest.IKuromojiStemmerTokenFilter})">
      <summary>
            The kuromoji_stemmer token filter normalizes common katakana spelling variations ending in a
            long sound character by removing this character (U+30FC). Only full-width katakana characters are supported.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KuromojiReadingForm(System.String,System.Func{Nest.KuromojiReadingFormTokenFilterDescriptor,Nest.IKuromojiReadingFormTokenFilter})">
      <summary>
            The kuromoji_readingform token filter replaces the token with its reading form in either katakana or romaji.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.KuromojiPartOfSpeech(System.String,System.Func{Nest.KuromojiPartOfSpeechTokenFilterDescriptor,Nest.IKuromojiPartOfSpeechTokenFilter})">
      <summary>
            The kuromoji_part_of_speech token filter removes tokens that match a set of part-of-speech tags.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.IcuCollation(System.String,System.Func{Nest.IcuCollationTokenFilterDescriptor,Nest.IIcuCollationTokenFilter})">
      <summary>
            Collations are used for sorting documents in a language-specific word order. The icu_collation token filter is
            available to all indices and
            defaults to using the DUCET collation, which is a best-effort attempt at language-neutral sorting.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.IcuFolding(System.String,System.Func{Nest.IcuFoldingTokenFilterDescriptor,Nest.IIcuFoldingTokenFilter})">
      <summary>
            Case folding of Unicode characters based on UTR#30, like the ASCII-folding token filter on steroids.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.IcuNormalization(System.String,System.Func{Nest.IcuNormalizationTokenFilterDescriptor,Nest.IIcuNormalizationTokenFilter})">
      <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.IcuTransform(System.String,System.Func{Nest.IcuTransformTokenFilterDescriptor,Nest.IIcuTransformTokenFilter})">
      <summary>
            Transforms are used to process Unicode text in many different ways, such as case mapping,
            normalization, transliteration and bidirectional text handling.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.NoriPartOfSpeech(System.String,System.Func{Nest.NoriPartOfSpeechTokenFilterDescriptor,Nest.INoriPartOfSpeechTokenFilter})">
      <inheritdoc cref="T:Nest.INoriPartOfSpeechTokenFilter" />
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.Multiplexer(System.String,System.Func{Nest.MultiplexerTokenFilterDescriptor,Nest.IMultiplexerTokenFilter})">
      <summary>
             A token filter of type multiplexer will emit multiple tokens at the same position, each version of the token
            having been run through a different filter. Identical output tokens at the same position will be removed.
            </summary>
    </member>
    <member name="M:Nest.TokenFiltersDescriptor.RemoveDuplicates(System.String,System.Func{Nest.RemoveDuplicatesTokenFilterDescriptor,Nest.IRemoveDuplicatesTokenFilter})">
      <summary> A token filter of type remove_duplicates that drops identical tokens at the same position. </summary>
    </member>
    <member name="T:Nest.ITrimTokenFilter">
      <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
    </member>
    <member name="T:Nest.TrimTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.TrimTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.ITruncateTokenFilter">
      <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token)
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para></summary>
    </member>
    <member name="P:Nest.ITruncateTokenFilter.Length">
      <summary>
            length parameter which control the number of characters to truncate to, defaults to 10.
            </summary>
    </member>
    <member name="T:Nest.TruncateTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.TruncateTokenFilter.Length">
      <summary>
            length parameter which control the number of characters to truncate to, defaults to 10.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.TruncateTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.TruncateTokenFilterDescriptor.Length(System.Nullable{System.Int32})">
      <summary>
            length parameter which control the number of characters to truncate to, defaults to 10.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IUniqueTokenFilter">
      <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the
            token stream
            </summary>
    </member>
    <member name="P:Nest.IUniqueTokenFilter.OnlyOnSamePosition">
      <summary>
             If only_on_same_position is set to true, it will only remove duplicate tokens on the same position.
            </summary>
    </member>
    <member name="T:Nest.UniqueTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.UniqueTokenFilter.OnlyOnSamePosition">
      <summary>
             If only_on_same_position is set to true, it will only remove duplicate tokens on the same position.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.UniqueTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.UniqueTokenFilterDescriptor.OnlyOnSamePosition(System.Nullable{System.Boolean})">
      <summary>
             If only_on_same_position is set to true, it will only remove duplicate tokens on the same position.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IUppercaseTokenFilter">
      <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
    </member>
    <member name="T:Nest.UppercaseTokenFilter">
      <inheritdoc />
    </member>
    <member name="T:Nest.UppercaseTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IWordDelimiterGraphTokenFilter">
      <summary>
            Named word_delimiter, it Splits words into subwords and performs optional transformations on subword groups.
            Unlike the word_delimiter this token filter named word_delimiter_graph correctly handles multi terms expansion at query time.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.AdjustOffsets">
      <summary>
            By default, the filter tries to output subtokens with adjusted offsets to reflect their actual position in the token stream. However, when used in combination with other filters that alter the length or starting position of tokens without changing their offsets (e.g. <see cref="T:Nest.TrimTokenFilter" />) this can cause tokens with illegal offsets to be emitted. Setting <see cref="P:Nest.IWordDelimiterGraphTokenFilter.AdjustOffsets" /> to false will stop <see cref="T:Nest.WordDelimiterGraphTokenFilter" /> from adjusting these internal offsets.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.CatenateAll">
      <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.CatenateNumbers">
      <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.CatenateWords">
      <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.GenerateNumberParts">
      <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.GenerateWordParts">
      <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.PreserveOriginal">
      <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.ProtectedWords">
      <summary>
             A list of protected words from being delimiter.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.ProtectedWordsPath">
      <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.SplitOnCaseChange">
      <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.SplitOnNumerics">
      <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.StemEnglishPossessive">
      <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.TypeTable">
      <summary>
            A custom type mapping table
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterGraphTokenFilter.TypeTablePath">
      <summary>
            A path to a custom type mapping table file
            </summary>
    </member>
    <member name="T:Nest.WordDelimiterGraphTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.AdjustOffsets">
      <summary>
            By default, the filter tries to output subtokens with adjusted offsets to reflect their actual position in the token stream. However, when used in combination with other filters that alter the length or starting position of tokens without changing their offsets (e.g. <see cref="T:Nest.TrimTokenFilter" />) this can cause tokens with illegal offsets to be emitted. Setting <see cref="P:Nest.IWordDelimiterGraphTokenFilter.AdjustOffsets" /> to false will stop <see cref="T:Nest.WordDelimiterGraphTokenFilter" /> from adjusting these internal offsets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.CatenateAll">
      <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.CatenateNumbers">
      <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.CatenateWords">
      <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.GenerateNumberParts">
      <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.GenerateWordParts">
      <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.PreserveOriginal">
      <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.ProtectedWords">
      <summary>
             A list of protected words from being delimiter.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.ProtectedWordsPath">
      <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.SplitOnCaseChange">
      <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.SplitOnNumerics">
      <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.StemEnglishPossessive">
      <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.TypeTable">
      <summary>
            A custom type mapping table
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterGraphTokenFilter.TypeTablePath">
      <summary>
            A path to a custom type mapping table file
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.WordDelimiterGraphTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.GenerateWordParts(System.Nullable{System.Boolean})">
      <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.GenerateNumberParts(System.Nullable{System.Boolean})">
      <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.CatenateWords(System.Nullable{System.Boolean})">
      <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.CatenateNumbers(System.Nullable{System.Boolean})">
      <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.AdjustOffsets(System.Nullable{System.Boolean})">
      <summary>
            By default, the filter tries to output subtokens with adjusted offsets to reflect their actual position in the token stream. However, when used in combination with other filters that alter the length or starting position of tokens without changing their offsets (e.g. <see cref="T:Nest.TrimTokenFilter" />) this can cause tokens with illegal offsets to be emitted. Setting <see cref="P:Nest.IWordDelimiterGraphTokenFilter.AdjustOffsets" /> to false will stop <see cref="T:Nest.WordDelimiterGraphTokenFilter" /> from adjusting these internal offsets.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.CatenateAll(System.Nullable{System.Boolean})">
      <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.SplitOnCaseChange(System.Nullable{System.Boolean})">
      <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.SplitOnNumerics(System.Nullable{System.Boolean})">
      <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
      <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.StemEnglishPossessive(System.Nullable{System.Boolean})">
      <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.ProtectedWords(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
             A list of protected words from being delimiter.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.ProtectedWords(System.String[])">
      <summary>
             A list of protected words from being delimiter.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.ProtectedWordsPath(System.String)">
      <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.TypeTable(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A custom type mapping table
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.TypeTable(System.String[])">
      <summary>
            A custom type mapping table
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.TypeTablePath(System.String)">
      <summary>
            A path to a custom type mapping table file
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IWordDelimiterTokenFilter">
      <summary>
            Named word_delimiter, it Splits words into subwords and performs optional transformations on subword groups.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.CatenateAll">
      <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.CatenateNumbers">
      <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.CatenateWords">
      <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.GenerateNumberParts">
      <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.GenerateWordParts">
      <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.PreserveOriginal">
      <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.ProtectedWords">
      <summary>
             A list of protected words from being delimiter.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.ProtectedWordsPath">
      <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.SplitOnCaseChange">
      <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.SplitOnNumerics">
      <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.StemEnglishPossessive">
      <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.TypeTable">
      <summary>
            A custom type mapping table
            </summary>
    </member>
    <member name="P:Nest.IWordDelimiterTokenFilter.TypeTablePath">
      <summary>
            A path to a custom type mapping table file
            </summary>
    </member>
    <member name="T:Nest.WordDelimiterTokenFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.CatenateAll">
      <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.CatenateNumbers">
      <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.CatenateWords">
      <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.GenerateNumberParts">
      <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.GenerateWordParts">
      <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.PreserveOriginal">
      <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.ProtectedWords">
      <summary>
             A list of protected words from being delimiter.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.ProtectedWordsPath">
      <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.SplitOnCaseChange">
      <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.SplitOnNumerics">
      <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.StemEnglishPossessive">
      <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.TypeTable">
      <summary>
            A custom type mapping table
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.WordDelimiterTokenFilter.TypeTablePath">
      <summary>
            A path to a custom type mapping table file
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.WordDelimiterTokenFilterDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.GenerateWordParts(System.Nullable{System.Boolean})">
      <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.GenerateNumberParts(System.Nullable{System.Boolean})">
      <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateWords(System.Nullable{System.Boolean})">
      <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateNumbers(System.Nullable{System.Boolean})">
      <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateAll(System.Nullable{System.Boolean})">
      <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.SplitOnCaseChange(System.Nullable{System.Boolean})">
      <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.SplitOnNumerics(System.Nullable{System.Boolean})">
      <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
      <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.StemEnglishPossessive(System.Nullable{System.Boolean})">
      <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWords(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
             A list of protected words from being delimiter.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWords(System.String[])">
      <summary>
             A list of protected words from being delimiter.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWordsPath(System.String)">
      <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTable(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A custom type mapping table
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTable(System.String[])">
      <summary>
            A custom type mapping table
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTablePath(System.String)">
      <summary>
            A path to a custom type mapping table file
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ICharGroupTokenizer">
      <summary>
            A tokenizer that breaks text into terms whenever it encounters a character which is in a defined set. It is mostly useful
            for cases where a simple custom tokenization is desired, and the overhead of use of <see cref="T:Nest.PatternTokenizer" /> is not acceptable.
            </summary>
    </member>
    <member name="P:Nest.ICharGroupTokenizer.TokenizeOnCharacters">
      <summary>
            A list containing a list of characters to tokenize the string on. Whenever a character from this list is encountered, a
            new token is started. This accepts either single characters like eg. -, or character groups: whitespace, letter, digit,
            punctuation, symbol.
            </summary>
    </member>
    <member name="T:Nest.CharGroupTokenizer">
      <inheritdoc cref="T:Nest.ICharGroupTokenizer" />
    </member>
    <member name="P:Nest.CharGroupTokenizer.TokenizeOnCharacters">
      <summary>
            A list containing a list of characters to tokenize the string on. Whenever a character from this list is encountered, a
            new token is started. This accepts either single characters like eg. -, or character groups: whitespace, letter, digit,
            punctuation, symbol.
            </summary>
      <inheritdoc cref="P:Nest.ICharGroupTokenizer.TokenizeOnCharacters" />
    </member>
    <member name="T:Nest.CharGroupTokenizerDescriptor">
      <inheritdoc cref="T:Nest.ICharGroupTokenizer" />
    </member>
    <member name="M:Nest.CharGroupTokenizerDescriptor.TokenizeOnCharacters(System.String[])">
      <summary>
            A list containing a list of characters to tokenize the string on. Whenever a character from this list is encountered, a
            new token is started. This accepts either single characters like eg. -, or character groups: whitespace, letter, digit,
            punctuation, symbol.
            </summary>
      <inheritdoc cref="P:Nest.ICharGroupTokenizer.TokenizeOnCharacters" />
    </member>
    <member name="M:Nest.CharGroupTokenizerDescriptor.TokenizeOnCharacters(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list containing a list of characters to tokenize the string on. Whenever a character from this list is encountered, a
            new token is started. This accepts either single characters like eg. -, or character groups: whitespace, letter, digit,
            punctuation, symbol.
            </summary>
      <inheritdoc cref="P:Nest.ICharGroupTokenizer.TokenizeOnCharacters" />
    </member>
    <member name="T:Nest.IKeywordTokenizer">
      <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
    </member>
    <member name="P:Nest.IKeywordTokenizer.BufferSize">
      <summary>
            The term buffer size. Defaults to 256.
            </summary>
    </member>
    <member name="T:Nest.KeywordTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.KeywordTokenizer.BufferSize">
      <summary>
            The term buffer size. Defaults to 256.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KeywordTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.KeywordTokenizerDescriptor.BufferSize(System.Nullable{System.Int32})">
      <summary>
            The term buffer size. Defaults to 256.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ILetterTokenizer">
      <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters.
            <para>
            Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not
            separated by spaces.
            </para></summary>
    </member>
    <member name="T:Nest.LetterTokenizer">
      <inheritdoc />
    </member>
    <member name="T:Nest.LetterTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.ILowercaseTokenizer">
      <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together.
            <para>It divides text at non-letters and converts them to lower case. </para><para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para><para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para></summary>
    </member>
    <member name="T:Nest.LowercaseTokenizer">
      <inheritdoc />
    </member>
    <member name="T:Nest.LowercaseTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IEdgeNGramTokenizer">
      <summary>
            A tokenizer of type edgeNGram.
            </summary>
    </member>
    <member name="P:Nest.IEdgeNGramTokenizer.MaxGram">
      <summary>
            Maximum size in codepoints of a single n-gram
            </summary>
    </member>
    <member name="P:Nest.IEdgeNGramTokenizer.MinGram">
      <summary>
            Minimum size in codepoints of a single n-gram
            </summary>
    </member>
    <member name="P:Nest.IEdgeNGramTokenizer.TokenChars">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch
             will split on characters that don’t belong to any of these classes.
            </summary>
    </member>
    <member name="T:Nest.EdgeNGramTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.EdgeNGramTokenizer.MaxGram">
      <summary>
            Maximum size in codepoints of a single n-gram
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.EdgeNGramTokenizer.MinGram">
      <summary>
            Minimum size in codepoints of a single n-gram
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.EdgeNGramTokenizer.TokenChars">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch
             will split on characters that don’t belong to any of these classes.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.EdgeNGramTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenizerDescriptor.MinGram(System.Nullable{System.Int32})">
      <summary>
            Minimum size in codepoints of a single n-gram
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenizerDescriptor.MaxGram(System.Nullable{System.Int32})">
      <summary>
            Maximum size in codepoints of a single n-gram
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenizerDescriptor.TokenChars(System.Collections.Generic.IEnumerable{Nest.TokenChar})">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch
             will split on characters that don’t belong to any of these classes.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.EdgeNGramTokenizerDescriptor.TokenChars(Nest.TokenChar[])">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch
             will split on characters that don’t belong to any of these classes.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.INGramTokenizer">
      <summary>
            A tokenizer of type nGram.
            </summary>
    </member>
    <member name="P:Nest.INGramTokenizer.MaxGram">
      <summary>
            Maximum size in codepoints of a single n-gram, defaults to 2.
            </summary>
    </member>
    <member name="P:Nest.INGramTokenizer.MinGram">
      <summary>
            Minimum size in codepoints of a single n-gram, defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.INGramTokenizer.TokenChars">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch will
            split on characters that don’t belong to any of these classes.
            </summary>
    </member>
    <member name="T:Nest.NGramTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.NGramTokenizer.MaxGram">
      <summary>
            Maximum size in codepoints of a single n-gram, defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.NGramTokenizer.MinGram">
      <summary>
            Minimum size in codepoints of a single n-gram, defaults to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.NGramTokenizer.TokenChars">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch will
            split on characters that don’t belong to any of these classes.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.NGramTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.NGramTokenizerDescriptor.MinGram(System.Nullable{System.Int32})">
      <summary>
            Minimum size in codepoints of a single n-gram, defaults to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.NGramTokenizerDescriptor.MaxGram(System.Nullable{System.Int32})">
      <summary>
            Maximum size in codepoints of a single n-gram, defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.NGramTokenizerDescriptor.TokenChars(System.Collections.Generic.IEnumerable{Nest.TokenChar})">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch will
            split on characters that don’t belong to any of these classes.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.NGramTokenizerDescriptor.TokenChars(Nest.TokenChar[])">
      <summary>
            Characters classes to keep in the tokens, Elasticsearch will
            split on characters that don’t belong to any of these classes.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.NoriDecompoundMode">
      <summary> The decompound mode determines how the tokenizer handles compound tokens. </summary>
    </member>
    <member name="F:Nest.NoriDecompoundMode.Discard">
      <summary> Decomposes compounds and discards the original form (default). </summary>
    </member>
    <member name="F:Nest.NoriDecompoundMode.None">
      <summary> No decomposition for compounds </summary>
    </member>
    <member name="F:Nest.NoriDecompoundMode.Mixed">
      <summary> Decomposes compounds and keeps the original form </summary>
    </member>
    <member name="T:Nest.INoriTokenizer">
      <summary> Tokenizer that ships with the analysis-nori plugin</summary>
    </member>
    <member name="P:Nest.INoriTokenizer.DecompoundMode">
      <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
    </member>
    <member name="P:Nest.INoriTokenizer.UserDictionary">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG) may be
            appended to
            the default dictionary. This property allows you to specify this file on disk
            </summary>
    </member>
    <member name="P:Nest.INoriTokenizer.UserDictionaryRules">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG)
            can be specified inline with this property
            </summary>
      <remarks>
            Valid for Elasticsearch 6.6.0+
            </remarks>
    </member>
    <member name="T:Nest.NoriTokenizer">
      <inheritdoc cref="T:Nest.INoriTokenizer" />
    </member>
    <member name="P:Nest.NoriTokenizer.DecompoundMode">
      <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
      <inheritdoc cref="P:Nest.INoriTokenizer.DecompoundMode" />
    </member>
    <member name="P:Nest.NoriTokenizer.UserDictionary">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG) may be
            appended to
            the default dictionary. This property allows you to specify this file on disk
            </summary>
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionary" />
    </member>
    <member name="P:Nest.NoriTokenizer.UserDictionaryRules">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG)
            can be specified inline with this property
            </summary>
      <remarks>
            Valid for Elasticsearch 6.6.0+
            </remarks>
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionaryRules" />
    </member>
    <member name="T:Nest.NoriTokenizerDescriptor">
      <inheritdoc cref="T:Nest.INoriTokenizer" />
    </member>
    <member name="M:Nest.NoriTokenizerDescriptor.DecompoundMode(System.Nullable{Nest.NoriDecompoundMode})">
      <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
      <inheritdoc cref="P:Nest.INoriTokenizer.DecompoundMode" />
    </member>
    <member name="M:Nest.NoriTokenizerDescriptor.UserDictionary(System.String)">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG) may be
            appended to
            the default dictionary. This property allows you to specify this file on disk
            </summary>
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionary" />
    </member>
    <member name="M:Nest.NoriTokenizerDescriptor.UserDictionaryRules(System.String[])">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG)
            can be specified inline with this property
            </summary>
      <remarks>
            Valid for Elasticsearch 6.6.0+
            </remarks>
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionaryRules" />
    </member>
    <member name="M:Nest.NoriTokenizerDescriptor.UserDictionaryRules(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            The Nori tokenizer uses the mecab-ko-dic dictionary by default. A user_dictionary with custom nouns (NNG)
            can be specified inline with this property
            </summary>
      <remarks>
            Valid for Elasticsearch 6.6.0+
            </remarks>
      <inheritdoc cref="P:Nest.INoriTokenizer.UserDictionaryRules" />
    </member>
    <member name="T:Nest.IPathHierarchyTokenizer">
      <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para><para>And produces tokens:</para><para></para><para>/something</para><para>/something/something</para><para>/something/something/else</para></summary>
    </member>
    <member name="P:Nest.IPathHierarchyTokenizer.BufferSize">
      <summary>
            The buffer size to use, defaults to 1024.
            </summary>
    </member>
    <member name="P:Nest.IPathHierarchyTokenizer.Delimiter">
      <summary>
            The character delimiter to use, defaults to /.
            </summary>
    </member>
    <member name="P:Nest.IPathHierarchyTokenizer.Replacement">
      <summary>
            An optional replacement character to use. Defaults to the delimiter
            </summary>
    </member>
    <member name="P:Nest.IPathHierarchyTokenizer.Reverse">
      <summary>
            Generates tokens in reverse order, defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IPathHierarchyTokenizer.Skip">
      <summary>
            Controls initial tokens to skip, defaults to 0.
            </summary>
    </member>
    <member name="T:Nest.PathHierarchyTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.PathHierarchyTokenizer.BufferSize">
      <summary />
    </member>
    <member name="P:Nest.PathHierarchyTokenizer.Delimiter">
      <summary />
    </member>
    <member name="P:Nest.PathHierarchyTokenizer.Replacement">
      <summary />
    </member>
    <member name="P:Nest.PathHierarchyTokenizer.Reverse">
      <summary />
    </member>
    <member name="P:Nest.PathHierarchyTokenizer.Skip">
      <summary />
    </member>
    <member name="T:Nest.PathHierarchyTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.PathHierarchyTokenizerDescriptor.BufferSize(System.Nullable{System.Int32})">
      <summary>
            The buffer size to use, defaults to 1024.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PathHierarchyTokenizerDescriptor.Skip(System.Nullable{System.Int32})">
      <summary>
            Controls initial tokens to skip, defaults to 0.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PathHierarchyTokenizerDescriptor.Reverse(System.Nullable{System.Boolean})">
      <summary>
            Generates tokens in reverse order, defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PathHierarchyTokenizerDescriptor.Delimiter(System.Nullable{System.Char})">
      <summary>
            The character delimiter to use, defaults to /.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PathHierarchyTokenizerDescriptor.Replacement(System.Nullable{System.Char})">
      <summary>
            An optional replacement character to use. Defaults to the delimiter
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPatternTokenizer">
      <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
    </member>
    <member name="P:Nest.IPatternTokenizer.Flags">
      <summary>
            The regular expression flags.
            </summary>
    </member>
    <member name="P:Nest.IPatternTokenizer.Group">
      <summary>
            Which group to extract into tokens. Defaults to -1 (split).
            </summary>
    </member>
    <member name="P:Nest.IPatternTokenizer.Pattern">
      <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
    </member>
    <member name="T:Nest.PatternTokenizer">
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternTokenizer.Flags">
      <summary>
            The regular expression flags.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PatternTokenizer.Group">
      <summary />
    </member>
    <member name="P:Nest.PatternTokenizer.Pattern">
      <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PatternTokenizerDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternTokenizerDescriptor.Group(System.Nullable{System.Int32})">
      <summary>
            Which group to extract into tokens. Defaults to -1 (split).
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternTokenizerDescriptor.Pattern(System.String)">
      <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PatternTokenizerDescriptor.Flags(System.String)">
      <summary>
            The regular expression flags.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IStandardTokenizer">
      <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language
            documents.
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para></summary>
    </member>
    <member name="P:Nest.IStandardTokenizer.MaxTokenLength">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
    </member>
    <member name="T:Nest.StandardTokenizer">
      <summary />
    </member>
    <member name="P:Nest.StandardTokenizer.MaxTokenLength">
      <summary />
    </member>
    <member name="M:Nest.StandardTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TokenizersDescriptor.EdgeNGram(System.String,System.Func{Nest.EdgeNGramTokenizerDescriptor,Nest.IEdgeNGramTokenizer})">
      <summary>
            A tokenizer of type edgeNGram.
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.NGram(System.String,System.Func{Nest.NGramTokenizerDescriptor,Nest.INGramTokenizer})">
      <summary>
            A tokenizer of type nGram.
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Keyword(System.String,System.Func{Nest.KeywordTokenizerDescriptor,Nest.IKeywordTokenizer})">
      <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Letter(System.String,System.Func{Nest.LetterTokenizerDescriptor,Nest.ILetterTokenizer})">
      <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of
            adjacent letters.
            <para>
            Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words
            are not
            separated by spaces.
            </para></summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Lowercase(System.String,System.Func{Nest.LowercaseTokenizerDescriptor,Nest.ILowercaseTokenizer})">
      <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together.
            <para>It divides text at non-letters and converts them to lower case. </para><para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para><para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para></summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.PathHierarchy(System.String,System.Func{Nest.PathHierarchyTokenizerDescriptor,Nest.IPathHierarchyTokenizer})">
      <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para><para>And produces tokens:</para><para></para><para>/something</para><para>/something/something</para><para>/something/something/else</para></summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Pattern(System.String,System.Func{Nest.PatternTokenizerDescriptor,Nest.IPatternTokenizer})">
      <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Standard(System.String,System.Func{Nest.StandardTokenizerDescriptor,Nest.IStandardTokenizer})">
      <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language
            documents.
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para></summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.UaxEmailUrl(System.String,System.Func{Nest.UaxEmailUrlTokenizerDescriptor,Nest.IUaxEmailUrlTokenizer})">
      <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as
            single tokens
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Whitespace(System.String,System.Func{Nest.WhitespaceTokenizerDescriptor,Nest.IWhitespaceTokenizer})">
      <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Kuromoji(System.String,System.Func{Nest.KuromojiTokenizerDescriptor,Nest.IKuromojiTokenizer})">
      <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Icu(System.String,System.Func{Nest.IcuTokenizerDescriptor,Nest.IIcuTokenizer})">
      <summary>
            Tokenizes text into words on word boundaries, as defined in UAX #29: Unicode Text Segmentation. It behaves much
            like the standard tokenizer, but adds better support for some Asian languages by using a dictionary-based approach
            to identify words in Thai, Lao, Chinese, Japanese, and Korean, and using custom rules to break Myanmar and Khmer
            text into syllables.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.TokenizersDescriptor.Nori(System.String,System.Func{Nest.NoriTokenizerDescriptor,Nest.INoriTokenizer})">
      <inheritdoc cref="T:Nest.INoriTokenizer" />
    </member>
    <member name="M:Nest.TokenizersDescriptor.CharGroup(System.String,System.Func{Nest.CharGroupTokenizerDescriptor,Nest.ICharGroupTokenizer})">
      <inheritdoc cref="P:Nest.ICharGroupTokenizer.TokenizeOnCharacters" />
            &gt;
        </member>
    <member name="T:Nest.IUaxEmailUrlTokenizer">
      <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
    </member>
    <member name="P:Nest.IUaxEmailUrlTokenizer.MaxTokenLength">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
    </member>
    <member name="T:Nest.UaxEmailUrlTokenizer">
      <summary />
    </member>
    <member name="P:Nest.UaxEmailUrlTokenizer.MaxTokenLength">
      <summary />
    </member>
    <member name="T:Nest.UaxEmailUrlTokenizerDescriptor">
      <summary />
    </member>
    <member name="M:Nest.UaxEmailUrlTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IWhitespaceTokenizer">
      <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
    </member>
    <member name="P:Nest.IWhitespaceTokenizer.MaxTokenLength">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is split at
            <see cref="P:Nest.IWhitespaceTokenizer.MaxTokenLength" /> intervals. Defaults to 255.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.1.0+
            </remarks>
    </member>
    <member name="T:Nest.WhitespaceTokenizer">
      <inheritdoc cref="T:Nest.IWhitespaceTokenizer" />
    </member>
    <member name="P:Nest.WhitespaceTokenizer.MaxTokenLength">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is split at
            <see cref="P:Nest.IWhitespaceTokenizer.MaxTokenLength" /> intervals. Defaults to 255.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc />
    </member>
    <member name="T:Nest.WhitespaceTokenizerDescriptor">
      <inheritdoc cref="T:Nest.IWhitespaceTokenizer" />
    </member>
    <member name="M:Nest.WhitespaceTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
      <summary>
            The maximum token length. If a token is seen that exceeds this length then it is split at
            <see cref="P:Nest.IWhitespaceTokenizer.MaxTokenLength" /> intervals. Defaults to 255.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc cref="P:Nest.IWhitespaceTokenizer.MaxTokenLength" />
    </member>
    <member name="T:Nest.CatAliasesRequest">
      <summary>Request for Aliases <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</para></summary>
    </member>
    <member name="M:Nest.CatAliasesRequest.#ctor">
      <summary>/_cat/aliases</summary>
    </member>
    <member name="M:Nest.CatAliasesRequest.#ctor(Nest.Names)">
      <summary>/_cat/aliases/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatAliasesRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatAliasesRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatAliasesRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatAliasesRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatAliasesRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatAliasesRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatAliasesRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatAliasesDescriptor">
      <summary>Descriptor for Aliases <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</para></summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.#ctor">
      <summary>/_cat/aliases</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.#ctor(Nest.Names)">
      <summary>/_cat/aliases/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.Name(Nest.Names)">
      <summary>A comma-separated list of alias names to return</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatAliasesDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatAllocationRequest">
      <summary>Request for Allocation <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</para></summary>
    </member>
    <member name="M:Nest.CatAllocationRequest.#ctor">
      <summary>/_cat/allocation</summary>
    </member>
    <member name="M:Nest.CatAllocationRequest.#ctor(Nest.NodeIds)">
      <summary>/_cat/allocation/{node_id}</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatAllocationRequest.Bytes">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatAllocationRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatAllocationDescriptor">
      <summary>Descriptor for Allocation <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</para></summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.#ctor">
      <summary>/_cat/allocation</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_cat/allocation/{node_id}</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs or names to limit the returned information</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.Bytes(System.Nullable{Elasticsearch.Net.Bytes})">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatAllocationDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatCountRequest">
      <summary>Request for Count <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</para></summary>
    </member>
    <member name="M:Nest.CatCountRequest.#ctor">
      <summary>/_cat/count</summary>
    </member>
    <member name="M:Nest.CatCountRequest.#ctor(Nest.Indices)">
      <summary>/_cat/count/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatCountRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatCountRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatCountRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatCountRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatCountRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatCountRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatCountRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatCountDescriptor">
      <summary>Descriptor for Count <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</para></summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.#ctor">
      <summary>/_cat/count</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.#ctor(Nest.Indices)">
      <summary>/_cat/count/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatCountDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to limit the returned information</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatCountDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatFielddataRequest">
      <summary>Request for Fielddata <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</para></summary>
    </member>
    <member name="M:Nest.CatFielddataRequest.#ctor">
      <summary>/_cat/fielddata</summary>
    </member>
    <member name="M:Nest.CatFielddataRequest.#ctor(Nest.Fields)">
      <summary>/_cat/fielddata/{fields}</summary>
      <param name="fields">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatFielddataRequest.Bytes">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatFielddataRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatFielddataDescriptor">
      <summary>Descriptor for Fielddata <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</para></summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.#ctor">
      <summary>/_cat/fielddata</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.#ctor(Nest.Fields)">
      <summary>/_cat/fielddata/{fields}</summary>
      <param name="fields">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Fields(Nest.Fields)">
      <summary>A comma-separated list of fields to return the fielddata size</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields to return the fielddata size</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Bytes(System.Nullable{Elasticsearch.Net.Bytes})">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatFielddataDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatHealthRequest">
      <summary>Request for Health <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</para></summary>
    </member>
    <member name="P:Nest.CatHealthRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.IncludeTimestamp">
      <summary>Set to false to disable timestamping</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatHealthRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatHealthDescriptor">
      <summary>Descriptor for Health <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</para></summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.IncludeTimestamp(System.Nullable{System.Boolean})">
      <summary>Set to false to disable timestamping</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatHealthDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatHelpRequest">
      <summary>Request for Help <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</para></summary>
    </member>
    <member name="P:Nest.CatHelpRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatHelpRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="T:Nest.CatHelpDescriptor">
      <summary>Descriptor for Help <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</para></summary>
    </member>
    <member name="M:Nest.CatHelpDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatHelpDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="T:Nest.CatIndicesRequest">
      <summary>Request for Indices <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</para></summary>
    </member>
    <member name="M:Nest.CatIndicesRequest.#ctor">
      <summary>/_cat/indices</summary>
    </member>
    <member name="M:Nest.CatIndicesRequest.#ctor(Nest.Indices)">
      <summary>/_cat/indices/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatIndicesRequest.Bytes">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Health">
      <summary>A health status ("green", "yellow", or "red" to filter only indices matching the specified health status</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.IncludeUnloadedSegments">
      <summary>If set to true segment stats will include stats for segments that are not currently loaded into memory</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Pri">
      <summary>Set to true to return stats only for primary shards</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatIndicesRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatIndicesDescriptor">
      <summary>Descriptor for Indices <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</para></summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.#ctor">
      <summary>/_cat/indices</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.#ctor(Nest.Indices)">
      <summary>/_cat/indices/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to limit the returned information</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Bytes(System.Nullable{Elasticsearch.Net.Bytes})">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Health(System.Nullable{Elasticsearch.Net.Health})">
      <summary>A health status ("green", "yellow", or "red" to filter only indices matching the specified health status</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.IncludeUnloadedSegments(System.Nullable{System.Boolean})">
      <summary>If set to true segment stats will include stats for segments that are not currently loaded into memory</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Pri(System.Nullable{System.Boolean})">
      <summary>Set to true to return stats only for primary shards</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatIndicesDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatMasterRequest">
      <summary>Request for Master <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</para></summary>
    </member>
    <member name="P:Nest.CatMasterRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatMasterRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatMasterRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatMasterRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatMasterRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatMasterRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatMasterRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatMasterDescriptor">
      <summary>Descriptor for Master <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</para></summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatMasterDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatNodeAttributesRequest">
      <summary>Request for NodeAttributes <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</para></summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatNodeAttributesRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatNodeAttributesDescriptor">
      <summary>Descriptor for NodeAttributes <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</para></summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatNodeAttributesDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatNodesRequest">
      <summary>Request for Nodes <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</para></summary>
    </member>
    <member name="P:Nest.CatNodesRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.FullId">
      <summary>Return the full node ID instead of the shortened version (default: false)</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatNodesRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatNodesDescriptor">
      <summary>Descriptor for Nodes <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</para></summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.FullId(System.Nullable{System.Boolean})">
      <summary>Return the full node ID instead of the shortened version (default: false)</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatNodesDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatPendingTasksRequest">
      <summary>Request for PendingTasks <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</para></summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatPendingTasksRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatPendingTasksDescriptor">
      <summary>Descriptor for PendingTasks <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</para></summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatPendingTasksDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatPluginsRequest">
      <summary>Request for Plugins <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</para></summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatPluginsRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatPluginsDescriptor">
      <summary>Descriptor for Plugins <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</para></summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatPluginsDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatRecoveryRequest">
      <summary>Request for Recovery <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</para></summary>
    </member>
    <member name="M:Nest.CatRecoveryRequest.#ctor">
      <summary>/_cat/recovery</summary>
    </member>
    <member name="M:Nest.CatRecoveryRequest.#ctor(Nest.Indices)">
      <summary>/_cat/recovery/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatRecoveryRequest.Bytes">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="P:Nest.CatRecoveryRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatRecoveryRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatRecoveryRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatRecoveryRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatRecoveryRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatRecoveryRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatRecoveryDescriptor">
      <summary>Descriptor for Recovery <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</para></summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.#ctor">
      <summary>/_cat/recovery</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.#ctor(Nest.Indices)">
      <summary>/_cat/recovery/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to limit the returned information</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Bytes(System.Nullable{Elasticsearch.Net.Bytes})">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatRecoveryDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatRepositoriesRequest">
      <summary>Request for Repositories <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</para></summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.Local">
      <summary>Return local information, do not retrieve the state from master node</summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatRepositoriesRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatRepositoriesDescriptor">
      <summary>Descriptor for Repositories <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</para></summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node</summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatRepositoriesDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatSegmentsRequest">
      <summary>Request for Segments <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</para></summary>
    </member>
    <member name="M:Nest.CatSegmentsRequest.#ctor">
      <summary>/_cat/segments</summary>
    </member>
    <member name="M:Nest.CatSegmentsRequest.#ctor(Nest.Indices)">
      <summary>/_cat/segments/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatSegmentsRequest.Bytes">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="P:Nest.CatSegmentsRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatSegmentsRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatSegmentsRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatSegmentsRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatSegmentsRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatSegmentsDescriptor">
      <summary>Descriptor for Segments <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</para></summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.#ctor">
      <summary>/_cat/segments</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.#ctor(Nest.Indices)">
      <summary>/_cat/segments/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to limit the returned information</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Bytes(System.Nullable{Elasticsearch.Net.Bytes})">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatSegmentsDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatShardsRequest">
      <summary>Request for Shards <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</para></summary>
    </member>
    <member name="M:Nest.CatShardsRequest.#ctor">
      <summary>/_cat/shards</summary>
    </member>
    <member name="M:Nest.CatShardsRequest.#ctor(Nest.Indices)">
      <summary>/_cat/shards/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatShardsRequest.Bytes">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatShardsRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatShardsDescriptor">
      <summary>Descriptor for Shards <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</para></summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.#ctor">
      <summary>/_cat/shards</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.#ctor(Nest.Indices)">
      <summary>/_cat/shards/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to limit the returned information</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Bytes(System.Nullable{Elasticsearch.Net.Bytes})">
      <summary>The unit in which to display byte values</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatShardsDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatSnapshotsRequest">
      <summary>Request for Snapshots <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.CatSnapshotsRequest.#ctor">
      <summary>/_cat/snapshots</summary>
    </member>
    <member name="M:Nest.CatSnapshotsRequest.#ctor(Nest.Names)">
      <summary>/_cat/snapshots/{repository}</summary>
      <param name="repository">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.IgnoreUnavailable">
      <summary>Set to true to ignore unavailable snapshots</summary>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatSnapshotsRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatSnapshotsDescriptor">
      <summary>Descriptor for Snapshots <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.#ctor">
      <summary>/_cat/snapshots</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.#ctor(Nest.Names)">
      <summary>/_cat/snapshots/{repository}</summary>
      <param name="repository">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.RepositoryName(Nest.Names)">
      <summary>Name of repository from which to fetch the snapshot information</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Set to true to ignore unavailable snapshots</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatSnapshotsDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatTasksRequest">
      <summary>Request for Tasks <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="P:Nest.CatTasksRequest.Actions">
      <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.Detailed">
      <summary>Return detailed task information (default: false)</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.NodeId">
      <summary>
             A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're
             connecting to, leave empty to get information from all nodes
            </summary>
    </member>
    <member name="P:Nest.CatTasksRequest.ParentTask">
      <summary>Return tasks with specified parent task id. Set to -1 to return all.</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatTasksRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatTasksDescriptor">
      <summary>Descriptor for Tasks <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.Actions(System.String[])">
      <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.Detailed(System.Nullable{System.Boolean})">
      <summary>Return detailed task information (default: false)</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.NodeId(System.String[])">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.ParentTask(System.Nullable{System.Int64})">
      <summary>Return tasks with specified parent task id. Set to -1 to return all.</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatTasksDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatTemplatesRequest">
      <summary>Request for Templates <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html</para></summary>
    </member>
    <member name="M:Nest.CatTemplatesRequest.#ctor">
      <summary>/_cat/templates</summary>
    </member>
    <member name="M:Nest.CatTemplatesRequest.#ctor(Nest.Name)">
      <summary>/_cat/templates/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatTemplatesRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatTemplatesRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatTemplatesRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatTemplatesRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatTemplatesRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatTemplatesRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatTemplatesRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatTemplatesDescriptor">
      <summary>Descriptor for Templates <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html</para></summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.#ctor">
      <summary>/_cat/templates</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.#ctor(Nest.Name)">
      <summary>/_cat/templates/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.Name(Nest.Name)">
      <summary>A pattern that returned template names must match</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatTemplatesDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Active">
      <summary>
            The number of active threads in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Completed">
      <summary>
            The number of tasks completed by the thread pool executor
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Core">
      <summary>
            The configured core number of active threads allowed in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.EphemeralNodeId">
      <summary>
            The ephemeral node ID
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Host">
      <summary>
            The hostname for the current node
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Ip">
      <summary>
            The IP address for the current node
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.KeepAlive">
      <summary>
            The configured keep alive time for threads
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Largest">
      <summary>
            The highest number of active threads in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Maximum">
      <summary>
            The configured maximum number of active threads allowed in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Name">
      <summary>
            The name of the thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.NodeId">
      <summary>
            The unique id of the node
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.NodeName">
      <summary>
            The name of the node
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.PoolSize">
      <summary>
            The number of threads in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Port">
      <summary>
            The bound transport port for the current node
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.ProcessId">
      <summary>
            The process ID of the running node
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Queue">
      <summary>
            The number of tasks in the queue for the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.QueueSize">
      <summary>
            The maximum number of tasks permitted in the queue for the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Rejected">
      <summary>
            The number of tasks rejected by the thread pool executor
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Size">
      <summary>
            The configured fixed number of active threads allowed in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.CatThreadPoolRecord.Type">
      <summary>
            The current (*) type of thread pool (`fixed` or `scaling`)
            </summary>
    </member>
    <member name="T:Nest.CatThreadPoolRequest">
      <summary>Request for ThreadPool <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</para></summary>
    </member>
    <member name="M:Nest.CatThreadPoolRequest.#ctor">
      <summary>/_cat/thread_pool</summary>
    </member>
    <member name="M:Nest.CatThreadPoolRequest.#ctor(Nest.Names)">
      <summary>/_cat/thread_pool/{thread_pool_patterns}</summary>
      <param name="threadPoolPatterns">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.Headers">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.Help">
      <summary>Return help information</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.Size">
      <summary>The multiplier in which to display values</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.SortByColumns">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="P:Nest.CatThreadPoolRequest.Verbose">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="T:Nest.CatThreadPoolDescriptor">
      <summary>Descriptor for ThreadPool <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</para></summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.#ctor">
      <summary>/_cat/thread_pool</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.#ctor(Nest.Names)">
      <summary>/_cat/thread_pool/{thread_pool_patterns}</summary>
      <param name="threadPoolPatterns">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.ThreadPoolPatterns(Nest.Names)">
      <summary>A comma-separated list of regular-expressions to filter the thread pools in the output</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.Headers(System.String[])">
      <summary>Comma-separated list of column names to display</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.Help(System.Nullable{System.Boolean})">
      <summary>Return help information</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.Size(System.Nullable{Elasticsearch.Net.Size})">
      <summary>The multiplier in which to display values</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.SortByColumns(System.String[])">
      <summary>Comma-separated list of column names or column aliases to sort by</summary>
    </member>
    <member name="M:Nest.CatThreadPoolDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display column headers</summary>
    </member>
    <member name="P:Nest.IClusterAllocationExplainRequest.Index">
      <summary>
            The name of the index to provide an explanation for
            </summary>
    </member>
    <member name="P:Nest.IClusterAllocationExplainRequest.Primary">
      <summary>
            Whether to explain a primary or replica shard
            </summary>
    </member>
    <member name="P:Nest.IClusterAllocationExplainRequest.Shard">
      <summary>
            The shard id to provide an explanation for
            </summary>
    </member>
    <member name="T:Nest.ClusterAllocationExplainRequest">
      <summary>Request for AllocationExplain <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</para></summary>
    </member>
    <member name="P:Nest.ClusterAllocationExplainRequest.Index">
      <summary>
            The name of the index to provide an explanation for
            </summary>
    </member>
    <member name="P:Nest.ClusterAllocationExplainRequest.Primary">
      <summary>
            Whether to explain a primary or replica shard
            </summary>
    </member>
    <member name="P:Nest.ClusterAllocationExplainRequest.Shard">
      <summary>
            The shard id to provide an explanation for
            </summary>
    </member>
    <member name="P:Nest.ClusterAllocationExplainRequest.IncludeDiskInfo">
      <summary>Return information about disk usage and shard sizes (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterAllocationExplainRequest.IncludeYesDecisions">
      <summary>Return 'YES' decisions in explanation (default: false)</summary>
    </member>
    <member name="T:Nest.ClusterAllocationExplainDescriptor">
      <summary>Descriptor for AllocationExplain <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</para></summary>
    </member>
    <member name="M:Nest.ClusterAllocationExplainDescriptor.Index(Nest.IndexName)">
      <summary>
            The name of the index to provide an explanation for
            </summary>
    </member>
    <member name="M:Nest.ClusterAllocationExplainDescriptor.Index``1">
      <summary>
            The name of the index to provide an explanation for
            </summary>
    </member>
    <member name="M:Nest.ClusterAllocationExplainDescriptor.Primary(System.Nullable{System.Boolean})">
      <summary>
            Whether to explain a primary or replica shard
            </summary>
    </member>
    <member name="M:Nest.ClusterAllocationExplainDescriptor.Shard(System.Nullable{System.Int32})">
      <summary>
            The shard id to provide an explanation for
            </summary>
    </member>
    <member name="M:Nest.ClusterAllocationExplainDescriptor.IncludeDiskInfo(System.Nullable{System.Boolean})">
      <summary>Return information about disk usage and shard sizes (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterAllocationExplainDescriptor.IncludeYesDecisions(System.Nullable{System.Boolean})">
      <summary>Return 'YES' decisions in explanation (default: false)</summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.IndexCreated">
      <summary>
             Unassigned as a result of an API creation of an index.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.ClusterRecovered">
      <summary>
             Unassigned as a result of a full cluster recovery.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.IndexReopened">
      <summary>
             Unassigned as a result of opening a closed index.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.DanglingIndexImported">
      <summary>
             Unassigned as a result of importing a dangling index.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.NewIndexRestored">
      <summary>
             Unassigned as a result of restoring into a new index.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.ExistingIndexRestored">
      <summary>
             Unassigned as a result of restoring into a closed index.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.ReplicaAdded">
      <summary>
             Unassigned as a result of explicit addition of a replica.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.AllocationFailed">
      <summary>
             Unassigned as a result of a failed allocation of the shard.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.NodeLeft">
      <summary>
             Unassigned as a result of the node hosting it leaving the cluster.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.RerouteCancelled">
      <summary>
             Unassigned as a result of explicit cancel reroute command.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.Reinitialized">
      <summary>
             When a shard moves from started back to initializing, for example, during shadow replica
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.ReallocatedReplica">
      <summary>
             A better replica location is identified and causes the existing replica allocation to be cancelled.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.PrimaryFailed">
      <summary>
             Unassigned as a result of a failed primary while the replica was initializing.
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.ForcedEmptyPrimary">
      <summary>
             Unassigned after forcing an empty primary
            </summary>
    </member>
    <member name="F:Nest.UnassignedInformationReason.ManualAllocation">
      <summary>
             Forced manually to allocate
            </summary>
    </member>
    <member name="T:Nest.ClusterHealthRequest">
      <summary>Request for Health <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</para></summary>
    </member>
    <member name="M:Nest.ClusterHealthRequest.#ctor">
      <summary>/_cluster/health</summary>
    </member>
    <member name="M:Nest.ClusterHealthRequest.#ctor(Nest.Indices)">
      <summary>/_cluster/health/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ClusterHealthRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.Level">
      <summary>Specify the level of detail for returned information</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.WaitForActiveShards">
      <summary>Wait until the specified number of shards is active</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.WaitForEvents">
      <summary>Wait until all currently queued events with the given priority are processed</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.WaitForNoInitializingShards">
      <summary>Whether to wait until there are no initializing shards in the cluster</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.WaitForNoRelocatingShards">
      <summary>Whether to wait until there are no relocating shards in the cluster</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.WaitForNodes">
      <summary>Wait until the specified number of nodes is available</summary>
    </member>
    <member name="P:Nest.ClusterHealthRequest.WaitForStatus">
      <summary>Wait until cluster is in a specific state</summary>
    </member>
    <member name="T:Nest.ClusterHealthDescriptor">
      <summary>Descriptor for Health <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</para></summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.#ctor">
      <summary>/_cluster/health</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.#ctor(Nest.Indices)">
      <summary>/_cluster/health/{index}</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.Index(Nest.Indices)">
      <summary>Limit the information returned to a specific index</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.Level(System.Nullable{Elasticsearch.Net.Level})">
      <summary>Specify the level of detail for returned information</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.WaitForActiveShards(System.String)">
      <summary>Wait until the specified number of shards is active</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.WaitForEvents(System.Nullable{Elasticsearch.Net.WaitForEvents})">
      <summary>Wait until all currently queued events with the given priority are processed</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.WaitForNoInitializingShards(System.Nullable{System.Boolean})">
      <summary>Whether to wait until there are no initializing shards in the cluster</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.WaitForNoRelocatingShards(System.Nullable{System.Boolean})">
      <summary>Whether to wait until there are no relocating shards in the cluster</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.WaitForNodes(System.String)">
      <summary>Wait until the specified number of nodes is available</summary>
    </member>
    <member name="M:Nest.ClusterHealthDescriptor.WaitForStatus(System.Nullable{Elasticsearch.Net.WaitForStatus})">
      <summary>Wait until cluster is in a specific state</summary>
    </member>
    <member name="T:Nest.ClusterPendingTasksRequest">
      <summary>Request for PendingTasks <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</para></summary>
    </member>
    <member name="P:Nest.ClusterPendingTasksRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterPendingTasksRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.ClusterPendingTasksDescriptor">
      <summary>Descriptor for PendingTasks <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</para></summary>
    </member>
    <member name="M:Nest.ClusterPendingTasksDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterPendingTasksDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.ClusterRerouteRequest">
      <summary>Request for Reroute <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</para></summary>
    </member>
    <member name="P:Nest.ClusterRerouteRequest.DryRun">
      <summary>Simulate the operation only and return the resulting state</summary>
    </member>
    <member name="P:Nest.ClusterRerouteRequest.Explain">
      <summary>Return an explanation of why the commands can or cannot be executed</summary>
    </member>
    <member name="P:Nest.ClusterRerouteRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.ClusterRerouteRequest.Metric">
      <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
    </member>
    <member name="P:Nest.ClusterRerouteRequest.RetryFailed">
      <summary>Retries allocation of shards that are blocked due to too many subsequent allocation failures</summary>
    </member>
    <member name="P:Nest.ClusterRerouteRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClusterRerouteDescriptor">
      <summary>Descriptor for Reroute <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</para></summary>
    </member>
    <member name="M:Nest.ClusterRerouteDescriptor.DryRun(System.Nullable{System.Boolean})">
      <summary>Simulate the operation only and return the resulting state</summary>
    </member>
    <member name="M:Nest.ClusterRerouteDescriptor.Explain(System.Nullable{System.Boolean})">
      <summary>Return an explanation of why the commands can or cannot be executed</summary>
    </member>
    <member name="M:Nest.ClusterRerouteDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.ClusterRerouteDescriptor.Metric(System.String[])">
      <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
    </member>
    <member name="M:Nest.ClusterRerouteDescriptor.RetryFailed(System.Nullable{System.Boolean})">
      <summary>Retries allocation of shards that are blocked due to too many subsequent allocation failures</summary>
    </member>
    <member name="M:Nest.ClusterRerouteDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClusterGetSettingsRequest">
      <summary>Request for GetSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</para></summary>
    </member>
    <member name="P:Nest.ClusterGetSettingsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterGetSettingsRequest.IncludeDefaults">
      <summary>Whether to return all default clusters setting.</summary>
    </member>
    <member name="P:Nest.ClusterGetSettingsRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.ClusterGetSettingsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClusterGetSettingsDescriptor">
      <summary>Descriptor for GetSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</para></summary>
    </member>
    <member name="M:Nest.ClusterGetSettingsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterGetSettingsDescriptor.IncludeDefaults(System.Nullable{System.Boolean})">
      <summary>Whether to return all default clusters setting.</summary>
    </member>
    <member name="M:Nest.ClusterGetSettingsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.ClusterGetSettingsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClusterPutSettingsRequest">
      <summary>Request for PutSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</para></summary>
    </member>
    <member name="P:Nest.ClusterPutSettingsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterPutSettingsRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.ClusterPutSettingsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClusterPutSettingsDescriptor">
      <summary>Descriptor for PutSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</para></summary>
    </member>
    <member name="M:Nest.ClusterPutSettingsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterPutSettingsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.ClusterPutSettingsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.RemoteClusterConfiguration">
      <summary>
            Simplifies the creation of remote cluster configuration, can be combined with a dictionary using the overloaded + operator
            </summary>
    </member>
    <member name="M:Nest.RemoteClusterConfiguration.Add(System.String,System.Uri[])">
      <summary>
            Adds seeds for the remote cluster specified by name
            </summary>
    </member>
    <member name="M:Nest.RemoteClusterConfiguration.Add(System.String,System.String[])">
      <summary>
            Adds seeds for the remote cluster specified by name
            </summary>
    </member>
    <member name="M:Nest.RemoteClusterConfiguration.Add(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Adds settings for the remote cluster specified by name
            </summary>
    </member>
    <member name="T:Nest.ClusterStateRequest">
      <summary>Request for State <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</para></summary>
    </member>
    <member name="M:Nest.ClusterStateRequest.#ctor">
      <summary>/_cluster/state</summary>
    </member>
    <member name="M:Nest.ClusterStateRequest.#ctor(Nest.Metrics)">
      <summary>/_cluster/state/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ClusterStateRequest.#ctor(Nest.Metrics,Nest.Indices)">
      <summary>/_cluster/state/{metric}/{index}</summary>
      <param name="metric">Optional, accepts null</param>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ClusterStateRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.WaitForMetadataVersion">
      <summary>Wait for the metadata version to be equal or greater than the specified metadata version</summary>
    </member>
    <member name="P:Nest.ClusterStateRequest.WaitForTimeout">
      <summary>The maximum time to wait for wait_for_metadata_version before timing out</summary>
    </member>
    <member name="T:Nest.ClusterStateDescriptor">
      <summary>Descriptor for State <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</para></summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.#ctor">
      <summary>/_cluster/state</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.#ctor(Nest.Metrics)">
      <summary>/_cluster/state/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.#ctor(Nest.Metrics,Nest.Indices)">
      <summary>/_cluster/state/{metric}/{index}</summary>
      <param name="metric">Optional, accepts null</param>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.Metric(Nest.Metrics)">
      <summary>Limit the information returned to the specified metrics</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.WaitForMetadataVersion(System.Nullable{System.Int64})">
      <summary>Wait for the metadata version to be equal or greater than the specified metadata version</summary>
    </member>
    <member name="M:Nest.ClusterStateDescriptor.WaitForTimeout(Nest.Time)">
      <summary>The maximum time to wait for wait_for_metadata_version before timing out</summary>
    </member>
    <member name="P:Nest.ClusterStateResponse.ClusterUUID">
      <summary>The Universally Unique Identifier for the cluster.</summary>
      <remarks>While the cluster is still forming, it is possible for the `cluster_uuid` to be `_na_`.</remarks>
    </member>
    <member name="T:Nest.ClusterStatsRequest">
      <summary>Request for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</para></summary>
    </member>
    <member name="M:Nest.ClusterStatsRequest.#ctor">
      <summary>/_cluster/stats</summary>
    </member>
    <member name="M:Nest.ClusterStatsRequest.#ctor(Nest.NodeIds)">
      <summary>/_cluster/stats/nodes/{node_id}</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ClusterStatsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.ClusterStatsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClusterStatsDescriptor">
      <summary>Descriptor for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</para></summary>
    </member>
    <member name="M:Nest.ClusterStatsDescriptor.#ctor">
      <summary>/_cluster/stats</summary>
    </member>
    <member name="M:Nest.ClusterStatsDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_cluster/stats/nodes/{node_id}</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ClusterStatsDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.ClusterStatsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.ClusterStatsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.NodesHotThreadsRequest">
      <summary>Request for HotThreads <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</para></summary>
    </member>
    <member name="M:Nest.NodesHotThreadsRequest.#ctor">
      <summary>/_nodes/hot_threads</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsRequest.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/hot_threads</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.NodesHotThreadsRequest.IgnoreIdleThreads">
      <summary>Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
    </member>
    <member name="P:Nest.NodesHotThreadsRequest.Interval">
      <summary>The interval for the second sampling of threads</summary>
    </member>
    <member name="P:Nest.NodesHotThreadsRequest.Snapshots">
      <summary>Number of samples of thread stacktrace (default: 10)</summary>
    </member>
    <member name="P:Nest.NodesHotThreadsRequest.ThreadType">
      <summary>The type to sample (default: cpu)</summary>
    </member>
    <member name="P:Nest.NodesHotThreadsRequest.Threads">
      <summary>Specify the number of threads to provide information for (default: 3)</summary>
    </member>
    <member name="P:Nest.NodesHotThreadsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.NodesHotThreadsDescriptor">
      <summary>Descriptor for HotThreads <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</para></summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.#ctor">
      <summary>/_nodes/hot_threads</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/hot_threads</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.IgnoreIdleThreads(System.Nullable{System.Boolean})">
      <summary>Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.Interval(Nest.Time)">
      <summary>The interval for the second sampling of threads</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.Snapshots(System.Nullable{System.Int64})">
      <summary>Number of samples of thread stacktrace (default: 10)</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.ThreadType(System.Nullable{Elasticsearch.Net.ThreadType})">
      <summary>The type to sample (default: cpu)</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.Threads(System.Nullable{System.Int64})">
      <summary>Specify the number of threads to provide information for (default: 3)</summary>
    </member>
    <member name="M:Nest.NodesHotThreadsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.NodeInfo.Roles">
      <summary>
            All of the different roles that the node fulfills. An empty
            collection means that the node is a coordinating only node.
            </summary>
    </member>
    <member name="P:Nest.NodeThreadPoolInfo.KeepAlive">
      <summary>
            The configured keep alive time for threads
            </summary>
    </member>
    <member name="P:Nest.NodeThreadPoolInfo.Max">
      <summary>
            The configured maximum number of active threads allowed in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.NodeThreadPoolInfo.Core">
      <summary>
            The configured core number of active threads allowed in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.NodeThreadPoolInfo.Size">
      <summary>
            The configured fixed number of active threads allowed in the current thread pool
            </summary>
    </member>
    <member name="P:Nest.NodeThreadPoolInfo.QueueSize">
      <summary>
            The maximum number of tasks permitted in the queue for the current thread pool
            </summary>
    </member>
    <member name="P:Nest.NodeThreadPoolInfo.Type">
      <summary>
            The type of thread pool
            </summary>
    </member>
    <member name="T:Nest.NodesInfoRequest">
      <summary>Request for Info <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</para></summary>
    </member>
    <member name="M:Nest.NodesInfoRequest.#ctor">
      <summary>/_nodes</summary>
    </member>
    <member name="M:Nest.NodesInfoRequest.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesInfoRequest.#ctor(Nest.Metrics)">
      <summary>/_nodes/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesInfoRequest.#ctor(Nest.NodeIds,Nest.Metrics)">
      <summary>/_nodes/{node_id}/{metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="P:Nest.NodesInfoRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.NodesInfoRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.NodesInfoDescriptor">
      <summary>Descriptor for Info <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</para></summary>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.#ctor">
      <summary>/_nodes</summary>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.#ctor(Nest.Metrics)">
      <summary>/_nodes/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.#ctor(Nest.NodeIds,Nest.Metrics)">
      <summary>/_nodes/{node_id}/{metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.Metric(Nest.Metrics)">
      <summary>A comma-separated list of metrics you wish returned. Leave empty to return all.</summary>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.NodesInfoDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.AverageQueueSize">
      <summary>
            The exponentially weighted moving average queue size of search requests on the keyed node.
            </summary>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.AverageResponseTime">
      <summary>
            The exponentially weighted moving average response time of search requests on the keyed node.
            </summary>
      <remarks>only set when requesting human readable response</remarks>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.AverageResponseTimeInNanoseconds">
      <summary>
            The exponentially weighted moving average response time of search requests on the keyed node.
            </summary>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.AverageServiceTime">
      <summary>
            The exponentially weighted moving average service time of search requests on the keyed node.
            </summary>
      <remarks>only set when requesting human readable response</remarks>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.AverageServiceTimeInNanoseconds">
      <summary>
            The exponentially weighted moving average service time of search requests on the keyed node.
            </summary>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.OutgoingSearches">
      <summary>
            The number of outstanding search requests from the node these stats are for to the keyed node.
            </summary>
    </member>
    <member name="P:Nest.AdaptiveSelectionStats.Rank">
      <summary>
            The rank of this node; used for shard selection when routing search requests.
            </summary>
    </member>
    <member name="T:Nest.NodesStatsRequest">
      <summary>Request for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</para></summary>
    </member>
    <member name="M:Nest.NodesStatsRequest.#ctor">
      <summary>/_nodes/stats</summary>
    </member>
    <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/stats</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsRequest.#ctor(Nest.Metrics)">
      <summary>/_nodes/stats/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds,Nest.Metrics)">
      <summary>/_nodes/{node_id}/stats/{metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsRequest.#ctor(Nest.Metrics,Nest.IndexMetrics)">
      <summary>/_nodes/stats/{metric}/{index_metric}</summary>
      <param name="metric">Optional, accepts null</param>
      <param name="indexMetric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds,Nest.Metrics,Nest.IndexMetrics)">
      <summary>/_nodes/{node_id}/stats/{metric}/{index_metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
      <param name="indexMetric">Optional, accepts null</param>
    </member>
    <member name="P:Nest.NodesStatsRequest.CompletionFields">
      <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.FielddataFields">
      <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.Fields">
      <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.Groups">
      <summary>A comma-separated list of search groups for `search` index metric</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.IncludeSegmentFileSizes">
      <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.Level">
      <summary>Return indices stats aggregated at index, node or shard level</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.NodesStatsRequest.Types">
      <summary>A comma-separated list of document types for the `indexing` index metric</summary>
    </member>
    <member name="T:Nest.NodesStatsDescriptor">
      <summary>Descriptor for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</para></summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.#ctor">
      <summary>/_nodes/stats</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/stats</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.#ctor(Nest.Metrics)">
      <summary>/_nodes/stats/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.#ctor(Nest.NodeIds,Nest.Metrics)">
      <summary>/_nodes/{node_id}/stats/{metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.#ctor(Nest.Metrics,Nest.IndexMetrics)">
      <summary>/_nodes/stats/{metric}/{index_metric}</summary>
      <param name="metric">Optional, accepts null</param>
      <param name="indexMetric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.#ctor(Nest.NodeIds,Nest.Metrics,Nest.IndexMetrics)">
      <summary>/_nodes/{node_id}/stats/{metric}/{index_metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
      <param name="indexMetric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Metric(Nest.Metrics)">
      <summary>Limit the information returned to the specified metrics</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.IndexMetric(Nest.IndexMetrics)">
      <summary>Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.CompletionFields(Nest.Fields)">
      <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.CompletionFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.FielddataFields(Nest.Fields)">
      <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.FielddataFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Fields(Nest.Fields)">
      <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Groups(System.Nullable{System.Boolean})">
      <summary>A comma-separated list of search groups for `search` index metric</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.IncludeSegmentFileSizes(System.Nullable{System.Boolean})">
      <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Level(System.Nullable{Elasticsearch.Net.Level})">
      <summary>Return indices stats aggregated at index, node or shard level</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.NodesStatsDescriptor.Types(System.String[])">
      <summary>A comma-separated list of document types for the `indexing` index metric</summary>
    </member>
    <member name="P:Nest.NodeStats.Roles">
      <summary>
            All of the different roles that the node fulfills. An empty
            collection means that the node is a coordinating only node.
            </summary>
    </member>
    <member name="P:Nest.IngestStats.Count">
      <summary>
            The total number of document ingested during the lifetime of this node
            </summary>
    </member>
    <member name="P:Nest.IngestStats.Current">
      <summary>
            The total number of documents currently being ingested.
            </summary>
    </member>
    <member name="P:Nest.IngestStats.Failed">
      <summary>
            The total number ingest preprocessing operations failed during the lifetime of this node
            </summary>
    </member>
    <member name="P:Nest.IngestStats.TimeInMilliseconds">
      <summary>
            The total time spent on ingest preprocessing documents during the lifetime of this node
            </summary>
    </member>
    <member name="P:Nest.KeyedProcessorStats.Type">
      <summary> The type of the processor </summary>
    </member>
    <member name="P:Nest.KeyedProcessorStats.Statistics">
      <summary>The statistics for this processor</summary>
    </member>
    <member name="P:Nest.ProcessorStats.Count">
      <summary> The total number of document ingested during the lifetime of this node </summary>
    </member>
    <member name="P:Nest.ProcessorStats.Current">
      <summary> The total number of documents currently being ingested. </summary>
    </member>
    <member name="P:Nest.ProcessorStats.Failed">
      <summary> The total number ingest preprocessing operations failed during the lifetime of this node </summary>
    </member>
    <member name="P:Nest.ProcessorStats.TimeInMilliseconds">
      <summary> The total time spent on ingest preprocessing documents during the lifetime of this node </summary>
    </member>
    <member name="P:Nest.NodeIngestStats.Pipelines">
      <summary> Per pipeline ingest statistics </summary>
    </member>
    <member name="P:Nest.NodeIngestStats.Total">
      <summary> Overall global ingest statistics </summary>
    </member>
    <member name="T:Nest.NodesUsageRequest">
      <summary>Request for Usage <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html</para></summary>
    </member>
    <member name="M:Nest.NodesUsageRequest.#ctor">
      <summary>/_nodes/usage</summary>
    </member>
    <member name="M:Nest.NodesUsageRequest.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/usage</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesUsageRequest.#ctor(Nest.Metrics)">
      <summary>/_nodes/usage/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesUsageRequest.#ctor(Nest.NodeIds,Nest.Metrics)">
      <summary>/_nodes/{node_id}/usage/{metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="P:Nest.NodesUsageRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.NodesUsageDescriptor">
      <summary>Descriptor for Usage <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html</para></summary>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.#ctor">
      <summary>/_nodes/usage</summary>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/usage</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.#ctor(Nest.Metrics)">
      <summary>/_nodes/usage/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.#ctor(Nest.NodeIds,Nest.Metrics)">
      <summary>/_nodes/{node_id}/usage/{metric}</summary>
      <param name="nodeId">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.Metric(Nest.Metrics)">
      <summary>Limit the information returned to the specified metrics</summary>
    </member>
    <member name="M:Nest.NodesUsageDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.PingRequest">
      <summary>Request for Ping <para>http://www.elastic.co/guide/</para></summary>
    </member>
    <member name="T:Nest.PingDescriptor">
      <summary>Descriptor for Ping <para>http://www.elastic.co/guide/</para></summary>
    </member>
    <member name="T:Nest.ReloadSecureSettingsRequest">
      <summary>Request for ReloadSecureSettings <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings</para></summary>
    </member>
    <member name="M:Nest.ReloadSecureSettingsRequest.#ctor">
      <summary>/_nodes/reload_secure_settings</summary>
    </member>
    <member name="M:Nest.ReloadSecureSettingsRequest.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/reload_secure_settings</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ReloadSecureSettingsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ReloadSecureSettingsDescriptor">
      <summary>Descriptor for ReloadSecureSettings <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings</para></summary>
    </member>
    <member name="M:Nest.ReloadSecureSettingsDescriptor.#ctor">
      <summary>/_nodes/reload_secure_settings</summary>
    </member>
    <member name="M:Nest.ReloadSecureSettingsDescriptor.#ctor(Nest.NodeIds)">
      <summary>/_nodes/{node_id}/reload_secure_settings</summary>
      <param name="nodeId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ReloadSecureSettingsDescriptor.NodeId(Nest.NodeIds)">
      <summary>A comma-separated list of node IDs to span the reload/reinit call. Should stay empty because reloading usually involves all cluster nodes.</summary>
    </member>
    <member name="M:Nest.ReloadSecureSettingsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.RemoteInfoRequest">
      <summary>Request for RemoteInfo <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html</para></summary>
    </member>
    <member name="T:Nest.RemoteInfoDescriptor">
      <summary>Descriptor for RemoteInfo <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html</para></summary>
    </member>
    <member name="T:Nest.RootNodeInfoRequest">
      <summary>Request for RootNodeInfo <para>http://www.elastic.co/guide/</para></summary>
    </member>
    <member name="T:Nest.RootNodeInfoDescriptor">
      <summary>Descriptor for RootNodeInfo <para>http://www.elastic.co/guide/</para></summary>
    </member>
    <member name="T:Nest.CancelTasksRequest">
      <summary>Request for Cancel <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="M:Nest.CancelTasksRequest.#ctor">
      <summary>/_tasks/_cancel</summary>
    </member>
    <member name="M:Nest.CancelTasksRequest.#ctor(Nest.TaskId)">
      <summary>/_tasks/{task_id}/_cancel</summary>
      <param name="taskId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CancelTasksRequest.Actions">
      <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
    </member>
    <member name="P:Nest.CancelTasksRequest.Nodes">
      <summary>
             A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're
             connecting to, leave empty to get information from all nodes
            </summary>
    </member>
    <member name="P:Nest.CancelTasksRequest.ParentTaskId">
      <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
    </member>
    <member name="T:Nest.CancelTasksDescriptor">
      <summary>Descriptor for Cancel <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="M:Nest.CancelTasksDescriptor.#ctor">
      <summary>/_tasks/_cancel</summary>
    </member>
    <member name="M:Nest.CancelTasksDescriptor.#ctor(Nest.TaskId)">
      <summary>/_tasks/{task_id}/_cancel</summary>
      <param name="taskId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CancelTasksDescriptor.TaskId(Nest.TaskId)">
      <summary>Cancel the task with specified task id (node_id:task_number)</summary>
    </member>
    <member name="M:Nest.CancelTasksDescriptor.Actions(System.String[])">
      <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
    </member>
    <member name="M:Nest.CancelTasksDescriptor.Nodes(System.String[])">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.CancelTasksDescriptor.ParentTaskId(System.String)">
      <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
    </member>
    <member name="T:Nest.GetTaskRequest">
      <summary>Request for GetTask <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="M:Nest.GetTaskRequest.#ctor(Nest.TaskId)">
      <summary>/_tasks/{task_id}</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetTaskRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetTaskRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.GetTaskRequest.WaitForCompletion">
      <summary>Wait for the matching tasks to complete (default: false)</summary>
    </member>
    <member name="T:Nest.GetTaskDescriptor">
      <summary>Descriptor for GetTask <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="M:Nest.GetTaskDescriptor.#ctor(Nest.TaskId)">
      <summary>/_tasks/{task_id}</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetTaskDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetTaskDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.GetTaskDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Wait for the matching tasks to complete (default: false)</summary>
    </member>
    <member name="M:Nest.GetTaskResponse.GetResponse``1">
      <summary>
            Gets the response for the request that the task represents, if available.
            Because the response will have no associated <see cref="T:Elasticsearch.Net.ApiCallDetails" />, the value
            of <see cref="P:Nest.IResponse.IsValid" /> should not be used.
            </summary>
    </member>
    <member name="T:Nest.ListTasksRequest">
      <summary>Request for List <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="P:Nest.ListTasksRequest.Actions">
      <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
    </member>
    <member name="P:Nest.ListTasksRequest.Detailed">
      <summary>Return detailed task information (default: false)</summary>
    </member>
    <member name="P:Nest.ListTasksRequest.GroupBy">
      <summary>Group tasks by nodes or parent/child relationships</summary>
    </member>
    <member name="P:Nest.ListTasksRequest.Nodes">
      <summary>
             A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're
             connecting to, leave empty to get information from all nodes
            </summary>
    </member>
    <member name="P:Nest.ListTasksRequest.ParentTaskId">
      <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
    </member>
    <member name="P:Nest.ListTasksRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.ListTasksRequest.WaitForCompletion">
      <summary>Wait for the matching tasks to complete (default: false)</summary>
    </member>
    <member name="T:Nest.ListTasksDescriptor">
      <summary>Descriptor for List <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</para></summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.Actions(System.String[])">
      <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.Detailed(System.Nullable{System.Boolean})">
      <summary>Return detailed task information (default: false)</summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.GroupBy(System.Nullable{Elasticsearch.Net.GroupBy})">
      <summary>Group tasks by nodes or parent/child relationships</summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.Nodes(System.String[])">
      <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.ParentTaskId(System.String)">
      <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.ListTasksDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Wait for the matching tasks to complete (default: false)</summary>
    </member>
    <member name="T:Nest.TaskExecutingNode">
      <summary>
            A node executing a task
            </summary>
    </member>
    <member name="T:Nest.TaskState">
      <summary>
            The state of the task
            </summary>
    </member>
    <member name="P:Nest.IClrTypeMapping.ClrType">
      <summary>
            The CLR type the mapping relates to
            </summary>
    </member>
    <member name="P:Nest.IClrTypeMapping.IdPropertyName">
      <summary>
            The property for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /> to resolve ids from.
            </summary>
    </member>
    <member name="P:Nest.IClrTypeMapping.IndexName">
      <summary>
            The default Elasticsearch index name for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /></summary>
    </member>
    <member name="P:Nest.IClrTypeMapping.RelationName">
      <summary>
            The relation name for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /> to resolve to.
            </summary>
    </member>
    <member name="P:Nest.IClrTypeMapping.DisableIdInference">
      <summary>Disables Id inference for the given <see cref="P:Nest.IClrTypeMapping.ClrType" />.
            By default, the _id value for a document is inferred from a property named Id,
            or from the property named by <see cref="P:Nest.IClrTypeMapping.IdPropertyName" />, if set.
            </summary>
    </member>
    <member name="P:Nest.IClrTypeMapping`1.IdProperty">
      <summary> Set a default Id property on CLR type <typeparamref name="TDocument" /> that NEST will evaluate </summary>
    </member>
    <member name="P:Nest.IClrTypeMapping`1.Properties">
      <summary>
            Ignore or rename certain properties of CLR type <typeparamref name="TDocument" /></summary>
    </member>
    <member name="P:Nest.IClrTypeMapping`1.RoutingProperty">
      <summary> Provide a default routing parameter lookup based on <typeparamref name="TDocument" /></summary>
    </member>
    <member name="M:Nest.ClrTypeMapping.#ctor(System.Type)">
      <summary>
            Initializes a new instance of <see cref="T:Nest.ClrTypeMapping" /></summary>
    </member>
    <member name="P:Nest.ClrTypeMapping.ClrType">
      <summary>
            The CLR type the mapping relates to
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping.IdPropertyName">
      <summary>
            The property for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /> to resolve ids from.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping.IndexName">
      <summary>
            The default Elasticsearch index name for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping.RelationName">
      <summary>
            The relation name for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /> to resolve to.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping.DisableIdInference">
      <summary>Disables Id inference for the given <see cref="P:Nest.IClrTypeMapping.ClrType" />.
            By default, the _id value for a document is inferred from a property named Id,
            or from the property named by <see cref="P:Nest.IClrTypeMapping.IdPropertyName" />, if set.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping`1.IdProperty">
      <summary> Set a default Id property on CLR type <typeparamref name="TDocument" /> that NEST will evaluate </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping`1.Properties">
      <summary>
            Ignore or rename certain properties of CLR type <typeparamref name="TDocument" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClrTypeMapping`1.RoutingProperty">
      <summary> Provide a default routing parameter lookup based on <typeparamref name="TDocument" /></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor.#ctor(System.Type)">
      <summary>
            Instantiates a new instance of <see cref="T:Nest.ClrTypeMappingDescriptor" /></summary>
      <param name="type">The CLR type to map</param>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor.IndexName(System.String)">
      <summary>
            The default Elasticsearch index name for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /></summary>
      <inheritdoc cref="P:Nest.IClrTypeMapping.IndexName" />
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor.RelationName(System.String)">
      <summary>
            The relation name for the given <see cref="P:Nest.IClrTypeMapping.ClrType" /> to resolve to.
            </summary>
      <inheritdoc cref="P:Nest.IClrTypeMapping.RelationName" />
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor.IdProperty(System.String)">
      <inheritdoc cref="P:Nest.IClrTypeMapping.IdPropertyName" />
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor.DisableIdInference(System.Boolean)">
      <summary>Disables Id inference for the given <see cref="P:Nest.IClrTypeMapping.ClrType" />.
            By default, the _id value for a document is inferred from a property named Id,
            or from the property named by <see cref="P:Nest.IClrTypeMapping.IdPropertyName" />, if set.
            </summary>
      <inheritdoc cref="P:Nest.IClrTypeMapping.DisableIdInference" />
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.IndexName(System.String)">
      <summary>
            The default Elasticsearch index name for <typeparamref name="TDocument" /></summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.RelationName(System.String)">
      <summary>
            The relation name for <typeparamref name="TDocument" /> to resolve to.
            </summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.IdProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Set a default Id property on CLR type <typeparamref name="TDocument" /> that NEST will evaluate
            </summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.IdProperty(System.String)">
      <summary>
            Set a default Id property on CLR type <typeparamref name="TDocument" /> that NEST will evaluate
            </summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.RoutingProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary> Provide a default routing parameter lookup based on <typeparamref name="TDocument" /></summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Ignore <paramref name="property" /> on CLR type <typeparamref name="TDocument" /></summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.PropertyName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
      <summary>
            Rename <paramref name="property" /> on CLR type <typeparamref name="TDocument" /></summary>
    </member>
    <member name="M:Nest.ClrTypeMappingDescriptor`1.DisableIdInference(System.Boolean)">
      <summary>Disables Id inference for the given <see cref="P:Nest.IClrTypeMapping.ClrType" />.
            By default, the _id value for a document is inferred from a property named Id,
            or from the property named by <see cref="P:Nest.IClrTypeMapping.IdPropertyName" />, if set.
            </summary>
      <inheritdoc cref="P:Nest.IClrTypeMapping.DisableIdInference" />
    </member>
    <member name="T:Nest.ConnectionSettings">
      <inheritdoc cref="T:Nest.IConnectionSettingsValues" />
    </member>
    <member name="F:Nest.ConnectionSettings.DefaultUserAgent">
      <summary> The default user agent for Nest </summary>
    </member>
    <member name="T:Nest.ConnectionSettings.SourceSerializerFactory">
      <summary>
            A delegate used to construct a serializer to serialize CLR types representing documents and other types related to
            documents.
            By default, the internal serializer will be used to serializer all types.
            </summary>
    </member>
    <member name="M:Nest.ConnectionSettings.#ctor(System.Uri)">
      <summary>
            Creates a new instance of connection settings, if <paramref name="uri" /> is not specified will default to connecting to http://localhost:9200
            </summary>
      <param name="uri">
      </param>
    </member>
    <member name="M:Nest.ConnectionSettings.#ctor(System.String,Elasticsearch.Net.BasicAuthenticationCredentials)">
      <summary>
            Sets up the client to communicate to Elastic Cloud using <paramref name="cloudId" />,
            <para><see cref="T:Elasticsearch.Net.CloudConnectionPool" /> documentation for more information on how to obtain your Cloud Id</para></summary>
    </member>
    <member name="M:Nest.ConnectionSettings.#ctor(System.String,Elasticsearch.Net.ApiKeyAuthenticationCredentials)">
      <summary>
            Sets up the client to communicate to Elastic Cloud using <paramref name="cloudId" />,
            <para><see cref="T:Elasticsearch.Net.CloudConnectionPool" /> documentation for more information on how to obtain your Cloud Id</para></summary>
    </member>
    <member name="M:Nest.ConnectionSettings.#ctor(Elasticsearch.Net.InMemoryConnection)">
      <summary>
            Instantiate connection settings using a <see cref="T:Elasticsearch.Net.SingleNodeConnectionPool" /> using the provided
            <see cref="T:Elasticsearch.Net.InMemoryConnection" /> that never uses any IO.
            </summary>
    </member>
    <member name="T:Nest.ConnectionSettingsBase`1">
      <inheritdoc cref="T:Nest.IConnectionSettingsValues" />
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.DefaultIndex(System.String)">
      <summary>
            The default index to use for a request when no index has been explicitly specified
            and no default indices are specified for the given CLR type specified for the request.
            </summary>
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.DefaultFieldNameInferrer(System.Func{System.String,System.String})">
      <summary>
            Specifies how field names are inferred from CLR property names.
            <para></para>
            By default, NEST camel cases property names.
            </summary>
      <example>
            CLR property EmailAddress will be inferred as "emailAddress" Elasticsearch document field name
            </example>
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.DefaultDisableIdInference(System.Boolean)">
      <summary>
            Disables automatic Id inference for given CLR types.
            <para></para>
            NEST by default will use the value of a property named Id on a CLR type as the _id to send to Elasticsearch. Adding a type
            will disable this behaviour for that CLR type. If Id inference should be disabled for all CLR types, use
            <see cref="M:Nest.ConnectionSettingsBase`1.DefaultDisableIdInference(System.Boolean)" /></summary>
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.MapRoutePropertyFor``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <inheritdoc cref="P:Nest.IConnectionSettingsValues.RouteProperties" />
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})">
      <summary>
            Specify how the mapping is inferred for a given CLR type.
            The mapping can infer the index, id and relation name for a given CLR type, as well as control
            serialization behaviour for CLR properties.
            </summary>
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor(System.Type,System.Func{Nest.ClrTypeMappingDescriptor,Nest.IClrTypeMapping})">
      <summary>
            Specify how the mapping is inferred for a given CLR type.
            The mapping can infer the index and relation name for a given CLR type.
            </summary>
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor(System.Collections.Generic.IEnumerable{Nest.IClrTypeMapping})">
      <summary>
            Specify how the mapping is inferred for a given CLR type.
            The mapping can infer the index and relation name for a given CLR type.
            </summary>
    </member>
    <member name="M:Nest.ConnectionSettingsBase`1.HttpStatusCodeClassifier(Elasticsearch.Net.HttpMethod,System.Int32)">
      <summary>
            NEST handles 404 in its <see cref="P:Nest.ResponseBase.IsValid" />, we do not want the low level client throwing exceptions
            when <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions" /> is enabled for 404's. The client is in charge of composing paths
            so a 404 never signals a wrong url but a missing entity.
            </summary>
    </member>
    <member name="T:Nest.IConnectionSettingsValues">
      <summary>
            Provides the connection settings for NEST's high level <see cref="T:Nest.ElasticClient" /></summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.DefaultFieldNameInferrer">
      <summary>
            Specifies how field names are inferred from CLR property names.
            <para></para>
            By default, NEST camel cases property names.
            </summary>
      <example>
            CLR property EmailAddress will be inferred as "emailAddress" Elasticsearch document field name
            </example>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.DefaultIndex">
      <summary>
            The default index to use for a request when no index has been explicitly specified
            and no default indices are specified for the given CLR type specified for the request.
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.DefaultIndices">
      <summary>
            The default index/indices to use for a request for a given CLR type specified in the request.
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.DefaultRelationNames">
      <summary>
            The default relation name to use for a request for a given CLR type specified in the request.
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.IdProperties">
      <summary>
            Specify a property for a CLR type to use to infer the _id of the document when indexed in Elasticsearch.
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.Inferrer">
      <summary>
            Infers index, type, id, relation, routing and field names
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.PropertyMappingProvider">
      <summary>
            Provides mappings for CLR types
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.PropertyMappings">
      <summary>
            Provides mappings for CLR type members
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.RouteProperties">
      <summary>
            Specify a property for a CLR type to use to infer the routing for of a document when indexed in Elasticsearch.
            </summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.DisableIdInference">
      <summary>
            Disables automatic Id inference for given CLR types.
            <para></para>
            NEST by default will use the value of a property named Id on a CLR type as the _id to send to Elasticsearch. Adding a type
            will disable this behaviour for that CLR type. If Id inference should be disabled for all CLR types, use
            <see cref="P:Nest.IConnectionSettingsValues.DefaultDisableIdInference" /></summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.DefaultDisableIdInference">
      <summary>
            Disables automatic Id inference for all CLR types.
            <para></para>
            NEST by default will use the value of a property named Id on a CLR type as the _id to send to Elasticsearch. Setting this to <c>true</c>
            will disable this behaviour for all CLR types and cannot be overridden. If Id inference should be disabled only for specific types, use
            <see cref="P:Nest.IConnectionSettingsValues.DisableIdInference" /></summary>
    </member>
    <member name="P:Nest.IConnectionSettingsValues.SourceSerializer">
      <summary>
            The serializer use to serialize CLR types representing documents and other types related to documents.
            </summary>
    </member>
    <member name="T:Nest.MemberInfoResolver">
      <summary>
            Resolves member infos in an expression, instance may NOT be shared.
            </summary>
    </member>
    <member name="M:Nest.ExpressionExtensions.AppendSuffix``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
      <summary>
            Appends <paramref name="suffix" /> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
      <param name="expression">the expression to which the suffix should be applied</param>
      <param name="suffix">the suffix</param>
    </member>
    <member name="T:Nest.ExpressionExtensions.SuffixExpressionVisitor">
      <summary>
            Calls <see cref="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)" /> on a member expression.
            </summary>
    </member>
    <member name="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)">
      <summary>
            This extension method should only be used in expressions which are analysed by Nest.
            When analysed it will append <paramref name="suffix" /> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
    </member>
    <member name="M:Nest.TypeExtensions.AllPropertiesNotCached(System.Type)">
      <summary>
            Returns inherited properties with reflectedType set to base type
            </summary>
    </member>
    <member name="M:Nest.TypeExtensions.IsHidingMember(System.Reflection.PropertyInfo)">
      <summary>
            Determines if a property is overriding an inherited property of its base class
            </summary>
    </member>
    <member name="M:Nest.DescriptorBase`2.Equals(System.Object)">
      <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.Equals(System.Object)" /> method.
            </summary>
    </member>
    <member name="M:Nest.DescriptorBase`2.GetHashCode">
      <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.GetHashCode" /> method.
            </summary>
    </member>
    <member name="M:Nest.DescriptorBase`2.ToString">
      <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.ToString" /> method.
            </summary>
    </member>
    <member name="M:Nest.DescriptorPromiseBase`2.Equals(System.Object)">
      <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.Equals(System.Object)" /> method.
            </summary>
    </member>
    <member name="M:Nest.DescriptorPromiseBase`2.GetHashCode">
      <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.GetHashCode" /> method.
            </summary>
    </member>
    <member name="M:Nest.DescriptorPromiseBase`2.ToString">
      <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.ToString" /> method.
            </summary>
    </member>
    <member name="M:Nest.SelectorBase.Equals(System.Object)">
      <summary>
            Hides the <see cref="M:Nest.SelectorBase.Equals(System.Object)" /> method.
            </summary>
    </member>
    <member name="M:Nest.SelectorBase.GetHashCode">
      <summary>
            Hides the <see cref="M:Nest.SelectorBase.GetHashCode" /> method.
            </summary>
    </member>
    <member name="M:Nest.SelectorBase.ToString">
      <summary>
            Hides the <see cref="M:Nest.SelectorBase.ToString" /> method.
            </summary>
    </member>
    <member name="T:Nest.MapsApiAttribute">
      <summary>
            Makes it explicit which API this request interface maps, the name of the interface informs
            The generator how to name related types
            </summary>
    </member>
    <member name="T:Nest.ResponseBuilderWithGeneric">
      <summary>
            The preferred way to wire in a custom response formatter is for requests to override
            <see cref="M:Nest.RequestBase`1.RequestDefaults(`0)" /> however sometimes a request does not have
            access to enough type information. This attribute will set up the <see cref="P:Elasticsearch.Net.RequestParameters`1.CustomResponseBuilder" />
            in the generated client methods instead.
            </summary>
    </member>
    <member name="P:Nest.Field.Boost">
      <summary>
            A boost to apply to the field
            </summary>
    </member>
    <member name="P:Nest.Field.Format">
      <summary>
            A format to apply to the field.
            </summary>
      <remarks>
            Can be used only for Doc Value Fields Elasticsearch 6.4.0+
            </remarks>
    </member>
    <member name="P:Nest.Field.Expression">
      <summary>
            An expression from which the name of the field can be inferred
            </summary>
    </member>
    <member name="P:Nest.Field.Name">
      <summary>
            The name of the field
            </summary>
    </member>
    <member name="P:Nest.Field.Property">
      <summary>
            A property from which the name of the field can be inferred
            </summary>
    </member>
    <member name="P:Nest.Indices.All">
      <summary>All indices. Represents _all</summary>
    </member>
    <member name="P:Nest.Indices.AllIndices">
      <inheritdoc cref="P:Nest.Indices.All" />
    </member>
    <member name="M:Nest.Routing.From``1(``0)">
      <summary> Use the inferred routing from <paramref name="document" /></summary>
    </member>
    <member name="M:Nest.TaskId.#ctor(System.String)">
      <summary>
            A task id exists in the form [node_id]:[task_id]
            </summary>
      <param name="taskId">the task identifier</param>
    </member>
    <member name="T:Nest.ILazyDocument">
      <summary>
            A lazily deserialized document
            </summary>
    </member>
    <member name="M:Nest.ILazyDocument.As``1">
      <summary>
            Creates an instance of <typeparamref name="T" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <typeparam name="T">The type</typeparam>
    </member>
    <member name="M:Nest.ILazyDocument.As(System.Type)">
      <summary>
            Creates an instance of <paramref name="objectType" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <param name="objectType">The type</param>
    </member>
    <member name="M:Nest.ILazyDocument.AsAsync``1(System.Threading.CancellationToken)">
      <summary>
            Creates an instance of <typeparamref name="T" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <typeparam name="T">The type</typeparam>
    </member>
    <member name="M:Nest.ILazyDocument.AsAsync(System.Type,System.Threading.CancellationToken)">
      <summary>
            Creates an instance of <paramref name="objectType" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <param name="objectType">The type</param>
    </member>
    <member name="T:Nest.LazyDocument">
      <inheritdoc />
    </member>
    <member name="M:Nest.LazyDocument.As``1">
      <summary>
            Creates an instance of <typeparamref name="T" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <typeparam name="T">The type</typeparam>
      <inheritdoc />
    </member>
    <member name="M:Nest.LazyDocument.As(System.Type)">
      <summary>
            Creates an instance of <paramref name="objectType" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <param name="objectType">The type</param>
      <inheritdoc />
    </member>
    <member name="M:Nest.LazyDocument.AsAsync``1(System.Threading.CancellationToken)">
      <summary>
            Creates an instance of <typeparamref name="T" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <typeparam name="T">The type</typeparam>
      <inheritdoc />
    </member>
    <member name="M:Nest.LazyDocument.AsAsync(System.Type,System.Threading.CancellationToken)">
      <summary>
            Creates an instance of <paramref name="objectType" /> from this
            <see cref="T:Nest.ILazyDocument" /> instance
            </summary>
      <param name="objectType">The type</param>
      <inheritdoc />
    </member>
    <member name="M:Nest.LazyDocumentFormatter.WriteUnindented(Elasticsearch.Net.Utf8Json.JsonReader@,Elasticsearch.Net.Utf8Json.JsonWriter@)">
      <summary>
            Removes indentation in JSON byte representation
            </summary>
    </member>
    <member name="T:Nest.ProducerConsumerBackPressure">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then the backPressureFactor which defaults to 4
            </summary>
    </member>
    <member name="M:Nest.ProducerConsumerBackPressure.#ctor(System.Nullable{System.Int32},System.Int32)">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then the backPressureFactor
            </summary>
      <param name="backPressureFactor">
            The maximum amplification back pressure of the greedier part of the producer consumer pipeline, if null
            defaults to 4
            </param>
      <param name="maxConcurrency">The minimum maximum concurrency which would be the bottleneck of the producer consumer pipeline</param>
    </member>
    <member name="T:Nest.ApiUrls">
      <summary>
            Each Request type holds a static instance of this class which creates cached builders for each
            of the defined urls in the json spec.
            </summary>
    </member>
    <member name="F:Nest.ApiUrls._fixedUrl">
      <summary>
            If the spec only defines a single non parameterizable route this allows us to shortcircuit and avoid hitting
            the cached string builders.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.ApiUrls.Routes" -->
    <member name="M:Nest.ApiUrls.#ctor(System.String[])">
      <summary> Only intended to be created once per request and stored in a static </summary>
    </member>
    <member name="T:Nest.IProxyRequest">
      <summary> A request that that does not necessarily (de)serializes itself </summary>
    </member>
    <member name="T:Nest.IDocumentRequest">
      <summary>
            Describes a request that serializes the document passed to <see cref="T:Nest.DocumentPath`1" /> when calling the fluent API.
            </summary>
    </member>
    <member name="P:Nest.IRequest`1.RequestParameters">
      <summary>
            Used to describe request parameters that are not part of the body. e.g. query string, connection configuration
            overrides, etc.
            </summary>
    </member>
    <member name="M:Nest.RequestBase`1.RequestDefaults(`0)">
      <summary>
            Allows a request implementation to set certain request parameter defaults, use sparingly!
            </summary>
    </member>
    <member name="P:Nest.PlainRequestBase`1.RequestConfiguration">
      <summary>
            Specify settings for this request alone, handy if you need a custom timeout or want to bypass sniffing, retries
            </summary>
    </member>
    <member name="P:Nest.PlainRequestBase`1.ErrorTrace">
      <summary>Include the stack trace of returned errors.</summary>
    </member>
    <member name="P:Nest.PlainRequestBase`1.FilterPath">
      <summary>
             A comma-separated list of filters used to reduce the response.
             <para>Use of response filtering can result in a response from Elasticsearch
             that cannot be correctly deserialized to the respective response type for the request.
             In such situations, use the low level client to issue the request and handle response deserialization</para></summary>
    </member>
    <member name="P:Nest.PlainRequestBase`1.Human">
      <summary>Return human readable values for statistics.</summary>
    </member>
    <member name="P:Nest.PlainRequestBase`1.Pretty">
      <summary>Pretty format the returned JSON response.</summary>
    </member>
    <member name="P:Nest.PlainRequestBase`1.SourceQueryString">
      <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
    </member>
    <member name="T:Nest.RequestDescriptorBase`3">
      <summary>
             Base class for all Request descriptor types
            </summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.RequestConfiguration(System.Func{Elasticsearch.Net.RequestConfigurationDescriptor,Elasticsearch.Net.IRequestConfiguration})">
      <summary>
            Specify settings for this request alone, handy if you need a custom timeout or want to bypass sniffing, retries
            </summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.Equals(System.Object)">
      <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.Equals(System.Object)" /> method.
            </summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.GetHashCode">
      <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.GetHashCode" /> method.
            </summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.ToString">
      <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.ToString" /> method.
            </summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.ErrorTrace(System.Nullable{System.Boolean})">
      <summary>Include the stack trace of returned errors.</summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.FilterPath(System.String[])">
      <summary>A comma-separated list of filters used to reduce the response.<para>Use of response filtering can result in a response from Elasticsearch that cannot be correctly deserialized to the respective response type for the request. In such situations, use the low level client to issue the request and handle response deserialization</para></summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.Human(System.Nullable{System.Boolean})">
      <summary>Return human readable values for statistics.</summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.Pretty(System.Nullable{System.Boolean})">
      <summary>Pretty format the returned JSON response.</summary>
    </member>
    <member name="M:Nest.RequestDescriptorBase`3.SourceQueryString(System.String)">
      <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
    </member>
    <member name="P:Nest.AcknowledgedResponseBase.IsValid">
      <summary>
            Checks whether the response returned a valid HTTP status code and that the delete is acknowledged
            in one go. See also <see cref="P:Nest.AcknowledgedResponseBase.Acknowledged" /></summary>
    </member>
    <member name="M:Nest.DynamicResponseBase.Get``1(System.String)">
      <summary>
            Helper to to easily traverse the data using a path notation
            </summary>
      <param name="path">path into the stored object, keys are seperated with a dot and the last key is returned as T</param>
      <typeparam name="T">
      </typeparam>
      <returns>T or default</returns>
    </member>
    <member name="T:Nest.ElasticsearchVersionInfo">
      <summary>
      </summary>
    </member>
    <member name="T:Nest.IResponse">
      <summary>
            A response from Elasticsearch
            </summary>
    </member>
    <member name="P:Nest.IResponse.DebugInformation">
      <summary>
            A lazily computed, human readable string representation of what happened during a request for both successful and
            failed requests. Useful whilst developing or to log when <see cref="P:Nest.IResponse.IsValid" /> is false on responses.
            </summary>
    </member>
    <member name="P:Nest.IResponse.IsValid">
      <summary>
            Checks if a response is functionally valid or not.
            This is a NEST abstraction to have a single property to check whether there was something wrong with a request.
            <para>
            For instance, an Elasticsearch bulk response always returns 200 and individual bulk items may fail,
            <see cref="P:Nest.IResponse.IsValid" /> will be false in that case.
            </para><para>
            You can also configure the client to always throw an <see cref="T:Elasticsearch.Net.ElasticsearchClientException" /> using
            <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions" /> if the response is not valid
            </para></summary>
    </member>
    <member name="P:Nest.IResponse.OriginalException">
      <summary>
            If the request resulted in an exception on the client side this will hold the exception that was thrown.
            <para>
            This property is a shortcut to <see cref="P:Elasticsearch.Net.IElasticsearchResponse.ApiCall" />'s
            <see cref="P:Elasticsearch.Net.IApiCallDetails.OriginalException" /> and
            is possibly set when <see cref="P:Nest.IResponse.IsValid" /> is false depending on the cause of the error
            </para><para>
            You can also configure the client to always throw an <see cref="T:Elasticsearch.Net.ElasticsearchClientException" /> using
            <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions" /> if the response is not valid
            </para></summary>
    </member>
    <member name="P:Nest.IResponse.ServerError">
      <summary>
            If the response results in an error on Elasticsearch's side an <pre>error</pre> element will be returned, this is
            mapped to
            <see cref="P:Nest.IResponse.ServerError" /> in NEST.
            <para>Possibly set when <see cref="P:Nest.IResponse.IsValid" /> is false, depending on the cause of the error</para><para>
            You can also configure the client to always throw an <see cref="T:Elasticsearch.Net.ElasticsearchClientException" /> using
            <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions" /> if the response is not valid
            </para></summary>
    </member>
    <member name="P:Nest.ResponseBase.ApiCall">
      <summary> Returns useful information about the request(s) that were part of this API call. </summary>
    </member>
    <member name="P:Nest.ResponseBase.DebugInformation">
      <inheritdoc />
    </member>
    <member name="P:Nest.ResponseBase.IsValid">
      <inheritdoc />
    </member>
    <member name="P:Nest.ResponseBase.OriginalException">
      <inheritdoc />
    </member>
    <member name="P:Nest.ResponseBase.ServerError">
      <inheritdoc />
    </member>
    <member name="M:Nest.ResponseBase.DebugIsValid(System.Text.StringBuilder)">
      <summary>Subclasses can override this to provide more information on why a call is not valid.</summary>
    </member>
    <member name="T:Nest.MachineLearningDateTimeAttribute">
      <summary>
            Signals that this date time property is used in Machine learning API's some of which will always return the date as
            epoch.
            </summary>
    </member>
    <member name="T:Nest.DefaultHighLevelSerializer">
      <summary>The built in internal serializer that the high level client NEST uses.</summary>
    </member>
    <member name="T:Nest.IPropertyMapping">
      <summary>Determines how a POCO property maps to the property on a JSON object when serialized</summary>
    </member>
    <member name="P:Nest.IPropertyMapping.Ignore">
      <summary>
            Ignores this property.
            <para>- When mapping automatically using <see cref="M:Nest.TypeMappingDescriptor`1.AutoMap``1(Nest.IPropertyVisitor,System.Int32)" /></para><para>- When Indexing this type do not serialize this property and its value</para></summary>
    </member>
    <member name="P:Nest.IPropertyMapping.Name">
      <summary> Overrides the property name serialized to JSON for this property</summary>
    </member>
    <member name="T:Nest.PropertyMapping">
      <inheritdoc />
    </member>
    <member name="P:Nest.PropertyMapping.Ignore">
      <summary>
            Ignores this property.
            <para>- When mapping automatically using <see cref="M:Nest.TypeMappingDescriptor`1.AutoMap``1(Nest.IPropertyVisitor,System.Int32)" /></para><para>- When Indexing this type do not serialize this property and its value</para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PropertyMapping.Name">
      <summary> Overrides the property name serialized to JSON for this property</summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPropertyMappingProvider">
      <summary>
            Provides mappings for CLR types
            </summary>
    </member>
    <member name="M:Nest.IPropertyMappingProvider.CreatePropertyMapping(System.Reflection.MemberInfo)">
      <summary>
            Creates an <see cref="T:Nest.IPropertyMapping" /> for a <see cref="T:System.Reflection.MemberInfo" /></summary>
    </member>
    <member name="T:Nest.PropertyMappingProvider">
      <inheritdoc />
    </member>
    <member name="M:Nest.PropertyMappingProvider.CreatePropertyMapping(System.Reflection.MemberInfo)">
      <summary>
            Creates an <see cref="T:Nest.IPropertyMapping" /> for a <see cref="T:System.Reflection.MemberInfo" /></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.Infer.Field``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Nullable{System.Double},System.String)">
      <summary>
            Create a strongly typed string field name representation of the path to a property
            <para>e.g. p =&gt; p.Array.First().SubProperty.Field will return 'array.subProperty.field'</para></summary>
    </member>
    <member name="M:Nest.Infer.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Nullable{System.Double},System.String)">
      <inheritdoc cref="M:Nest.Infer.Field``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Nullable{System.Double},System.String)" />
    </member>
    <member name="T:Nest.Union`2">
      <summary>
            Represents the union of two types, <typeparamref name="TFirst" /> and <typeparamref name="TSecond" />. Used
            in scenarios where an Elasticsearch API may accept more than one different input data structure.
            </summary>
      <typeparam name="TFirst">The first type</typeparam>
      <typeparam name="TSecond">The second type</typeparam>
    </member>
    <member name="M:Nest.Union`2.#ctor(`0)">
      <summary>
            Creates an new instance of <see cref="T:Nest.Union`2" /> that encapsulates <paramref name="item" /> value
            </summary>
      <param name="item">The value to encapsulate</param>
    </member>
    <member name="M:Nest.Union`2.#ctor(`1)">
      <summary>
            Creates an new instance of <see cref="T:Nest.Union`2" /> that encapsulates <paramref name="item" /> value
            </summary>
      <param name="item">The value to encapsulate</param>
    </member>
    <member name="M:Nest.Union`2.Match(System.Action{`0},System.Action{`1})">
      <summary>
            Runs an <see cref="T:System.Action`1" /> delegate against the encapsulated value
            </summary>
      <param name="first">The delegate to run when this instance encapsulates an instance of <typeparamref name="TFirst" /></param>
      <param name="second">The delegate to run when this instance encapsulates an instance of <typeparamref name="TSecond" /></param>
    </member>
    <member name="M:Nest.Union`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})">
      <summary>
            Runs a <see cref="T:System.Func`2" /> delegate against the encapsulated value
            </summary>
      <param name="first">The delegate to run when this instance encapsulates an instance of <typeparamref name="TFirst" /></param>
      <param name="second">The delegate to run when this instance encapsulates an instance of <typeparamref name="TSecond" /></param>
    </member>
    <member name="T:Nest.AlternativeEnumMemberAttribute">
      <summary>
            Similar to <see cref="T:System.Runtime.Serialization.EnumMemberAttribute" />, but allows an alternative string
            value to be specified for an enum field value.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.basic_date">
      <summary>A basic formatter that combines a basic date and time, separated by a T: yyyyMMdd'T'HHmmss.SSSZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_date_time">
      <summary>A basic formatter that combines a basic date and time, separated by a T: yyyyMMdd'T'HHmmss.SSSZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_date_time_no_millis">
      <summary>A basic formatter that combines a basic date and time without millis, separated by a T: yyyyMMdd'T'HHmmssZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_ordinal_date">
      <summary>A formatter for a full ordinal date, using a four digit year and three digit dayOfYear: yyyyDDD.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_ordinal_date_time">
      <summary>A formatter for a full ordinal date and time, using a four digit year and three digit dayOfYear: yyyyDDD'T'HHmmss.SSSZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_ordinal_date_time_no_millis">
      <summary>A formatter for a full ordinal date and time without millis, using a four digit year and three digit dayOfYear: yyyyDDD'T'HHmmssZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_t_time">
      <summary>
            A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit millis, and time
            zone off set prefixed by T: 'T'HHmmss.SSSZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.basic_t_time_no_millis">
      <summary>
            A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset prefixed
            by T: 'T'HHmmssZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.basic_time">
      <summary>
            A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit millis, and time
            zone offset: HHmmss.SSSZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.basic_time_no_millis">
      <summary>
            A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset:
            HHmmssZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.basic_week_date">
      <summary>A basic formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx'W'wwe.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_week_date_time">
      <summary>A basic formatter that combines a basic weekyear date and time, separated by a T: xxxx'W'wwe'T'HHmmss.SSSZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.basic_week_date_time_no_millis">
      <summary>A basic formatter that combines a basic weekyear date and time without millis, separated by a T: xxxx'W'wwe'T'HHmmssZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.date">
      <summary>A formatter for a full date as four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
    </member>
    <member name="F:Nest.DateFormat.date_hour">
      <summary>A formatter that combines a full date and two digit hour of day: yyyy-MM-dd'T'HH.</summary>
    </member>
    <member name="F:Nest.DateFormat.date_hour_minute">
      <summary>A formatter that combines a full date, two digit hour of day, and two digit minute of hour: yyyy-MM-dd'T'HH:mm.</summary>
    </member>
    <member name="F:Nest.DateFormat.date_hour_minute_second">
      <summary>
            A formatter that combines a full date, two digit hour of day, two digit minute of hour, and two digit second of minute:
            yyyy-MM-dd'T'HH:mm:ss.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.date_hour_minute_second_fraction">
      <summary>
            A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three
            digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.date_hour_minute_second_millis">
      <summary>
            A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three
            digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.date_optional_time">
      <summary>A basic formatter for a full date as four digit year, two digit month of year, and two digit day of month: yyyyMMdd.</summary>
    </member>
    <member name="F:Nest.DateFormat.date_time">
      <summary>A formatter that combines a full date and time, separated by a T: yyyy-MM-dd'T'HH:mm:ss.SSSZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.date_time_no_millis">
      <summary>A formatter that combines a full date and time without millis, separated by a T: yyyy-MM-dd'T'HH:mm:ssZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.epoch_millis">
      <summary>
            A formatter for the number of milliseconds since the epoch. Note, that this timestamp is subject to the limits of a Java
            Long.MIN_VALUE and Long.MAX_VALUE.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.epoch_second">
      <summary>
            A formatter for the number of seconds since the epoch. Note, that this timestamp is subject to the limits of a Java Long.MIN_VALUE
            and Long. MAX_VALUE divided by 1000 (the number of milliseconds in a second).
            </summary>
    </member>
    <member name="F:Nest.DateFormat.hour">
      <summary>A formatter for a two digit hour of day: HH</summary>
    </member>
    <member name="F:Nest.DateFormat.hour_minute">
      <summary>A formatter for a two digit hour of day and two digit minute of hour: HH:mm.</summary>
    </member>
    <member name="F:Nest.DateFormat.hour_minute_second">
      <summary>A formatter for a two digit hour of day, two digit minute of hour, and two digit second of minute: HH:mm:ss.</summary>
    </member>
    <member name="F:Nest.DateFormat.hour_minute_second_fraction">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second:
            HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.hour_minute_second_millis">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second:
            HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.ordinal_date">
      <summary>A formatter for a full ordinal date, using a four digit year and three digit dayOfYear: yyyy-DDD.</summary>
    </member>
    <member name="F:Nest.DateFormat.ordinal_date_time">
      <summary>A formatter for a full ordinal date and time, using a four digit year and three digit dayOfYear: yyyy-DDD'T'HH:mm:ss.SSSZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.ordinal_date_time_no_millis">
      <summary>
            A formatter for a full ordinal date and time without millis, using a four digit year and three digit dayOfYear:
            yyyy-DDD'T'HH:mm:ssZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_basic_week_date">
      <summary>A basic formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx'W'wwe.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_basic_week_date_time">
      <summary>A basic formatter that combines a basic weekyear date and time, separated by a T: xxxx'W'wwe'T'HHmmss.SSSZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_basic_week_date_time_no_millis">
      <summary>A basic formatter that combines a basic weekyear date and time without millis, separated by a T: xxxx'W'wwe'T'HHmmssZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date">
      <summary>A formatter for a full date as four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_hour">
      <summary>A formatter that combines a full date and two digit hour of day: yyyy-MM-dd'T'HH.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_hour_minute">
      <summary>A formatter that combines a full date, two digit hour of day, and two digit minute of hour: yyyy-MM-dd'T'HH:mm.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_hour_minute_second">
      <summary>
            A formatter that combines a full date, two digit hour of day, two digit minute of hour, and two digit second of minute:
            yyyy-MM-dd'T'HH:mm:ss.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_hour_minute_second_fraction">
      <summary>
            A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three
            digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_hour_minute_second_millis">
      <summary>
            A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three
            digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_time">
      <summary>A formatter that combines a full date and time, separated by a T: yyyy-MM-dd'T'HH:mm:ss.SSSZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_date_time_no_millis">
      <summary>A formatter that combines a full date and time without millis, separated by a T: yyyy-MM-dd'T'HH:mm:ssZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_hour">
      <summary>A formatter for a two digit hour of day: HH</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_hour_minute">
      <summary>A formatter for a two digit hour of day and two digit minute of hour: HH:mm.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_hour_minute_second">
      <summary>A formatter for a two digit hour of day, two digit minute of hour, and two digit second of minute: HH:mm:ss.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_hour_minute_second_fraction">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second:
            HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_hour_minute_second_millis">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second:
            HH:mm:ss.SSS.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_ordinal_date">
      <summary>A formatter for a full ordinal date, using a four digit year and three digit dayOfYear: yyyy-DDD.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_ordinal_date_time">
      <summary>A formatter for a full ordinal date and time, using a four digit year and three digit dayOfYear: yyyy-DDD'T'HH:mm:ss.SSSZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_ordinal_date_time_no_millis">
      <summary>
            A formatter for a full ordinal date and time without millis, using a four digit year and three digit dayOfYear:
            yyyy-DDD'T'HH:mm:ssZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_t_time">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and
            time zone offset prefixed by T: 'T'HH:mm:ss.SSSZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_t_time_no_millis">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset prefixed by T:
            'T'HH:mm:ssZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_time">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and
            time zone offset: HH:mm:ss.SSSZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.strict_time_no_millis">
      <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset: HH:mm:ssZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_week_date">
      <summary>A formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_week_date_time">
      <summary>A formatter that combines a full weekyear date and time, separated by a T: xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_week_date_time_no_millis">
      <summary>A formatter that combines a full weekyear date and time without millis, separated by a T: xxxx-'W'ww-e'T'HH:mm:ssZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_weekyear">
      <summary>A formatter for a four digit weekyear: xxxx.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_weekyear_week">
      <summary>A formatter for a four digit weekyear and two digit week of weekyear: xxxx-'W'ww.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_weekyear_week_day">
      <summary>A formatter for a four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_year">
      <summary>A formatter for a four digit year: yyyy.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_year_month">
      <summary>A formatter for a four digit year and two digit month of year: yyyy-MM.</summary>
    </member>
    <member name="F:Nest.DateFormat.strict_year_month_day">
      <summary>A formatter for a four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
    </member>
    <member name="F:Nest.DateFormat.t_time">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and
            time zone offset prefixed by T: 'T'HH:mm:ss.SSSZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.t_time_no_millis">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset prefixed by T:
            'T'HH:mm:ssZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.time">
      <summary>
            A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and
            time zone offset: HH:mm:ss.SSSZZ.
            </summary>
    </member>
    <member name="F:Nest.DateFormat.time_no_millis">
      <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset: HH:mm:ssZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.week_date">
      <summary>A formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
    </member>
    <member name="F:Nest.DateFormat.week_date_time">
      <summary>A formatter that combines a full weekyear date and time, separated by a T: xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.week_date_time_no_millis">
      <summary>A formatter that combines a full weekyear date and time without millis, separated by a T: xxxx-'W'ww-e'T'HH:mm:ssZZ.</summary>
    </member>
    <member name="F:Nest.DateFormat.weekyear">
      <summary>A formatter for a four digit weekyear: xxxx.</summary>
    </member>
    <member name="F:Nest.DateFormat.weekyear_week">
      <summary>A formatter for a four digit weekyear and two digit week of weekyear: xxxx-'W'ww.</summary>
    </member>
    <member name="F:Nest.DateFormat.weekyear_week_day">
      <summary>A formatter for a four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
    </member>
    <member name="F:Nest.DateFormat.year">
      <summary>A formatter for a four digit year: yyyy.</summary>
    </member>
    <member name="F:Nest.DateFormat.year_month">
      <summary>A formatter for a four digit year and two digit month of year: yyyy-MM.</summary>
    </member>
    <member name="F:Nest.DateFormat.year_month_day">
      <summary>A formatter for a four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
    </member>
    <member name="M:Nest.DateMath.ToMinThreeDecimalPlaces(System.DateTime)">
      <summary>
            Formats a <see cref="T:System.DateTime" /> to have a minimum of 3 decimal places if there are sub second values
            </summary>
    </member>
    <member name="T:Nest.DateMathTime">
      <summary>
            A time representation for use within <see cref="T:Nest.DateMath" /> expressions.
            </summary>
    </member>
    <member name="M:Nest.DateMathTime.#ctor(System.TimeSpan,System.MidpointRounding)">
      <summary>
            Instantiates a new instance of <see cref="T:Nest.DateMathTime" /> from a TimeSpan.
            Rounding can be specified to determine how fractional second values should be rounded.
            </summary>
    </member>
    <member name="M:Nest.DateMathTime.#ctor(System.Double,System.MidpointRounding)">
      <summary>
            Instantiates a new instance of <see cref="T:Nest.DateMathTime" /> from a milliseconds value.
            Rounding can be specified to determine how fractional second values should be rounded.
            </summary>
    </member>
    <member name="M:Nest.DateMathTime.#ctor(System.Int32,Nest.DateMathTimeUnit)">
      <summary>
            Instantiates a new instance of <see cref="T:Nest.DateMathTime" /> from a factor and interval.
            </summary>
    </member>
    <member name="M:Nest.DateMathTime.#ctor(System.String,System.MidpointRounding)">
      <summary>
            Instantiates a new instance of <see cref="T:Nest.DateMathTime" /> from the timeUnit string expression.
            Rounding can be specified to determine how fractional second values should be rounded.
            </summary>
    </member>
    <member name="P:Nest.DateMathTime.Factor">
      <summary>
            The numeric time factor
            </summary>
    </member>
    <member name="P:Nest.DateMathTime.Interval">
      <summary>
            The time units
            </summary>
    </member>
    <member name="P:Nest.Fuzziness.Auto">
      <summary>
            Generates an edit distance based on the length of the term.
            </summary>
      <remarks>
        <para>Equivalent to <see cref="M:Nest.Fuzziness.AutoLength(System.Int32,System.Int32)" /> with parameters 3 and 6.</para>
        <para>
          <see cref="P:Nest.Fuzziness.Auto" /> should generally be the preferred value for <see cref="T:Nest.Fuzziness" /></para>
      </remarks>
    </member>
    <member name="M:Nest.Fuzziness.AutoLength(System.Int32,System.Int32)">
      <summary>
            Generates an edit distance based on the length of the term.
            </summary>
      <param name="low">Must match exactly for terms with less length</param>
      <param name="high">Two edits allowed for terms with greater length</param>
    </member>
    <member name="M:Nest.Fuzziness.EditDistance(System.Int32)">
      <summary>
            The maximum allowed Levenshtein Edit Distance (or number of edits)
            </summary>
      <param name="distance">Levenshtein Edit Distance</param>
    </member>
    <member name="T:Nest.IAggregationRange">
      <summary>
            Range that defines a bucket for either the <see cref="T:Nest.RangeAggregation" /> or
            <see cref="T:Nest.GeoDistanceAggregation" />. If you are looking to store ranges as
            part of your document please use explicit range class e.g DateRange, FloatRange etc
            </summary>
    </member>
    <member name="T:Nest.AggregationRange">
      <inheritdoc />
    </member>
    <member name="T:Nest.AggregationRangeDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.IScript">
      <summary>
            A script to execute to provide custom computation
            </summary>
    </member>
    <member name="P:Nest.IScript.Lang">
      <summary>
            Language of script.
            </summary>
      <param name="lang">language</param>
      <returns>this</returns>
    </member>
    <member name="P:Nest.IScript.Params">
      <summary>
             Scripts are compiled and cached for faster execution.
             If the same script can be used, just with different parameters provided,
             it is preferable to use the ability to pass parameters to the script itself.
            </summary>
      <example>
            	    script: "doc['num1'].value &gt; param1"
            		param: "param1" = 5
            </example>
      <param name="paramsDictionary">param</param>
      <returns>this</returns>
    </member>
    <member name="T:Nest.ScriptBase">
      <inheritdoc cref="T:Nest.IScript" />
    </member>
    <member name="P:Nest.ScriptBase.Lang">
      <inheritdoc />
    </member>
    <member name="P:Nest.ScriptBase.Params">
      <inheritdoc />
    </member>
    <member name="M:Nest.ScriptBase.op_Implicit(System.String)~Nest.ScriptBase">
      <summary>
            Implicit conversion from <see cref="T:System.String" /> to <see cref="T:Nest.InlineScript" /></summary>
    </member>
    <member name="T:Nest.ScriptDescriptorBase`2">
      <inheritdoc cref="T:Nest.IScript" />
    </member>
    <member name="M:Nest.ScriptDescriptorBase`2.Params(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
             Scripts are compiled and cached for faster execution.
             If the same script can be used, just with different parameters provided,
             it is preferable to use the ability to pass parameters to the script itself.
            </summary>
      <example>
            	    script: "doc['num1'].value &gt; param1"
            		param: "param1" = 5
            </example>
      <param name="paramsDictionary">param</param>
      <returns>this</returns>
      <inheritdoc cref="P:Nest.IScript.Params" />
    </member>
    <member name="M:Nest.ScriptDescriptorBase`2.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
             Scripts are compiled and cached for faster execution.
             If the same script can be used, just with different parameters provided,
             it is preferable to use the ability to pass parameters to the script itself.
            </summary>
      <example>
            	    script: "doc['num1'].value &gt; param1"
            		param: "param1" = 5
            </example>
      <param name="paramsDictionary">param</param>
      <returns>this</returns>
      <inheritdoc cref="P:Nest.IScript.Params" />
    </member>
    <member name="M:Nest.ScriptDescriptorBase`2.Lang(System.String)">
      <summary>
            Language of script.
            </summary>
      <param name="lang">language</param>
      <returns>this</returns>
      <inheritdoc cref="P:Nest.IScript.Lang" />
    </member>
    <member name="M:Nest.ScriptDescriptorBase`2.Lang(Nest.ScriptLang)">
      <summary>
            Language of script.
            </summary>
      <param name="lang">language</param>
      <returns>this</returns>
      <inheritdoc cref="P:Nest.IScript.Lang" />
    </member>
    <member name="T:Nest.ScriptDescriptor">
      <inheritdoc cref="T:Nest.IScript" />
    </member>
    <member name="M:Nest.ScriptDescriptor.Id(System.String)">
      <summary>
            A script that has been indexed in Elasticsearch with the specified id
            </summary>
    </member>
    <member name="M:Nest.ScriptDescriptor.Source(System.String)">
      <summary>
            An inline script to execute
            </summary>
    </member>
    <member name="P:Nest.FlushStats.Periodic">
      <summary>
            The number of flushes that were periodically triggered when translog exceeded the flush threshold.
            </summary>
    </member>
    <member name="P:Nest.FlushStats.TotalTime">
      <summary>
            The total time merges have been executed.
            </summary>
    </member>
    <member name="P:Nest.FlushStats.TotalTimeInMilliseconds">
      <summary>
            The total time merges have been executed (in milliseconds).
            </summary>
    </member>
    <member name="P:Nest.RefreshStats.ExternalTotal">
      <summary>
            Only valid for Elasticsearch 7.2.0 and above.
            </summary>
    </member>
    <member name="P:Nest.RefreshStats.ExternalTotalTimeInMilliseconds">
      <summary>
            Only valid for Elasticsearch 7.2.0 and above.
            </summary>
    </member>
    <member name="P:Nest.TranslogStats.EarliestLastModifiedAge">
      <remarks>
            Valid only for Elasticsearch 6.3.0+
            </remarks>
    </member>
    <member name="T:Nest.Time">
      <summary>
            Represents a time value
            </summary>
    </member>
    <member name="M:Nest.Time.ToTimeSpan">
      <summary>
            Converts this instance of <see cref="T:Nest.Time" /> to an instance of <see cref="T:System.TimeSpan" />.
            For values in <see cref="F:Nest.TimeUnit.Microseconds" /> and <see cref="F:Nest.TimeUnit.Nanoseconds" />, value will be rounded to
            the nearest Tick.
            All other values will be rounded to the nearest Millisecond.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <para>
            special time values <see cref="P:Nest.Time.MinusOne" /> and <see cref="P:Nest.Time.Zero" /> do not have a <see cref="T:System.TimeSpan" />
            representation.
            </para>
        <para>instance of <see cref="T:Nest.Time" /> has no value for <see cref="P:Nest.Time.Interval" /></para>
      </exception>
    </member>
    <member name="T:Nest.DeleteAutoFollowPatternDescriptor">
      <summary>Descriptor for DeleteAutoFollowPattern <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html</para></summary>
      <inheritdoc cref="T:Nest.IDeleteAutoFollowPatternRequest" />
    </member>
    <member name="M:Nest.DeleteAutoFollowPatternDescriptor.#ctor(Nest.Name)">
      <summary>/_ccr/auto_follow/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteAutoFollowPatternDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.CreateFollowIndexDescriptor">
      <summary>Descriptor for CreateFollowIndex <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html</para></summary>
      <inheritdoc cref="T:Nest.ICreateFollowIndexRequest" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/follow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the follower index</summary>
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before returning. Defaults to 0. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.RemoteCluster(System.String)">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.RemoteCluster" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.LeaderIndex(Nest.IndexName)">
      <summary> the name of the index in the leader cluster to follow </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.LeaderIndex" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxReadRequestOperationCount(System.Nullable{System.Int64})">
      <summary>the maximum number of operations to pull per read from the remote cluster </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxReadRequestOperationCount" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxOutstandingReadRequests(System.Nullable{System.Int64})">
      <summary>the maximum number of outstanding reads requests from the remote cluster</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingReadRequests" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxRequestSize(System.String)">
      <summary>the maximum size in bytes of per read of a batch of operations pulled from the remote cluster</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRequestSize" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxWriteRequestOperationCount(System.Nullable{System.Int64})">
      <summary>the maximum number of operations per bulk write request executed on the follower</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestOperationCount" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxWriteRequestSize(System.String)">
      <summary>the maximum total bytes of operations per bulk write request executed on the follower</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestSize" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxOutstandingWriteRequests(System.Nullable{System.Int64})">
      <summary>the maximum number of outstanding write requests on the follower</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingWriteRequests" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxWriteBufferCount(System.Nullable{System.Int64})">
      <summary>
            the maximum number of operations that can be queued for writing; when this limit is reached, reads from
            the remote cluster will be deferred until the number of queued operations goes below the limit
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferCount" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxWriteBufferSize(System.String)">
      <summary>
            the maximum total bytes of operations that can be queued for writing; when this limit is reached, reads
            from the remote cluster will be deferred until the total bytes of queued operations goes below the limit
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferSize" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.MaxRetryDelay(Nest.Time)">
      <summary>
            the maximum time to wait before retrying an operation that failed exceptionally; an exponential backoff
            strategy is employed when retrying
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRetryDelay" />
    </member>
    <member name="M:Nest.CreateFollowIndexDescriptor.ReadPollTimeout(Nest.Time)">
      <summary>
            the maximum time to wait for new operations on the remote cluster when the follower index is synchronized with the
            leader index; when the timeout has elapsed, the poll for operations will return to the follower so that it can
            update some statistics, and then the follower will immediately attempt to read from the leader again
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.ReadPollTimeout" />
    </member>
    <member name="T:Nest.FollowInfoDescriptor">
      <summary>Descriptor for FollowInfo <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html</para></summary>
      <inheritdoc cref="T:Nest.IFollowInfoRequest" />
    </member>
    <member name="M:Nest.FollowInfoDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_ccr/info</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.FollowInfoDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.FollowInfoDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index patterns; use `_all` to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.FollowInfoDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.FollowInfoDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="T:Nest.FollowIndexStatsDescriptor">
      <summary>Descriptor for FollowIndexStats <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html</para></summary>
      <inheritdoc cref="T:Nest.IFollowIndexStatsRequest" />
    </member>
    <member name="M:Nest.FollowIndexStatsDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_ccr/stats</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.FollowIndexStatsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.FollowIndexStatsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index patterns; use `_all` to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.FollowIndexStatsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.FollowIndexStatsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="T:Nest.ForgetFollowerIndexDescriptor">
      <summary>Descriptor for ForgetFollowerIndex <para>http://www.elastic.co/guide/en/elasticsearch/reference/current</para></summary>
      <inheritdoc cref="T:Nest.IForgetFollowerIndexRequest" />
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/forget_follower</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.Index(Nest.IndexName)">
      <summary>the name of the leader index for which specified follower retention leases should be removed</summary>
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.FollowerCluster(System.String)">
      <summary>
            The name of the cluster containing the follower index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.FollowerCluster" />
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.FollowerIndex(Nest.IndexName)">
      <summary>
            The name of the follower index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.FollowerIndex" />
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.FollowerIndexUUID(System.String)">
      <summary>
            The UUID of the follower index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.FollowerIndexUUID" />
    </member>
    <member name="M:Nest.ForgetFollowerIndexDescriptor.LeaderRemoteCluster(System.String)">
      <summary>
            The alias (from the perspective of the cluster containing the follower index) of the remote cluster containing the leader index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.LeaderRemoteCluster" />
    </member>
    <member name="T:Nest.GetAutoFollowPatternDescriptor">
      <summary>Descriptor for GetAutoFollowPattern <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html</para></summary>
      <inheritdoc cref="T:Nest.IGetAutoFollowPatternRequest" />
    </member>
    <member name="M:Nest.GetAutoFollowPatternDescriptor.#ctor">
      <summary>/_ccr/auto_follow</summary>
    </member>
    <member name="M:Nest.GetAutoFollowPatternDescriptor.#ctor(Nest.Name)">
      <summary>/_ccr/auto_follow/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetAutoFollowPatternDescriptor.Name(Nest.Name)">
      <summary>The name of the auto follow pattern.</summary>
    </member>
    <member name="T:Nest.PauseFollowIndexDescriptor">
      <summary>Descriptor for PauseFollowIndex <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html</para></summary>
      <inheritdoc cref="T:Nest.IPauseFollowIndexRequest" />
    </member>
    <member name="M:Nest.PauseFollowIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/pause_follow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.PauseFollowIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PauseFollowIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the follower index that should pause following its leader index.</summary>
    </member>
    <member name="M:Nest.PauseFollowIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.CreateAutoFollowPatternDescriptor">
      <summary>Descriptor for CreateAutoFollowPattern <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html</para></summary>
      <inheritdoc cref="T:Nest.ICreateAutoFollowPatternRequest" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.#ctor(Nest.Name)">
      <summary>/_ccr/auto_follow/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.RemoteCluster(System.String)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.RemoteCluster" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.LeaderIndexPatterns(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.LeaderIndexPatterns" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.LeaderIndexPatterns(System.String[])">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.LeaderIndexPatterns" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.FollowIndexPattern(System.String)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.FollowIndexPattern" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxReadRequestOperationCount(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxReadRequestOperationCount" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxOutstandingReadRequests(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxOutstandingReadRequests" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxReadRequestSize(System.String)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxReadRequestSize" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxWriteRequestOperationCount(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteRequestOperationCount" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxWriteRequestSize(System.String)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteRequestSize" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxOutstandingWriteRequests(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxOutstandingWriteRequests" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxWriteBufferCount(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteBufferCount" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxWriteBufferSize(System.String)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteBufferSize" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxRetryDelay(Nest.Time)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxRetryDelay" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternDescriptor.MaxPollTimeout(Nest.Time)">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxPollTimeout" />
    </member>
    <member name="T:Nest.ResumeFollowIndexDescriptor">
      <summary>Descriptor for ResumeFollowIndex <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html</para></summary>
      <inheritdoc cref="T:Nest.IResumeFollowIndexRequest" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/resume_follow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the follow index to resume following.</summary>
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxReadRequestOperationCount(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxReadRequestOperationCount" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxOutstandingReadRequests(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingReadRequests" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxRequestSize(System.String)">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRequestSize" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxWriteRequestOperationCount(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestOperationCount" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxWriteRequestSize(System.String)">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestSize" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxOutstandingWriteRequests(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingWriteRequests" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxWriteBufferCount(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferCount" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxWriteBufferSize(System.String)">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferSize" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.MaxRetryDelay(Nest.Time)">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRetryDelay" />
    </member>
    <member name="M:Nest.ResumeFollowIndexDescriptor.ReadPollTimeout(Nest.Time)">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.ReadPollTimeout" />
    </member>
    <member name="T:Nest.CcrStatsDescriptor">
      <summary>Descriptor for Stats <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html</para></summary>
      <inheritdoc cref="T:Nest.ICcrStatsRequest" />
    </member>
    <member name="T:Nest.UnfollowIndexDescriptor">
      <summary>Descriptor for UnfollowIndex <para>http://www.elastic.co/guide/en/elasticsearch/reference/current</para></summary>
      <inheritdoc cref="T:Nest.IUnfollowIndexRequest" />
    </member>
    <member name="M:Nest.UnfollowIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/unfollow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UnfollowIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UnfollowIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the follower index that should be turned into a regular index.</summary>
    </member>
    <member name="M:Nest.UnfollowIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.GraphExploreDescriptor`1">
      <summary>Descriptor for Explore <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html</para></summary>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_graph/explore</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.#ctor">
      <summary>/{index}/_graph/explore</summary>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.GraphExploreDescriptor`1.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.DeleteLifecycleDescriptor">
      <summary>Descriptor for DeleteLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.DeleteLifecycleDescriptor.#ctor(Nest.Id)">
      <summary>/_ilm/policy/{policy_id}</summary>
      <param name="policyId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteLifecycleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ExplainLifecycleDescriptor">
      <summary>Descriptor for ExplainLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.ExplainLifecycleDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ilm/explain</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainLifecycleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ExplainLifecycleDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index to explain</summary>
    </member>
    <member name="M:Nest.ExplainLifecycleDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.GetLifecycleDescriptor">
      <summary>Descriptor for GetLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.GetLifecycleDescriptor.#ctor(Nest.Id)">
      <summary>/_ilm/policy/{policy_id}</summary>
      <param name="policyId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetLifecycleDescriptor.#ctor">
      <summary>/_ilm/policy</summary>
    </member>
    <member name="M:Nest.GetLifecycleDescriptor.PolicyId(Nest.Id)">
      <summary>The name of the index lifecycle policy</summary>
    </member>
    <member name="T:Nest.GetIlmStatusDescriptor">
      <summary>Descriptor for GetStatus <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html</para></summary>
    </member>
    <member name="T:Nest.MoveToStepDescriptor">
      <summary>Descriptor for MoveToStep <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html</para></summary>
    </member>
    <member name="M:Nest.MoveToStepDescriptor.#ctor(Nest.IndexName)">
      <summary>/_ilm/move/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.MoveToStepDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.MoveToStepDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index whose lifecycle step is to change</summary>
    </member>
    <member name="M:Nest.MoveToStepDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.PutLifecycleDescriptor">
      <summary>Descriptor for PutLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.PutLifecycleDescriptor.#ctor(Nest.Id)">
      <summary>/_ilm/policy/{policy_id}</summary>
      <param name="policyId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutLifecycleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.RemovePolicyDescriptor">
      <summary>Descriptor for RemovePolicy <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html</para></summary>
    </member>
    <member name="M:Nest.RemovePolicyDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ilm/remove</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.RemovePolicyDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.RemovePolicyDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index to remove policy on</summary>
    </member>
    <member name="M:Nest.RemovePolicyDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.RetryIlmDescriptor">
      <summary>Descriptor for Retry <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html</para></summary>
    </member>
    <member name="M:Nest.RetryIlmDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_ilm/retry</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.RetryIlmDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.RetryIlmDescriptor.Index(Nest.IndexName)">
      <summary>The name of the indices (comma-separated) whose failed lifecycle step is to be retry</summary>
    </member>
    <member name="M:Nest.RetryIlmDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.StartIlmDescriptor">
      <summary>Descriptor for Start <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html</para></summary>
    </member>
    <member name="T:Nest.StopIlmDescriptor">
      <summary>Descriptor for Stop <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html</para></summary>
    </member>
    <member name="T:Nest.AnalyzeDescriptor">
      <summary>Descriptor for Analyze <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</para></summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.#ctor">
      <summary>/_analyze</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_analyze</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index to scope the operation</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Tokenizer(System.String)">
      <summary>The name of the tokenizer to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Tokenizer(System.Func{Nest.AnalyzeTokenizersSelector,Nest.ITokenizer})">
      <summary>An inline definition of a tokenizer</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Analyzer(System.String)">
      <summary>The name of the analyzer to use</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.CharFilter(System.String[])">
      <summary>A collection of character filters to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.CharFilter(System.Collections.Generic.IEnumerable{System.String})">
      <summary>A collection of character filters to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.CharFilter(System.Func{Nest.AnalyzeCharFiltersDescriptor,Nest.IPromise{Nest.AnalyzeCharFilters}})">
      <summary>A collection of character filters to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Filter(System.String[])">
      <summary>A collection of filters to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Filter(System.Collections.Generic.IEnumerable{System.String})">
      <summary>A collection of filters to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Filter(System.Func{Nest.AnalyzeTokenFiltersDescriptor,Nest.IPromise{Nest.AnalyzeTokenFilters}})">
      <summary>A collection of filters to use for the analysis</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Normalizer(System.String)">
      <summary>The name of the normalizer to use</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Field(Nest.Field)">
      <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Field``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Text(System.String[])">
      <summary>The text on which the analysis should be performed</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Text(System.Collections.Generic.IEnumerable{System.String})">
      <summary>The text on which the analysis should be performed</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Explain(System.Nullable{System.Boolean})">
      <summary>Return more details, and output the analyzer chain per step in the process</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Attributes(System.String[])">
      <summary>Filter only certain token attributes to be returned</summary>
    </member>
    <member name="M:Nest.AnalyzeDescriptor.Attributes(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Filter only certain token attributes to be returned</summary>
    </member>
    <member name="T:Nest.ClearCacheDescriptor">
      <summary>Descriptor for ClearCache <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</para></summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.#ctor">
      <summary>/_cache/clear</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_cache/clear</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index name to limit the operation</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Fielddata(System.Nullable{System.Boolean})">
      <summary>Clear field data</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Fields(Nest.Fields)">
      <summary>A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Query(System.Nullable{System.Boolean})">
      <summary>Clear query caches</summary>
    </member>
    <member name="M:Nest.ClearCacheDescriptor.Request(System.Nullable{System.Boolean})">
      <summary>Clear request cache</summary>
    </member>
    <member name="T:Nest.CloseIndexDescriptor">
      <summary>Descriptor for Close <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</para></summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_close</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.Index(Nest.Indices)">
      <summary>A comma separated list of indices to close</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.CloseIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.CreateIndexDescriptor">
      <summary>Descriptor for Create <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</para></summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether a type should be expected in the body of the mappings.</summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.CreateIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Set the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.DeleteIndexDescriptor">
      <summary>Descriptor for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</para></summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Ignore unavailable indexes (default: false)</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.DeleteIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.DeleteAliasDescriptor">
      <summary>Descriptor for DeleteAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">this parameter is required</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names (supports wildcards); use `_all` for all indices</summary>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.DeleteAliasDescriptor.Timeout(Nest.Time)">
      <summary>Explicit timestamp for the document</summary>
    </member>
    <member name="T:Nest.DeleteIndexTemplateDescriptor">
      <summary>Descriptor for DeleteTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.DeleteIndexTemplateDescriptor.#ctor(Nest.Name)">
      <summary>/_template/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteIndexTemplateDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.DeleteIndexTemplateDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.IndexExistsDescriptor">
      <summary>Descriptor for Exists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</para></summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Ignore unavailable indexes (default: false)</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.IncludeDefaults(System.Nullable{System.Boolean})">
      <summary>Whether to return all default setting for each of the indices.</summary>
    </member>
    <member name="M:Nest.IndexExistsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.AliasExistsDescriptor">
      <summary>Descriptor for AliasExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.#ctor(Nest.Names)">
      <summary>/_alias/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to filter aliases</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.AliasExistsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.IndexTemplateExistsDescriptor">
      <summary>Descriptor for TemplateExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.IndexTemplateExistsDescriptor.#ctor(Nest.Names)">
      <summary>/_template/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.IndexTemplateExistsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.IndexTemplateExistsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.IndexTemplateExistsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.IndexTemplateExistsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.TypeExistsDescriptor">
      <summary>Descriptor for TypeExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</para></summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_mapping/{type}</summary>
      <param name="index">this parameter is required</param>
      <param name="type">this parameter is required</param>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use `_all` to check the types across all indices</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.TypeExistsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.FlushDescriptor">
      <summary>Descriptor for Flush <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</para></summary>
    </member>
    <member name="M:Nest.FlushDescriptor.#ctor">
      <summary>/_flush</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_flush</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.FlushDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.Force(System.Nullable{System.Boolean})">
      <summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.FlushDescriptor.WaitIfOngoing(System.Nullable{System.Boolean})">
      <summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.</summary>
    </member>
    <member name="T:Nest.SyncedFlushDescriptor">
      <summary>Descriptor for SyncedFlush <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api</para></summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.#ctor">
      <summary>/_flush/synced</summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_flush/synced</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.SyncedFlushDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="T:Nest.ForceMergeDescriptor">
      <summary>Descriptor for ForceMerge <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</para></summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.#ctor">
      <summary>/_forcemerge</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_forcemerge</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.Flush(System.Nullable{System.Boolean})">
      <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.MaxNumSegments(System.Nullable{System.Int64})">
      <summary>The number of segments the index should be merged into (default: dynamic)</summary>
    </member>
    <member name="M:Nest.ForceMergeDescriptor.OnlyExpungeDeletes(System.Nullable{System.Boolean})">
      <summary>Specify whether the operation should only expunge deleted documents</summary>
    </member>
    <member name="T:Nest.FreezeIndexDescriptor">
      <summary>Descriptor for Freeze <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</para></summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_freeze</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index to freeze</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.FreezeIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.GetIndexDescriptor">
      <summary>Descriptor for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</para></summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GetIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Ignore unavailable indexes (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.IncludeDefaults(System.Nullable{System.Boolean})">
      <summary>Whether to return all default setting for each of the indices.</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether to add the type name to the response (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.GetAliasDescriptor">
      <summary>Descriptor for GetAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.#ctor">
      <summary>/_alias</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.#ctor(Nest.Names)">
      <summary>/_alias/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetAliasDescriptor.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetAliasDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_alias</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetAliasDescriptor.Name(Nest.Names)">
      <summary>A comma-separated list of alias names to return</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to filter aliases</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.GetAliasDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.GetFieldMappingDescriptor`1">
      <summary>Descriptor for GetFieldMapping <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</para></summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.#ctor(Nest.Fields)">
      <summary>/{index}/_mapping/field/{fields}</summary>
      <param name="fields">this parameter is required</param>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.#ctor(Nest.Indices,Nest.Fields)">
      <summary>/{index}/_mapping/field/{fields}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="fields">this parameter is required</param>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.IncludeDefaults(System.Nullable{System.Boolean})">
      <summary>Whether the default mapping values should be returned as well</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether a type should be returned in the body of the mappings.</summary>
    </member>
    <member name="M:Nest.GetFieldMappingDescriptor`1.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.GetMappingDescriptor`1">
      <summary>Descriptor for GetMapping <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</para></summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.#ctor">
      <summary>/{index}/_mapping</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_mapping</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether to add the type name to the response (default: false)</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.GetMappingDescriptor`1.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.GetIndexSettingsDescriptor">
      <summary>Descriptor for GetSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</para></summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.#ctor">
      <summary>/_settings</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_settings</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_settings/{name}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.#ctor(Nest.Names)">
      <summary>/_settings/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.Name(Nest.Names)">
      <summary>The name of the settings that should be included</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.IncludeDefaults(System.Nullable{System.Boolean})">
      <summary>Whether to return all default setting for each of the indices.</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.GetIndexTemplateDescriptor">
      <summary>Descriptor for GetTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.#ctor">
      <summary>/_template</summary>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.#ctor(Nest.Names)">
      <summary>/_template/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.Name(Nest.Names)">
      <summary>The comma separated names of the index templates</summary>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether a type should be returned in the body of the mappings.</summary>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.GetIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.OpenIndexDescriptor">
      <summary>Descriptor for Open <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</para></summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_open</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.Index(Nest.Indices)">
      <summary>A comma separated list of indices to open</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.OpenIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.PutAliasDescriptor">
      <summary>Descriptor for PutAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.#ctor(Nest.Indices,Nest.Name)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">this parameter is required</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutAliasDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.Timeout(Nest.Time)">
      <summary>Explicit timestamp for the document</summary>
    </member>
    <member name="M:Nest.PutAliasDescriptor.Routing(Nest.Routing)">
      <inheritdoc cref="P:Nest.IPutAliasRequest.Routing" />
    </member>
    <member name="M:Nest.PutAliasDescriptor.IndexRouting(Nest.Routing)">
      <inheritdoc cref="P:Nest.IPutAliasRequest.IndexRouting" />
    </member>
    <member name="M:Nest.PutAliasDescriptor.SearchRouting(Nest.Routing)">
      <inheritdoc cref="P:Nest.IPutAliasRequest.SearchRouting" />
    </member>
    <member name="M:Nest.PutAliasDescriptor.IsWriteIndex(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.IPutAliasRequest.IsWriteIndex" />
    </member>
    <member name="M:Nest.PutAliasDescriptor.Filter``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IPutAliasRequest.Filter" />
    </member>
    <member name="T:Nest.PutMappingDescriptor`1">
      <summary>Descriptor for PutMapping <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</para></summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_mapping</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.#ctor">
      <summary>/{index}/_mapping</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether a type should be expected in the body of the mappings.</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)">
      <summary>
            Convenience method to map as much as it can based on ElasticType attributes set on the type.
            <para>This method also automatically sets up mappings for primitive values types (e.g. int, long, double, DateTime...)</para><para>Class types default to object and Enums to int</para><para>Later calls can override whatever is set by this call.</para></summary>
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.AutoMap(System.Int32)">
      <summary>
            Convenience method to map as much as it can based on ElasticType attributes set on the type.
            <para>This method also automatically sets up mappings for primitive values types (e.g. int, long, double, DateTime...)</para><para>Class types default to object and Enums to int</para><para>Later calls can override whatever is set by this call.</para></summary>
      <inheritdoc cref="M:Nest.PutMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Dynamic(Nest.Union{System.Boolean,Nest.DynamicMapping})">
      <inheritdoc cref="P:Nest.ITypeMapping.Dynamic" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Dynamic(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ITypeMapping.Dynamic" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.AllField(System.Func{Nest.AllFieldDescriptor,Nest.IAllField})">
      <inheritdoc cref="P:Nest.ITypeMapping.AllField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.IndexField(System.Func{Nest.IndexFieldDescriptor,Nest.IIndexField})">
      <inheritdoc cref="P:Nest.ITypeMapping.IndexField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.SizeField(System.Func{Nest.SizeFieldDescriptor,Nest.ISizeField})">
      <inheritdoc cref="P:Nest.ITypeMapping.SizeField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.DisableSizeField(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ITypeMapping.SizeField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.DisableIndexField(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ITypeMapping.IndexField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.DynamicDateFormats(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.ITypeMapping.DynamicDateFormats" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.DateDetection(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ITypeMapping.DateDetection" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.NumericDetection(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ITypeMapping.NumericDetection" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.SourceField(System.Func{Nest.SourceFieldDescriptor,Nest.ISourceField})">
      <inheritdoc cref="P:Nest.ITypeMapping.SourceField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.RoutingField(System.Func{Nest.RoutingFieldDescriptor{`0},Nest.IRoutingField})">
      <inheritdoc cref="P:Nest.ITypeMapping.RoutingField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.FieldNamesField(System.Func{Nest.FieldNamesFieldDescriptor{`0},Nest.IFieldNamesField})">
      <inheritdoc cref="P:Nest.ITypeMapping.FieldNamesField" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <inheritdoc cref="P:Nest.ITypeMapping.Meta" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Meta(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <inheritdoc cref="P:Nest.ITypeMapping.Meta" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.Properties(System.Func{Nest.PropertiesDescriptor{`0},Nest.IPromise{Nest.IProperties}})">
      <inheritdoc cref="P:Nest.ITypeMapping.Properties" />
    </member>
    <member name="M:Nest.PutMappingDescriptor`1.DynamicTemplates(System.Func{Nest.DynamicTemplateContainerDescriptor{`0},Nest.IPromise{Nest.IDynamicTemplateContainer}})">
      <inheritdoc cref="P:Nest.ITypeMapping.DynamicTemplates" />
    </member>
    <member name="T:Nest.UpdateIndexSettingsDescriptor">
      <summary>Descriptor for UpdateSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</para></summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.#ctor">
      <summary>/_settings</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_settings</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.PreserveExisting(System.Nullable{System.Boolean})">
      <summary>Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsDescriptor.IndexSettings(System.Func{Nest.DynamicIndexSettingsDescriptor,Nest.IPromise{Nest.IDynamicIndexSettings}})">
      <inheritdoc />
    </member>
    <member name="T:Nest.PutIndexTemplateDescriptor">
      <summary>Descriptor for PutTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.#ctor(Nest.Name)">
      <summary>/_template/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.Create(System.Nullable{System.Boolean})">
      <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.FlatSettings(System.Nullable{System.Boolean})">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether a type should be returned in the body of the mappings.</summary>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.PutIndexTemplateDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.RecoveryStatusDescriptor">
      <summary>Descriptor for RecoveryStatus <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</para></summary>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.#ctor">
      <summary>/_recovery</summary>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_recovery</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.ActiveOnly(System.Nullable{System.Boolean})">
      <summary>Display only those recoveries that are currently on-going</summary>
    </member>
    <member name="M:Nest.RecoveryStatusDescriptor.Detailed(System.Nullable{System.Boolean})">
      <summary>Whether to display detailed information about shard recovery</summary>
    </member>
    <member name="T:Nest.RefreshDescriptor">
      <summary>Descriptor for Refresh <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</para></summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.#ctor">
      <summary>/_refresh</summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_refresh</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.RefreshDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.RefreshDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="T:Nest.RolloverIndexDescriptor">
      <summary>Descriptor for Rollover <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html</para></summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.#ctor(Nest.Name)">
      <summary>/{alias}/_rollover</summary>
      <param name="alias">this parameter is required</param>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.#ctor(Nest.Name,Nest.IndexName)">
      <summary>/{alias}/_rollover/{new_index}</summary>
      <param name="alias">this parameter is required</param>
      <param name="newIndex">Optional, accepts null</param>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.NewIndex(Nest.IndexName)">
      <summary>The name of the rollover index</summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.DryRun(System.Nullable{System.Boolean})">
      <summary>If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false</summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.IncludeTypeName(System.Nullable{System.Boolean})">
      <summary>Whether a type should be included in the body of the mappings.</summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.RolloverIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Set the number of active shards to wait for on the newly created rollover index before the operation returns.</summary>
    </member>
    <member name="T:Nest.SegmentsDescriptor">
      <summary>Descriptor for Segments <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</para></summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.#ctor">
      <summary>/_segments</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_segments</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SegmentsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.SegmentsDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Includes detailed memory usage by Lucene.</summary>
    </member>
    <member name="T:Nest.IndicesShardStoresDescriptor">
      <summary>Descriptor for ShardStores <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</para></summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.#ctor">
      <summary>/_shard_stores</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_shard_stores</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresDescriptor.Status(System.String[])">
      <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
    </member>
    <member name="T:Nest.ShrinkIndexDescriptor">
      <summary>Descriptor for Shrink <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html</para></summary>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.#ctor(Nest.IndexName,Nest.IndexName)">
      <summary>/{index}/_shrink/{target}</summary>
      <param name="index">this parameter is required</param>
      <param name="target">this parameter is required</param>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the source index to shrink</summary>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.ShrinkIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
    </member>
    <member name="T:Nest.SplitIndexDescriptor">
      <summary>Descriptor for Split <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html</para></summary>
      <inheritdoc cref="T:Nest.ISplitIndexRequest" />
    </member>
    <member name="M:Nest.SplitIndexDescriptor.#ctor(Nest.IndexName,Nest.IndexName)">
      <summary>/{index}/_split/{target}</summary>
      <param name="index">this parameter is required</param>
      <param name="target">this parameter is required</param>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the source index to split</summary>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
    </member>
    <member name="M:Nest.SplitIndexDescriptor.Settings(System.Func{Nest.IndexSettingsDescriptor,Nest.IPromise{Nest.IIndexSettings}})">
      <summary>
            The settings for the target index
            </summary>
      <inheritdoc cref="P:Nest.ISplitIndexRequest.Settings" />
    </member>
    <member name="M:Nest.SplitIndexDescriptor.Aliases(System.Func{Nest.AliasesDescriptor,Nest.IPromise{Nest.IAliases}})">
      <summary>
            The aliases for the target index
            </summary>
      <inheritdoc cref="P:Nest.ISplitIndexRequest.Aliases" />
    </member>
    <member name="T:Nest.IndicesStatsDescriptor">
      <summary>Descriptor for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</para></summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.#ctor">
      <summary>/_stats</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.#ctor(Nest.Metrics)">
      <summary>/_stats/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_stats</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.#ctor(Nest.Indices,Nest.Metrics)">
      <summary>/{index}/_stats/{metric}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Metric(Nest.Metrics)">
      <summary>Limit the information returned the specific metrics.</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.CompletionFields(Nest.Fields)">
      <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.CompletionFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.FielddataFields(Nest.Fields)">
      <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.FielddataFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Fields(Nest.Fields)">
      <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.ForbidClosedIndices(System.Nullable{System.Boolean})">
      <summary>If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Groups(System.String[])">
      <summary>A comma-separated list of search groups for `search` index metric</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.IncludeSegmentFileSizes(System.Nullable{System.Boolean})">
      <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.IncludeUnloadedSegments(System.Nullable{System.Boolean})">
      <summary>If set to true segment stats will include stats for segments that are not currently loaded into memory</summary>
    </member>
    <member name="M:Nest.IndicesStatsDescriptor.Level(System.Nullable{Elasticsearch.Net.Level})">
      <summary>Return stats aggregated at cluster, index or shard level</summary>
    </member>
    <member name="T:Nest.UnfreezeIndexDescriptor">
      <summary>Descriptor for Unfreeze <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</para></summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_unfreeze</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index to unfreeze</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.UnfreezeIndexDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.BulkAliasDescriptor">
      <summary>Descriptor for BulkAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.BulkAliasDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.BulkAliasDescriptor.Timeout(Nest.Time)">
      <summary>Request timeout</summary>
    </member>
    <member name="T:Nest.ValidateQueryDescriptor`1">
      <summary>Descriptor for ValidateQuery <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</para></summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.#ctor">
      <summary>/{index}/_validate/query</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_validate/query</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.AllShards(System.Nullable{System.Boolean})">
      <summary>Execute validation on all shards instead of one random shard per index</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Analyzer(System.String)">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.DefaultOperator(System.Nullable{Elasticsearch.Net.DefaultOperator})">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Df(System.String)">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Explain(System.Nullable{System.Boolean})">
      <summary>Return detailed information about the error</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.QueryOnQueryString(System.String)">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="M:Nest.ValidateQueryDescriptor`1.Rewrite(System.Nullable{System.Boolean})">
      <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
    </member>
    <member name="T:Nest.DeletePipelineDescriptor">
      <summary>Descriptor for DeletePipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.DeletePipelineDescriptor.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeletePipelineDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeletePipelineDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.DeletePipelineDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.GetPipelineDescriptor">
      <summary>Descriptor for GetPipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.GetPipelineDescriptor.#ctor">
      <summary>/_ingest/pipeline</summary>
    </member>
    <member name="M:Nest.GetPipelineDescriptor.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetPipelineDescriptor.Id(Nest.Id)">
      <summary>Comma separated list of pipeline ids. Wildcards supported</summary>
    </member>
    <member name="M:Nest.GetPipelineDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.GrokProcessorPatternsDescriptor">
      <summary>Descriptor for GrokProcessorPatterns <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get</para></summary>
    </member>
    <member name="T:Nest.PutPipelineDescriptor">
      <summary>Descriptor for PutPipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.PutPipelineDescriptor.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.PutPipelineDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutPipelineDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.PutPipelineDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.PutPipelineDescriptor.Description(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutPipelineDescriptor.Processors(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutPipelineDescriptor.Processors(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutPipelineDescriptor.OnFailure(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutPipelineDescriptor.OnFailure(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
      <inheritdoc />
    </member>
    <member name="T:Nest.SimulatePipelineDescriptor">
      <summary>Descriptor for SimulatePipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.SimulatePipelineDescriptor.#ctor">
      <summary>/_ingest/pipeline/_simulate</summary>
    </member>
    <member name="M:Nest.SimulatePipelineDescriptor.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}/_simulate</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SimulatePipelineDescriptor.Id(Nest.Id)">
      <summary>Pipeline ID</summary>
    </member>
    <member name="M:Nest.SimulatePipelineDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Verbose mode. Display data output for each processor in executed pipeline</summary>
    </member>
    <member name="T:Nest.DeleteLicenseDescriptor">
      <summary>Descriptor for Delete <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html</para></summary>
    </member>
    <member name="T:Nest.GetLicenseDescriptor">
      <summary>Descriptor for Get <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html</para></summary>
    </member>
    <member name="M:Nest.GetLicenseDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.GetBasicLicenseStatusDescriptor">
      <summary>Descriptor for GetBasicStatus <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html</para></summary>
      <inheritdoc cref="T:Nest.IGetBasicLicenseStatusRequest" />
    </member>
    <member name="T:Nest.GetTrialLicenseStatusDescriptor">
      <summary>Descriptor for GetTrialStatus <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html</para></summary>
    </member>
    <member name="T:Nest.PostLicenseDescriptor">
      <summary>Descriptor for Post <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html</para></summary>
    </member>
    <member name="M:Nest.PostLicenseDescriptor.Acknowledge(System.Nullable{System.Boolean})">
      <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
    </member>
    <member name="T:Nest.StartBasicLicenseDescriptor">
      <summary>Descriptor for StartBasic <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html</para></summary>
      <inheritdoc cref="T:Nest.IStartBasicLicenseRequest" />
    </member>
    <member name="M:Nest.StartBasicLicenseDescriptor.Acknowledge(System.Nullable{System.Boolean})">
      <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
    </member>
    <member name="T:Nest.StartTrialLicenseDescriptor">
      <summary>Descriptor for StartTrial <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html</para></summary>
    </member>
    <member name="M:Nest.StartTrialLicenseDescriptor.Acknowledge(System.Nullable{System.Boolean})">
      <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
    </member>
    <member name="M:Nest.StartTrialLicenseDescriptor.TypeQueryString(System.String)">
      <summary>The type of trial license to generate (default: "trial")</summary>
    </member>
    <member name="T:Nest.CloseJobDescriptor">
      <summary>Descriptor for CloseJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html</para></summary>
    </member>
    <member name="M:Nest.CloseJobDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_close</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.CloseJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CloseJobDescriptor.AllowNoJobs(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)</summary>
    </member>
    <member name="M:Nest.CloseJobDescriptor.Force(System.Nullable{System.Boolean})">
      <summary>True if the job should be forcefully closed</summary>
    </member>
    <member name="M:Nest.CloseJobDescriptor.Timeout(Nest.Time)">
      <summary>Controls the time to wait until a job has closed. Default to 30 minutes</summary>
    </member>
    <member name="T:Nest.DeleteCalendarDescriptor">
      <summary>Descriptor for DeleteCalendar</summary>
    </member>
    <member name="M:Nest.DeleteCalendarDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteCalendarDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteCalendarEventDescriptor">
      <summary>Descriptor for DeleteCalendarEvent</summary>
    </member>
    <member name="M:Nest.DeleteCalendarEventDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/events/{event_id}</summary>
      <param name="calendarId">this parameter is required</param>
      <param name="eventId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteCalendarEventDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteCalendarJobDescriptor">
      <summary>Descriptor for DeleteCalendarJob</summary>
    </member>
    <member name="M:Nest.DeleteCalendarJobDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/jobs/{job_id}</summary>
      <param name="calendarId">this parameter is required</param>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteCalendarJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteDatafeedDescriptor">
      <summary>Descriptor for DeleteDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html</para></summary>
    </member>
    <member name="M:Nest.DeleteDatafeedDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteDatafeedDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteDatafeedDescriptor.Force(System.Nullable{System.Boolean})">
      <summary>True if the datafeed should be forcefully deleted</summary>
    </member>
    <member name="T:Nest.DeleteExpiredDataDescriptor">
      <summary>Descriptor for DeleteExpiredData</summary>
    </member>
    <member name="T:Nest.DeleteFilterDescriptor">
      <summary>Descriptor for DeleteFilter</summary>
      <inheritdoc cref="T:Nest.IDeleteFilterRequest" />
    </member>
    <member name="M:Nest.DeleteFilterDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}</summary>
      <param name="filterId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteFilterDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteForecastDescriptor">
      <summary>Descriptor for DeleteForecast <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html</para></summary>
    </member>
    <member name="M:Nest.DeleteForecastDescriptor.#ctor(Nest.Id,Nest.Ids)">
      <summary>/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="forecastId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteForecastDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteForecastDescriptor.AllowNoForecasts(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if `_all` matches no forecasts</summary>
    </member>
    <member name="M:Nest.DeleteForecastDescriptor.Timeout(Nest.Time)">
      <summary>Controls the time to wait until the forecast(s) are deleted. Default to 30 seconds</summary>
    </member>
    <member name="T:Nest.DeleteJobDescriptor">
      <summary>Descriptor for DeleteJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html</para></summary>
    </member>
    <member name="M:Nest.DeleteJobDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteJobDescriptor.Force(System.Nullable{System.Boolean})">
      <summary>True if the job should be forcefully deleted</summary>
    </member>
    <member name="M:Nest.DeleteJobDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Should this request wait until the operation has completed before returning</summary>
    </member>
    <member name="T:Nest.DeleteModelSnapshotDescriptor">
      <summary>Descriptor for DeleteModelSnapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html</para></summary>
    </member>
    <member name="M:Nest.DeleteModelSnapshotDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteModelSnapshotDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.FlushJobDescriptor">
      <summary>Descriptor for FlushJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html</para></summary>
    </member>
    <member name="M:Nest.FlushJobDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_flush</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.FlushJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.FlushJobDescriptor.SkipTime(System.String)">
      <summary>Skips time to the given value without generating results or updating the model for the skipped interval</summary>
    </member>
    <member name="M:Nest.FlushJobDescriptor.AdvanceTime(System.Nullable{System.DateTimeOffset})">
      <summary>
            Specifies that no data prior to this date is expected.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.FlushJobDescriptor.CalculateInterim(System.Nullable{System.Boolean})">
      <summary>
            Calculates the interim results for the most recent bucket or all buckets within the latency period.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.FlushJobDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
             When used in conjunction with <see cref="P:Nest.IFlushJobRequest.CalculateInterim" />, specifies the range of buckets on
            which to calculate interim results.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.FlushJobDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            When used in conjunction with <see cref="P:Nest.IFlushJobRequest.CalculateInterim" />, specifies the range of buckets
            on which to calculate interim results.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ForecastJobDescriptor">
      <summary>Descriptor for ForecastJob</summary>
      <inheritdoc cref="T:Nest.IForecastJobRequest" />
    </member>
    <member name="M:Nest.ForecastJobDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_forecast</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.ForecastJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ForecastJobDescriptor.Duration(Nest.Time)">
      <summary>
            A period of time that indicates how far into the future to forecast. Defaults to 1 day.
            </summary>
      <inheritdoc cref="P:Nest.IForecastJobRequest.Duration" />
    </member>
    <member name="M:Nest.ForecastJobDescriptor.ExpiresIn(Nest.Time)">
      <summary>
            The period of time that forecast results are retained.
            After a forecast expires, the results are deleted. Defaults to 14 days.
            </summary>
      <inheritdoc cref="P:Nest.IForecastJobRequest.ExpiresIn" />
    </member>
    <member name="T:Nest.GetBucketsDescriptor">
      <summary>Descriptor for GetBuckets <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.#ctor(Nest.Id,Nest.Timestamp)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="timestamp">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetBucketsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/buckets</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetBucketsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetBucketsDescriptor.Timestamp(Nest.Timestamp)">
      <summary>The timestamp of the desired single bucket result</summary>
    </member>
    <member name="M:Nest.GetBucketsDescriptor.AnomalyScore(System.Nullable{System.Double})">
      <summary>
            Returns buckets with anomaly scores higher than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.Descending(System.Nullable{System.Boolean})">
      <summary>
            If true, the buckets are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns buckets with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.ExcludeInterim(System.Nullable{System.Boolean})">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.Expand(System.Nullable{System.Boolean})">
      <summary>
            If true, the output includes anomaly records.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.Page(System.Func{Nest.PageDescriptor,Nest.IPage})">
      <summary>
            Specifies pagination for the buckets
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.Sort(Nest.Field)">
      <summary>
            Specifies the sort field for the requested buckets. By default, the buckets are sorted by the timestamp field.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns buckets with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GetCalendarEventsDescriptor">
      <summary>Descriptor for GetCalendarEvents</summary>
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/events</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>Get events before this time</summary>
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.JobId(System.String)">
      <summary>Get events for the job. When this option is used calendar_id must be '_all'</summary>
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.Start(System.String)">
      <summary>Get events after this time</summary>
    </member>
    <member name="P:Nest.GetCalendarEventsDescriptor.Nest#IGetCalendarEventsRequest#From">
      <inheritdoc cref="P:Nest.IGetCalendarEventsRequest.From" />
    </member>
    <member name="P:Nest.GetCalendarEventsDescriptor.Nest#IGetCalendarEventsRequest#Size">
      <inheritdoc cref="P:Nest.IGetCalendarEventsRequest.Size" />
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.From(System.Nullable{System.Int32})">
      <summary>
            	Skips a number of events
            </summary>
      <inheritdoc cref="P:Nest.IGetCalendarEventsRequest.From" />
    </member>
    <member name="M:Nest.GetCalendarEventsDescriptor.Size(System.Nullable{System.Int32})">
      <summary>
                Specifies a max number of events to get
            </summary>
      <inheritdoc cref="P:Nest.IGetCalendarEventsRequest.Size" />
    </member>
    <member name="T:Nest.GetCalendarsDescriptor">
      <summary>Descriptor for GetCalendars</summary>
    </member>
    <member name="M:Nest.GetCalendarsDescriptor.#ctor">
      <summary>/_ml/calendars</summary>
    </member>
    <member name="M:Nest.GetCalendarsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}</summary>
      <param name="calendarId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetCalendarsDescriptor.CalendarId(Nest.Id)">
      <summary>The ID of the calendar to fetch</summary>
    </member>
    <member name="P:Nest.GetCalendarsDescriptor.Nest#IGetCalendarsRequest#Page">
      <inheritdoc cref="P:Nest.IGetCalendarsRequest.Page" />
    </member>
    <member name="M:Nest.GetCalendarsDescriptor.Page(System.Func{Nest.PageDescriptor,Nest.IPage})">
      <summary>
            Specifies pagination for the calendars
            </summary>
      <inheritdoc cref="P:Nest.IGetCalendarsRequest.Page" />
    </member>
    <member name="T:Nest.GetCategoriesDescriptor">
      <summary>Descriptor for GetCategories <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html</para></summary>
    </member>
    <member name="M:Nest.GetCategoriesDescriptor.#ctor(Nest.Id,Nest.LongId)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="categoryId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetCategoriesDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/categories/</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetCategoriesDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetCategoriesDescriptor.CategoryId(Nest.LongId)">
      <summary>The identifier of the category definition of interest</summary>
    </member>
    <member name="P:Nest.GetCategoriesDescriptor.Nest#IGetCategoriesRequest#Page">
      <inheritdoc cref="P:Nest.IGetCategoriesRequest.Page" />
    </member>
    <member name="M:Nest.GetCategoriesDescriptor.Page(System.Func{Nest.PageDescriptor,Nest.IPage})">
      <summary>
            Specifies pagination for the categories
            </summary>
      <inheritdoc cref="P:Nest.IGetCategoriesRequest.Page" />
    </member>
    <member name="T:Nest.GetDatafeedStatsDescriptor">
      <summary>Descriptor for GetDatafeedStats <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetDatafeedStatsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_stats</summary>
      <param name="datafeedId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetDatafeedStatsDescriptor.#ctor">
      <summary>/_ml/datafeeds/_stats</summary>
    </member>
    <member name="M:Nest.GetDatafeedStatsDescriptor.DatafeedId(Nest.Id)">
      <summary>The ID of the datafeeds stats to fetch</summary>
    </member>
    <member name="M:Nest.GetDatafeedStatsDescriptor.AllowNoDatafeeds(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)</summary>
    </member>
    <member name="T:Nest.GetDatafeedsDescriptor">
      <summary>Descriptor for GetDatafeeds <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetDatafeedsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}</summary>
      <param name="datafeedId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetDatafeedsDescriptor.#ctor">
      <summary>/_ml/datafeeds</summary>
    </member>
    <member name="M:Nest.GetDatafeedsDescriptor.DatafeedId(Nest.Id)">
      <summary>The ID of the datafeeds to fetch</summary>
    </member>
    <member name="M:Nest.GetDatafeedsDescriptor.AllowNoDatafeeds(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)</summary>
    </member>
    <member name="T:Nest.GetFiltersDescriptor">
      <summary>Descriptor for GetFilters</summary>
    </member>
    <member name="M:Nest.GetFiltersDescriptor.#ctor">
      <summary>/_ml/filters</summary>
    </member>
    <member name="M:Nest.GetFiltersDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}</summary>
      <param name="filterId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetFiltersDescriptor.FilterId(Nest.Id)">
      <summary>The ID of the filter to fetch</summary>
    </member>
    <member name="M:Nest.GetFiltersDescriptor.From(System.Nullable{System.Int32})">
      <summary>skips a number of filters</summary>
    </member>
    <member name="M:Nest.GetFiltersDescriptor.Size(System.Nullable{System.Int32})">
      <summary>specifies a max number of filters to get</summary>
    </member>
    <member name="T:Nest.GetInfluencersDescriptor">
      <summary>Descriptor for GetInfluencers <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/influencers</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.InfluencerScore(System.Nullable{System.Double})">
      <summary>
            Returns influencers with anomaly scores higher than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.Desc(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns influencers with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.ExcludeInterim(System.Nullable{System.Boolean})">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.Page(System.Func{Nest.PageDescriptor,Nest.IPage})">
      <summary>
            Specifies pagination for the influencers.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.Sort(Nest.Field)">
      <summary>
            Specifies the sort field for the requested influencers. By default, the influencers are sorted by the
            <see cref="P:Nest.IGetInfluencersRequest.InfluencerScore" /> value.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns influencers with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GetJobStatsDescriptor">
      <summary>Descriptor for GetJobStats <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetJobStatsDescriptor.#ctor">
      <summary>/_ml/anomaly_detectors/_stats</summary>
    </member>
    <member name="M:Nest.GetJobStatsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_stats</summary>
      <param name="jobId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetJobStatsDescriptor.JobId(Nest.Id)">
      <summary>The ID of the jobs stats to fetch</summary>
    </member>
    <member name="M:Nest.GetJobStatsDescriptor.AllowNoJobs(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)</summary>
    </member>
    <member name="T:Nest.GetJobsDescriptor">
      <summary>Descriptor for GetJobs <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetJobsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}</summary>
      <param name="jobId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetJobsDescriptor.#ctor">
      <summary>/_ml/anomaly_detectors</summary>
    </member>
    <member name="M:Nest.GetJobsDescriptor.JobId(Nest.Id)">
      <summary>The ID of the jobs to fetch</summary>
    </member>
    <member name="M:Nest.GetJobsDescriptor.AllowNoJobs(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)</summary>
    </member>
    <member name="T:Nest.GetModelSnapshotsDescriptor">
      <summary>Descriptor for GetModelSnapshots <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.SnapshotId(Nest.Id)">
      <summary>The ID of the snapshot to fetch</summary>
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.Descending(System.Nullable{System.Boolean})">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns snapshots with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.Page(System.Func{Nest.PageDescriptor,Nest.IPage})">
      <summary>
            Specifies pagination for the snapshots.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.Sort(Nest.Field)">
      <summary>
            Specifies the sort field for the requested snapshots. By default, snapshots are sorted by their timestamp.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetModelSnapshotsDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns snapshots with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GetOverallBucketsDescriptor">
      <summary>Descriptor for GetOverallBuckets <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html</para></summary>
      <inheritdoc cref="T:Nest.IGetOverallBucketsRequest" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/overall_buckets</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.AllowNoJobs(System.Nullable{System.Boolean})">
      <summary>
            If <c>false</c> and the job id does not match any job an error will be returned. The default value is true.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.AllowNoJobs" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.BucketSpan(Nest.Time)">
      <summary>
            The span of the overall buckets.
            Must be greater or equal to the largest job’s bucket span. Defaults to the largest job’s bucket span.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.BucketSpan" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns overall buckets with timestamps earlier than this time.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.End" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.ExcludeInterim(System.Nullable{System.Boolean})">
      <summary>
            If true, the output excludes interim overall buckets. Overall buckets are interim if any of the job
            buckets within the overall bucket interval are interim. By default, interim results are included.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.ExcludeInterim" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.OverallScore(System.Nullable{System.Double})">
      <summary>
            Returns overall buckets with overall scores greater or equal than this value.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.OverallScore" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns overall buckets with timestamps after this time.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.Start" />
    </member>
    <member name="M:Nest.GetOverallBucketsDescriptor.TopN(System.Nullable{System.Int32})">
      <summary>
            The number of top job bucket scores to be used in the
            <see cref="P:Nest.OverallBucket.OverallScore" /> calculation on the response.
            The default value is <c>1</c>.
            </summary>
      <inheritdoc cref="P:Nest.IGetOverallBucketsRequest.TopN" />
    </member>
    <member name="T:Nest.GetAnomalyRecordsDescriptor">
      <summary>Descriptor for GetAnomalyRecords <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/records</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.Descending(System.Nullable{System.Boolean})">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns records with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.Page(System.Func{Nest.PageDescriptor,Nest.IPage})">
      <summary>
            Specifies pagination for the records
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.Sort(Nest.Field)">
      <summary>
            Specifies the sort field for the requested records. By default, records are sorted by the anomaly score value.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            Returns records with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.ExcludeInterim(System.Nullable{System.Boolean})">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsDescriptor.RecordScore(System.Nullable{System.Double})">
      <summary>
            Returns records with anomaly scores higher than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.MachineLearningInfoDescriptor">
      <summary>Descriptor for Info</summary>
      <inheritdoc cref="T:Nest.IMachineLearningInfoRequest" />
    </member>
    <member name="T:Nest.OpenJobDescriptor">
      <summary>Descriptor for OpenJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.OpenJobDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_open</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.OpenJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.OpenJobDescriptor.Timeout(Nest.Time)">
      <summary>
            Controls the time to wait until a job has opened. The default value is 30 minutes.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PostCalendarEventsDescriptor">
      <summary>Descriptor for PostCalendarEvents</summary>
    </member>
    <member name="M:Nest.PostCalendarEventsDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/events</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.PostCalendarEventsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PostCalendarEventsDescriptor.Nest#IPostCalendarEventsRequest#Events">
      <inheritdoc cref="P:Nest.IPostCalendarEventsRequest.Events" />
    </member>
    <member name="M:Nest.PostCalendarEventsDescriptor.Events(System.Collections.Generic.IEnumerable{Nest.ScheduledEvent})">
      <summary>
             A list of one of more scheduled events.
            </summary>
      <inheritdoc cref="P:Nest.IPostCalendarEventsRequest.Events" />
    </member>
    <member name="M:Nest.PostCalendarEventsDescriptor.Events(Nest.ScheduledEvent[])">
      <summary>
             A list of one of more scheduled events.
            </summary>
      <inheritdoc cref="P:Nest.IPostCalendarEventsRequest.Events" />
    </member>
    <member name="T:Nest.PostJobDataDescriptor">
      <summary>Descriptor for PostJobData <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html</para></summary>
      <inheritdoc cref="T:Nest.IPostJobDataRequest" />
    </member>
    <member name="M:Nest.PostJobDataDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_data</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.PostJobDataDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PostJobDataDescriptor.ResetEnd(System.Nullable{System.DateTimeOffset})">
      <summary>Optional parameter to specify the end of the bucket resetting range</summary>
    </member>
    <member name="M:Nest.PostJobDataDescriptor.ResetStart(System.Nullable{System.DateTimeOffset})">
      <summary>Optional parameter to specify the start of the bucket resetting range</summary>
    </member>
    <member name="M:Nest.PostJobDataDescriptor.Data(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>
            The job data.
            </summary>
      <remarks>
            The job must have a state of open to receive and process the data.
            </remarks>
      <inheritdoc cref="P:Nest.IPostJobDataRequest.Data" />
    </member>
    <member name="M:Nest.PostJobDataDescriptor.Data(System.Object[])">
      <summary>
            The job data.
            </summary>
      <remarks>
            The job must have a state of open to receive and process the data.
            </remarks>
      <inheritdoc cref="P:Nest.IPostJobDataRequest.Data" />
    </member>
    <member name="T:Nest.PreviewDatafeedDescriptor">
      <summary>Descriptor for PreviewDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PreviewDatafeedDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_preview</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.PreviewDatafeedDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.PutCalendarDescriptor">
      <summary>Descriptor for PutCalendar</summary>
    </member>
    <member name="M:Nest.PutCalendarDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutCalendarDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutCalendarDescriptor.Description(System.String)">
      <summary>
            A description of the calendar.
            </summary>
      <inheritdoc cref="P:Nest.IPutCalendarRequest.Description" />
    </member>
    <member name="T:Nest.PutCalendarJobDescriptor">
      <summary>Descriptor for PutCalendarJob</summary>
    </member>
    <member name="M:Nest.PutCalendarJobDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/jobs/{job_id}</summary>
      <param name="calendarId">this parameter is required</param>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutCalendarJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.PutDatafeedDescriptor`1">
      <summary>Descriptor for PutDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html</para></summary>
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.Aggregations(System.Func{Nest.AggregationContainerDescriptor{`0},Nest.IAggregationContainer})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.ChunkingConfig(System.Func{Nest.ChunkingConfigDescriptor,Nest.IChunkingConfig})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.Frequency(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.Indices(Nest.Indices)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.Indices``1">
      <summary>a shortcut into calling Indices(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.AllIndices">
      <summary>A shortcut into calling Indices(Indices.All)</summary>
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.JobId(Nest.Id)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.QueryDelay(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.ScriptFields(System.Func{Nest.ScriptFieldsDescriptor,Nest.IPromise{Nest.IScriptFields}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedDescriptor`1.ScrollSize(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="T:Nest.PutFilterDescriptor">
      <summary>Descriptor for PutFilter</summary>
    </member>
    <member name="M:Nest.PutFilterDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}</summary>
      <param name="filterId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutFilterDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutFilterDescriptor.Description(System.String)">
      <summary>
            A description of the filter.
            </summary>
      <inheritdoc cref="P:Nest.IPutFilterRequest.Description" />
    </member>
    <member name="M:Nest.PutFilterDescriptor.Items(System.String[])">
      <summary>
            The items of the filter. A wildcard * can be used at the beginning or
            the end of an item. Up to 10000 items are allowed in each filter.
            </summary>
      <inheritdoc cref="P:Nest.IPutFilterRequest.Items" />
    </member>
    <member name="M:Nest.PutFilterDescriptor.Items(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            The items of the filter. A wildcard * can be used at the beginning or
            the end of an item. Up to 10000 items are allowed in each filter.
            </summary>
      <inheritdoc cref="P:Nest.IPutFilterRequest.Items" />
    </member>
    <member name="T:Nest.PutJobDescriptor`1">
      <summary>Descriptor for PutJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutJobDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutJobDescriptor`1.AnalysisConfig(System.Func{Nest.AnalysisConfigDescriptor{`0},Nest.IAnalysisConfig})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.AnalysisLimits(System.Func{Nest.AnalysisLimitsDescriptor,Nest.IAnalysisLimits})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.DataDescription(System.Func{Nest.DataDescriptionDescriptor{`0},Nest.IDataDescription})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.Description(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.ModelPlot(System.Func{Nest.ModelPlotConfigDescriptor{`0},Nest.IModelPlotConfig})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.ModelSnapshotRetentionDays(System.Nullable{System.Int64})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.ResultsIndexName(Nest.IndexName)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobDescriptor`1.ResultsIndexName``1">
      <inheritdoc />
    </member>
    <member name="T:Nest.RevertModelSnapshotDescriptor">
      <summary>Descriptor for RevertModelSnapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.RevertModelSnapshotDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">this parameter is required</param>
    </member>
    <member name="M:Nest.RevertModelSnapshotDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.RevertModelSnapshotDescriptor.DeleteInterveningResults(System.Nullable{System.Boolean})">
      <summary>
            If true, deletes the results in the time period between the latest results and the time of
            the reverted snapshot. It also resets the model to accept records for this time period.
            The default value is false.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StartDatafeedDescriptor">
      <summary>Descriptor for StartDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StartDatafeedDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_start</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.StartDatafeedDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.StartDatafeedDescriptor.Timeout(Nest.Time)">
      <summary>
            Controls the amount of time to wait until a datafeed starts.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StartDatafeedDescriptor.Start(System.Nullable{System.DateTimeOffset})">
      <summary>
            The time that the datafeed should begin. This value is inclusive.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StartDatafeedDescriptor.End(System.Nullable{System.DateTimeOffset})">
      <summary>
            The time that the datafeed should end. This value is exclusive.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StopDatafeedDescriptor">
      <summary>Descriptor for StopDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopDatafeedDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_stop</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.StopDatafeedDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.StopDatafeedDescriptor.AllowNoDatafeeds(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)</summary>
    </member>
    <member name="M:Nest.StopDatafeedDescriptor.Timeout(Nest.Time)">
      <summary>
            Controls the amount of time to wait until a datafeed stops.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopDatafeedDescriptor.Force(System.Nullable{System.Boolean})">
      <summary>
            If true, the datafeed is stopped forcefully.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.UpdateDatafeedDescriptor`1">
      <summary>Descriptor for UpdateDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html</para></summary>
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_update</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.Aggregations(System.Func{Nest.AggregationContainerDescriptor{`0},Nest.IAggregationContainer})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.ChunkingConfig(System.Func{Nest.ChunkingConfigDescriptor,Nest.IChunkingConfig})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.Frequency(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.Indices(Nest.Indices)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.Indices``1">
      <summary>a shortcut into calling Indices(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.AllIndices">
      <summary>A shortcut into calling Indices(Indices.All)</summary>
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.JobId(Nest.Id)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.QueryDelay(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.ScriptFields(System.Func{Nest.ScriptFieldsDescriptor,Nest.IPromise{Nest.IScriptFields}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedDescriptor`1.ScrollSize(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="T:Nest.UpdateFilterDescriptor">
      <summary>Descriptor for UpdateFilter</summary>
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}/_update</summary>
      <param name="filterId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.Description(System.String)">
      <summary>
            A description for the filter
            </summary>
      <inheritdoc cref="P:Nest.IUpdateFilterRequest.Description" />
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.AddItems(System.String[])">
      <summary>
            The items to add to the filter
            </summary>
      <inheritdoc cref="P:Nest.IUpdateFilterRequest.AddItems" />
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.AddItems(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            The items to add to the filter
            </summary>
      <inheritdoc cref="P:Nest.IUpdateFilterRequest.AddItems" />
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.RemoveItems(System.String[])">
      <summary>
            The items to remove from the filter
            </summary>
      <inheritdoc cref="P:Nest.IUpdateFilterRequest.RemoveItems" />
    </member>
    <member name="M:Nest.UpdateFilterDescriptor.RemoveItems(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            The items to remove from the filter
            </summary>
      <inheritdoc cref="P:Nest.IUpdateFilterRequest.RemoveItems" />
    </member>
    <member name="T:Nest.UpdateJobDescriptor`1">
      <summary>Descriptor for UpdateJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_update</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.AnalysisLimits(System.Func{Nest.AnalysisMemoryLimitDescriptor,Nest.IAnalysisMemoryLimit})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.BackgroundPersistInterval(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.CustomSettings(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.Description(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.ModelPlot(System.Func{Nest.ModelPlotConfigEnabledDescriptor{`0},Nest.IModelPlotConfigEnabled})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.ModelSnapshotRetentionDays(System.Nullable{System.Int64})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.RenormalizationWindowDays(System.Nullable{System.Int64})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobDescriptor`1.ResultsRetentionDays(System.Nullable{System.Int64})">
      <inheritdoc />
    </member>
    <member name="T:Nest.UpdateModelSnapshotDescriptor">
      <summary>Descriptor for UpdateModelSnapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateModelSnapshotDescriptor.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateModelSnapshotDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UpdateModelSnapshotDescriptor.Description(System.String)">
      <summary>
            An optional description of the model snapshot. For example, "Before black friday".
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateModelSnapshotDescriptor.Retain(System.Nullable{System.Boolean})">
      <summary>
            If true, this snapshot will not be deleted during automatic cleanup of snapshots older than model_snapshot_retention_days.
            Note that this snapshot will still be deleted when the job is deleted.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ValidateJobDescriptor`1">
      <summary>Descriptor for ValidateJob</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.AnalysisConfig(System.Func{Nest.AnalysisConfigDescriptor{`0},Nest.IAnalysisConfig})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.AnalysisLimits(System.Func{Nest.AnalysisLimitsDescriptor,Nest.IAnalysisLimits})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.DataDescription(System.Func{Nest.DataDescriptionDescriptor{`0},Nest.IDataDescription})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.Description(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.ModelPlot(System.Func{Nest.ModelPlotConfigDescriptor{`0},Nest.IModelPlotConfig})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.ModelSnapshotRetentionDays(System.Nullable{System.Int64})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.ResultsIndexName(Nest.IndexName)">
      <inheritdoc />
    </member>
    <member name="M:Nest.ValidateJobDescriptor`1.ResultsIndexName``1">
      <inheritdoc />
    </member>
    <member name="T:Nest.ValidateDetectorDescriptor`1">
      <summary>Descriptor for ValidateDetector</summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DeprecationInfoDescriptor">
      <summary>Descriptor for DeprecationInfo <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html</para></summary>
    </member>
    <member name="M:Nest.DeprecationInfoDescriptor.#ctor">
      <summary>/_migration/deprecations</summary>
    </member>
    <member name="M:Nest.DeprecationInfoDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_migration/deprecations</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.DeprecationInfoDescriptor.Index(Nest.IndexName)">
      <summary>Index pattern</summary>
    </member>
    <member name="M:Nest.DeprecationInfoDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.BulkDescriptor">
      <summary>Descriptor for Bulk <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</para></summary>
    </member>
    <member name="M:Nest.BulkDescriptor.#ctor">
      <summary>/_bulk</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_bulk</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.BulkDescriptor.Index(Nest.IndexName)">
      <summary>Default index for items which don't provide one</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.Pipeline(System.String)">
      <summary>The pipeline id to preprocess incoming documents with</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.BulkDescriptor.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.SourceExcludes(Nest.Fields)">
      <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.SourceExcludes``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.SourceIncludes(Nest.Fields)">
      <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.SourceIncludes``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.TypeQueryString(System.String)">
      <summary>Default document type for items which don't provide one</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.BulkDescriptor.CreateMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkCreateDescriptor{``0},``0,Nest.IBulkCreateOperation{``0}})">
      <summary>
            CreateMany, convenience method to create many documents at once.
            </summary>
      <param name="objects">the objects to create</param>
      <param name="bulkCreateSelector">A func called on each object to describe the individual create operation</param>
    </member>
    <member name="M:Nest.BulkDescriptor.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkIndexDescriptor{``0},``0,Nest.IBulkIndexOperation{``0}})">
      <summary>
            IndexMany, convenience method to pass many objects at once.
            </summary>
      <param name="objects">the objects to index</param>
      <param name="bulkIndexSelector">A func called on each object to describe the individual index operation</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkDeleteDescriptor{``0},``0,Nest.IBulkDeleteOperation{``0}})" -->
    <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.BulkDeleteDescriptor{``0},System.String,Nest.IBulkDeleteOperation{``0}})">
      <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
      <param name="ids">Enumerable of string ids to delete</param>
      <param name="bulkDeleteSelector">A func called on each ids to describe the individual delete operation</param>
    </member>
    <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{System.Int64},System.Func{Nest.BulkDeleteDescriptor{``0},System.Int64,Nest.IBulkDeleteOperation{``0}})">
      <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
      <param name="ids">Enumerable of int ids to delete</param>
      <param name="bulkDeleteSelector">A func called on each ids to describe the individual delete operation</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Nest.BulkDescriptor.UpdateMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkUpdateDescriptor{``0,``0},``0,Nest.IBulkUpdateOperation{``0,``0}})" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.BulkDescriptor.UpdateMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkUpdateDescriptor{``0,``1},``0,Nest.IBulkUpdateOperation{``0,``1}})" -->
    <member name="T:Nest.ClearScrollDescriptor">
      <summary>Descriptor for ClearScroll <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</para></summary>
    </member>
    <member name="T:Nest.CountDescriptor`1">
      <summary>Descriptor for Count <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</para></summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.#ctor">
      <summary>/{index}/_count</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_count</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.CountDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of indices to restrict the results</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.Analyzer(System.String)">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.DefaultOperator(System.Nullable{Elasticsearch.Net.DefaultOperator})">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.Df(System.String)">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.IgnoreThrottled(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete, expanded or aliased indices should be ignored when throttled</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.MinScore(System.Nullable{System.Double})">
      <summary>Include only documents with a specific `_score` value in the result</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.QueryOnQueryString(System.String)">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.CountDescriptor`1.TerminateAfter(System.Nullable{System.Int64})">
      <summary>The maximum count for each shard, upon reaching which the query execution will terminate early</summary>
    </member>
    <member name="T:Nest.CreateDescriptor`1">
      <summary>Descriptor for Create <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</para></summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_create/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_create/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_create/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.CreateDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Pipeline(System.String)">
      <summary>The pipeline id to preprocess incoming documents with</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.CreateDescriptor`1.Id(Nest.Id)">
      <summary>
            Sets the id for the document. Overrides the id that may be inferred from the document.
            </summary>
    </member>
    <member name="T:Nest.DeleteDescriptor`1">
      <summary>Descriptor for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</para></summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.IfPrimaryTerm(System.Nullable{System.Int64})">
      <summary>only perform the delete operation if the last operation that has changed the document has the specified primary term</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.IfSequenceNumber(System.Nullable{System.Int64})">
      <summary>only perform the delete operation if the last operation that has changed the document has the specified sequence number</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.DeleteDescriptor`1.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="T:Nest.DeleteByQueryDescriptor`1">
      <summary>Descriptor for DeleteByQuery <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</para></summary>
      <inheritdoc cref="T:Nest.IDeleteByQueryRequest" />
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_delete_by_query</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.#ctor">
      <summary>/{index}/_delete_by_query</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Analyzer(System.String)">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Conflicts(System.Nullable{Elasticsearch.Net.Conflicts})">
      <summary>What to do when the delete by query hits version conflicts?</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.DefaultOperator(System.Nullable{Elasticsearch.Net.DefaultOperator})">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Df(System.String)">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.From(System.Nullable{System.Int64})">
      <summary>Starting offset (default: 0)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.QueryOnQueryString(System.String)">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Refresh(System.Nullable{System.Boolean})">
      <summary>Should the effected indexes be refreshed?</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.RequestCache(System.Nullable{System.Boolean})">
      <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.RequestsPerSecond(System.Nullable{System.Int64})">
      <summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Scroll(Nest.Time)">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.ScrollSize(System.Nullable{System.Int64})">
      <summary>Size on the scroll request powering the delete by query</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.SearchTimeout(Nest.Time)">
      <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.SearchType(System.Nullable{Elasticsearch.Net.SearchType})">
      <summary>Search operation type</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Size(System.Nullable{System.Int64})">
      <summary>Deprecated, please use `max_docs` instead</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Slices(System.Nullable{System.Int64})">
      <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Nest.DeleteByQueryDescriptor`1.Sort(System.String[])" -->
    <member name="M:Nest.DeleteByQueryDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Stats(System.String[])">
      <summary>Specific 'tag' of the request for logging and statistical purposes</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.TerminateAfter(System.Nullable{System.Int64})">
      <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Timeout(Nest.Time)">
      <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Version(System.Nullable{System.Boolean})">
      <summary>Specify whether to return document version as part of a hit</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Should the request should block until the delete by query is complete.</summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.MatchAll">
      <summary>
            A match_all query to select all documents. Convenient shorthand for specifying
            a match_all query using <see cref="M:Nest.DeleteByQueryDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})" /></summary>
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IDeleteByQueryRequest.Query" />
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.Slice(System.Func{Nest.SlicedScrollDescriptor{`0},Nest.ISlicedScroll})">
      <inheritdoc cref="P:Nest.IDeleteByQueryRequest.Slice" />
    </member>
    <member name="M:Nest.DeleteByQueryDescriptor`1.MaximumDocuments(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.IDeleteByQueryRequest.MaximumDocuments" />
    </member>
    <member name="T:Nest.DeleteByQueryRethrottleDescriptor">
      <summary>Descriptor for DeleteByQueryRethrottle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</para></summary>
      <inheritdoc cref="T:Nest.IDeleteByQueryRethrottleRequest" />
    </member>
    <member name="M:Nest.DeleteByQueryRethrottleDescriptor.#ctor(Nest.TaskId)">
      <summary>/_delete_by_query/{task_id}/_rethrottle</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteByQueryRethrottleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteByQueryRethrottleDescriptor.RequestsPerSecond(System.Nullable{System.Int64})">
      <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
    </member>
    <member name="T:Nest.DeleteScriptDescriptor">
      <summary>Descriptor for DeleteScript <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</para></summary>
    </member>
    <member name="M:Nest.DeleteScriptDescriptor.#ctor(Nest.Id)">
      <summary>/_scripts/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteScriptDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteScriptDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.DeleteScriptDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.DocumentExistsDescriptor`1">
      <summary>Descriptor for DocumentExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Realtime(System.Nullable{System.Boolean})">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Refresh(System.Nullable{System.Boolean})">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.StoredFields(Nest.Fields)">
      <summary>A comma-separated list of stored fields to return in the response</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A comma-separated list of stored fields to return in the response</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.DocumentExistsDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="T:Nest.SourceExistsDescriptor`1">
      <summary>Descriptor for SourceExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Realtime(System.Nullable{System.Boolean})">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Refresh(System.Nullable{System.Boolean})">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.SourceExistsDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="T:Nest.ExplainDescriptor`1">
      <summary>Descriptor for Explain <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</para></summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Analyzer(System.String)">
      <summary>The analyzer for the query string query</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.DefaultOperator(System.Nullable{Elasticsearch.Net.DefaultOperator})">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Df(System.String)">
      <summary>The default field for query string query (default: _all)</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.QueryOnQueryString(System.String)">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.ExplainDescriptor`1.StoredFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            Allows to selectively load specific fields for each document
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
    </member>
    <member name="T:Nest.FieldCapabilitiesDescriptor">
      <summary>Descriptor for FieldCapabilities <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</para></summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.#ctor">
      <summary>/_field_caps</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_field_caps</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.Fields(Nest.Fields)">
      <summary>A comma-separated list of field names</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of field names</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesDescriptor.IncludeUnmapped(System.Nullable{System.Boolean})">
      <summary>Indicates whether unmapped fields should be included in the response.</summary>
    </member>
    <member name="T:Nest.GetDescriptor`1">
      <summary>Descriptor for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.GetDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Realtime(System.Nullable{System.Boolean})">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Refresh(System.Nullable{System.Boolean})">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.StoredFields(Nest.Fields)">
      <summary>A comma-separated list of stored fields to return in the response</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A comma-separated list of stored fields to return in the response</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.GetDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="T:Nest.GetScriptDescriptor">
      <summary>Descriptor for GetScript <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</para></summary>
    </member>
    <member name="M:Nest.GetScriptDescriptor.#ctor(Nest.Id)">
      <summary>/_scripts/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetScriptDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetScriptDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.SourceDescriptor`1">
      <summary>Descriptor for Source <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.SourceDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Realtime(System.Nullable{System.Boolean})">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Refresh(System.Nullable{System.Boolean})">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.SourceDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="T:Nest.IndexDescriptor`1">
      <summary>Descriptor for Index <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</para></summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.IndexName)">
      <summary>/{index}/_doc</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndexDescriptor`1.#ctor">
      <summary>/{index}/_doc</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Id(Nest.Id)">
      <summary>Document ID</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.IfPrimaryTerm(System.Nullable{System.Int64})">
      <summary>only perform the index operation if the last operation that has changed the document has the specified primary term</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.IfSequenceNumber(System.Nullable{System.Int64})">
      <summary>only perform the index operation if the last operation that has changed the document has the specified sequence number</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.OpType(System.Nullable{Elasticsearch.Net.OpType})">
      <summary>Explicit operation type</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Pipeline(System.String)">
      <summary>The pipeline id to preprocess incoming documents with</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.IndexDescriptor`1.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="T:Nest.MultiGetDescriptor">
      <summary>Descriptor for MultiGet <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</para></summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.#ctor">
      <summary>/_mget</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_mget</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.MultiGetDescriptor.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.Realtime(System.Nullable{System.Boolean})">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.Refresh(System.Nullable{System.Boolean})">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.SourceExcludes``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.SourceIncludes``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.StoredFields``1(System.Func{Nest.FieldsDescriptor{``0},Nest.IPromise{Nest.Fields}})">
      <summary> Default stored fields to load for each document. </summary>
    </member>
    <member name="M:Nest.MultiGetDescriptor.StoredFields(Nest.Fields)">
      <summary> Default stored fields to load for each document. </summary>
    </member>
    <member name="T:Nest.MultiSearchDescriptor">
      <summary>Descriptor for MultiSearch <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</para></summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.#ctor">
      <summary>/_msearch</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_msearch</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to use as default</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.CcsMinimizeRoundtrips(System.Nullable{System.Boolean})">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.MaxConcurrentSearches(System.Nullable{System.Int64})">
      <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.MaxConcurrentShardRequests(System.Nullable{System.Int64})">
      <summary>The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.PreFilterShardSize(System.Nullable{System.Int64})">
      <summary>A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.SearchType(System.Nullable{Elasticsearch.Net.SearchType})">
      <summary>Search operation type</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.TotalHitsAsInteger(System.Nullable{System.Boolean})">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="M:Nest.MultiSearchDescriptor.TypedKeys(System.Nullable{System.Boolean})">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="T:Nest.MultiSearchTemplateDescriptor">
      <summary>Descriptor for MultiSearchTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</para></summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.#ctor">
      <summary>/_msearch/template</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.#ctor(Nest.Indices)">
      <summary>/{index}/_msearch/template</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to use as default</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.CcsMinimizeRoundtrips(System.Nullable{System.Boolean})">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.MaxConcurrentSearches(System.Nullable{System.Int64})">
      <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.SearchType(System.Nullable{Elasticsearch.Net.SearchType})">
      <summary>Search operation type</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.TotalHitsAsInteger(System.Nullable{System.Boolean})">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateDescriptor.TypedKeys(System.Nullable{System.Boolean})">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="T:Nest.MultiTermVectorsDescriptor">
      <summary>Descriptor for MultiTermVectors <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</para></summary>
      <inheritdoc cref="T:Nest.IMultiTermVectorsRequest" />
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.#ctor">
      <summary>/_mtermvectors</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_mtermvectors</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Index(Nest.IndexName)">
      <summary>The index in which the document resides.</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.FieldStatistics(System.Nullable{System.Boolean})">
      <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Fields(Nest.Fields)">
      <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Offsets(System.Nullable{System.Boolean})">
      <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Payloads(System.Nullable{System.Boolean})">
      <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Positions(System.Nullable{System.Boolean})">
      <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Realtime(System.Nullable{System.Boolean})">
      <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.TermStatistics(System.Nullable{System.Boolean})">
      <summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Documents``1(System.Func{Nest.MultiTermVectorOperationDescriptor{``0},Nest.IMultiTermVectorOperation})">
      <summary>
            A document for which to generate term vectors
            </summary>
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Documents``1(System.Collections.Generic.IEnumerable{System.Int64},System.Func{Nest.MultiTermVectorOperationDescriptor{``0},System.Int64,Nest.IMultiTermVectorOperation})">
      <summary>
            A document for which to generate term vectors
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorsRequest.Documents" />
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Documents``1(System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.MultiTermVectorOperationDescriptor{``0},System.String,Nest.IMultiTermVectorOperation})">
      <summary>
            A document for which to generate term vectors
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorsRequest.Documents" />
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Documents``1(System.Collections.Generic.IEnumerable{Nest.Id},System.Func{Nest.MultiTermVectorOperationDescriptor{``0},Nest.Id,Nest.IMultiTermVectorOperation})">
      <summary>
            A document for which to generate term vectors
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorsRequest.Documents" />
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Ids(System.Collections.Generic.IEnumerable{Nest.Id})">
      <summary>
            The ids of documents within the same index and type
            for which to generate term vectors. Must be used in
            conjunction with <see cref="P:Nest.IMultiTermVectorsRequest.Index" /> and <see cref="T:System.Type" /></summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorsRequest.Ids" />
    </member>
    <member name="M:Nest.MultiTermVectorsDescriptor.Ids(Nest.Id[])">
      <summary>
            The ids of documents within the same index and type
            for which to generate term vectors. Must be used in
            conjunction with <see cref="P:Nest.IMultiTermVectorsRequest.Index" /> and <see cref="T:System.Type" /></summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorsRequest.Ids" />
    </member>
    <member name="T:Nest.PutScriptDescriptor">
      <summary>Descriptor for PutScript <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</para></summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.#ctor(Nest.Id)">
      <summary>/_scripts/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.PutScriptDescriptor.#ctor(Nest.Id,Nest.Name)">
      <summary>/_scripts/{id}/{context}</summary>
      <param name="id">this parameter is required</param>
      <param name="context">Optional, accepts null</param>
    </member>
    <member name="M:Nest.PutScriptDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.Context(Nest.Name)">
      <summary>Script context</summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.Painless(System.String)">
      <summary>
            A Painless language script
            </summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.LuceneExpression(System.String)">
      <summary>
            A Lucene expression language script
            </summary>
    </member>
    <member name="M:Nest.PutScriptDescriptor.Mustache(System.String)">
      <summary>
            A Mustache template language script
            </summary>
    </member>
    <member name="T:Nest.ReindexOnServerDescriptor">
      <summary>Descriptor for ReindexOnServer <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</para></summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Refresh(System.Nullable{System.Boolean})">
      <summary>Should the effected indexes be refreshed?</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.RequestsPerSecond(System.Nullable{System.Int64})">
      <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Scroll(Nest.Time)">
      <summary>Control how long to keep the search context alive</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Slices(System.Nullable{System.Int64})">
      <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Timeout(Nest.Time)">
      <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Should the request should block until the reindex is complete.</summary>
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Source(System.Func{Nest.ReindexSourceDescriptor,Nest.IReindexSource})">
      <summary>
            The source for the reindex operation
            </summary>
      <inheritdoc cref="P:Nest.IReindexOnServerRequest.Source" />
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Destination(System.Func{Nest.ReindexDestinationDescriptor,Nest.IReindexDestination})">
      <summary>
            The destination for the reindex operation.
            </summary>
      <remarks>
            Reindex does not attempt to set up the destination index. It does not copy the settings
            of the source index. You should set up the destination index beforehand
            </remarks>
      <inheritdoc cref="P:Nest.IReindexOnServerRequest.Destination" />
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Script(System.String)">
      <summary>
            A script that can modify documents from source, including metadata, before reindexing
            </summary>
      <inheritdoc cref="P:Nest.IReindexOnServerRequest.Script" />
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            A script that can modify documents from source, including metadata, before reindexing
            </summary>
      <inheritdoc cref="P:Nest.IReindexOnServerRequest.Script" />
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.Conflicts(System.Nullable{Elasticsearch.Net.Conflicts})">
      <summary>
            Determine what to do in the event of version conflicts.
            Defaults to <see cref="F:Elasticsearch.Net.Conflicts.Abort" /></summary>
      <inheritdoc cref="P:Nest.IReindexOnServerRequest.Conflicts" />
    </member>
    <member name="M:Nest.ReindexOnServerDescriptor.MaximumDocuments(System.Nullable{System.Int64})">
      <summary>
            Limit the number of processed documents
            </summary>
      <inheritdoc cref="P:Nest.IReindexOnServerRequest.MaximumDocuments" />
    </member>
    <member name="T:Nest.ReindexRethrottleDescriptor">
      <summary>Descriptor for ReindexRethrottle <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</para></summary>
    </member>
    <member name="M:Nest.ReindexRethrottleDescriptor.#ctor(Nest.TaskId)">
      <summary>/_reindex/{task_id}/_rethrottle</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.ReindexRethrottleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ReindexRethrottleDescriptor.RequestsPerSecond(System.Nullable{System.Int64})">
      <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
    </member>
    <member name="T:Nest.RenderSearchTemplateDescriptor">
      <summary>Descriptor for RenderSearchTemplate <para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</para></summary>
    </member>
    <member name="M:Nest.RenderSearchTemplateDescriptor.#ctor">
      <summary>/_render/template</summary>
    </member>
    <member name="M:Nest.RenderSearchTemplateDescriptor.#ctor(Nest.Id)">
      <summary>/_render/template/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.RenderSearchTemplateDescriptor.Id(Nest.Id)">
      <summary>The id of the stored search template</summary>
    </member>
    <member name="T:Nest.ExecutePainlessScriptDescriptor">
      <summary>Descriptor for ExecutePainlessScript <para>https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</para></summary>
      <inheritdoc cref="T:Nest.IExecutePainlessScriptRequest" />
    </member>
    <member name="M:Nest.ExecutePainlessScriptDescriptor.Script(System.Func{Nest.InlineScriptDescriptor,Nest.IInlineScript})">
      <summary> The script to execute </summary>
      <inheritdoc cref="P:Nest.IExecutePainlessScriptRequest.Script" />
    </member>
    <member name="M:Nest.ExecutePainlessScriptDescriptor.ContextSetup(System.Func{Nest.PainlessContextSetupDescriptor,Nest.IPainlessContextSetup})">
      <inheritdoc cref="P:Nest.IExecutePainlessScriptRequest.ContextSetup" />
    </member>
    <member name="M:Nest.ExecutePainlessScriptDescriptor.Context(System.String)">
      <summary> The context the script should be executed in </summary>
      <inheritdoc cref="P:Nest.IExecutePainlessScriptRequest.Context" />
    </member>
    <member name="T:Nest.ScrollDescriptor`1">
      <summary>Descriptor for Scroll <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</para></summary>
    </member>
    <member name="M:Nest.ScrollDescriptor`1.TotalHitsAsInteger(System.Nullable{System.Boolean})">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="M:Nest.ScrollDescriptor`1.Scroll(Nest.Time)">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="T:Nest.SearchDescriptor`1">
      <summary>Descriptor for Search <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</para></summary>
      <summary>
            A descriptor which describes a search operation for _search and _msearch
            </summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.#ctor">
      <summary>/{index}/_search</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_search</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.AllowPartialSearchResults(System.Nullable{System.Boolean})">
      <summary>Indicate if an error should be returned if there is a partial search failure or timeout</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Analyzer(System.String)">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.BatchedReduceSize(System.Nullable{System.Int64})">
      <summary>The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.CcsMinimizeRoundtrips(System.Nullable{System.Boolean})">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.DefaultOperator(System.Nullable{Elasticsearch.Net.DefaultOperator})">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Df(System.String)">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.IgnoreThrottled(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete, expanded or aliased indices should be ignored when throttled</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.MaxConcurrentShardRequests(System.Nullable{System.Int64})">
      <summary>The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.PreFilterShardSize(System.Nullable{System.Int64})">
      <summary>A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.RequestCache(System.Nullable{System.Boolean})">
      <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Scroll(Nest.Time)">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SearchType(System.Nullable{Elasticsearch.Net.SearchType})">
      <summary>Search operation type</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SequenceNumberPrimaryTerm(System.Nullable{System.Boolean})">
      <summary>Specify whether to return sequence number and primary term of the last modification of each hit</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Stats(System.String[])">
      <summary>Specific 'tag' of the request for logging and statistical purposes</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SuggestField(Nest.Field)">
      <summary>Specify which field to use for suggestions</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SuggestField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>Specify which field to use for suggestions</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SuggestMode(System.Nullable{Elasticsearch.Net.SuggestMode})">
      <summary>Specify suggest mode</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SuggestSize(System.Nullable{System.Int64})">
      <summary>How many suggestions to return in response</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.SuggestText(System.String)">
      <summary>The source text for which the suggestions should be returned</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.TotalHitsAsInteger(System.Nullable{System.Boolean})">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.TypedKeys(System.Nullable{System.Boolean})">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.Aggregations(System.Func{Nest.AggregationContainerDescriptor{`0},Nest.IAggregationContainer})">
      <inheritdoc cref="P:Nest.ISearchRequest.Aggregations" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Aggregations(Nest.AggregationDictionary)">
      <inheritdoc cref="P:Nest.ISearchRequest.Aggregations" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Source(System.Boolean)">
      <inheritdoc cref="P:Nest.ISearchRequest.Source" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Source(System.Func{Nest.SourceFilterDescriptor{`0},Nest.ISourceFilter})">
      <inheritdoc cref="P:Nest.ISearchRequest.Source" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Size(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISearchRequest.Size" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Take(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISearchRequest.Size" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.From(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISearchRequest.From" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Skip(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISearchRequest.From" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Timeout(System.String)">
      <inheritdoc cref="P:Nest.ISearchRequest.Timeout" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Explain(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ISearchRequest.Explain" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Version(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ISearchRequest.Version" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.TrackScores(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ISearchRequest.TrackScores" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Profile(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ISearchRequest.Profile" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.MinScore(System.Nullable{System.Double})">
      <inheritdoc cref="P:Nest.ISearchRequest.MinScore" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.TerminateAfter(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.ISearchRequest.TerminateAfter" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.ExecuteOnLocalShard">
      <summary>
        <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
        <para>
            The operation will prefer to be executed on a local allocated shard is possible.
            </para>
      </summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.ExecuteOnNode(System.String)">
      <summary>
        <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
        <para>
            Restricts the search to execute only on a node with the provided node id
            </para>
      </summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.ExecuteOnPreferredNode(System.String)">
      <summary>
        <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
        <para>
            Prefers execution on the node with the provided node id if applicable.
            </para>
      </summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.IndicesBoost(System.Func{Nest.FluentDictionary{Nest.IndexName,System.Double},Nest.FluentDictionary{Nest.IndexName,System.Double}})">
      <inheritdoc cref="P:Nest.ISearchRequest.IndicesBoost" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.StoredFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <inheritdoc cref="P:Nest.ISearchRequest.StoredFields" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.StoredFields(Nest.Fields)">
      <inheritdoc cref="P:Nest.ISearchRequest.StoredFields" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.ScriptFields(System.Func{Nest.ScriptFieldsDescriptor,Nest.IPromise{Nest.IScriptFields}})">
      <inheritdoc cref="P:Nest.ISearchRequest.ScriptFields" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.DocValueFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <inheritdoc cref="P:Nest.ISearchRequest.ScriptFields" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.DocValueFields(Nest.Fields)">
      <inheritdoc cref="P:Nest.ISearchRequest.DocValueFields" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Sort(System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
      <inheritdoc cref="P:Nest.ISearchRequest.Sort" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.SearchAfter(System.Collections.Generic.IList{System.Object})">
      <inheritdoc cref="P:Nest.ISearchRequest.SearchAfter" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.SearchAfter(System.Object[])">
      <inheritdoc cref="P:Nest.ISearchRequest.SearchAfter" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Suggest(System.Func{Nest.SuggestContainerDescriptor{`0},Nest.IPromise{Nest.ISuggestContainer}})">
      <inheritdoc cref="P:Nest.ISearchRequest.Suggest" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.ISearchRequest.Query" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Slice(System.Func{Nest.SlicedScrollDescriptor{`0},Nest.ISlicedScroll})">
      <inheritdoc cref="P:Nest.ISearchRequest.Slice" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.MatchAll(System.Func{Nest.MatchAllQueryDescriptor,Nest.IMatchAllQuery})">
      <summary>
            Shortcut to default to a match all query
            </summary>
    </member>
    <member name="M:Nest.SearchDescriptor`1.PostFilter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.ISearchRequest.PostFilter" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
      <inheritdoc cref="P:Nest.ISearchRequest.Highlight" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Collapse(System.Func{Nest.FieldCollapseDescriptor{`0},Nest.IFieldCollapse})">
      <inheritdoc cref="P:Nest.ISearchRequest.Collapse" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.Rescore(System.Func{Nest.RescoringDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.IRescore}}})">
      <inheritdoc cref="P:Nest.ISearchRequest.Rescore" />
    </member>
    <member name="M:Nest.SearchDescriptor`1.TrackTotalHits(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ISearchRequest.TrackTotalHits" />
    </member>
    <member name="T:Nest.SearchShardsDescriptor`1">
      <summary>Descriptor for SearchShards <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</para></summary>
      <summary>
            A descriptor which describes a search operation for _search_shards
            </summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.#ctor">
      <summary>/{index}/_search_shards</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_search_shards</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.SearchShardsDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="T:Nest.SearchTemplateDescriptor`1">
      <summary>Descriptor for SearchTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</para></summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.#ctor">
      <summary>/{index}/_search/template</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_search/template</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.CcsMinimizeRoundtrips(System.Nullable{System.Boolean})">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Explain(System.Nullable{System.Boolean})">
      <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.IgnoreThrottled(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete, expanded or aliased indices should be ignored when throttled</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Profile(System.Nullable{System.Boolean})">
      <summary>Specify whether to profile the query execution</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.Scroll(Nest.Time)">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.SearchType(System.Nullable{Elasticsearch.Net.SearchType})">
      <summary>Search operation type</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.TotalHitsAsInteger(System.Nullable{System.Boolean})">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="M:Nest.SearchTemplateDescriptor`1.TypedKeys(System.Nullable{System.Boolean})">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="T:Nest.TermVectorsDescriptor`1">
      <summary>Descriptor for TermVectors <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</para></summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_termvectors/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.IndexName)">
      <summary>/{index}/_termvectors</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.Id)">
      <summary>/{index}/_termvectors/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.#ctor">
      <summary>/{index}/_termvectors</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_termvectors/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Index(Nest.IndexName)">
      <summary>The index in which the document resides.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Id(Nest.Id)">
      <summary>The id of the document, when not specified a doc param should be supplied.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.FieldStatistics(System.Nullable{System.Boolean})">
      <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Fields(Nest.Fields)">
      <summary>A comma-separated list of fields to return.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A comma-separated list of fields to return.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Offsets(System.Nullable{System.Boolean})">
      <summary>Specifies if term offsets should be returned.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Payloads(System.Nullable{System.Boolean})">
      <summary>Specifies if term payloads should be returned.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Positions(System.Nullable{System.Boolean})">
      <summary>Specifies if term positions should be returned.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Realtime(System.Nullable{System.Boolean})">
      <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.TermStatistics(System.Nullable{System.Boolean})">
      <summary>Specifies if total term frequency and document frequency should be returned.</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Document(`0)">
      <summary>
            An optional document to get term vectors for instead of using an already indexed document
            </summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.PerFieldAnalyzer(System.Func{Nest.PerFieldAnalyzerDescriptor{`0},Nest.IPromise{Nest.IPerFieldAnalyzer}})">
      <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
    </member>
    <member name="M:Nest.TermVectorsDescriptor`1.Filter(System.Func{Nest.TermVectorFilterDescriptor,Nest.ITermVectorFilter})">
      <summary>
            Filter the terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
    </member>
    <member name="T:Nest.UpdateDescriptor`2">
      <summary>Descriptor for Update <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</para></summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_update/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.#ctor(Nest.Id)">
      <summary>/{index}/_update/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_update/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Index(Nest.IndexName)">
      <summary>The name of the index</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.IfPrimaryTerm(System.Nullable{System.Int64})">
      <summary>only perform the update operation if the last operation that has changed the document has the specified primary term</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.IfSequenceNumber(System.Nullable{System.Int64})">
      <summary>only perform the update operation if the last operation that has changed the document has the specified sequence number</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Lang(System.String)">
      <summary>The script language (default: painless)</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.RetryOnConflict(System.Nullable{System.Int64})">
      <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Upsert(`0)">
      <summary>
            The full document to be created if an existing document does not exist for a partial merge.
            </summary>
    </member>
    <member name="M:Nest.UpdateDescriptor`2.Doc(`1)">
      <summary>
            The partial update document to be merged on to the existing object.
            </summary>
    </member>
    <member name="T:Nest.UpdateByQueryDescriptor`1">
      <summary>Descriptor for UpdateByQuery <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</para></summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_update_by_query</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.#ctor">
      <summary>/{index}/_update_by_query</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Index(Nest.Indices)">
      <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.AllowNoIndices(System.Nullable{System.Boolean})">
      <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Analyzer(System.String)">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Conflicts(System.Nullable{Elasticsearch.Net.Conflicts})">
      <summary>What to do when the update by query hits version conflicts?</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.DefaultOperator(System.Nullable{Elasticsearch.Net.DefaultOperator})">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Df(System.String)">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.ExpandWildcards(System.Nullable{Elasticsearch.Net.ExpandWildcards})">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.From(System.Nullable{System.Int64})">
      <summary>Starting offset (default: 0)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Pipeline(System.String)">
      <summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Preference(System.String)">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.QueryOnQueryString(System.String)">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Refresh(System.Nullable{System.Boolean})">
      <summary>Should the effected indexes be refreshed?</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.RequestCache(System.Nullable{System.Boolean})">
      <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.RequestsPerSecond(System.Nullable{System.Int64})">
      <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Routing(Nest.Routing)">
      <summary>
             A document is routed to a particular shard in an index using the following formula
             <para> shard_num = hash(_routing) % num_primary_shards</para><para>Elasticsearch will use the document id if not provided. </para><para>For requests that are constructed from/for a document NEST will automatically infer the routing key
             if that document has a <see cref="T:Nest.JoinField" /> or a routing mapping on for its type exists on <see cref="T:Nest.ConnectionSettings" /></para></summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Scroll(Nest.Time)">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.ScrollSize(System.Nullable{System.Int64})">
      <summary>Size on the scroll request powering the update by query</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.SearchTimeout(Nest.Time)">
      <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.SearchType(System.Nullable{Elasticsearch.Net.SearchType})">
      <summary>Search operation type</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Size(System.Nullable{System.Int64})">
      <summary>Deprecated, please use `max_docs` instead</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Slices(System.Nullable{System.Int64})">
      <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Nest.UpdateByQueryDescriptor`1.Sort(System.String[])" -->
    <member name="M:Nest.UpdateByQueryDescriptor`1.SourceEnabled(System.Nullable{System.Boolean})">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.SourceExcludes(Nest.Fields)">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.SourceExcludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.SourceIncludes(Nest.Fields)">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.SourceIncludes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Stats(System.String[])">
      <summary>Specific 'tag' of the request for logging and statistical purposes</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.TerminateAfter(System.Nullable{System.Int64})">
      <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Timeout(Nest.Time)">
      <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Version(System.Nullable{System.Boolean})">
      <summary>Specify whether to return document version as part of a hit</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.VersionType(System.Nullable{System.Boolean})">
      <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.WaitForActiveShards(System.String)">
      <summary>Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Should the request should block until the update by query operation is complete.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.MatchAll">
      <summary>
            Query that selects all documents
            </summary>
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IUpdateByQueryRequest.Query" />
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Script(System.String)">
      <inheritdoc cref="P:Nest.IUpdateByQueryRequest.Script" />
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <inheritdoc cref="P:Nest.IUpdateByQueryRequest.Script" />
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.MaximumDocuments(System.Nullable{System.Int64})">
      <inheritdoc cref="P:Nest.IUpdateByQueryRequest.MaximumDocuments" />
    </member>
    <member name="M:Nest.UpdateByQueryDescriptor`1.Slice(System.Func{Nest.SlicedScrollDescriptor{`0},Nest.ISlicedScroll})">
      <inheritdoc cref="P:Nest.IUpdateByQueryRequest.Slice" />
    </member>
    <member name="T:Nest.UpdateByQueryRethrottleDescriptor">
      <summary>Descriptor for UpdateByQueryRethrottle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</para></summary>
    </member>
    <member name="M:Nest.UpdateByQueryRethrottleDescriptor.#ctor(Nest.TaskId)">
      <summary>/_update_by_query/{task_id}/_rethrottle</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateByQueryRethrottleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.UpdateByQueryRethrottleDescriptor.RequestsPerSecond(System.Nullable{System.Int64})">
      <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
    </member>
    <member name="T:Nest.DeleteRollupJobDescriptor">
      <summary>Descriptor for DeleteJob</summary>
    </member>
    <member name="M:Nest.DeleteRollupJobDescriptor.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRollupJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.GetRollupJobDescriptor">
      <summary>Descriptor for GetJob</summary>
    </member>
    <member name="M:Nest.GetRollupJobDescriptor.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRollupJobDescriptor.#ctor">
      <summary>/_rollup/job/</summary>
    </member>
    <member name="M:Nest.GetRollupJobDescriptor.Id(Nest.Id)">
      <summary>The ID of the job(s) to fetch. Accepts glob patterns, or left blank for all jobs</summary>
    </member>
    <member name="T:Nest.GetRollupCapabilitiesDescriptor">
      <summary>Descriptor for GetCapabilities</summary>
    </member>
    <member name="M:Nest.GetRollupCapabilitiesDescriptor.#ctor(Nest.Id)">
      <summary>/_rollup/data/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRollupCapabilitiesDescriptor.#ctor">
      <summary>/_rollup/data/</summary>
    </member>
    <member name="M:Nest.GetRollupCapabilitiesDescriptor.Id(Nest.Id)">
      <summary>The ID of the index to check rollup capabilities on, or left blank for all jobs</summary>
    </member>
    <member name="T:Nest.GetRollupIndexCapabilitiesDescriptor">
      <summary>Descriptor for GetIndexCapabilities</summary>
    </member>
    <member name="M:Nest.GetRollupIndexCapabilitiesDescriptor.#ctor(Nest.IndexName)">
      <summary>/{index}/_rollup/data</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GetRollupIndexCapabilitiesDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetRollupIndexCapabilitiesDescriptor.Index(Nest.IndexName)">
      <summary>The rollup index or index pattern to obtain rollup capabilities from.</summary>
    </member>
    <member name="M:Nest.GetRollupIndexCapabilitiesDescriptor.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="T:Nest.CreateRollupJobDescriptor`1">
      <summary>Descriptor for CreateJob</summary>
      <inheritdoc cref="T:Nest.ICreateRollupJobRequest" />
            &gt;
        </member>
    <member name="M:Nest.CreateRollupJobDescriptor`1.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateRollupJobDescriptor`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Nest.CreateRollupJobDescriptor`1.IndexPattern(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.CreateRollupJobDescriptor`1.RollupIndex(Nest.IndexName)" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.CreateRollupJobDescriptor`1.Cron(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.CreateRollupJobDescriptor`1.PageSize(System.Nullable{System.Int64})" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.CreateRollupJobDescriptor`1.Groups(System.Func{Nest.RollupGroupingsDescriptor{`0},Nest.IRollupGroupings})" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.CreateRollupJobDescriptor`1.Metrics(System.Func{Nest.RollupFieldMetricsDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.IRollupFieldMetric}}})" -->
    <member name="T:Nest.RollupSearchDescriptor`1">
      <summary>Descriptor for Search</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.#ctor(Nest.Indices)">
      <summary>/{index}/_rollup_search</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.#ctor">
      <summary>/{index}/_rollup_search</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.Index(Nest.Indices)">
      <summary>The indices or index-pattern(s) (containing rollup or regular data) that should be searched</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.Index``1">
      <summary>a shortcut into calling Index(typeof(TOther))</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.AllIndices">
      <summary>A shortcut into calling Index(Indices.All)</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.TotalHitsAsInteger(System.Nullable{System.Boolean})">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.TypedKeys(System.Nullable{System.Boolean})">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.Size(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IRollupSearchRequest.Size" />
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.Aggregations(System.Func{Nest.AggregationContainerDescriptor{`0},Nest.IAggregationContainer})">
      <inheritdoc cref="P:Nest.IRollupSearchRequest.Aggregations" />
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.Aggregations(Nest.AggregationDictionary)">
      <inheritdoc cref="P:Nest.IRollupSearchRequest.Aggregations" />
    </member>
    <member name="M:Nest.RollupSearchDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IRollupSearchRequest.Query" />
    </member>
    <member name="T:Nest.StartRollupJobDescriptor">
      <summary>Descriptor for StartJob</summary>
    </member>
    <member name="M:Nest.StartRollupJobDescriptor.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}/_start</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.StartRollupJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.StopRollupJobDescriptor">
      <summary>Descriptor for StopJob</summary>
    </member>
    <member name="M:Nest.StopRollupJobDescriptor.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}/_stop</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.StopRollupJobDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.StopRollupJobDescriptor.Timeout(Nest.Time)">
      <summary>Block for (at maximum) the specified duration while waiting for the job to stop.  Defaults to 30s.</summary>
    </member>
    <member name="M:Nest.StopRollupJobDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>True if the API should block until the job has fully stopped, false if should be executed async. Defaults to false.</summary>
    </member>
    <member name="T:Nest.AuthenticateDescriptor">
      <summary>Descriptor for Authenticate <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html</para></summary>
    </member>
    <member name="T:Nest.ChangePasswordDescriptor">
      <summary>Descriptor for ChangePassword <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html</para></summary>
    </member>
    <member name="M:Nest.ChangePasswordDescriptor.#ctor(Nest.Name)">
      <summary>/_security/user/{username}/_password</summary>
      <param name="username">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ChangePasswordDescriptor.#ctor">
      <summary>/_security/user/_password</summary>
    </member>
    <member name="M:Nest.ChangePasswordDescriptor.Username(Nest.Name)">
      <summary>The username of the user to change the password for</summary>
    </member>
    <member name="M:Nest.ChangePasswordDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.ClearCachedRealmsDescriptor">
      <summary>Descriptor for ClearCachedRealms <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html</para></summary>
    </member>
    <member name="M:Nest.ClearCachedRealmsDescriptor.#ctor(Nest.Names)">
      <summary>/_security/realm/{realms}/_clear_cache</summary>
      <param name="realms">this parameter is required</param>
    </member>
    <member name="M:Nest.ClearCachedRealmsDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.ClearCachedRealmsDescriptor.Usernames(System.String[])">
      <summary>Comma-separated list of usernames to clear from the cache</summary>
    </member>
    <member name="T:Nest.ClearCachedRolesDescriptor">
      <summary>Descriptor for ClearCachedRoles <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html</para></summary>
    </member>
    <member name="M:Nest.ClearCachedRolesDescriptor.#ctor(Nest.Names)">
      <summary>/_security/role/{name}/_clear_cache</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.ClearCachedRolesDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.CreateApiKeyDescriptor">
      <summary>Descriptor for CreateApiKey <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html</para></summary>
    </member>
    <member name="M:Nest.CreateApiKeyDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="P:Nest.CreateApiKeyDescriptor.Nest#ICreateApiKeyRequest#Expiration">
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Expiration" />
    </member>
    <member name="P:Nest.CreateApiKeyDescriptor.Nest#ICreateApiKeyRequest#Name">
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Name" />
    </member>
    <member name="P:Nest.CreateApiKeyDescriptor.Nest#ICreateApiKeyRequest#Roles">
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Roles" />
    </member>
    <member name="M:Nest.CreateApiKeyDescriptor.Expiration(Nest.Time)">
      <summary>
            Optional expiration for the API key being generated.
            If expiration is not provided then the API keys do not expire.
            </summary>
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Expiration" />
    </member>
    <member name="M:Nest.CreateApiKeyDescriptor.Name(System.String)">
      <summary>
            Name for this API key
            </summary>
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Name" />
    </member>
    <member name="M:Nest.CreateApiKeyDescriptor.Roles(System.Func{Nest.ApiKeyRolesDescriptor,Nest.IPromise{Nest.IApiKeyRoles}})">
      <summary>
            Optional role descriptors for this API key, if not provided then permissions of authenticated user are applied.
            </summary>
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Roles" />
    </member>
    <member name="T:Nest.DeletePrivilegesDescriptor">
      <summary>Descriptor for DeletePrivileges <para>TODO</para></summary>
    </member>
    <member name="M:Nest.DeletePrivilegesDescriptor.#ctor(Nest.Name,Nest.Name)">
      <summary>/_security/privilege/{application}/{name}</summary>
      <param name="application">this parameter is required</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeletePrivilegesDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeletePrivilegesDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.DeleteRoleDescriptor">
      <summary>Descriptor for DeleteRole <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRoleDescriptor.#ctor(Nest.Name)">
      <summary>/_security/role/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRoleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteRoleDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.DeleteRoleMappingDescriptor">
      <summary>Descriptor for DeleteRoleMapping <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRoleMappingDescriptor.#ctor(Nest.Name)">
      <summary>/_security/role_mapping/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRoleMappingDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteRoleMappingDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.DeleteUserDescriptor">
      <summary>Descriptor for DeleteUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html</para></summary>
    </member>
    <member name="M:Nest.DeleteUserDescriptor.#ctor(Nest.Name)">
      <summary>/_security/user/{username}</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteUserDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteUserDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.DisableUserDescriptor">
      <summary>Descriptor for DisableUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html</para></summary>
    </member>
    <member name="M:Nest.DisableUserDescriptor.#ctor(Nest.Name)">
      <summary>/_security/user/{username}/_disable</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.DisableUserDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DisableUserDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.EnableUserDescriptor">
      <summary>Descriptor for EnableUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html</para></summary>
    </member>
    <member name="M:Nest.EnableUserDescriptor.#ctor(Nest.Name)">
      <summary>/_security/user/{username}/_enable</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.EnableUserDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.EnableUserDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.GetApiKeyDescriptor">
      <summary>Descriptor for GetApiKey <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html</para></summary>
    </member>
    <member name="M:Nest.GetApiKeyDescriptor.Id(System.String)">
      <summary>API key id of the API key to be retrieved</summary>
    </member>
    <member name="M:Nest.GetApiKeyDescriptor.Name(System.String)">
      <summary>API key name of the API key to be retrieved</summary>
    </member>
    <member name="M:Nest.GetApiKeyDescriptor.RealmName(System.String)">
      <summary>realm name of the user who created this API key to be retrieved</summary>
    </member>
    <member name="M:Nest.GetApiKeyDescriptor.Username(System.String)">
      <summary>user name of the user who created this API key to be retrieved</summary>
    </member>
    <member name="T:Nest.GetPrivilegesDescriptor">
      <summary>Descriptor for GetPrivileges <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</para></summary>
    </member>
    <member name="M:Nest.GetPrivilegesDescriptor.#ctor">
      <summary>/_security/privilege</summary>
    </member>
    <member name="M:Nest.GetPrivilegesDescriptor.#ctor(Nest.Name)">
      <summary>/_security/privilege/{application}</summary>
      <param name="application">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetPrivilegesDescriptor.#ctor(Nest.Name,Nest.Name)">
      <summary>/_security/privilege/{application}/{name}</summary>
      <param name="application">Optional, accepts null</param>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetPrivilegesDescriptor.Application(Nest.Name)">
      <summary>Application name</summary>
    </member>
    <member name="M:Nest.GetPrivilegesDescriptor.Name(Nest.Name)">
      <summary>Privilege name</summary>
    </member>
    <member name="T:Nest.GetRoleDescriptor">
      <summary>Descriptor for GetRole <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html</para></summary>
    </member>
    <member name="M:Nest.GetRoleDescriptor.#ctor(Nest.Name)">
      <summary>/_security/role/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRoleDescriptor.#ctor">
      <summary>/_security/role</summary>
    </member>
    <member name="M:Nest.GetRoleDescriptor.Name(Nest.Name)">
      <summary>Role name</summary>
    </member>
    <member name="T:Nest.GetRoleMappingDescriptor">
      <summary>Descriptor for GetRoleMapping <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html</para></summary>
    </member>
    <member name="M:Nest.GetRoleMappingDescriptor.#ctor(Nest.Name)">
      <summary>/_security/role_mapping/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRoleMappingDescriptor.#ctor">
      <summary>/_security/role_mapping</summary>
    </member>
    <member name="M:Nest.GetRoleMappingDescriptor.Name(Nest.Name)">
      <summary>Role-Mapping name</summary>
    </member>
    <member name="T:Nest.GetUserAccessTokenDescriptor">
      <summary>Descriptor for GetUserAccessToken <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html</para></summary>
    </member>
    <member name="T:Nest.GetUserDescriptor">
      <summary>Descriptor for GetUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html</para></summary>
    </member>
    <member name="M:Nest.GetUserDescriptor.#ctor(Nest.Names)">
      <summary>/_security/user/{username}</summary>
      <param name="username">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetUserDescriptor.#ctor">
      <summary>/_security/user</summary>
    </member>
    <member name="M:Nest.GetUserDescriptor.Username(Nest.Names)">
      <summary>A comma-separated list of usernames</summary>
    </member>
    <member name="T:Nest.GetUserPrivilegesDescriptor">
      <summary>Descriptor for GetUserPrivileges <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</para></summary>
    </member>
    <member name="T:Nest.HasPrivilegesDescriptor">
      <summary>Descriptor for HasPrivileges <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html</para></summary>
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.#ctor">
      <summary>/_security/user/_has_privileges</summary>
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.#ctor(Nest.Name)">
      <summary>/_security/user/{user}/_has_privileges</summary>
      <param name="user">Optional, accepts null</param>
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.User(Nest.Name)">
      <summary>Username</summary>
    </member>
    <member name="P:Nest.HasPrivilegesDescriptor.Nest#IHasPrivilegesRequest#Application">
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Application" />
    </member>
    <member name="P:Nest.HasPrivilegesDescriptor.Nest#IHasPrivilegesRequest#Cluster">
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Cluster" />
    </member>
    <member name="P:Nest.HasPrivilegesDescriptor.Nest#IHasPrivilegesRequest#Index">
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Index" />
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.Cluster(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            	A list of the cluster privileges that you want to check.
            </summary>
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Cluster" />
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.Cluster(System.String[])">
      <summary>
            	A list of the cluster privileges that you want to check.
            </summary>
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Cluster" />
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.Indices(System.Func{Nest.ApplicationPrivilegesChecksDescriptor,Nest.IPromise{System.Collections.Generic.List{Nest.IApplicationPrivilegesCheck}}})">
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Index" />
    </member>
    <member name="M:Nest.HasPrivilegesDescriptor.Applications(System.Func{Nest.ApplicationPrivilegesChecksDescriptor,Nest.IPromise{System.Collections.Generic.List{Nest.IApplicationPrivilegesCheck}}})">
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Application" />
    </member>
    <member name="T:Nest.InvalidateApiKeyDescriptor">
      <summary>Descriptor for InvalidateApiKey <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html</para></summary>
    </member>
    <member name="P:Nest.InvalidateApiKeyDescriptor.Nest#IInvalidateApiKeyRequest#Id">
      <inheritdoc />
    </member>
    <member name="P:Nest.InvalidateApiKeyDescriptor.Nest#IInvalidateApiKeyRequest#Name">
      <inheritdoc />
    </member>
    <member name="P:Nest.InvalidateApiKeyDescriptor.Nest#IInvalidateApiKeyRequest#RealmName">
      <inheritdoc />
    </member>
    <member name="P:Nest.InvalidateApiKeyDescriptor.Nest#IInvalidateApiKeyRequest#Username">
      <inheritdoc />
    </member>
    <member name="M:Nest.InvalidateApiKeyDescriptor.Id(System.String)">
      <summary>
            An API key id. This parameter cannot be used with any of Name, RealmName or Username are used.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateApiKeyRequest.Id" />
    </member>
    <member name="M:Nest.InvalidateApiKeyDescriptor.Name(System.String)">
      <summary>
            An API key name. This parameter cannot be used with any of Id, RealmName or Username are used.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateApiKeyRequest.Name" />
    </member>
    <member name="M:Nest.InvalidateApiKeyDescriptor.RealmName(System.String)">
      <summary>
            The name of an authentication realm. This parameter cannot be used with either Id or Name.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateApiKeyRequest.RealmName" />
    </member>
    <member name="M:Nest.InvalidateApiKeyDescriptor.Username(System.String)">
      <summary>
            The username of a user. This parameter cannot be used with either Id or Name.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateApiKeyRequest.Username" />
    </member>
    <member name="T:Nest.InvalidateUserAccessTokenDescriptor">
      <summary>Descriptor for InvalidateUserAccessToken <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html</para></summary>
    </member>
    <member name="M:Nest.InvalidateUserAccessTokenDescriptor.#ctor(System.String)">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />
    </member>
    <member name="M:Nest.InvalidateUserAccessTokenDescriptor.RefreshToken(System.String)">
      <summary>
            A refresh token.
            This parameter cannot be used any of <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" />, <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RealmName" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Username" /> are used.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" />
    </member>
    <member name="M:Nest.InvalidateUserAccessTokenDescriptor.RealmName(System.String)">
      <summary>
            The name of an authentication realm.
            This parameter cannot be used with either <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.RealmName" />
    </member>
    <member name="M:Nest.InvalidateUserAccessTokenDescriptor.Username(System.String)">
      <summary>
            The username of a user.
            This parameter cannot be used with either <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />.
            </summary>
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.Username" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenDescriptor.Nest#IInvalidateUserAccessTokenRequest#Token">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenDescriptor.Nest#IInvalidateUserAccessTokenRequest#RefreshToken">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenDescriptor.Nest#IInvalidateUserAccessTokenRequest#RealmName">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.RealmName" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenDescriptor.Nest#IInvalidateUserAccessTokenRequest#Username">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.Username" />
    </member>
    <member name="T:Nest.PutPrivilegesDescriptor">
      <summary>Descriptor for PutPrivileges <para>TODO</para></summary>
    </member>
    <member name="M:Nest.PutPrivilegesDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="T:Nest.PutRoleDescriptor">
      <summary>Descriptor for PutRole <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html</para></summary>
      <inheritdoc cref="T:Nest.IPutRoleRequest" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.#ctor(Nest.Name)">
      <summary>/_security/role/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutRoleDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutRoleDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="P:Nest.PutRoleDescriptor.Nest#IPutRoleRequest#Applications">
      <inheritdoc cref="P:Nest.IPutRoleRequest.Applications" />
    </member>
    <member name="P:Nest.PutRoleDescriptor.Nest#IPutRoleRequest#Cluster">
      <inheritdoc cref="P:Nest.IPutRoleRequest.Cluster" />
    </member>
    <member name="P:Nest.PutRoleDescriptor.Nest#IPutRoleRequest#Global">
      <inheritdoc cref="P:Nest.IPutRoleRequest.Global" />
    </member>
    <member name="P:Nest.PutRoleDescriptor.Nest#IPutRoleRequest#Indices">
      <inheritdoc cref="P:Nest.IPutRoleRequest.Indices" />
    </member>
    <member name="P:Nest.PutRoleDescriptor.Nest#IPutRoleRequest#Metadata">
      <inheritdoc cref="P:Nest.IPutRoleRequest.Metadata" />
    </member>
    <member name="P:Nest.PutRoleDescriptor.Nest#IPutRoleRequest#RunAs">
      <inheritdoc cref="P:Nest.IPutRoleRequest.RunAs" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Applications(System.Collections.Generic.IEnumerable{Nest.IApplicationPrivileges})">
      <summary>
            A list of application privileges
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Applications" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Applications(System.Func{Nest.ApplicationPrivilegesListDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IApplicationPrivileges}}})">
      <summary>
            A list of application privileges
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Applications" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Cluster(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of cluster privileges
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Cluster" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Cluster(System.String[])">
      <summary>
            A list of cluster privileges
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Cluster" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Global(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            An object defining global privileges. A global privilege is a form of cluster privilege that is
            request-aware. Support for global privileges is currently limited to
            the management of application privileges.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Global" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Global(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            An object defining global privileges. A global privilege is a form of cluster privilege that is
            request-aware. Support for global privileges is currently limited to
            the management of application privileges.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Global" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.RunAs(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of users that the owners of this role can impersonate.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.RunAs" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.RunAs(System.String[])">
      <summary>
            A list of users that the owners of this role can impersonate.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.RunAs" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Indices(System.Collections.Generic.IEnumerable{Nest.IIndicesPrivileges})">
      <summary>
            A list of indices permissions entries
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Indices" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Indices(System.Func{Nest.IndicesPrivilegesDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IIndicesPrivileges}}})">
      <summary>
            A list of indices permissions entries
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Indices" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Metadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Metadata" />
    </member>
    <member name="M:Nest.PutRoleDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Metadata" />
    </member>
    <member name="T:Nest.PutRoleMappingDescriptor">
      <summary>Descriptor for PutRoleMapping <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html</para></summary>
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.#ctor(Nest.Name)">
      <summary>/_security/role_mapping/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Roles(Nest.RoleMappingRuleBase)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Roles(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Roles(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Rules(System.Func{Nest.RoleMappingRuleDescriptor,Nest.RoleMappingRuleBase})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Rules(Nest.RoleMappingRuleBase)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.RunAs(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.RunAs(System.String[])">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Enabled(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Metadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutRoleMappingDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <inheritdoc />
    </member>
    <member name="T:Nest.PutUserDescriptor">
      <summary>Descriptor for PutUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html</para></summary>
    </member>
    <member name="M:Nest.PutUserDescriptor.#ctor(Nest.Name)">
      <summary>/_security/user/{username}</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.PutUserDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutUserDescriptor.Refresh(System.Nullable{Elasticsearch.Net.Refresh})">
      <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
    </member>
    <member name="P:Nest.PutUserDescriptor.Nest#IPutUserRequest#Email">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserDescriptor.Nest#IPutUserRequest#FullName">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserDescriptor.Nest#IPutUserRequest#Metadata">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserDescriptor.Nest#IPutUserRequest#Password">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserDescriptor.Nest#IPutUserRequest#PasswordHash">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserDescriptor.Nest#IPutUserRequest#Roles">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutUserDescriptor.Password(System.String)">
      <summary>
            The user’s password. Passwords must be at least 6 characters long.
            </summary>
      <remarks>
            When adding a user, one of <see cref="P:Nest.IPutUserRequest.Password" /> or <see cref="P:Nest.IPutUserRequest.PasswordHash" /> is required. When updating an
            existing user,
            the password is optional, so that other fields on the user (such as their roles) may be updated without modifying the
            user’s password.
            </remarks>
      <inheritdoc cref="P:Nest.IPutUserRequest.Password" />
    </member>
    <member name="M:Nest.PutUserDescriptor.PasswordHash(System.String)">
      <summary>
            A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for
            password storage.
            Using this parameter allows the client to pre-hash the password for performance and/or confidentiality reasons.
            The <see cref="P:Nest.IPutUserRequest.Password" /> parameter and the <see cref="P:Nest.IPutUserRequest.PasswordHash" /> parameter cannot be used in the same request.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.PasswordHash" />
    </member>
    <member name="M:Nest.PutUserDescriptor.Roles(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A set of roles the user has. The roles determine the user’s access permissions. To create a user without any roles,
            specify an empty list.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.Roles" />
    </member>
    <member name="M:Nest.PutUserDescriptor.Roles(System.String[])">
      <summary>
            A set of roles the user has. The roles determine the user’s access permissions. To create a user without any roles,
            specify an empty list.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.Roles" />
    </member>
    <member name="M:Nest.PutUserDescriptor.FullName(System.String)">
      <summary>
            The full name of the user.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.FullName" />
    </member>
    <member name="M:Nest.PutUserDescriptor.Email(System.String)">
      <summary>
            The email of the user.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.Email" />
    </member>
    <member name="M:Nest.PutUserDescriptor.Metadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Arbitrary metadata that you want to associate with the user.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.Metadata" />
    </member>
    <member name="M:Nest.PutUserDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}})">
      <summary>
            Arbitrary metadata that you want to associate with the user.
            </summary>
      <inheritdoc cref="P:Nest.IPutUserRequest.Metadata" />
    </member>
    <member name="T:Nest.GetCertificatesDescriptor">
      <summary>Descriptor for GetCertificates <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html</para></summary>
    </member>
    <member name="T:Nest.SnapshotDescriptor">
      <summary>Descriptor for Snapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.SnapshotDescriptor.#ctor(Nest.Name,Nest.Name)">
      <summary>/_snapshot/{repository}/{snapshot}</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.SnapshotDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.SnapshotDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.SnapshotDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Should this request wait until the operation has completed before returning</summary>
    </member>
    <member name="T:Nest.CreateRepositoryDescriptor">
      <summary>Descriptor for CreateRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
      <inheritdoc cref="T:Nest.ICreateRepositoryRequest" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.#ctor(Nest.Name)">
      <summary>/_snapshot/{repository}</summary>
      <param name="repository">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.Verify(System.Nullable{System.Boolean})">
      <summary>Whether to verify the repository after creation</summary>
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.FileSystem(System.Func{Nest.FileSystemRepositoryDescriptor,Nest.IFileSystemRepository})">
      <inheritdoc cref="T:Nest.IFileSystemRepository" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.ReadOnlyUrl(System.Func{Nest.ReadOnlyUrlRepositoryDescriptor,Nest.IReadOnlyUrlRepository})">
      <inheritdoc cref="T:Nest.IReadOnlyUrlRepository" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.Azure(System.Func{Nest.AzureRepositoryDescriptor,Nest.IAzureRepository})">
      <inheritdoc cref="T:Nest.IAzureRepository" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.Hdfs(System.Func{Nest.HdfsRepositoryDescriptor,Nest.IHdfsRepository})">
      <inheritdoc cref="T:Nest.IHdfsRepository" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.S3(System.Func{Nest.S3RepositoryDescriptor,Nest.IS3Repository})">
      <inheritdoc cref="T:Nest.IS3Repository" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.SourceOnly(System.Func{Nest.SourceOnlyRepositoryDescriptor,Nest.ISourceOnlyRepository})">
      <inheritdoc cref="T:Nest.ISourceOnlyRepository" />
    </member>
    <member name="M:Nest.CreateRepositoryDescriptor.Custom(Nest.ISnapshotRepository)">
      <summary>
            Register a custom repository
            </summary>
    </member>
    <member name="T:Nest.DeleteSnapshotDescriptor">
      <summary>Descriptor for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.DeleteSnapshotDescriptor.#ctor(Nest.Name,Nest.Name)">
      <summary>/_snapshot/{repository}/{snapshot}</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteSnapshotDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteSnapshotDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.DeleteRepositoryDescriptor">
      <summary>Descriptor for DeleteRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRepositoryDescriptor.#ctor(Nest.Names)">
      <summary>/_snapshot/{repository}</summary>
      <param name="repository">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRepositoryDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.DeleteRepositoryDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.DeleteRepositoryDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.GetSnapshotDescriptor">
      <summary>Descriptor for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.GetSnapshotDescriptor.#ctor(Nest.Name,Nest.Names)">
      <summary>/_snapshot/{repository}/{snapshot}</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.GetSnapshotDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.GetSnapshotDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
    </member>
    <member name="M:Nest.GetSnapshotDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.GetSnapshotDescriptor.Verbose(System.Nullable{System.Boolean})">
      <summary>Whether to show verbose snapshot info or only show the basic info found in the repository index blob</summary>
    </member>
    <member name="T:Nest.GetRepositoryDescriptor">
      <summary>Descriptor for GetRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.GetRepositoryDescriptor.#ctor">
      <summary>/_snapshot</summary>
    </member>
    <member name="M:Nest.GetRepositoryDescriptor.#ctor(Nest.Names)">
      <summary>/_snapshot/{repository}</summary>
      <param name="repository">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRepositoryDescriptor.RepositoryName(Nest.Names)">
      <summary>A comma-separated list of repository names</summary>
    </member>
    <member name="M:Nest.GetRepositoryDescriptor.Local(System.Nullable{System.Boolean})">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="M:Nest.GetRepositoryDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.RestoreDescriptor">
      <summary>Descriptor for Restore <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
      <inheritdoc cref="T:Nest.IRestoreRequest" />
    </member>
    <member name="M:Nest.RestoreDescriptor.#ctor(Nest.Name,Nest.Name)">
      <summary>/_snapshot/{repository}/{snapshot}/_restore</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.RestoreDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.RestoreDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.RestoreDescriptor.WaitForCompletion(System.Nullable{System.Boolean})">
      <summary>Should this request wait until the operation has completed before returning</summary>
    </member>
    <member name="M:Nest.RestoreDescriptor.Index(Nest.IndexName)">
      <inheritdoc cref="P:Nest.IRestoreRequest.Indices" />
    </member>
    <member name="M:Nest.RestoreDescriptor.Index``1">
      <inheritdoc cref="P:Nest.IRestoreRequest.Indices" />
    </member>
    <member name="M:Nest.RestoreDescriptor.Indices(Nest.Indices)">
      <summary>
            The indices to restore
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.Indices" />
    </member>
    <member name="M:Nest.RestoreDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>
            Whether indices specified that do not exist
            should be ignored.
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.IgnoreUnavailable" />
    </member>
    <member name="M:Nest.RestoreDescriptor.IncludeGlobalState(System.Nullable{System.Boolean})">
      <summary>
            Whether the cluster global state should be included
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.IncludeGlobalState" />
    </member>
    <member name="M:Nest.RestoreDescriptor.RenamePattern(System.String)">
      <summary>
            A pattern to use to rename restored indices. The pattern
            can be used to capture parts of the original index name
            and used within <see cref="P:Nest.IRestoreRequest.RenameReplacement" /></summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.RenamePattern" />
    </member>
    <member name="M:Nest.RestoreDescriptor.RenameReplacement(System.String)">
      <summary>
            A replacement to use to rename restored indices. Used
            in conjunction with <see cref="P:Nest.IRestoreRequest.RenamePattern" />.
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.RenameReplacement" />
    </member>
    <member name="M:Nest.RestoreDescriptor.IndexSettings(System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
      <summary>
            The index settings that should be applied as part of
            the restore operation. Some settings cannot be changed
            as part of a restore operation, for example, the number
            of shards.
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.IndexSettings" />
    </member>
    <member name="M:Nest.RestoreDescriptor.IgnoreIndexSettings(System.Collections.Generic.List{System.String})">
      <summary>
            The index settings to ignore as part of the restore operation
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.IgnoreIndexSettings" />
    </member>
    <member name="M:Nest.RestoreDescriptor.IgnoreIndexSettings(System.String[])">
      <summary>
            The index settings to ignore as part of the restore operation
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.IgnoreIndexSettings" />
    </member>
    <member name="M:Nest.RestoreDescriptor.IncludeAliases(System.Nullable{System.Boolean})">
      <summary>
            Whether to include aliases as part of the restore
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.IncludeAliases" />
    </member>
    <member name="M:Nest.RestoreDescriptor.Partial(System.Nullable{System.Boolean})">
      <summary>
            Allow partial restore for indices that don't have snapshots of all shards available.
            <para />
            By default, the entire restore operation will fail if one or more indices participating
            in the operation don’t have snapshots of all shards available. It can occur if some
            shards failed to snapshot for example. It is still possible to restore such indices
            by setting <see cref="P:Nest.IRestoreRequest.Partial" /> to <c>true</c>. Only successfully snapshotted shards
            will be restored in this case and all missing shards will be recreated empty.
            </summary>
      <inheritdoc cref="P:Nest.IRestoreRequest.Partial" />
    </member>
    <member name="T:Nest.SnapshotStatusDescriptor">
      <summary>Descriptor for Status <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.#ctor">
      <summary>/_snapshot/_status</summary>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.#ctor(Nest.Name)">
      <summary>/_snapshot/{repository}/_status</summary>
      <param name="repository">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.#ctor(Nest.Name,Nest.Names)">
      <summary>/_snapshot/{repository}/{snapshot}/_status</summary>
      <param name="repository">Optional, accepts null</param>
      <param name="snapshot">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.RepositoryName(Nest.Name)">
      <summary>A repository name</summary>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.Snapshot(Nest.Names)">
      <summary>A comma-separated list of snapshot names</summary>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.IgnoreUnavailable(System.Nullable{System.Boolean})">
      <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
    </member>
    <member name="M:Nest.SnapshotStatusDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.VerifyRepositoryDescriptor">
      <summary>Descriptor for VerifyRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.VerifyRepositoryDescriptor.#ctor(Nest.Name)">
      <summary>/_snapshot/{repository}/_verify</summary>
      <param name="repository">this parameter is required</param>
    </member>
    <member name="M:Nest.VerifyRepositoryDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.VerifyRepositoryDescriptor.MasterTimeout(Nest.Time)">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.VerifyRepositoryDescriptor.Timeout(Nest.Time)">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.ClearSqlCursorDescriptor">
      <summary>Descriptor for ClearCursor <para>Clear SQL cursor</para></summary>
    </member>
    <member name="M:Nest.ClearSqlCursorDescriptor.Cursor(System.String)">
      <summary>
        <para>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </para>
      </summary>
      <inheritdoc cref="P:Nest.IQuerySqlRequest.Cursor" />
            &gt;
        </member>
    <member name="T:Nest.QuerySqlDescriptor">
      <summary>Descriptor for Query <para>Execute SQL</para></summary>
    </member>
    <member name="M:Nest.QuerySqlDescriptor.Format(System.String)">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="M:Nest.QuerySqlDescriptor.Query(System.String)">
      <inheritdoc cref="P:Nest.ISqlRequest.Query" />
            &gt;
        </member>
    <member name="M:Nest.QuerySqlDescriptor.TimeZone(System.String)">
      <inheritdoc cref="P:Nest.ISqlRequest.TimeZone" />
            &gt;
        </member>
    <member name="M:Nest.QuerySqlDescriptor.FetchSize(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISqlRequest.FetchSize" />
            &gt;
        </member>
    <member name="M:Nest.QuerySqlDescriptor.Filter``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.ISqlRequest.Filter" />
            &gt;
        </member>
    <member name="M:Nest.QuerySqlDescriptor.Cursor(System.String)">
      <summary>
            Continue to the next page by sending back the cursor field returned in the previous response.
            <para>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </para></summary>
      <inheritdoc cref="P:Nest.IQuerySqlRequest.Cursor" />
            &gt;
        </member>
    <member name="M:Nest.QuerySqlDescriptor.Columnar(System.Nullable{System.Boolean})">
      <summary>
            Return the results in a columnar fashion: one row represents all the values of a certain column from the current page of results.
            The following formats can be returned in columnar orientation: json, yaml, cbor and smile.
            </summary>
      <inheritdoc cref="P:Nest.IQuerySqlRequest.Columnar" />
            &gt;
        </member>
    <member name="T:Nest.TranslateSqlDescriptor">
      <summary>Descriptor for Translate <para>Translate SQL into Elasticsearch queries</para></summary>
    </member>
    <member name="M:Nest.TranslateSqlDescriptor.Query(System.String)">
      <inheritdoc cref="P:Nest.ISqlRequest.Query" />
            &gt;
        </member>
    <member name="M:Nest.TranslateSqlDescriptor.TimeZone(System.String)">
      <inheritdoc cref="P:Nest.ISqlRequest.TimeZone" />
            &gt;
        </member>
    <member name="M:Nest.TranslateSqlDescriptor.FetchSize(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISqlRequest.FetchSize" />
            &gt;
        </member>
    <member name="M:Nest.TranslateSqlDescriptor.Filter``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.ISqlRequest.Filter" />
            &gt;
        </member>
    <member name="T:Nest.AcknowledgeWatchDescriptor">
      <summary>Descriptor for Acknowledge <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</para></summary>
    </member>
    <member name="M:Nest.AcknowledgeWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{watch_id}/_ack</summary>
      <param name="watchId">this parameter is required</param>
    </member>
    <member name="M:Nest.AcknowledgeWatchDescriptor.#ctor(Nest.Id,Nest.Ids)">
      <summary>/_watcher/watch/{watch_id}/_ack/{action_id}</summary>
      <param name="watchId">this parameter is required</param>
      <param name="actionId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.AcknowledgeWatchDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.AcknowledgeWatchDescriptor.ActionId(Nest.Ids)">
      <summary>A comma-separated list of the action ids to be acked</summary>
    </member>
    <member name="T:Nest.ActivateWatchDescriptor">
      <summary>Descriptor for Activate <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</para></summary>
    </member>
    <member name="M:Nest.ActivateWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{watch_id}/_activate</summary>
      <param name="watchId">this parameter is required</param>
    </member>
    <member name="M:Nest.ActivateWatchDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeactivateWatchDescriptor">
      <summary>Descriptor for Deactivate <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</para></summary>
    </member>
    <member name="M:Nest.DeactivateWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{watch_id}/_deactivate</summary>
      <param name="watchId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeactivateWatchDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteWatchDescriptor">
      <summary>Descriptor for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</para></summary>
    </member>
    <member name="M:Nest.DeleteWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteWatchDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ExecuteWatchDescriptor">
      <summary>Descriptor for Execute <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</para></summary>
    </member>
    <member name="M:Nest.ExecuteWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}/_execute</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ExecuteWatchDescriptor.#ctor">
      <summary>/_watcher/watch/_execute</summary>
    </member>
    <member name="M:Nest.ExecuteWatchDescriptor.Id(Nest.Id)">
      <summary>Watch ID</summary>
    </member>
    <member name="M:Nest.ExecuteWatchDescriptor.Debug(System.Nullable{System.Boolean})">
      <summary>indicates whether the watch should execute in debug mode</summary>
    </member>
    <member name="T:Nest.GetWatchDescriptor">
      <summary>Descriptor for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</para></summary>
    </member>
    <member name="M:Nest.GetWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetWatchDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.PutWatchDescriptor">
      <summary>Descriptor for Put <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</para></summary>
      <inheritdoc cref="T:Nest.IPutWatchRequest" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.PutWatchDescriptor.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="M:Nest.PutWatchDescriptor.Active(System.Nullable{System.Boolean})">
      <summary>Specify whether the watch is in/active by default</summary>
    </member>
    <member name="M:Nest.PutWatchDescriptor.IfPrimaryTerm(System.Nullable{System.Int64})">
      <summary>only update the watch if the last operation that has changed the watch has the specified primary term</summary>
    </member>
    <member name="M:Nest.PutWatchDescriptor.IfSequenceNumber(System.Nullable{System.Int64})">
      <summary>only update the watch if the last operation that has changed the watch has the specified sequence number</summary>
    </member>
    <member name="M:Nest.PutWatchDescriptor.Version(System.Nullable{System.Int64})">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="M:Nest.PutWatchDescriptor.Actions(System.Func{Nest.ActionsDescriptor,Nest.IPromise{Nest.Actions}})">
      <summary>
            The actions that will be run if the condition matches
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Actions" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.Condition(System.Func{Nest.ConditionDescriptor,Nest.ConditionContainer})">
      <summary>
            Defines if the actions should be run
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Condition" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.Input(System.Func{Nest.InputDescriptor,Nest.InputContainer})">
      <summary>
            Defines the input that loads the data for the watch
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Input" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            Metadata that will be copied into the history entries
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Metadata" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.Metadata(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Metadata that will be copied into the history entries
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Metadata" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.ThrottlePeriod(System.String)">
      <summary>
            The minimum time between actions being run. Defaults to 5 seconds.
            </summary>
      <remarks>
            Default can be changed in the config file with the setting <code>xpack.watcher.throttle.period.default_period</code>.
            </remarks>
      <inheritdoc cref="P:Nest.IPutWatchRequest.ThrottlePeriod" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.Transform(System.Func{Nest.TransformDescriptor,Nest.TransformContainer})">
      <summary>
            Processes and changes the payload in the watch execution context to prepare it for the actions.
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Transform" />
    </member>
    <member name="M:Nest.PutWatchDescriptor.Trigger(System.Func{Nest.TriggerDescriptor,Nest.TriggerContainer})">
      <summary>
            Defines when the watch should run
            </summary>
      <inheritdoc cref="P:Nest.IPutWatchRequest.Trigger" />
    </member>
    <member name="T:Nest.StartWatcherDescriptor">
      <summary>Descriptor for Start <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</para></summary>
    </member>
    <member name="T:Nest.WatcherStatsDescriptor">
      <summary>Descriptor for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</para></summary>
    </member>
    <member name="M:Nest.WatcherStatsDescriptor.#ctor">
      <summary>/_watcher/stats</summary>
    </member>
    <member name="M:Nest.WatcherStatsDescriptor.#ctor(Nest.Metrics)">
      <summary>/_watcher/stats/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.WatcherStatsDescriptor.Metric(Nest.Metrics)">
      <summary>Controls what additional stat metrics should be include in the response</summary>
    </member>
    <member name="M:Nest.WatcherStatsDescriptor.EmitStacktraces(System.Nullable{System.Boolean})">
      <summary>Emits stack traces of currently running watches</summary>
    </member>
    <member name="T:Nest.StopWatcherDescriptor">
      <summary>Descriptor for Stop <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</para></summary>
    </member>
    <member name="T:Nest.XPackInfoDescriptor">
      <summary>Descriptor for Info <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</para></summary>
    </member>
    <member name="M:Nest.XPackInfoDescriptor.Categories(System.String[])">
      <summary>Comma-separated list of info categories. Can be any of: build, license, features</summary>
    </member>
    <member name="T:Nest.XPackUsageDescriptor">
      <summary>Descriptor for Usage <para>Retrieve information about xpack features usage</para></summary>
    </member>
    <member name="M:Nest.XPackUsageDescriptor.MasterTimeout(Nest.Time)">
      <summary>Specify timeout for watch write operation</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.BackOffRetries">
      <summary> In case of a HTTP 429 (Too Many Requests) response status code, how many times should we automatically back off before failing</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.BackOffTime">
      <summary> In case of a HTTP 429 (Too Many Requests) response status code, how long should we wait before retrying</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.BackPressure">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each bulk request will call <see cref="M:Nest.ProducerConsumerBackPressure.Release" /></summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.BufferToBulk">
      <summary>
            By default, <see cref="T:Nest.BulkAllObservable`1" /> calls <see cref="M:Nest.BulkDescriptor.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkIndexDescriptor{``0},``0,Nest.IBulkIndexOperation{``0}})" /> on the buffer.
            There might be case where you'd like more control over the bulk operation. By setting this callback, you are in complete control
            of describing how the buffer should be translated to a bulk operation.
            </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.ContinueAfterDroppedDocuments">
      <summary>
            Halt the bulk all request if any of the documents returned is a failure that can not be retried.
            When true, will feed dropped documents to <see cref="P:Nest.IBulkAllRequest`1.DroppedDocumentCallback" /></summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.Documents">
      <summary>
             The documents to send to Elasticsearch, ideally lazily evaluated by using <see langword="yield" />
            return to provide each document.
            <see cref="T:Nest.BulkAllObservable`1" /> will eager evaluate each partitioned page when operating on it, using
            <see cref="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />.
            </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.DroppedDocumentCallback">
      <summary>
            If a bulk operation fails because it receives documents it can not retry they will be fed to this callback.
            If <see cref="P:Nest.IBulkAllRequest`1.ContinueAfterDroppedDocuments" /> is set to <c>true</c> processing will continue, so this callback can be used
            to feed into a dead letter queue. Otherwise bulk all indexing will be halted.
            </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.Index">
      <summary>The index to use for items that don't specify one. By default, will be inferred from <typeparamref name="T" />.
             If no default index has been mapped for <typeparamref name="T" />
             using <see cref="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})" />
             on <see cref="T:Nest.ConnectionSettings" />, an exception will be thrown.
             </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.MaxDegreeOfParallelism">
      <summary>The maximum number of bulk operations we want to have in flight at a time</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.Pipeline">
      <summary>The pipeline id to preprocess all the incoming documents with</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.RefreshIndices">
      <summary>The indices you wish to refresh after the bulk all completes, defaults to <see cref="P:Nest.IBulkAllRequest`1.Index" /></summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.RefreshOnCompleted">
      <summary>
             Refresh the index after performing ALL the bulk operations (NOTE this is an additional request)
            </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.RetryDocumentPredicate">
      <summary>
            A predicate to control which documents should be retried.
            Defaults to failed bulk items with a HTTP 429 (Too Many Requests) response status code.
            </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.Routing">
      <summary>Specific per bulk operation routing value</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.Size">
      <summary> The number of documents to send per bulk</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.Timeout">
      <summary>Explicit per operation timeout</summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.WaitForActiveShards">
      <summary>
            Sets the number of shard copies that must be active before proceeding with the bulk operation.
            Defaults to <c>1</c>, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any
            non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)
            </summary>
    </member>
    <member name="P:Nest.IBulkAllRequest`1.BulkResponseCallback">
      <summary>
            Be notified every time a bulk response returns, this includes retries.
            <see cref="M:System.IObserver`1.OnNext(`0)" /> is only called for successful batches.
            </summary>
    </member>
    <member name="P:Nest.BulkAllRequest`1.BackOffRetries">
      <summary> In case of a HTTP 429 (Too Many Requests) response status code, how many times should we automatically back off before failing</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.BackOffTime">
      <summary> In case of a HTTP 429 (Too Many Requests) response status code, how long should we wait before retrying</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.BackPressure">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each bulk request will call <see cref="M:Nest.ProducerConsumerBackPressure.Release" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.BufferToBulk">
      <summary>
            By default, <see cref="T:Nest.BulkAllObservable`1" /> calls <see cref="M:Nest.BulkDescriptor.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkIndexDescriptor{``0},``0,Nest.IBulkIndexOperation{``0}})" /> on the buffer.
            There might be case where you'd like more control over the bulk operation. By setting this callback, you are in complete control
            of describing how the buffer should be translated to a bulk operation.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.ContinueAfterDroppedDocuments">
      <summary>
            Halt the bulk all request if any of the documents returned is a failure that can not be retried.
            When true, will feed dropped documents to <see cref="P:Nest.IBulkAllRequest`1.DroppedDocumentCallback" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.Documents">
      <summary>
             The documents to send to Elasticsearch, ideally lazily evaluated by using <see langword="yield" />
            return to provide each document.
            <see cref="T:Nest.BulkAllObservable`1" /> will eager evaluate each partitioned page when operating on it, using
            <see cref="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.DroppedDocumentCallback">
      <summary>
            If a bulk operation fails because it receives documents it can not retry they will be fed to this callback.
            If <see cref="P:Nest.IBulkAllRequest`1.ContinueAfterDroppedDocuments" /> is set to <c>true</c> processing will continue, so this callback can be used
            to feed into a dead letter queue. Otherwise bulk all indexing will be halted.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.Index">
      <summary>The index to use for items that don't specify one. By default, will be inferred from <typeparamref name="T" />.
             If no default index has been mapped for <typeparamref name="T" />
             using <see cref="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})" />
             on <see cref="T:Nest.ConnectionSettings" />, an exception will be thrown.
             </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.MaxDegreeOfParallelism">
      <summary>The maximum number of bulk operations we want to have in flight at a time</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.Pipeline">
      <summary>The pipeline id to preprocess all the incoming documents with</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.RefreshIndices">
      <summary>The indices you wish to refresh after the bulk all completes, defaults to <see cref="P:Nest.IBulkAllRequest`1.Index" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.RefreshOnCompleted">
      <summary>
             Refresh the index after performing ALL the bulk operations (NOTE this is an additional request)
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.RetryDocumentPredicate">
      <summary>
            A predicate to control which documents should be retried.
            Defaults to failed bulk items with a HTTP 429 (Too Many Requests) response status code.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.Routing">
      <summary>Specific per bulk operation routing value</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.Size">
      <summary> The number of documents to send per bulk</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.Timeout">
      <summary>Explicit per operation timeout</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.WaitForActiveShards">
      <summary>
            Sets the number of shard copies that must be active before proceeding with the bulk operation.
            Defaults to <c>1</c>, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any
            non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllRequest`1.BulkResponseCallback">
      <summary>
            Be notified every time a bulk response returns, this includes retries.
            <see cref="M:System.IObserver`1.OnNext(`0)" /> is only called for successful batches.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.MaxDegreeOfParallelism(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.MaxDegreeOfParallelism" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.Size(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.Size" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.BackOffRetries(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.BackOffRetries" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.BackOffTime(Nest.Time)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.BackOffTime" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.Index(Nest.IndexName)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.Index" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.Index``1">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.Index" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.RefreshOnCompleted(System.Boolean)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.RefreshOnCompleted" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.RefreshIndices(Nest.Indices)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.RefreshIndices" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.Routing(Nest.Routing)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.Routing" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.Timeout(Nest.Time)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.Timeout" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.Pipeline(System.String)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.Pipeline" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.BufferToBulk(System.Action{Nest.BulkDescriptor,System.Collections.Generic.IList{`0}})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.BufferToBulk" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.RetryDocumentPredicate(System.Func{Nest.BulkResponseItemBase,`0,System.Boolean})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.RetryDocumentPredicate" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.BackPressure(System.Int32,System.Nullable{System.Int32})">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each scroll request will additionally wait on <see cref="M:Nest.ProducerConsumerBackPressure.WaitAsync(System.Threading.CancellationToken)" /> as well as
            <see cref="M:Nest.BulkAllDescriptor`1.MaxDegreeOfParallelism(System.Nullable{System.Int32})" /> if set. Not that the consumer has to call <see cref="M:Nest.ProducerConsumerBackPressure.Release" />
            on the same instance every time it is done.
            </summary>
      <param name="maxConcurrency">The minimum maximum concurrency which would be the bottleneck of the producer consumer pipeline</param>
      <param name="backPressureFactor">The maximum amplification back pressure of the greedier part of the producer consumer pipeline</param>
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.ContinueAfterDroppedDocuments(System.Boolean)">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.ContinueAfterDroppedDocuments" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.DroppedDocumentCallback(System.Action{Nest.BulkResponseItemBase,`0})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.DroppedDocumentCallback" />
    </member>
    <member name="M:Nest.BulkAllDescriptor`1.BulkResponseCallback(System.Action{Nest.BulkResponse})">
      <inheritdoc cref="P:Nest.IBulkAllRequest`1.BulkResponseCallback" />
    </member>
    <member name="T:Nest.BulkAllResponse">
      <inheritdoc />
    </member>
    <member name="P:Nest.BulkAllResponse.Page">
      <summary>This is the Nth buffer.</summary>
    </member>
    <member name="P:Nest.BulkAllResponse.Retries">
      <summary>The number of back off retries were needed to store this document.</summary>
    </member>
    <member name="P:Nest.BulkAllResponse.Items">
      <summary>The items returned from the bulk response</summary>
    </member>
    <member name="T:Nest.IElasticClient">
      <summary>
            Elasticsearch high level client 
            </summary>
    </member>
    <member name="M:Nest.IElasticClient.BulkAll``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkAllDescriptor{``0},Nest.IBulkAllRequest{``0}},System.Threading.CancellationToken)">
      <summary>
            BulkAll is a generic helper that will partition any lazy stream of documents and send them to Elasticsearch as concurrent bulk requests.
            <para />
            The index to target will be inferred from <typeparamref name="T" />. If no default index has been mapped for <typeparamref name="T" />
            using <see cref="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})" /> on <see cref="T:Nest.ConnectionSettings" />, an exception will be thrown.
            Inference can be overridden using <see cref="M:Nest.BulkAllDescriptor`1.Index(Nest.IndexName)" />, and in addition,
            an index can be specified for each document using <see cref="M:Nest.BulkAllDescriptor`1.BufferToBulk(System.Action{Nest.BulkDescriptor,System.Collections.Generic.IList{`0}})" />.
            </summary>
      <param name="documents">The lazy stream of documents</param>
    </member>
    <member name="M:Nest.IElasticClient.BulkAll``1(Nest.IBulkAllRequest{``0},System.Threading.CancellationToken)">
      <summary>
            BulkAll is a generic helper that will partition any lazy stream of documents and send them to Elasticsearch as concurrent bulk requests
            <para />
            The index to target will be inferred from <typeparamref name="T" />. If no default index has been mapped for <typeparamref name="T" />
            using <see cref="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})" /> on <see cref="T:Nest.ConnectionSettings" />, an exception will be thrown.
            Inference can be overridden using <see cref="P:Nest.IBulkAllRequest`1.Index" />, and in addition,
            an index can be specified for each document using <see cref="P:Nest.IBulkAllRequest`1.BufferToBulk" />.
            </summary>
    </member>
    <member name="M:Nest.IElasticClient.Reindex``2(System.Func{``0,``1},System.Func{Nest.ReindexDescriptor{``0,``1},Nest.IReindexRequest{``0,``1}},System.Threading.CancellationToken)">
      <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
      <returns>An IObservable&lt;ReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
    </member>
    <member name="M:Nest.IElasticClient.Reindex``1(System.Func{Nest.ReindexDescriptor{``0,``0},Nest.IReindexRequest{``0,``0}},System.Threading.CancellationToken)">
      <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
      <returns>An IObservable&lt;ReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
    </member>
    <member name="M:Nest.IElasticClient.Reindex``2(Nest.IReindexRequest{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
      <param name="request">a request object to describe the reindex operation</param>
      <returns>An IObservable&lt;ReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
    </member>
    <member name="M:Nest.IElasticClient.Reindex``1(Nest.IReindexRequest{``0},System.Threading.CancellationToken)">
      <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
      <param name="request">a request object to describe the reindex operation</param>
      <returns>An IObservable&lt;ReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
    </member>
    <member name="M:Nest.IElasticClient.Reindex``2(Nest.IndexName,Nest.IndexName,System.Func{``0,``1},System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its usecases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
    </member>
    <member name="M:Nest.IElasticClient.Reindex``1(Nest.IndexName,Nest.IndexName,System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its use cases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
    </member>
    <member name="M:Nest.IElasticClient.ScrollAll``1(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
      <summary>
            Helper method that can parallelize a scroll using the sliced scroll feature of Elasticsearch, and return the results as an
            <see cref="T:System.IObservable`1" />.
            </summary>
      <param name="scrollTime">The time to keep the scroll active on the server until we send another scroll request</param>
      <param name="numberOfSlices">
            The number of slices to chop the scroll into, typically the number of shards but can be higher and using a
            custom routing key
            </param>
    </member>
    <member name="M:Nest.IElasticClient.ScrollAll``1(Nest.IScrollAllRequest,System.Threading.CancellationToken)">
      <summary>
            Helper method that can parallelize a scroll using the sliced scroll feature of Elasticsearch and return the results as an
            <see cref="T:System.IObservable`1" />.
            </summary>
    </member>
    <member name="M:Nest.IElasticClient.CreateDocument``1(``0)">
      <summary>
            Creates a new typed document in a specific index. If a document with the same index, type and id already exists,
            A 409 Conflict HTTP response status code and error will be returned.
            </summary>
      <typeparam name="TDocument">The document type used to infer the default index, type and id</typeparam>
      <param name="document">
            The document to be created. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings" /> for <typeparamref name="TDocument" /></para><para>
            2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty" /> property on <see cref="T:Nest.ElasticsearchTypeAttribute" /> applied to
            <typeparamref name="TDocument" /></para><para>3. A property named Id on <typeparamref name="TDocument" /></para></param>
      <param name="selector">Optionally further describe the create operation i.e override type/index/id</param>
    </member>
    <member name="M:Nest.IElasticClient.CreateDocumentAsync``1(``0,System.Threading.CancellationToken)">
      <inheritdoc cref="M:Nest.IElasticClient.CreateDocument``1(``0)" />
    </member>
    <member name="M:Nest.IElasticClient.IndexDocument``1(``0)">
      <summary>
            Adds or updates a typed JSON document in a specific index, making it searchable.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html</a></summary>
      <typeparam name="TDocument">The document type used to infer the default index, type and id</typeparam>
      <param name="document">
            The document to be indexed. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings" /> for <typeparamref name="TDocument" /></para><para>
            2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty" /> property on <see cref="T:Nest.ElasticsearchTypeAttribute" /> applied to
            <typeparamref name="TDocument" /></para><para>3. A property named Id on <typeparamref name="TDocument" /></para></param>
      <param name="selector">Optionally further describe the index operation i.e override type, index, id</param>
    </member>
    <member name="M:Nest.IElasticClient.IndexDocumentAsync``1(``0,System.Threading.CancellationToken)">
      <inheritdoc cref="M:Nest.IElasticClient.IndexDocument``1(``0)" />
    </member>
    <member name="P:Nest.IElasticClient.ConnectionSettings">
      <summary>
            The configured connection settings for the client
            </summary>
    </member>
    <member name="P:Nest.IElasticClient.Infer">
      <summary>
            Access to the <see cref="T:Nest.Inferrer" /> that this instance of the client uses to resolve types to e.g
            indices, property, field names
            </summary>
    </member>
    <member name="P:Nest.IElasticClient.LowLevel">
      <summary>
            An instance of the low level client that uses the serializers from the highlevel client.
            </summary>
    </member>
    <member name="P:Nest.IElasticClient.RequestResponseSerializer">
      <summary>
            Access the configured <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.RequestResponseSerializer" />
            Out of the box <see cref="P:Nest.IElasticClient.SourceSerializer" /> and this point to the same instance
            </summary>
    </member>
    <member name="P:Nest.IElasticClient.SourceSerializer">
      <summary>
            Access the configured <see cref="P:Nest.IConnectionSettingsValues.SourceSerializer" />
            Out of the box <see cref="P:Nest.IElasticClient.RequestResponseSerializer" /> and this point to the same instance
            </summary>
    </member>
    <member name="P:Nest.IElasticClient.Cat">
      <summary>Cat APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Cluster">
      <summary>Cluster APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.CrossClusterReplication">
      <summary>Cross Cluster Replication APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Graph">
      <summary>Graph APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.IndexLifecycleManagement">
      <summary>Index Lifecycle Management APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Indices">
      <summary>Indices APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Ingest">
      <summary>Ingest APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.License">
      <summary>License APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.MachineLearning">
      <summary>Machine Learning APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Migration">
      <summary>Migration APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Nodes">
      <summary>Nodes APIs</summary>
    </member>
    <member name="M:Nest.IElasticClient.Bulk(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.BulkAsync(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Bulk(Nest.IBulkRequest)">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.BulkAsync(Nest.IBulkRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ClearScroll(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ClearScrollAsync(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ClearScroll(Nest.IClearScrollRequest)">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ClearScrollAsync(Nest.IClearScrollRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Count``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Count(Nest.ICountRequest)">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.CountAsync(Nest.ICountRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Create``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest{``0}})">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.CreateAsync``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest{``0}},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Create``1(Nest.ICreateRequest{``0})">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.CreateAsync``1(Nest.ICreateRequest{``0},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Delete``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Delete(Nest.IDeleteRequest)">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteAsync(Nest.IDeleteRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQuery``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQueryAsync``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQuery(Nest.IDeleteByQueryRequest)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQueryAsync(Nest.IDeleteByQueryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQueryRethrottle(Nest.TaskId,System.Func{Nest.DeleteByQueryRethrottleDescriptor,Nest.IDeleteByQueryRethrottleRequest})">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQueryRethrottleAsync(Nest.TaskId,System.Func{Nest.DeleteByQueryRethrottleDescriptor,Nest.IDeleteByQueryRethrottleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQueryRethrottle(Nest.IDeleteByQueryRethrottleRequest)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteByQueryRethrottleAsync(Nest.IDeleteByQueryRethrottleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteScript(Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteScriptAsync(Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteScript(Nest.IDeleteScriptRequest)">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DeleteScriptAsync(Nest.IDeleteScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DocumentExists``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DocumentExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DocumentExists(Nest.IDocumentExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.DocumentExistsAsync(Nest.IDocumentExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SourceExists``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SourceExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SourceExists(Nest.ISourceExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SourceExistsAsync(Nest.ISourceExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Explain``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest})">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ExplainAsync``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Explain``1(Nest.IExplainRequest)">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ExplainAsync``1(Nest.IExplainRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.FieldCapabilities(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest})">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.FieldCapabilitiesAsync(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.FieldCapabilities(Nest.IFieldCapabilitiesRequest)">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.FieldCapabilitiesAsync(Nest.IFieldCapabilitiesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Get``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.GetAsync``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Get``1(Nest.IGetRequest)">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.GetAsync``1(Nest.IGetRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.GetScript(Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.GetScriptAsync(Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.GetScript(Nest.IGetScriptRequest)">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.GetScriptAsync(Nest.IGetScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Source``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SourceAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Source``1(Nest.ISourceRequest)">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SourceAsync``1(Nest.ISourceRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Index``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest{``0}})">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.IndexAsync``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest{``0}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Index``1(Nest.IIndexRequest{``0})">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.IndexAsync``1(Nest.IIndexRequest{``0},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RootNodeInfo(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RootNodeInfoAsync(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RootNodeInfo(Nest.IRootNodeInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RootNodeInfoAsync(Nest.IRootNodeInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiGet(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiGetAsync(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiGet(Nest.IMultiGetRequest)">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiGetAsync(Nest.IMultiGetRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearch(Nest.Indices,System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearchAsync(Nest.Indices,System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearch(Nest.IMultiSearchRequest)">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearchAsync(Nest.IMultiSearchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearchTemplate(Nest.Indices,System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest})">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearchTemplateAsync(Nest.Indices,System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearchTemplate(Nest.IMultiSearchTemplateRequest)">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiSearchTemplateAsync(Nest.IMultiSearchTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiTermVectors(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiTermVectorsAsync(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiTermVectors(Nest.IMultiTermVectorsRequest)">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.MultiTermVectorsAsync(Nest.IMultiTermVectorsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Ping(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.PingAsync(System.Func{Nest.PingDescriptor,Nest.IPingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Ping(Nest.IPingRequest)">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.PingAsync(Nest.IPingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.PutScript(Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest})">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.PutScriptAsync(Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.PutScript(Nest.IPutScriptRequest)">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.PutScriptAsync(Nest.IPutScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexOnServer(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexOnServerAsync(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexOnServer(Nest.IReindexOnServerRequest)">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexOnServerAsync(Nest.IReindexOnServerRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexRethrottle(Nest.TaskId,System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest})">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexRethrottleAsync(Nest.TaskId,System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexRethrottle(Nest.IReindexRethrottleRequest)">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ReindexRethrottleAsync(Nest.IReindexRethrottleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RenderSearchTemplate(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest})">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RenderSearchTemplateAsync(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RenderSearchTemplate(Nest.IRenderSearchTemplateRequest)">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.RenderSearchTemplateAsync(Nest.IRenderSearchTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ExecutePainlessScript``1(System.Func{Nest.ExecutePainlessScriptDescriptor,Nest.IExecutePainlessScriptRequest})">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ExecutePainlessScriptAsync``1(System.Func{Nest.ExecutePainlessScriptDescriptor,Nest.IExecutePainlessScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ExecutePainlessScript``1(Nest.IExecutePainlessScriptRequest)">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ExecutePainlessScriptAsync``1(Nest.IExecutePainlessScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Scroll``2(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ScrollAsync``2(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Scroll``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ScrollAsync``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Scroll``1(Nest.IScrollRequest)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.ScrollAsync``1(Nest.IScrollRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Search``1(Nest.ISearchRequest)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchAsync``1(Nest.ISearchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchShards``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchShardsAsync``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchShards(Nest.ISearchShardsRequest)">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchShardsAsync(Nest.ISearchShardsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchTemplate``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchTemplateAsync``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchTemplate``1(Nest.ISearchTemplateRequest)">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.SearchTemplateAsync``1(Nest.ISearchTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.TermVectors``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.TermVectorsAsync``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.TermVectors``1(Nest.ITermVectorsRequest{``0})">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.TermVectorsAsync``1(Nest.ITermVectorsRequest{``0},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Update``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateAsync``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Update``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateAsync``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.Update``2(Nest.IUpdateRequest{``0,``1})">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateAsync``2(Nest.IUpdateRequest{``0,``1},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQuery``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQueryAsync``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQuery(Nest.IUpdateByQueryRequest)">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQueryAsync(Nest.IUpdateByQueryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQueryRethrottle(Nest.TaskId,System.Func{Nest.UpdateByQueryRethrottleDescriptor,Nest.IUpdateByQueryRethrottleRequest})">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQueryRethrottleAsync(Nest.TaskId,System.Func{Nest.UpdateByQueryRethrottleDescriptor,Nest.IUpdateByQueryRethrottleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQueryRethrottle(Nest.IUpdateByQueryRethrottleRequest)">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.IElasticClient.UpdateByQueryRethrottleAsync(Nest.IUpdateByQueryRethrottleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="P:Nest.IElasticClient.Rollup">
      <summary>Rollup APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Security">
      <summary>Security APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Snapshot">
      <summary>Snapshot APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Sql">
      <summary>Sql APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Tasks">
      <summary>Tasks APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.Watcher">
      <summary>Watcher APIs</summary>
    </member>
    <member name="P:Nest.IElasticClient.XPack">
      <summary>XPack APIs</summary>
    </member>
    <member name="M:Nest.IElasticClient.Map``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
      <summary>
            The put mapping API allows to register specific mapping definition for a specific type.
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-put-mapping.html
            </summary>
      <typeparam name="T">The type we want to map in Elasticsearch</typeparam>
      <param name="selector">A descriptor to describe the mapping of our type</param>
    </member>
    <member name="M:Nest.IElasticClient.Map(Nest.IPutMappingRequest)">
      <inheritdoc />
    </member>
    <member name="M:Nest.IElasticClient.MapAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest},System.Threading.CancellationToken)">
      <inheritdoc />
    </member>
    <member name="M:Nest.IElasticClient.MapAsync(Nest.IPutMappingRequest,System.Threading.CancellationToken)">
      <inheritdoc />
    </member>
    <member name="T:Nest.ElasticClient">
      <summary>
            ElasticClient is NEST's strongly typed client which exposes fully mapped Elasticsearch endpoints
            </summary>
      <summary>
            Elasticsearch high level client
            </summary>
    </member>
    <member name="M:Nest.ElasticClient.BulkAll``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkAllDescriptor{``0},Nest.IBulkAllRequest{``0}},System.Threading.CancellationToken)">
      <summary>
            BulkAll is a generic helper that will partition any lazy stream of documents and send them to Elasticsearch as concurrent bulk requests
            <para />
            The index to target will be inferred from <typeparamref name="T" />. If no default index has been mapped for <typeparamref name="T" />
            using <see cref="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})" /> on <see cref="T:Nest.ConnectionSettings" />, an exception will be thrown.
            Inference can be overridden using <see cref="P:Nest.IBulkAllRequest`1.Index" />, and in addition,
            an index can be specified for each document using <see cref="P:Nest.IBulkAllRequest`1.BufferToBulk" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.BulkAll``1(Nest.IBulkAllRequest{``0},System.Threading.CancellationToken)">
      <summary>
            BulkAll is a generic helper that will partition any lazy stream of documents and send them to Elasticsearch as concurrent bulk requests
            <para />
            The index to target will be inferred from <typeparamref name="T" />. If no default index has been mapped for <typeparamref name="T" />
            using <see cref="M:Nest.ConnectionSettingsBase`1.DefaultMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})" /> on <see cref="T:Nest.ConnectionSettings" />, an exception will be thrown.
            Inference can be overridden using <see cref="P:Nest.IBulkAllRequest`1.Index" />, and in addition,
            an index can be specified for each document using <see cref="P:Nest.IBulkAllRequest`1.BufferToBulk" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Reindex``1(System.Func{Nest.ReindexDescriptor{``0,``0},Nest.IReindexRequest{``0,``0}},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its use cases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Reindex``2(System.Func{``0,``1},System.Func{Nest.ReindexDescriptor{``0,``1},Nest.IReindexRequest{``0,``1}},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its usecases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Reindex``1(Nest.IReindexRequest{``0},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its use cases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Reindex``2(Nest.IReindexRequest{``0,``1},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its usecases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Reindex``2(Nest.IndexName,Nest.IndexName,System.Func{``0,``1},System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its usecases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Reindex``1(Nest.IndexName,Nest.IndexName,System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
      <summary>
            Simplified form for reindex which will cover 80% of its use cases. Allows you to index all documents of type T from
            <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector" />.
            </summary>
      <param name="fromIndex">The source index, from which all types will be returned</param>
      <param name="toIndex">
            The target index, if it does not exist already will be created using the same settings of
            <paramref name="fromIndex" /></param>
      <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex" /></param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.ScrollAll``1(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
      <summary>
            Helper method that can parallelize a scroll using the sliced scroll feature of Elasticsearch and return the results as an
            <see cref="T:System.IObservable`1" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.ScrollAll``1(Nest.IScrollAllRequest,System.Threading.CancellationToken)">
      <summary>
            Helper method that can parallelize a scroll using the sliced scroll feature of Elasticsearch and return the results as an
            <see cref="T:System.IObservable`1" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.CreateDocument``1(``0)">
      <summary>
            Creates a new typed document in a specific index. If a document with the same index, type and id already exists,
            A 409 Conflict HTTP response status code and error will be returned.
            </summary>
      <typeparam name="TDocument">The document type used to infer the default index, type and id</typeparam>
      <param name="document">
            The document to be created. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings" /> for <typeparamref name="TDocument" /></para><para>
            2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty" /> property on <see cref="T:Nest.ElasticsearchTypeAttribute" /> applied to
            <typeparamref name="TDocument" /></para><para>3. A property named Id on <typeparamref name="TDocument" /></para></param>
      <param name="selector">Optionally further describe the create operation i.e override type/index/id</param>
      <inheritdoc cref="M:Nest.IElasticClient.CreateDocument``1(``0)" />
    </member>
    <member name="M:Nest.ElasticClient.CreateDocumentAsync``1(``0,System.Threading.CancellationToken)">
      <summary>
            Creates a new typed document in a specific index. If a document with the same index, type and id already exists,
            A 409 Conflict HTTP response status code and error will be returned.
            </summary>
      <typeparam name="TDocument">The document type used to infer the default index, type and id</typeparam>
      <param name="document">
            The document to be created. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings" /> for <typeparamref name="TDocument" /></para><para>
            2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty" /> property on <see cref="T:Nest.ElasticsearchTypeAttribute" /> applied to
            <typeparamref name="TDocument" /></para><para>3. A property named Id on <typeparamref name="TDocument" /></para></param>
      <param name="selector">Optionally further describe the create operation i.e override type/index/id</param>
      <inheritdoc cref="M:Nest.IElasticClient.CreateDocument``1(``0)" />
    </member>
    <member name="M:Nest.ElasticClient.IndexDocument``1(``0)">
      <summary>
            Adds or updates a typed JSON document in a specific index, making it searchable.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html</a></summary>
      <typeparam name="TDocument">The document type used to infer the default index, type and id</typeparam>
      <param name="document">
            The document to be indexed. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings" /> for <typeparamref name="TDocument" /></para><para>
            2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty" /> property on <see cref="T:Nest.ElasticsearchTypeAttribute" /> applied to
            <typeparamref name="TDocument" /></para><para>3. A property named Id on <typeparamref name="TDocument" /></para></param>
      <param name="selector">Optionally further describe the index operation i.e override type, index, id</param>
      <inheritdoc cref="M:Nest.IElasticClient.IndexDocument``1(``0)" />
    </member>
    <member name="M:Nest.ElasticClient.IndexDocumentAsync``1(``0,System.Threading.CancellationToken)">
      <summary>
            Adds or updates a typed JSON document in a specific index, making it searchable.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html</a></summary>
      <typeparam name="TDocument">The document type used to infer the default index, type and id</typeparam>
      <param name="document">
            The document to be indexed. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings" /> for <typeparamref name="TDocument" /></para><para>
            2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty" /> property on <see cref="T:Nest.ElasticsearchTypeAttribute" /> applied to
            <typeparamref name="TDocument" /></para><para>3. A property named Id on <typeparamref name="TDocument" /></para></param>
      <param name="selector">Optionally further describe the index operation i.e override type, index, id</param>
      <inheritdoc cref="M:Nest.IElasticClient.IndexDocument``1(``0)" />
    </member>
    <member name="M:Nest.ElasticClient.#ctor(System.String,Elasticsearch.Net.BasicAuthenticationCredentials)">
      <summary>
            Sets up the client to communicate to Elastic Cloud using <paramref name="cloudId" />,
            <para><see cref="T:Elasticsearch.Net.CloudConnectionPool" /> documentation for more information on how to obtain your Cloud Id</para><para></para>If you want more control use the <see cref="M:Nest.ElasticClient.#ctor(Nest.IConnectionSettingsValues)" /> constructor and pass an instance of
            <see cref="P:Nest.ElasticClient.ConnectionSettings" /> that takes <paramref name="cloudId" /> in its constructor as well
            </summary>
    </member>
    <member name="M:Nest.ElasticClient.#ctor(System.String,Elasticsearch.Net.ApiKeyAuthenticationCredentials)">
      <summary>
            Sets up the client to communicate to Elastic Cloud using <paramref name="cloudId" />,
            <para><see cref="T:Elasticsearch.Net.CloudConnectionPool" /> documentation for more information on how to obtain your Cloud Id</para><para></para>If you want more control use the <see cref="M:Nest.ElasticClient.#ctor(Nest.IConnectionSettingsValues)" /> constructor and pass an instance of
            <see cref="P:Nest.ElasticClient.ConnectionSettings" /> that takes <paramref name="cloudId" /> in its constructor as well
            </summary>
    </member>
    <member name="P:Nest.ElasticClient.Cat">
      <summary>Cat APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Cluster">
      <summary>Cluster APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.CrossClusterReplication">
      <summary>Cross Cluster Replication APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Graph">
      <summary>Graph APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.IndexLifecycleManagement">
      <summary>Index Lifecycle Management APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Indices">
      <summary>Indices APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Ingest">
      <summary>Ingest APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.License">
      <summary>License APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.MachineLearning">
      <summary>Machine Learning APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Migration">
      <summary>Migration APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Nodes">
      <summary>Nodes APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Rollup">
      <summary>Rollup APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Security">
      <summary>Security APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Snapshot">
      <summary>Snapshot APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Sql">
      <summary>Sql APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Tasks">
      <summary>Tasks APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.Watcher">
      <summary>Watcher APIs</summary>
    </member>
    <member name="P:Nest.ElasticClient.XPack">
      <summary>XPack APIs</summary>
    </member>
    <member name="M:Nest.ElasticClient.Bulk(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.BulkAsync(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Bulk(Nest.IBulkRequest)">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.BulkAsync(Nest.IBulkRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>bulk</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ClearScroll(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ClearScrollAsync(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ClearScroll(Nest.IClearScrollRequest)">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ClearScrollAsync(Nest.IClearScrollRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>clear_scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Count``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Count(Nest.ICountRequest)">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.CountAsync(Nest.ICountRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Create``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest{``0}})">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.CreateAsync``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest{``0}},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Create``1(Nest.ICreateRequest{``0})">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.CreateAsync``1(Nest.ICreateRequest{``0},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Delete``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Delete(Nest.IDeleteRequest)">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteAsync(Nest.IDeleteRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQuery``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQueryAsync``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQuery(Nest.IDeleteByQueryRequest)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQueryAsync(Nest.IDeleteByQueryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQueryRethrottle(Nest.TaskId,System.Func{Nest.DeleteByQueryRethrottleDescriptor,Nest.IDeleteByQueryRethrottleRequest})">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQueryRethrottleAsync(Nest.TaskId,System.Func{Nest.DeleteByQueryRethrottleDescriptor,Nest.IDeleteByQueryRethrottleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQueryRethrottle(Nest.IDeleteByQueryRethrottleRequest)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteByQueryRethrottleAsync(Nest.IDeleteByQueryRethrottleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>delete_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteScript(Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteScriptAsync(Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteScript(Nest.IDeleteScriptRequest)">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DeleteScriptAsync(Nest.IDeleteScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>delete_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DocumentExists``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DocumentExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DocumentExists(Nest.IDocumentExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.DocumentExistsAsync(Nest.IDocumentExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SourceExists``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SourceExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SourceExists(Nest.ISourceExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SourceExistsAsync(Nest.ISourceExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>exists_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Explain``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest})">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ExplainAsync``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Explain``1(Nest.IExplainRequest)">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ExplainAsync``1(Nest.IExplainRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.FieldCapabilities(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest})">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.FieldCapabilitiesAsync(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.FieldCapabilities(Nest.IFieldCapabilitiesRequest)">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.FieldCapabilitiesAsync(Nest.IFieldCapabilitiesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>field_caps</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Get``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.GetAsync``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Get``1(Nest.IGetRequest)">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.GetAsync``1(Nest.IGetRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.GetScript(Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.GetScriptAsync(Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.GetScript(Nest.IGetScriptRequest)">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.GetScriptAsync(Nest.IGetScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Source``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SourceAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Source``1(Nest.ISourceRequest)">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SourceAsync``1(Nest.ISourceRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>get_source</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Index``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest{``0}})">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest{``0}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Index``1(Nest.IIndexRequest{``0})">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.IndexAsync``1(Nest.IIndexRequest{``0},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>index</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RootNodeInfo(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RootNodeInfoAsync(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RootNodeInfo(Nest.IRootNodeInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RootNodeInfoAsync(Nest.IRootNodeInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiGet(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiGetAsync(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiGet(Nest.IMultiGetRequest)">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiGetAsync(Nest.IMultiGetRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mget</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearch(Nest.Indices,System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearchAsync(Nest.Indices,System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearch(Nest.IMultiSearchRequest)">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearchAsync(Nest.IMultiSearchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearchTemplate(Nest.Indices,System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest})">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearchTemplateAsync(Nest.Indices,System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearchTemplate(Nest.IMultiSearchTemplateRequest)">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiSearchTemplateAsync(Nest.IMultiSearchTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>msearch_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiTermVectors(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiTermVectorsAsync(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiTermVectors(Nest.IMultiTermVectorsRequest)">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.MultiTermVectorsAsync(Nest.IMultiTermVectorsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>mtermvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Ping(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.PingAsync(System.Func{Nest.PingDescriptor,Nest.IPingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Ping(Nest.IPingRequest)">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.PingAsync(Nest.IPingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>ping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/">http://www.elastic.co/guide/</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.PutScript(Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest})">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.PutScriptAsync(Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.PutScript(Nest.IPutScriptRequest)">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.PutScriptAsync(Nest.IPutScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>put_script</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexOnServer(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexOnServerAsync(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexOnServer(Nest.IReindexOnServerRequest)">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexOnServerAsync(Nest.IReindexOnServerRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexRethrottle(Nest.TaskId,System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest})">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexRethrottleAsync(Nest.TaskId,System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexRethrottle(Nest.IReindexRethrottleRequest)">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ReindexRethrottleAsync(Nest.IReindexRethrottleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>reindex_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RenderSearchTemplate(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest})">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RenderSearchTemplateAsync(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RenderSearchTemplate(Nest.IRenderSearchTemplateRequest)">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.RenderSearchTemplateAsync(Nest.IRenderSearchTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>render_search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ExecutePainlessScript``1(System.Func{Nest.ExecutePainlessScriptDescriptor,Nest.IExecutePainlessScriptRequest})">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ExecutePainlessScriptAsync``1(System.Func{Nest.ExecutePainlessScriptDescriptor,Nest.IExecutePainlessScriptRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ExecutePainlessScript``1(Nest.IExecutePainlessScriptRequest)">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ExecutePainlessScriptAsync``1(Nest.IExecutePainlessScriptRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scripts_painless_execute</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html">https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Scroll``2(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ScrollAsync``2(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Scroll``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ScrollAsync``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Scroll``1(Nest.IScrollRequest)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.ScrollAsync``1(Nest.IScrollRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>scroll</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Search``1(Nest.ISearchRequest)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchAsync``1(Nest.ISearchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchShards``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchShardsAsync``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchShards(Nest.ISearchShardsRequest)">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchShardsAsync(Nest.ISearchShardsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchTemplate``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchTemplateAsync``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchTemplate``1(Nest.ISearchTemplateRequest)">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.SearchTemplateAsync``1(Nest.ISearchTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>search_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.TermVectors``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.TermVectorsAsync``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.TermVectors``1(Nest.ITermVectorsRequest{``0})">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.TermVectorsAsync``1(Nest.ITermVectorsRequest{``0},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>termvectors</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Update``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateAsync``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Update``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateAsync``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Update``2(Nest.IUpdateRequest{``0,``1})">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateAsync``2(Nest.IUpdateRequest{``0,``1},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQuery``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQueryAsync``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQuery(Nest.IUpdateByQueryRequest)">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQueryAsync(Nest.IUpdateByQueryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQueryRethrottle(Nest.TaskId,System.Func{Nest.UpdateByQueryRethrottleDescriptor,Nest.IUpdateByQueryRethrottleRequest})">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQueryRethrottleAsync(Nest.TaskId,System.Func{Nest.UpdateByQueryRethrottleDescriptor,Nest.IUpdateByQueryRethrottleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQueryRethrottle(Nest.IUpdateByQueryRethrottleRequest)">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.UpdateByQueryRethrottleAsync(Nest.IUpdateByQueryRethrottleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>update_by_query_rethrottle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</a></summary>
    </member>
    <member name="M:Nest.ElasticClient.Map``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
      <summary>
            The put mapping API allows to register specific mapping definition for a specific type.
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-put-mapping.html
            </summary>
      <typeparam name="T">The type we want to map in Elasticsearch</typeparam>
      <param name="selector">A descriptor to describe the mapping of our type</param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.Map(Nest.IPutMappingRequest)">
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.MapAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest},System.Threading.CancellationToken)">
      <summary>
            The put mapping API allows to register specific mapping definition for a specific type.
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-put-mapping.html
            </summary>
      <typeparam name="T">The type we want to map in Elasticsearch</typeparam>
      <param name="selector">A descriptor to describe the mapping of our type</param>
      <inheritdoc />
    </member>
    <member name="M:Nest.ElasticClient.MapAsync(Nest.IPutMappingRequest,System.Threading.CancellationToken)">
      <inheritdoc />
    </member>
    <member name="M:Nest.BulkCreateDescriptor`1.Document(`0)">
      <summary>
            The object to update, if id is not manually set it will be inferred from the object
            </summary>
    </member>
    <member name="M:Nest.BulkCreateDescriptor`1.Pipeline(System.String)">
      <summary>
            The pipeline id to preprocess documents with
            </summary>
    </member>
    <member name="M:Nest.BulkDeleteDescriptor`1.Document(`0)">
      <summary>
            The object to infer the id off, (if id is not passed using Id())
            </summary>
    </member>
    <member name="M:Nest.BulkIndexDescriptor`1.Document(`0)">
      <summary>
            The object to index, if id is not manually set it will be inferred from the object
            </summary>
    </member>
    <member name="M:Nest.BulkIndexDescriptor`1.Pipeline(System.String)">
      <summary>
            The pipeline id to preprocess documents with
            </summary>
    </member>
    <member name="M:Nest.BulkOperationDescriptorBase`2.Nest#IBulkOperation#GetBody">
      <summary>
            Only used for bulk update operations but in the future might come in handy for other complex bulk ops.
            </summary>
    </member>
    <member name="M:Nest.BulkOperationDescriptorBase`2.Index(Nest.IndexName)">
      <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
    </member>
    <member name="M:Nest.BulkOperationDescriptorBase`2.Id(Nest.Id)">
      <summary>
            Manually set the id for the newly created object
            </summary>
    </member>
    <member name="T:Nest.BulkOperationsCollection`1">
      <summary>
            This class is used by <see cref="P:Nest.IBulkRequest.Operations" /> which needs thread safe adding <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" /> as well as expose
            an equivalent of <see cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />. Because operations from Elasticsearch are executed in order none of the types in
            System.Collection.Concurrent can't be used for this. We need to preserve insert order and exposed indexed index because <see cref="P:Nest.BulkResponse.Items" />
            is ordered and lines up with <see cref="P:Nest.BulkRequest.Operations" /> allowing one to zip the two together.
            </summary>
      <typeparam name="TOperation">
      </typeparam>
    </member>
    <member name="P:Nest.IBulkUpdateOperation`2.Doc">
      <summary>
            The partial update document to be merged on to the existing object.
            </summary>
    </member>
    <member name="P:Nest.IBulkUpdateOperation`2.DocAsUpsert">
      <summary>
            Instead of sending a partial doc with <see cref="P:Nest.IBulkUpdateOperation`2.Doc" /> plus an upsert doc
            with <see cref="P:Nest.IBulkUpdateOperation`2.Upsert" />, setting <see cref="P:Nest.IBulkUpdateOperation`2.DocAsUpsert" /> to <c>true</c> will
            use the contents of doc as the upsert value.
            </summary>
    </member>
    <member name="P:Nest.IBulkUpdateOperation`2.IdFrom">
      <summary>
            Infers the id of the object to update from the provided object.
            See <see cref="P:Nest.IBulkUpdateOperation`2.Doc" /> to apply a partial object merge.
            </summary>
    </member>
    <member name="P:Nest.IBulkUpdateOperation`2.Script">
      <summary>
            A script to specify the update.
            </summary>
    </member>
    <member name="P:Nest.IBulkUpdateOperation`2.ScriptedUpsert">
      <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
    </member>
    <member name="P:Nest.IBulkUpdateOperation`2.Upsert">
      <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateOperation`2.#ctor(`0,System.Boolean)">
      <summary>
            Create a new bulk operation
            </summary>
      <param name="idFrom">Use this document to infer the id from</param>
      <param name="useIdFromAsUpsert">Use the document to infer on as the upsert document in this update operation</param>
    </member>
    <member name="M:Nest.BulkUpdateOperation`2.#ctor(`0,`1,System.Boolean)">
      <summary>
            Create a new Bulk Operation
            </summary>
      <param name="idFrom">Use this document to infer the id from</param>
      <param name="update">The partial update document (doc) to send as update</param>
      <param name="useIdFromAsUpsert">Use the document to infer on as the upsert document in this update operation</param>
    </member>
    <member name="P:Nest.BulkUpdateOperation`2.Doc">
      <summary>
            The partial update document to be merged on to the existing object.
            </summary>
    </member>
    <member name="P:Nest.BulkUpdateOperation`2.DocAsUpsert">
      <summary>
            Instead of sending a partial doc with <see cref="P:Nest.BulkUpdateOperation`2.Doc" /> plus an upsert doc
            with <see cref="P:Nest.BulkUpdateOperation`2.Upsert" />, setting <see cref="P:Nest.BulkUpdateOperation`2.DocAsUpsert" /> to <c>true</c> will
            use the contents of doc as the upsert value.
            </summary>
    </member>
    <member name="P:Nest.BulkUpdateOperation`2.IdFrom">
      <summary>
            Infers the id of the object to update from the provided object.
            See <see cref="P:Nest.BulkUpdateOperation`2.Doc" /> to apply a partial object merge.
            </summary>
    </member>
    <member name="P:Nest.BulkUpdateOperation`2.Script">
      <summary>
            A script to specify the update.
            </summary>
    </member>
    <member name="P:Nest.BulkUpdateOperation`2.ScriptedUpsert">
      <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
    </member>
    <member name="P:Nest.BulkUpdateOperation`2.Upsert">
      <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.IdFrom(`0,System.Boolean)">
      <summary>
            Infers the id of the object to update from the provided
            <param name="object">object</param>
            .
            See <see cref="M:Nest.BulkUpdateDescriptor`2.Doc(`1)" /> to apply a partial object merge.
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.Upsert(`0)">
      <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.Doc(`1)">
      <summary>
            The partial update document to be merged on to the existing object.
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.DocAsUpsert(System.Nullable{System.Boolean})">
      <summary>
            Instead of sending a partial doc with <see cref="M:Nest.BulkUpdateDescriptor`2.Doc(`1)" /> plus an upsert doc
            with <see cref="M:Nest.BulkUpdateDescriptor`2.Upsert(`0)" />, setting <see cref="M:Nest.BulkUpdateDescriptor`2.DocAsUpsert(System.Nullable{System.Boolean})" /> to <c>true</c> will
            use the contents of doc as the upsert value.
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.ScriptedUpsert(System.Nullable{System.Boolean})">
      <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            A script to specify the update.
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.RetriesOnConflict(System.Nullable{System.Int32})">
      <summary>
            How many times an update should be retried in the case of a version conflict.
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.IfSequenceNumber(System.Nullable{System.Int64})">
      <summary>
            Operations can be made conditional and only be performed if the last modification to the document was assigned the sequence number.
            </summary>
    </member>
    <member name="M:Nest.BulkUpdateDescriptor`2.IfPrimaryTerm(System.Nullable{System.Int64})">
      <summary>
            Operations can be made conditional and only be performed if the last modification to the document was assigned the primary term.
            </summary>
    </member>
    <member name="T:Nest.BulkRequest">
      <summary>Request for Bulk <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html</para></summary>
    </member>
    <member name="M:Nest.BulkRequest.#ctor">
      <summary>/_bulk</summary>
    </member>
    <member name="M:Nest.BulkRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_bulk</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.BulkRequest.Pipeline">
      <summary>The pipeline id to preprocess incoming documents with</summary>
    </member>
    <member name="P:Nest.BulkRequest.Refresh">
      <summary>
             If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this
             operation visible to search, if `false` (the default) then do nothing with refreshes.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.BulkRequest.Routing" -->
    <member name="P:Nest.BulkRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.BulkRequest.SourceExcludes">
      <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
    </member>
    <member name="P:Nest.BulkRequest.SourceIncludes">
      <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
    </member>
    <member name="P:Nest.BulkRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.BulkRequest.TypeQueryString">
      <summary>Default document type for items which don't provide one</summary>
    </member>
    <member name="P:Nest.BulkRequest.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard
             only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the
             shard (number of replicas + 1)
            </summary>
    </member>
    <member name="P:Nest.BulkIndexResponseItem.Matches">
      <summary>
            The _ids that matched (if any) for the Percolate API.
            Will be null if the operation is not in response to Percolate API.
            </summary>
    </member>
    <member name="T:Nest.BulkResponseItemBase">
      <summary>
            An item within a bulk response
            </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Error">
      <summary>
            The error associated with the bulk operation
            </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Id">
      <summary>
            The id of the document for the bulk operation
            </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Index">
      <summary>
            The index against which the bulk operation ran
            </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Operation">
      <summary> The type of bulk operation </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Result">
      <summary> The result of the bulk operation</summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Shards">
      <summary>
            The shards associated with the bulk operation
            </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Status">
      <summary> The status of the bulk operation </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Type">
      <summary>
            The type against which the bulk operation ran
            </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.Version">
      <summary> The version of the document </summary>
    </member>
    <member name="P:Nest.BulkResponseItemBase.IsValid">
      <summary>
            Specifies whether this particular bulk operation succeeded or not
            </summary>
    </member>
    <member name="T:Nest.DeleteManyExtensions">
      <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
    </member>
    <member name="M:Nest.DeleteManyExtensions.DeleteMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName)">
      <summary>
            Shortcut into the Bulk call that deletes the specified objects
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
      <param name="client">
      </param>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="objects">List of objects to delete</param>
      <param name="index">Override the inferred indexname for T</param>
      <param name="type">Override the inferred typename for T</param>
    </member>
    <member name="M:Nest.DeleteManyExtensions.DeleteManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName,System.Threading.CancellationToken)">
      <summary>
            Shortcut into the Bulk call that deletes the specified objects
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
      <param name="client">
      </param>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="objects">List of objects to delete</param>
      <param name="index">Override the inferred indexname for T</param>
      <param name="type">Override the inferred typename for T</param>
    </member>
    <member name="T:Nest.IndexManyExtensions">
      <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
    </member>
    <member name="M:Nest.IndexManyExtensions.IndexMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName)">
      <summary>
            Shortcut into the Bulk call that indexes the specified objects
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
      <param name="client">
      </param>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="objects">List of objects to index, Id will be inferred (Id property or IdProperty attribute on type)</param>
      <param name="index">Override the inferred indexname for T</param>
      <param name="type">Override the inferred typename for T</param>
    </member>
    <member name="M:Nest.IndexManyExtensions.IndexManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName,System.Threading.CancellationToken)">
      <summary>
            Shortcut into the Bulk call that indexes the specified objects
            <para> </para>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
      <param name="client">
      </param>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="objects">List of objects to index, Id will be inferred (Id property or IdProperty attribute on type)</param>
      <param name="index">Override the inferred indexname for T</param>
      <param name="type">Override the inferred typename for T</param>
    </member>
    <member name="T:Nest.IDeleteByQueryRethrottleRequest">
      <summary>
            Rethrottles a running delete by query
            </summary>
    </member>
    <member name="T:Nest.DeleteByQueryRethrottleRequest">
      <inheritdoc cref="T:Nest.IDeleteByQueryRethrottleRequest" />
      <summary>Request for DeleteByQueryRethrottle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</para></summary>
    </member>
    <member name="M:Nest.DeleteByQueryRethrottleRequest.#ctor(Nest.TaskId)">
      <summary>/_delete_by_query/{task_id}/_rethrottle</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteByQueryRethrottleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRethrottleRequest.RequestsPerSecond">
      <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
    </member>
    <member name="T:Nest.IDeleteByQueryRequest">
      <summary>
            Delete documents that match a given query
            </summary>
    </member>
    <member name="P:Nest.IDeleteByQueryRequest.Query">
      <summary>
            The query to use to select documents for deletion
            </summary>
    </member>
    <member name="P:Nest.IDeleteByQueryRequest.Slice">
      <summary>
            Parallelize the deleting process. This parallelization can improve efficiency and
            provide a convenient way to break the request down into smaller parts.
            </summary>
    </member>
    <member name="P:Nest.IDeleteByQueryRequest.MaximumDocuments">
      <summary>
            Limit the number of processed documents
            </summary>
    </member>
    <member name="T:Nest.IDeleteByQueryRequest`1">
      <inheritdoc />
    </member>
    <member name="T:Nest.DeleteByQueryRequest">
      <inheritdoc cref="T:Nest.IDeleteByQueryRequest" />
      <summary>Request for DeleteByQuery <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html</para></summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Query">
      <summary>
            The query to use to select documents for deletion
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Slice">
      <summary>
            Parallelize the deleting process. This parallelization can improve efficiency and
            provide a convenient way to break the request down into smaller parts.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DeleteByQueryRequest.MaximumDocuments">
      <summary>
            Limit the number of processed documents
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DeleteByQueryRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_delete_by_query</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteByQueryRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.AnalyzeWildcard">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Analyzer">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Conflicts">
      <summary>What to do when the delete by query hits version conflicts?</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.DefaultOperator">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Df">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.From">
      <summary>Starting offset (default: 0)</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Lenient">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.QueryOnQueryString">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Refresh">
      <summary>Should the effected indexes be refreshed?</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.RequestCache">
      <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.RequestsPerSecond">
      <summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.DeleteByQueryRequest.Routing" -->
    <member name="P:Nest.DeleteByQueryRequest.Scroll">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.ScrollSize">
      <summary>Size on the scroll request powering the delete by query</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.SearchTimeout">
      <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.SearchType">
      <summary>Search operation type</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Size">
      <summary>Deprecated, please use `max_docs` instead</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Slices">
      <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.DeleteByQueryRequest.Sort" -->
    <member name="P:Nest.DeleteByQueryRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Stats">
      <summary>Specific 'tag' of the request for logging and statistical purposes</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.TerminateAfter">
      <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Timeout">
      <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.Version">
      <summary>Specify whether to return document version as part of a hit</summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the
             primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of
             copies for the shard (number of replicas + 1)
            </summary>
    </member>
    <member name="P:Nest.DeleteByQueryRequest.WaitForCompletion">
      <summary>Should the request should block until the delete by query is complete.</summary>
    </member>
    <member name="T:Nest.DeleteByQueryRequest`1">
      <inheritdoc cref="T:Nest.IDeleteByQueryRequest" />
    </member>
    <member name="M:Nest.DeleteByQueryRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_delete_by_query</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteByQueryRequest`1.#ctor">
      <summary>/{index}/_delete_by_query</summary>
    </member>
    <member name="P:Nest.DeleteByQueryResponse.Task">
      <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
    </member>
    <member name="T:Nest.GetManyExtensions">
      <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
    </member>
    <member name="M:Nest.GetManyExtensions.GetMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},Nest.IndexName)">
      <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">IEnumerable of ids as string for the documents to fetch</param>
      <param name="index">Optionally override the default inferred index name for T</param>
      <param name="type">Optionally overiide the default inferred typename for T</param>
    </member>
    <member name="M:Nest.GetManyExtensions.GetMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},Nest.IndexName)">
      <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">IEnumerable of ids as ints for the documents to fetch</param>
      <param name="index">Optionally override the default inferred index name for T</param>
      <param name="type">Optionally overiide the default inferred typename for T</param>
    </member>
    <member name="M:Nest.GetManyExtensions.GetManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},Nest.IndexName,System.Threading.CancellationToken)">
      <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">IEnumerable of ids as string for the documents to fetch</param>
      <param name="index">Optionally override the default inferred index name for T</param>
      <param name="type">Optionally overiide the default inferred typename for T</param>
    </member>
    <member name="M:Nest.GetManyExtensions.GetManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},Nest.IndexName,System.Threading.CancellationToken)">
      <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">IEnumerable of ids as ints for the documents to fetch</param>
      <param name="index">Optionally override the default inferred index name for T</param>
      <param name="type">Optionally overiide the default inferred typename for T</param>
    </member>
    <member name="T:Nest.SourceManyExtensions">
      <summary>
            Provides convenience extension methods to get many _source's given a list of ids.
            </summary>
    </member>
    <member name="M:Nest.SourceManyExtensions.SourceMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>
            SourceMany allows you to get a list of T documents out of Elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para><para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">A list of ids as string</param>
      <param name="index">Optionally override the default inferred indexname for T</param>
    </member>
    <member name="M:Nest.SourceManyExtensions.SourceMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String)">
      <summary>
            SourceMany allows you to get a list of T documents out of Elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para><para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">A list of ids as int</param>
      <param name="index">Optionally override the default inferred indexname for T</param>
    </member>
    <member name="M:Nest.SourceManyExtensions.SourceManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
      <summary>
            SourceMany allows you to get a list of T documents out of Elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para><para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">A list of ids as string</param>
      <param name="index">Optionally override the default inferred indexname for T</param>
    </member>
    <member name="M:Nest.SourceManyExtensions.SourceManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Threading.CancellationToken)">
      <summary>
            SourceMany allows you to get a list of T documents out of Elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para><para> </para>
            &gt;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
      <typeparam name="T">The type used to infer the default index and typename</typeparam>
      <param name="client">
      </param>
      <param name="ids">A list of ids as int</param>
      <param name="index">Optionally override the default inferred indexname for T</param>
    </member>
    <member name="M:Nest.MultiGetOperationDescriptor`1.#ctor(System.Boolean)">
      <summary>
            when rest.action.multi.allow_explicit_index is set to false you can use this constructor to generate a multiget operation
            with no index and type set
            <pre>
            See also: https://github.com/elasticsearch/elasticsearch/issues/3636
            </pre></summary>
    </member>
    <member name="M:Nest.MultiGetOperationDescriptor`1.Index(Nest.IndexName)">
      <summary>
            Manually set the index, default to the default index or the index set for the type on the connectionsettings.
            </summary>
    </member>
    <member name="M:Nest.MultiGetOperationDescriptor`1.Source(System.Nullable{System.Boolean})">
      <summary>
            Control how the document's source is loaded
            </summary>
    </member>
    <member name="M:Nest.MultiGetOperationDescriptor`1.Source(System.Func{Nest.SourceFilterDescriptor{`0},Nest.ISourceFilter})">
      <summary>
            Control how the document's source is loaded
            </summary>
    </member>
    <member name="M:Nest.MultiGetOperationDescriptor`1.Routing(System.String)">
      <summary>
            Set the routing for the get operation
            </summary>
    </member>
    <member name="M:Nest.MultiGetOperationDescriptor`1.StoredFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            Allows to selectively load specific fields for each document
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
    </member>
    <member name="T:Nest.MultiGetRequest">
      <summary>Request for MultiGet <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html</para></summary>
    </member>
    <member name="M:Nest.MultiGetRequest.#ctor">
      <summary>/_mget</summary>
    </member>
    <member name="M:Nest.MultiGetRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_mget</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.MultiGetRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.MultiGetRequest.Realtime">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="P:Nest.MultiGetRequest.Refresh">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.MultiGetRequest.Routing" -->
    <member name="P:Nest.MultiGetRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.MultiGetRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.MultiGetRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="T:Nest.IMultiTermVectorOperation">
      <summary>
            An operation to define the calculation of
            term vectors when using Multi termvectors API
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Document">
      <summary>
            A document not indexed in Elasticsearch,
            to generate term vectors for
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.FieldStatistics">
      <summary>
            Whether to include field statistics. When set to <c>false</c>,
            <para />
            - document count (how many documents contain this field)
            <para />
            - sum of document frequencies (the sum of document frequencies for all terms in this field)
            <para />
            - sum of total term frequencies (the sum of total term frequencies of each term in this field)
            <para />
            will be omitted. Default is <c>true</c>.
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Filter">
      <summary>
            Filter terms based on their tf-idf scores.
            This can be useful in order find out a good characteristic
            vector of a document.
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Id">
      <summary>
            The id of the document
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Index">
      <summary>
            The index in which the document resides
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Offsets">
      <summary>
            Whether to include the start and end offsets.
            Default is <c>true</c>.
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Payloads">
      <summary>
            Whether to include the term payloads as
            base64 encoded bytes. Default is <c>true</c></summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Positions">
      <summary>
            Whether to include the term positions.
            Default is <c>true</c></summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Routing">
      <summary>
            When requesting term vectors for <see cref="P:Nest.IMultiTermVectorOperation.Document" />,
            a shard to get the statistics from is randomly selected.
            Use <see cref="P:Nest.IMultiTermVectorOperation.Routing" /> only to hit a particular shard.
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Fields">
      <summary>
            The document field to generate term
            vectors for
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.TermStatistics">
      <summary>
            Whether to include term statistics. When set to <c>true</c>,
            <para />
            - total term frequency (how often a term occurs in all documents)
            <para />
            - document frequency (the number of documents containing the current term)
            <para />
            will be returned. Default is <c>false</c> since
            term statistics can have a large performance impact.
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.Version">
      <summary>
            The version number
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorOperation.VersionType">
      <summary>
            The type of version
            </summary>
    </member>
    <member name="T:Nest.MultiTermVectorOperation`1">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Document">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.FieldStatistics">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Filter">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Id">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Index">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Offsets">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Payloads">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Positions">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Routing">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Fields">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.TermStatistics">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.Version">
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorOperation`1.VersionType">
      <inheritdoc />
    </member>
    <member name="T:Nest.MultiTermVectorOperationDescriptor`1">
      <inheritdoc cref="T:Nest.IMultiTermVectorOperation" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The document field to generate term
            vectors for
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Fields" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The document field to generate term
            vectors for
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Fields" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Id(Nest.Id)">
      <summary>
            The id of the document
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Id" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Index(Nest.IndexName)">
      <summary>
            The index in which the document resides
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Index" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Document(`0)">
      <summary>
            A document not indexed in Elasticsearch,
            to generate term vectors for
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Document" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Offsets(System.Nullable{System.Boolean})">
      <summary>
            Whether to include the start and end offsets.
            Default is <c>true</c>.
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Offsets" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Payloads(System.Nullable{System.Boolean})">
      <summary>
            Whether to include the term payloads as
            base64 encoded bytes. Default is <c>true</c></summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Payloads" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Positions(System.Nullable{System.Boolean})">
      <summary>
            Whether to include the term positions.
            Default is <c>true</c></summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Positions" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.TermStatistics(System.Nullable{System.Boolean})">
      <summary>
            Whether to include term statistics. When set to <c>true</c>,
            <para />
            - total term frequency (how often a term occurs in all documents)
            <para />
            - document frequency (the number of documents containing the current term)
            <para />
            will be returned. Default is <c>false</c> since
            term statistics can have a large performance impact.
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.TermStatistics" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.FieldStatistics(System.Nullable{System.Boolean})">
      <summary>
            Whether to include field statistics. When set to <c>false</c>,
            <para />
            - document count (how many documents contain this field)
            <para />
            - sum of document frequencies (the sum of document frequencies for all terms in this field)
            <para />
            - sum of total term frequencies (the sum of total term frequencies of each term in this field)
            <para />
            will be omitted. Default is <c>true</c>.
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.FieldStatistics" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Filter(System.Func{Nest.TermVectorFilterDescriptor,Nest.ITermVectorFilter})">
      <summary>
            Filter terms based on their tf-idf scores.
            This can be useful in order find out a good characteristic
            vector of a document.
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Filter" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>
            The version number
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Version" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>
            The type of version
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.VersionType" />
    </member>
    <member name="M:Nest.MultiTermVectorOperationDescriptor`1.Routing(Nest.Routing)">
      <summary>
            When requesting term vectors for <see cref="P:Nest.IMultiTermVectorOperation.Document" />,
            a shard to get the statistics from is randomly selected.
            Use <see cref="P:Nest.IMultiTermVectorOperation.Routing" /> only to hit a particular shard.
            </summary>
      <inheritdoc cref="P:Nest.IMultiTermVectorOperation.Routing" />
    </member>
    <member name="T:Nest.IMultiTermVectorsRequest">
      <summary>
            A Multi termvectors API request
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorsRequest.Documents">
      <summary>
            The documents for which to generate term vectors
            </summary>
    </member>
    <member name="P:Nest.IMultiTermVectorsRequest.Ids">
      <summary>
            The ids of documents within the same index and type
            for which to generate term vectors. Must be used in
            conjunction with <see cref="P:Nest.IMultiTermVectorsRequest.Index" /> and <see cref="T:System.Type" /></summary>
    </member>
    <member name="T:Nest.MultiTermVectorsRequest">
      <inheritdoc cref="T:Nest.IMultiTermVectorsRequest" />
      <summary>Request for MultiTermVectors <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html</para></summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Documents">
      <summary>
            The documents for which to generate term vectors
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Ids">
      <summary>
            The ids of documents within the same index and type
            for which to generate term vectors. Must be used in
            conjunction with <see cref="P:Nest.IMultiTermVectorsRequest.Index" /> and <see cref="T:System.Type" /></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MultiTermVectorsRequest.#ctor">
      <summary>/_mtermvectors</summary>
    </member>
    <member name="M:Nest.MultiTermVectorsRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_mtermvectors</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.FieldStatistics">
      <summary>
             Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned
             documents unless otherwise specified in body "params" or "docs".
            </summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Fields">
      <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Offsets">
      <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Payloads">
      <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Positions">
      <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".</summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Preference">
      <summary>
             Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise
             specified in body "params" or "docs".
            </summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Realtime">
      <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.MultiTermVectorsRequest.Routing" -->
    <member name="P:Nest.MultiTermVectorsRequest.TermStatistics">
      <summary>
             Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified
             in body "params" or "docs".
            </summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.MultiTermVectorsRequest.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="T:Nest.IReindexDestination">
      <summary>
            Configures the destination for a reindex API request
            </summary>
    </member>
    <member name="P:Nest.IReindexDestination.Index">
      <summary>
            The index to reindex into
            </summary>
    </member>
    <member name="P:Nest.IReindexDestination.OpType">
      <summary>
            Setting to <see cref="F:Elasticsearch.Net.OpType.Create" /> will cause reindex to only
            create missing documents in the destination index.
            </summary>
    </member>
    <member name="P:Nest.IReindexDestination.Routing">
      <summary>
            The routing to use when reindexing
            </summary>
    </member>
    <member name="P:Nest.IReindexDestination.VersionType">
      <summary>
            Setting to <see cref="F:Elasticsearch.Net.VersionType.External" /> will cause Elasticsearch
            to preserve the version from the source, create any documents that are missing,
            and update any documents that have an older version in the destination index
            than they do in the source index
            </summary>
    </member>
    <member name="T:Nest.ReindexDestination">
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexDestination.Index">
      <summary>
            The index to reindex into
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexDestination.OpType">
      <summary>
            Setting to <see cref="F:Elasticsearch.Net.OpType.Create" /> will cause reindex to only
            create missing documents in the destination index.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexDestination.Routing">
      <summary>
            The routing to use when reindexing
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexDestination.VersionType">
      <summary>
            Setting to <see cref="F:Elasticsearch.Net.VersionType.External" /> will cause Elasticsearch
            to preserve the version from the source, create any documents that are missing,
            and update any documents that have an older version in the destination index
            than they do in the source index
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ReindexDestinationDescriptor">
      <inheritdoc cref="T:Nest.IReindexDestination" />
    </member>
    <member name="M:Nest.ReindexDestinationDescriptor.Routing(Nest.ReindexRouting)">
      <summary>
            The routing to use when reindexing
            </summary>
      <inheritdoc cref="P:Nest.IReindexDestination.Routing" />
    </member>
    <member name="M:Nest.ReindexDestinationDescriptor.OpType(System.Nullable{Elasticsearch.Net.OpType})">
      <summary>
            Setting to <see cref="F:Elasticsearch.Net.OpType.Create" /> will cause reindex to only
            create missing documents in the destination index.
            </summary>
      <inheritdoc cref="P:Nest.IReindexDestination.OpType" />
    </member>
    <member name="M:Nest.ReindexDestinationDescriptor.VersionType(System.Nullable{Elasticsearch.Net.VersionType})">
      <summary>
            Setting to <see cref="F:Elasticsearch.Net.VersionType.External" /> will cause Elasticsearch
            to preserve the version from the source, create any documents that are missing,
            and update any documents that have an older version in the destination index
            than they do in the source index
            </summary>
      <inheritdoc cref="P:Nest.IReindexDestination.VersionType" />
    </member>
    <member name="M:Nest.ReindexDestinationDescriptor.Index(Nest.IndexName)">
      <summary>
            The index to reindex into
            </summary>
      <inheritdoc cref="P:Nest.IReindexDestination.Index" />
    </member>
    <member name="T:Nest.IReindexOnServerRequest">
      <summary>
            A request to Reindex API
            </summary>
    </member>
    <member name="P:Nest.IReindexOnServerRequest.Conflicts">
      <summary>
            Determine what to do in the event of version conflicts.
            Defaults to <see cref="F:Elasticsearch.Net.Conflicts.Abort" /></summary>
    </member>
    <member name="P:Nest.IReindexOnServerRequest.Destination">
      <summary>
            The destination for the reindex operation.
            </summary>
      <remarks>
            Reindex does not attempt to set up the destination index. It does not copy the settings
            of the source index. You should set up the destination index beforehand
            </remarks>
    </member>
    <member name="P:Nest.IReindexOnServerRequest.Script">
      <summary>
            A script that can modify documents from source, including metadata, before reindexing
            </summary>
    </member>
    <member name="P:Nest.IReindexOnServerRequest.Size">
      <summary>
            Limit the number of processed documents
            </summary>
    </member>
    <member name="P:Nest.IReindexOnServerRequest.MaximumDocuments">
      <summary>
            Limit the number of processed documents
            </summary>
    </member>
    <member name="P:Nest.IReindexOnServerRequest.Source">
      <summary>
            The source for the reindex operation
            </summary>
    </member>
    <member name="T:Nest.ReindexOnServerRequest">
      <inheritdoc cref="T:Nest.IReindexOnServerRequest" />
      <summary>Request for ReindexOnServer <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</para></summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Conflicts">
      <summary>
            Determine what to do in the event of version conflicts.
            Defaults to <see cref="F:Elasticsearch.Net.Conflicts.Abort" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Destination">
      <summary>
            The destination for the reindex operation.
            </summary>
      <remarks>
            Reindex does not attempt to set up the destination index. It does not copy the settings
            of the source index. You should set up the destination index beforehand
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Script">
      <summary>
            A script that can modify documents from source, including metadata, before reindexing
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Size">
      <summary>
            Limit the number of processed documents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexOnServerRequest.MaximumDocuments">
      <summary>
            Limit the number of processed documents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Source">
      <summary>
            The source for the reindex operation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Refresh">
      <summary>Should the effected indexes be refreshed?</summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.RequestsPerSecond">
      <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Scroll">
      <summary>Control how long to keep the search context alive</summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Slices">
      <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.</summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.Timeout">
      <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard
             only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the
             shard (number of replicas + 1)
            </summary>
    </member>
    <member name="P:Nest.ReindexOnServerRequest.WaitForCompletion">
      <summary>Should the request should block until the reindex is complete.</summary>
    </member>
    <member name="P:Nest.ReindexOnServerResponse.Task">
      <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
    </member>
    <member name="M:Nest.ReindexRouting.#ctor(System.String)">
      <summary>
            Use ReindexRouting.Keep or ReindexRouting.Discard if you want to sent "keep" or "discard", this
            constructor always sends newRoutingValue prefixed with '='
            </summary>
    </member>
    <member name="T:Nest.IReindexSource">
      <summary>
            Configures the source for a reindex API request
            </summary>
    </member>
    <member name="P:Nest.IReindexSource.Index">
      <summary>
            The indices to target
            </summary>
    </member>
    <member name="P:Nest.IReindexSource.Query">
      <summary>
            Search query to execute to match documents for reindexing
            </summary>
    </member>
    <member name="P:Nest.IReindexSource.Remote">
      <summary>
            Reindex from a remote Elasticsearch cluster
            </summary>
    </member>
    <member name="P:Nest.IReindexSource.Size">
      <summary>
            The batch size of documents
            </summary>
    </member>
    <member name="P:Nest.IReindexSource.Slice">
      <summary>
            Manually parallelize the reindexing process.
            This parallelization can improve efficiency and provide a convenient
            way to break the request down into smaller parts.
            </summary>
      <remarks>
            Automatic slicing can be performed using <see cref="P:Nest.ReindexOnServerRequest.Slices" /></remarks>
    </member>
    <member name="P:Nest.IReindexSource.Sort">
      <summary>
            Sort the documents to be reindexed. Sorting makes the operation less
            efficient but allows targeting a specific set of documents when used
            in conjunction with <see cref="P:Nest.IReindexSource.Size" /></summary>
    </member>
    <member name="P:Nest.IReindexSource.Source">
      <summary>
            Individual fields from _source to reindex
            </summary>
    </member>
    <member name="T:Nest.ReindexSource">
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Index">
      <summary>
            The indices to target
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Query">
      <summary>
            Search query to execute to match documents for reindexing
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Remote">
      <summary>
            Reindex from a remote Elasticsearch cluster
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Size">
      <summary>
            The batch size of documents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Slice">
      <summary>
            Manually parallelize the reindexing process.
            This parallelization can improve efficiency and provide a convenient
            way to break the request down into smaller parts.
            </summary>
      <remarks>
            Automatic slicing can be performed using <see cref="P:Nest.ReindexOnServerRequest.Slices" /></remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Sort">
      <summary>
            Sort the documents to be reindexed. Sorting makes the operation less
            efficient but allows targeting a specific set of documents when used
            in conjunction with <see cref="P:Nest.IReindexSource.Size" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexSource.Source">
      <summary>
            Individual fields from _source to reindex
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ReindexSourceDescriptor">
      <inheritdoc cref="T:Nest.IReindexSource" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Query``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IReindexSource.Query" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Sort``1(System.Func{Nest.SortDescriptor{``0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
      <inheritdoc cref="P:Nest.IReindexSource.Sort" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Remote(System.Func{Nest.RemoteSourceDescriptor,Nest.IRemoteSource})">
      <summary>
            Reindex from a remote Elasticsearch cluster
            </summary>
      <inheritdoc cref="P:Nest.IReindexSource.Remote" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Index(Nest.Indices)">
      <summary>
            The indices to target
            </summary>
      <inheritdoc cref="P:Nest.IReindexSource.Index" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Size(System.Nullable{System.Int32})">
      <summary>
            The batch size of documents
            </summary>
      <inheritdoc cref="P:Nest.IReindexSource.Size" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Slice``1(System.Func{Nest.SlicedScrollDescriptor{``0},Nest.ISlicedScroll})">
      <inheritdoc cref="P:Nest.IReindexSource.Slice" />
    </member>
    <member name="M:Nest.ReindexSourceDescriptor.Source``1(System.Func{Nest.FieldsDescriptor{``0},Nest.IPromise{Nest.Fields}})">
      <inheritdoc cref="P:Nest.IReindexSource.Source" />
    </member>
    <member name="T:Nest.ReindexRethrottleRequest">
      <summary>Request for ReindexRethrottle <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html</para></summary>
    </member>
    <member name="M:Nest.ReindexRethrottleRequest.#ctor(Nest.TaskId)">
      <summary>/_reindex/{task_id}/_rethrottle</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.ReindexRethrottleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ReindexRethrottleRequest.RequestsPerSecond">
      <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
    </member>
    <member name="M:Nest.ReindexObservable`2.CreateIndexIfNeeded(Nest.Indices,System.String)">
      <summary>
            Tries to create the target index if it does not exist already, if the source points to a single index we'll
            use the original index settings to bootstrap the create index request if not provided
            </summary>
      <returns>Either the number of shards from to source or the target as a slice hint to ScrollAll</returns>
    </member>
    <member name="T:Nest.IReindexRequest`2">
      <summary>
             A reindex implementation that uses ScrollAll() BulkAll() to compose a reindex pipeline.
            <para>
            This differs from ReindexOnServer() in that documents are fetched from Elasticsearch, transformed on the client side,
             then sent back to Elasticsearch.
             </para><para>
            This will create the target index if it doesn't exist already. If <see cref="P:Nest.IReindexRequest`2.CreateIndexRequest" /> is not specified
             and the source of the reindex  points to a single index we try and reuse the settings from source.
             You can completely opt out of all of this using <see cref="P:Nest.IReindexRequest`2.OmitIndexCreation" /></para></summary>
    </member>
    <member name="P:Nest.IReindexRequest`2.BackPressureFactor">
      <summary>
            The scroll typically outperforms the bulk operations by a long shot. If we'd leave things unbounded you'd quickly have way too many pending
            scroll
            requests. What this property allows you to express is that for each bucket in the max concurrency of the minimum max concurrency between
            producer and consumer amply the maximum overal pending of the other side by this factor. Typically the concurrency of the consumer
            (bulkall) will
            be lower and with this factor we can dampen the overall pending scroll requests while we are still processing bulk requests.
            <para>defaults to 4 if not provided</para></summary>
    </member>
    <member name="P:Nest.IReindexRequest`2.BulkAll">
      <summary>
            Provide a factory for the bulk all request, the first argument is the lazy collection of scroll results which is a mandatory
            argument to create <see cref="T:Nest.BulkAllRequest`1" /> or <see cref="T:Nest.BulkAllDescriptor`1" /><para>
            Note that <see cref="P:Nest.IBulkAllRequest`1.BufferToBulk" /> is always overriden as well as
            <see cref="P:Nest.IBulkAllRequest`1.BackPressure" /></para></summary>
    </member>
    <member name="P:Nest.IReindexRequest`2.CreateIndexRequest">
      <summary>
            Describe how the newly created index should be created. Remember you can also register Index Templates for more dynamic usecases.
            </summary>
    </member>
    <member name="P:Nest.IReindexRequest`2.OmitIndexCreation">
      <summary>
            Do not send a create index call on the target index, assume the index has been created outside of the reindex.
            Reindex will never create the index if it already exists however this will also omit the IndexExists call.
            </summary>
    </member>
    <member name="P:Nest.IReindexRequest`2.ScrollAll">
      <summary>
            Describes the scroll operation where we need to fetch the documents from.
            <para>
            Note that <see cref="P:Nest.IScrollAllRequest.BackPressure" /> can be overriden by our own.
            </para></summary>
    </member>
    <member name="T:Nest.IReindexRequest`1">
      <inheritdoc />
    </member>
    <member name="T:Nest.ReindexRequest`2">
      <inheritdoc />
    </member>
    <member name="M:Nest.ReindexRequest`2.#ctor(Nest.IScrollAllRequest,System.Func{`0,`1},System.Func{System.Collections.Generic.IEnumerable{Nest.IHitMetadata{`1}},Nest.IBulkAllRequest{Nest.IHitMetadata{`1}}})">
      <inheritdoc />
      <param name="scrollSource">The scroll operation yielding the source documents for the reindex operation</param>
      <param name="map">A function that converts from a source document to a target document</param>
      <param name="bulkAllTarget">A factory that instantiates the bulk all operation over the lazy stream of search result hits</param>
    </member>
    <member name="P:Nest.ReindexRequest`2.BackPressureFactor">
      <summary>
            The scroll typically outperforms the bulk operations by a long shot. If we'd leave things unbounded you'd quickly have way too many pending
            scroll
            requests. What this property allows you to express is that for each bucket in the max concurrency of the minimum max concurrency between
            producer and consumer amply the maximum overal pending of the other side by this factor. Typically the concurrency of the consumer
            (bulkall) will
            be lower and with this factor we can dampen the overall pending scroll requests while we are still processing bulk requests.
            <para>defaults to 4 if not provided</para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexRequest`2.CreateIndexRequest">
      <summary>
            Describe how the newly created index should be created. Remember you can also register Index Templates for more dynamic usecases.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexRequest`2.OmitIndexCreation">
      <summary>
            Do not send a create index call on the target index, assume the index has been created outside of the reindex.
            Reindex will never create the index if it already exists however this will also omit the IndexExists call.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexRequest`2.Nest#IReindexRequest{TSource,TTarget}#BulkAll">
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexRequest`2.Nest#IReindexRequest{TSource,TTarget}#Map">
      <inheritdoc />
    </member>
    <member name="P:Nest.ReindexRequest`2.Nest#IReindexRequest{TSource,TTarget}#ScrollAll">
      <inheritdoc />
    </member>
    <member name="M:Nest.ReindexDescriptor`2.ScrollAll(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{`0},Nest.IScrollAllRequest})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ReindexDescriptor`2.BackPressureFactor(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ReindexDescriptor`2.BulkAll(System.Func{Nest.BulkAllDescriptor{Nest.IHitMetadata{`1}},Nest.IBulkAllRequest{Nest.IHitMetadata{`1}}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ReindexDescriptor`2.OmitIndexCreation(System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:Nest.ReindexDescriptor`2.CreateIndex(System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
      <inheritdoc />
    </member>
    <member name="P:Nest.IScrollAllRequest.BackPressure">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each scroll request will additionally wait on <see cref="M:Nest.ProducerConsumerBackPressure.WaitAsync(System.Threading.CancellationToken)" /> as well as
            <see cref="P:Nest.IScrollAllRequest.MaxDegreeOfParallelism" /> if set. Not that the consumer has to call <see cref="M:Nest.ProducerConsumerBackPressure.Release" />
            on the same instance every time it is done.
            </summary>
    </member>
    <member name="P:Nest.IScrollAllRequest.MaxDegreeOfParallelism">
      <summary>
            The maximum degree of parallelism we should drain the sliced scroll, defaults to the value of <see cref="P:Nest.IScrollAllRequest.Slices" /></summary>
    </member>
    <member name="P:Nest.IScrollAllRequest.RoutingField">
      <summary>
            Set a different routing field, has to have doc_values enabled
            </summary>
    </member>
    <member name="P:Nest.IScrollAllRequest.ScrollTime">
      <summary>
            The ammount of time to keep the scroll alive on the server
            </summary>
    </member>
    <member name="P:Nest.IScrollAllRequest.Search">
      <summary>
            An optional search request that describes the search we want to scroll over.
            Defaults to matchall on the index and type of T in the <see cref="T:Nest.ScrollAllObserver`1" />.
            Note: both scroll and slice information WILL be overriden.
            </summary>
    </member>
    <member name="P:Nest.IScrollAllRequest.Slices">
      <summary>
            The maximum number of slices to partition the scroll over
            </summary>
    </member>
    <member name="P:Nest.ScrollAllRequest.BackPressure">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each scroll request will additionally wait on <see cref="M:Nest.ProducerConsumerBackPressure.WaitAsync(System.Threading.CancellationToken)" /> as well as
            <see cref="P:Nest.IScrollAllRequest.MaxDegreeOfParallelism" /> if set. Not that the consumer has to call <see cref="M:Nest.ProducerConsumerBackPressure.Release" />
            on the same instance every time it is done.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ScrollAllRequest.MaxDegreeOfParallelism">
      <summary>
            The maximum degree of parallelism we should drain the sliced scroll, defaults to the value of <see cref="P:Nest.IScrollAllRequest.Slices" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ScrollAllRequest.RoutingField">
      <summary>
            Set a different routing field, has to have doc_values enabled
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ScrollAllRequest.Search">
      <summary>
            An optional search request that describes the search we want to scroll over.
            Defaults to matchall on the index and type of T in the <see cref="T:Nest.ScrollAllObserver`1" />.
            Note: both scroll and slice information WILL be overriden.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ScrollAllDescriptor`1.MaxDegreeOfParallelism(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ScrollAllDescriptor`1.RoutingField(Nest.Field)">
      <inheritdoc />
    </member>
    <member name="M:Nest.ScrollAllDescriptor`1.RoutingField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ScrollAllDescriptor`1.Search(System.Func{Nest.SearchDescriptor{`0},Nest.ISearchRequest})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ScrollAllDescriptor`1.BackPressure(System.Int32,System.Nullable{System.Int32})">
      <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each bulk request will call <see cref="M:Nest.ProducerConsumerBackPressure.Release" /></summary>
      <param name="maxConcurrency">The minimum maximum concurrency which would be the bottleneck of the producer consumer pipeline</param>
      <param name="backPressureFactor">The maximum amplification back pressure of the greedier part of the producer consumer pipeline</param>
    </member>
    <member name="T:Nest.IScrollAllResponse`1">
      <summary> A response returned for each scroll in ScrollAll() </summary>
    </member>
    <member name="P:Nest.IScrollAllResponse`1.Scroll">
      <summary>
            The nth scroll this response represents
            </summary>
    </member>
    <member name="P:Nest.IScrollAllResponse`1.SearchResponse">
      <summary>
            The scroll result
            </summary>
    </member>
    <member name="P:Nest.IScrollAllResponse`1.Slice">
      <summary>
            The nth slice this response belongs to
            </summary>
    </member>
    <member name="T:Nest.ScrollAllResponse`1">
      <summary> A response returned for each scroll in ScrollAll() </summary>
    </member>
    <member name="P:Nest.ScrollAllResponse`1.IsValid">
      <inheritdoc />
    </member>
    <member name="P:Nest.ScrollAllResponse`1.Scroll">
      <summary>
            The nth scroll this response represents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ScrollAllResponse`1.SearchResponse">
      <summary>
            The scroll result
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ScrollAllResponse`1.Slice">
      <summary>
            The nth slice this response belongs to
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.UpdateByQueryRethrottleRequest">
      <summary>Request for UpdateByQueryRethrottle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html</para></summary>
    </member>
    <member name="M:Nest.UpdateByQueryRethrottleRequest.#ctor(Nest.TaskId)">
      <summary>/_update_by_query/{task_id}/_rethrottle</summary>
      <param name="taskId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateByQueryRethrottleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRethrottleRequest.RequestsPerSecond">
      <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
    </member>
    <member name="P:Nest.IUpdateByQueryRequest.Slice">
      <summary>
            Parallelize the update process by splitting a query into
            multiple slices.
            </summary>
    </member>
    <member name="P:Nest.IUpdateByQueryRequest.Query">
      <summary>
            Query to select documents to update
            </summary>
    </member>
    <member name="P:Nest.IUpdateByQueryRequest.Script">
      <summary>
            A script specifying the update to make
            </summary>
    </member>
    <member name="P:Nest.IUpdateByQueryRequest.MaximumDocuments">
      <summary>
            Limit the number of processed documents
            </summary>
    </member>
    <member name="T:Nest.UpdateByQueryRequest">
      <summary>Request for UpdateByQuery <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html</para></summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Slice">
      <summary>
            Parallelize the update process by splitting a query into
            multiple slices.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Query">
      <summary>
            Query to select documents to update
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Script">
      <summary>
            A script specifying the update to make
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateByQueryRequest.MaximumDocuments">
      <summary>
            Limit the number of processed documents
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateByQueryRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_update_by_query</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateByQueryRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.AnalyzeWildcard">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Analyzer">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Conflicts">
      <summary>What to do when the update by query hits version conflicts?</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.DefaultOperator">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Df">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.From">
      <summary>Starting offset (default: 0)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Lenient">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Pipeline">
      <summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.QueryOnQueryString">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Refresh">
      <summary>Should the effected indexes be refreshed?</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.RequestCache">
      <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.RequestsPerSecond">
      <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.UpdateByQueryRequest.Routing" -->
    <member name="P:Nest.UpdateByQueryRequest.Scroll">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.ScrollSize">
      <summary>Size on the scroll request powering the update by query</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.SearchTimeout">
      <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.SearchType">
      <summary>Search operation type</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Size">
      <summary>Deprecated, please use `max_docs` instead</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Slices">
      <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.UpdateByQueryRequest.Sort" -->
    <member name="P:Nest.UpdateByQueryRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Stats">
      <summary>Specific 'tag' of the request for logging and statistical purposes</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.TerminateAfter">
      <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Timeout">
      <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.Version">
      <summary>Specify whether to return document version as part of a hit</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.VersionType">
      <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the
             primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of
             copies for the shard (number of replicas + 1)
            </summary>
    </member>
    <member name="P:Nest.UpdateByQueryRequest.WaitForCompletion">
      <summary>Should the request should block until the update by query operation is complete.</summary>
    </member>
    <member name="M:Nest.UpdateByQueryRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_update_by_query</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateByQueryRequest`1.#ctor">
      <summary>/{index}/_update_by_query</summary>
    </member>
    <member name="P:Nest.UpdateByQueryResponse.Task">
      <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
    </member>
    <member name="T:Nest.CreateRequest`1">
      <summary>Request for Create <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</para></summary>
    </member>
    <member name="M:Nest.CreateRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_create/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_create/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_create/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.CreateRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CreateRequest`1.Pipeline">
      <summary>The pipeline id to preprocess incoming documents with</summary>
    </member>
    <member name="P:Nest.CreateRequest`1.Refresh">
      <summary>
             If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this
             operation visible to search, if `false` (the default) then do nothing with refreshes.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRequest`1.Routing" -->
    <member name="P:Nest.CreateRequest`1.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.CreateRequest`1.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.CreateRequest`1.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="P:Nest.CreateRequest`1.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard
             only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the
             shard (number of replicas + 1)
            </summary>
    </member>
    <member name="T:Nest.DeleteRequest">
      <summary>Request for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRequest.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteRequest.IfPrimaryTerm">
      <summary>only perform the delete operation if the last operation that has changed the document has the specified primary term</summary>
    </member>
    <member name="P:Nest.DeleteRequest.IfSequenceNumber">
      <summary>only perform the delete operation if the last operation that has changed the document has the specified sequence number</summary>
    </member>
    <member name="P:Nest.DeleteRequest.Refresh">
      <summary>
             If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this
             operation visible to search, if `false` (the default) then do nothing with refreshes.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.DeleteRequest.Routing" -->
    <member name="P:Nest.DeleteRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.DeleteRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.DeleteRequest.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="P:Nest.DeleteRequest.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard
             only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the
             shard (number of replicas + 1)
            </summary>
    </member>
    <member name="M:Nest.DeleteRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.DeleteRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DocumentExistsRequest">
      <summary>Request for DocumentExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.DocumentExistsRequest.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DocumentExistsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.Realtime">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.Refresh">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.DocumentExistsRequest.Routing" -->
    <member name="P:Nest.DocumentExistsRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.StoredFields">
      <summary>A comma-separated list of stored fields to return in the response</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.DocumentExistsRequest.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.DocumentExistsRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DocumentExistsRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DocumentExistsRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.DocumentExistsRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.GetRequest">
      <summary>Request for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.GetRequest.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.GetRequest.Realtime">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="P:Nest.GetRequest.Refresh">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.GetRequest.Routing" -->
    <member name="P:Nest.GetRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.GetRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.GetRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="P:Nest.GetRequest.StoredFields">
      <summary>A comma-separated list of stored fields to return in the response</summary>
    </member>
    <member name="P:Nest.GetRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.GetRequest.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.GetRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.GetRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.IndexRequest`1">
      <summary>Request for Index <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html</para></summary>
    </member>
    <member name="M:Nest.IndexRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndexRequest`1.#ctor(Nest.IndexName)">
      <summary>/{index}/_doc</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.IndexRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndexRequest`1.#ctor">
      <summary>/{index}/_doc</summary>
    </member>
    <member name="M:Nest.IndexRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_doc/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="P:Nest.IndexRequest`1.IfPrimaryTerm">
      <summary>only perform the index operation if the last operation that has changed the document has the specified primary term</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.IfSequenceNumber">
      <summary>only perform the index operation if the last operation that has changed the document has the specified sequence number</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.OpType">
      <summary>Explicit operation type</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.Pipeline">
      <summary>The pipeline id to preprocess incoming documents with</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.Refresh">
      <summary>
             If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this
             operation visible to search, if `false` (the default) then do nothing with refreshes.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.IndexRequest`1.Routing" -->
    <member name="P:Nest.IndexRequest`1.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="P:Nest.IndexRequest`1.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard
             only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the
             shard (number of replicas + 1)
            </summary>
    </member>
    <member name="T:Nest.SourceExistsRequest">
      <summary>Request for SourceExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.SourceExistsRequest.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceExistsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.Realtime">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.Refresh">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SourceExistsRequest.Routing" -->
    <member name="P:Nest.SourceExistsRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.SourceExistsRequest.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.SourceExistsRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceExistsRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceExistsRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.SourceExistsRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.SourceRequest">
      <summary>Request for Source <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html</para></summary>
    </member>
    <member name="M:Nest.SourceRequest.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.SourceRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.SourceRequest.Realtime">
      <summary>Specify whether to perform the operation in realtime or search mode</summary>
    </member>
    <member name="P:Nest.SourceRequest.Refresh">
      <summary>Refresh the shard containing the document before performing the operation</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SourceRequest.Routing" -->
    <member name="P:Nest.SourceRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.SourceRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.SourceRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="P:Nest.SourceRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.SourceRequest.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="M:Nest.SourceRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.SourceRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_source/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.SourceRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ITermVectorFilter">
      <summary>
            Filter terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MaximumDocumentFrequency">
      <summary>
            Ignore words which occur in more than this many docs. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MaximumNumberOfTerms">
      <summary>
            Maximum number of terms that must be returned per field. Defaults to 25.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MaximumTermFrequency">
      <summary>
            Ignore words with more than this frequency in the source doc. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MaximumWordLength">
      <summary>
            The maximum word length above which words will be ignored. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MinimumDocumentFrequency">
      <summary>
            Ignore terms which do not occur in at least this many docs. Defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MinimumTermFrequency">
      <summary>
            Ignore words with less than this frequency in the source doc. Defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorFilter.MinimumWordLength">
      <summary>
            The minimum word length below which words will be ignored. Defaults to 0.
            </summary>
    </member>
    <member name="T:Nest.TermVectorFilter">
      <summary>
            Filter terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MaximumDocumentFrequency">
      <summary>
            Ignore words which occur in more than this many docs. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MaximumNumberOfTerms">
      <summary>
            Maximum number of terms that must be returned per field. Defaults to 25.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MaximumTermFrequency">
      <summary>
            Ignore words with more than this frequency in the source doc. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MaximumWordLength">
      <summary>
            The maximum word length above which words will be ignored. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MinimumDocumentFrequency">
      <summary>
            Ignore terms which do not occur in at least this many docs. Defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MinimumTermFrequency">
      <summary>
            Ignore words with less than this frequency in the source doc. Defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.TermVectorFilter.MinimumWordLength">
      <summary>
            The minimum word length below which words will be ignored. Defaults to 0.
            </summary>
    </member>
    <member name="T:Nest.TermVectorFilterDescriptor">
      <summary>
            Filter terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MaximimumNumberOfTerms(System.Nullable{System.Int32})">
      <summary>
            Maximum number of terms that must be returned per field. Defaults to 25.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MinimumTermFrequency(System.Nullable{System.Int32})">
      <summary>
            Ignore words with less than this frequency in the source doc. Defaults to 1.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MaximumTermFrequency(System.Nullable{System.Int32})">
      <summary>
            Ignore words with more than this frequency in the source doc. Defaults to unbounded.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MinimumDocumentFrequency(System.Nullable{System.Int32})">
      <summary>
            Ignore terms which do not occur in at least this many docs. Defaults to 1.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MaximumDocumentFrequency(System.Nullable{System.Int32})">
      <summary>
            Ignore words which occur in more than this many docs. Defaults to unbounded.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MinimumWordLength(System.Nullable{System.Int32})">
      <summary>
            The minimum word length below which words will be ignored. Defaults to 0.
            </summary>
    </member>
    <member name="M:Nest.TermVectorFilterDescriptor.MaximumWordLength(System.Nullable{System.Int32})">
      <summary>
            The maximum word length above which words will be ignored. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorsRequest`1.Document">
      <summary>
            An optional document to get term vectors for instead of using an already indexed document
            </summary>
    </member>
    <member name="P:Nest.ITermVectorsRequest`1.Filter">
      <summary>
            Filter the terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
    </member>
    <member name="P:Nest.ITermVectorsRequest`1.PerFieldAnalyzer">
      <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
    </member>
    <member name="T:Nest.TermVectorsRequest`1">
      <summary>Request for TermVectors <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html</para></summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Document">
      <summary>
            An optional document to get term vectors for instead of using an already indexed document
            </summary>
      <inheritdoc cref="P:Nest.ITermVectorsRequest`1.Document" />
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Filter">
      <summary>
            Filter the terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.PerFieldAnalyzer">
      <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
    </member>
    <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_termvectors/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.IndexName)">
      <summary>/{index}/_termvectors</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_termvectors/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.TermVectorsRequest`1.#ctor">
      <summary>/{index}/_termvectors</summary>
    </member>
    <member name="M:Nest.TermVectorsRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_termvectors/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.FieldStatistics">
      <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Fields">
      <summary>A comma-separated list of fields to return.</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Offsets">
      <summary>Specifies if term offsets should be returned.</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Payloads">
      <summary>Specifies if term payloads should be returned.</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Positions">
      <summary>Specifies if term positions should be returned.</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Realtime">
      <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.TermVectorsRequest`1.Routing" -->
    <member name="P:Nest.TermVectorsRequest`1.TermStatistics">
      <summary>Specifies if total term frequency and document frequency should be returned.</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.TermVectorsRequest`1.VersionType">
      <summary>Specific version type</summary>
    </member>
    <member name="P:Nest.TermVectorsResponse.IsValid">
      <summary>
            TermVector API returns 200 even if <see cref="P:Nest.TermVectorsResponse.Found" />;
            </summary>
    </member>
    <member name="P:Nest.IUpdateRequest`2.ScriptedUpsert">
      <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
    </member>
    <member name="T:Nest.UpdateRequest`2">
      <summary>Request for Update <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html</para></summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.DetectNoop">
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateRequest`2.Doc">
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateRequest`2.DocAsUpsert">
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateRequest`2.Script">
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateRequest`2.ScriptedUpsert">
      <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateRequest`2.Source">
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateRequest`2.Upsert">
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateRequest`2.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_update/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateRequest`2.#ctor(Nest.Id)">
      <summary>/{index}/_update/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateRequest`2.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_update/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.UpdateRequest`2.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.IfPrimaryTerm">
      <summary>only perform the update operation if the last operation that has changed the document has the specified primary term</summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.IfSequenceNumber">
      <summary>only perform the update operation if the last operation that has changed the document has the specified sequence number</summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.Lang">
      <summary>The script language (default: painless)</summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.Refresh">
      <summary>
             If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this
             operation visible to search, if `false` (the default) then do nothing with refreshes.
            </summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.RetryOnConflict">
      <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.UpdateRequest`2.Routing" -->
    <member name="P:Nest.UpdateRequest`2.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.UpdateRequest`2.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard
             only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the
             shard (number of replicas + 1)
            </summary>
    </member>
    <member name="T:Nest.Specification.CatApi.CatNamespace">
      <summary>
             Cat APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Cat" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Aliases(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.AliasesAsync(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Aliases(Nest.ICatAliasesRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.AliasesAsync(Nest.ICatAliasesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Allocation(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.AllocationAsync(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Allocation(Nest.ICatAllocationRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.AllocationAsync(Nest.ICatAllocationRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Count(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.CountAsync(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Count(Nest.ICatCountRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.CountAsync(Nest.ICatCountRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Fielddata(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.FielddataAsync(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Fielddata(Nest.ICatFielddataRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.FielddataAsync(Nest.ICatFielddataRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Health(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.HealthAsync(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Health(Nest.ICatHealthRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.HealthAsync(Nest.ICatHealthRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Help(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.HelpAsync(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Help(Nest.ICatHelpRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.HelpAsync(Nest.ICatHelpRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Indices(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.IndicesAsync(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Indices(Nest.ICatIndicesRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.IndicesAsync(Nest.ICatIndicesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Master(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.MasterAsync(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Master(Nest.ICatMasterRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.MasterAsync(Nest.ICatMasterRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.NodeAttributes(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.nodeattrs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.NodeAttributesAsync(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.nodeattrs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.NodeAttributes(Nest.ICatNodeAttributesRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.nodeattrs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.NodeAttributesAsync(Nest.ICatNodeAttributesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.nodeattrs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Nodes(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.nodes</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.NodesAsync(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.nodes</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Nodes(Nest.ICatNodesRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.nodes</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.NodesAsync(Nest.ICatNodesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.nodes</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.PendingTasks(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.PendingTasksAsync(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.PendingTasks(Nest.ICatPendingTasksRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.PendingTasksAsync(Nest.ICatPendingTasksRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Plugins(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.plugins</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.PluginsAsync(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.plugins</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Plugins(Nest.ICatPluginsRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.plugins</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.PluginsAsync(Nest.ICatPluginsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.plugins</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Recovery(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.RecoveryAsync(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Recovery(Nest.ICatRecoveryRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.RecoveryAsync(Nest.ICatRecoveryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Repositories(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.repositories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.RepositoriesAsync(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.repositories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Repositories(Nest.ICatRepositoriesRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.repositories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.RepositoriesAsync(Nest.ICatRepositoriesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.repositories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Segments(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.SegmentsAsync(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Segments(Nest.ICatSegmentsRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.SegmentsAsync(Nest.ICatSegmentsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Shards(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.ShardsAsync(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Shards(Nest.ICatShardsRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.ShardsAsync(Nest.ICatShardsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.shards</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Snapshots(System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.SnapshotsAsync(System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Snapshots(Nest.ICatSnapshotsRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.SnapshotsAsync(Nest.ICatSnapshotsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Tasks(System.Func{Nest.CatTasksDescriptor,Nest.ICatTasksRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.TasksAsync(System.Func{Nest.CatTasksDescriptor,Nest.ICatTasksRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Tasks(Nest.ICatTasksRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.TasksAsync(Nest.ICatTasksRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Templates(System.Func{Nest.CatTemplatesDescriptor,Nest.ICatTemplatesRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.templates</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.TemplatesAsync(System.Func{Nest.CatTemplatesDescriptor,Nest.ICatTemplatesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.templates</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.Templates(Nest.ICatTemplatesRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.templates</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.TemplatesAsync(Nest.ICatTemplatesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.templates</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.ThreadPool(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
      <summary>
        <c>GET</c> request to the <c>cat.thread_pool</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.ThreadPoolAsync(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.thread_pool</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.ThreadPool(Nest.ICatThreadPoolRequest)">
      <summary>
        <c>GET</c> request to the <c>cat.thread_pool</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CatApi.CatNamespace.ThreadPoolAsync(Nest.ICatThreadPoolRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cat.thread_pool</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html</a></summary>
    </member>
    <member name="T:Nest.Specification.ClusterApi.ClusterNamespace">
      <summary>
             Cluster APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Cluster" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.AllocationExplain(System.Func{Nest.ClusterAllocationExplainDescriptor,Nest.IClusterAllocationExplainRequest})">
      <summary>
        <c>POST</c> request to the <c>cluster.allocation_explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.AllocationExplainAsync(System.Func{Nest.ClusterAllocationExplainDescriptor,Nest.IClusterAllocationExplainRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>cluster.allocation_explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.AllocationExplain(Nest.IClusterAllocationExplainRequest)">
      <summary>
        <c>POST</c> request to the <c>cluster.allocation_explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.AllocationExplainAsync(Nest.IClusterAllocationExplainRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>cluster.allocation_explain</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.GetSettings(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
      <summary>
        <c>GET</c> request to the <c>cluster.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.GetSettingsAsync(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.GetSettings(Nest.IClusterGetSettingsRequest)">
      <summary>
        <c>GET</c> request to the <c>cluster.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.GetSettingsAsync(Nest.IClusterGetSettingsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.Health(Nest.Indices,System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
      <summary>
        <c>GET</c> request to the <c>cluster.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.HealthAsync(Nest.Indices,System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.Health(Nest.IClusterHealthRequest)">
      <summary>
        <c>GET</c> request to the <c>cluster.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.HealthAsync(Nest.IClusterHealthRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.health</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PendingTasks(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
      <summary>
        <c>GET</c> request to the <c>cluster.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PendingTasksAsync(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PendingTasks(Nest.IClusterPendingTasksRequest)">
      <summary>
        <c>GET</c> request to the <c>cluster.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PendingTasksAsync(Nest.IClusterPendingTasksRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.pending_tasks</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PutSettings(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
      <summary>
        <c>PUT</c> request to the <c>cluster.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PutSettingsAsync(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>cluster.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PutSettings(Nest.IClusterPutSettingsRequest)">
      <summary>
        <c>PUT</c> request to the <c>cluster.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.PutSettingsAsync(Nest.IClusterPutSettingsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>cluster.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.RemoteInfo(System.Func{Nest.RemoteInfoDescriptor,Nest.IRemoteInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>cluster.remote_info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.RemoteInfoAsync(System.Func{Nest.RemoteInfoDescriptor,Nest.IRemoteInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.remote_info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.RemoteInfo(Nest.IRemoteInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>cluster.remote_info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.RemoteInfoAsync(Nest.IRemoteInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.remote_info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.Reroute(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
      <summary>
        <c>POST</c> request to the <c>cluster.reroute</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.RerouteAsync(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>cluster.reroute</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.Reroute(Nest.IClusterRerouteRequest)">
      <summary>
        <c>POST</c> request to the <c>cluster.reroute</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.RerouteAsync(Nest.IClusterRerouteRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>cluster.reroute</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.State(Nest.Indices,System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
      <summary>
        <c>GET</c> request to the <c>cluster.state</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.StateAsync(Nest.Indices,System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.state</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.State(Nest.IClusterStateRequest)">
      <summary>
        <c>GET</c> request to the <c>cluster.state</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.StateAsync(Nest.IClusterStateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.state</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.Stats(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>cluster.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.StatsAsync(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.Stats(Nest.IClusterStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>cluster.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.ClusterApi.ClusterNamespace.StatsAsync(Nest.IClusterStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>cluster.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html</a></summary>
    </member>
    <member name="T:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace">
      <summary>
             Cross Cluster Replication APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.CrossClusterReplication" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.DeleteAutoFollowPattern(Nest.Name,System.Func{Nest.DeleteAutoFollowPatternDescriptor,Nest.IDeleteAutoFollowPatternRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ccr.delete_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.DeleteAutoFollowPatternAsync(Nest.Name,System.Func{Nest.DeleteAutoFollowPatternDescriptor,Nest.IDeleteAutoFollowPatternRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ccr.delete_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.DeleteAutoFollowPattern(Nest.IDeleteAutoFollowPatternRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ccr.delete_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.DeleteAutoFollowPatternAsync(Nest.IDeleteAutoFollowPatternRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ccr.delete_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateFollowIndex(Nest.IndexName,System.Func{Nest.CreateFollowIndexDescriptor,Nest.ICreateFollowIndexRequest})">
      <summary>
        <c>PUT</c> request to the <c>ccr.follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateFollowIndexAsync(Nest.IndexName,System.Func{Nest.CreateFollowIndexDescriptor,Nest.ICreateFollowIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ccr.follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateFollowIndex(Nest.ICreateFollowIndexRequest)">
      <summary>
        <c>PUT</c> request to the <c>ccr.follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateFollowIndexAsync(Nest.ICreateFollowIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ccr.follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowInfo(Nest.Indices,System.Func{Nest.FollowInfoDescriptor,Nest.IFollowInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowInfoAsync(Nest.Indices,System.Func{Nest.FollowInfoDescriptor,Nest.IFollowInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowInfo(Nest.IFollowInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowInfoAsync(Nest.IFollowInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowIndexStats(Nest.Indices,System.Func{Nest.FollowIndexStatsDescriptor,Nest.IFollowIndexStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowIndexStatsAsync(Nest.Indices,System.Func{Nest.FollowIndexStatsDescriptor,Nest.IFollowIndexStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowIndexStats(Nest.IFollowIndexStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowIndexStatsAsync(Nest.IFollowIndexStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.follow_stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ForgetFollowerIndex(Nest.IndexName,System.Func{Nest.ForgetFollowerIndexDescriptor,Nest.IForgetFollowerIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>ccr.forget_follower</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ForgetFollowerIndexAsync(Nest.IndexName,System.Func{Nest.ForgetFollowerIndexDescriptor,Nest.IForgetFollowerIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.forget_follower</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ForgetFollowerIndex(Nest.IForgetFollowerIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>ccr.forget_follower</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ForgetFollowerIndexAsync(Nest.IForgetFollowerIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.forget_follower</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.GetAutoFollowPattern(Nest.Name,System.Func{Nest.GetAutoFollowPatternDescriptor,Nest.IGetAutoFollowPatternRequest})">
      <summary>
        <c>GET</c> request to the <c>ccr.get_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.GetAutoFollowPatternAsync(Nest.Name,System.Func{Nest.GetAutoFollowPatternDescriptor,Nest.IGetAutoFollowPatternRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.get_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.GetAutoFollowPattern(Nest.IGetAutoFollowPatternRequest)">
      <summary>
        <c>GET</c> request to the <c>ccr.get_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.GetAutoFollowPatternAsync(Nest.IGetAutoFollowPatternRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.get_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.PauseFollowIndex(Nest.IndexName,System.Func{Nest.PauseFollowIndexDescriptor,Nest.IPauseFollowIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>ccr.pause_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.PauseFollowIndexAsync(Nest.IndexName,System.Func{Nest.PauseFollowIndexDescriptor,Nest.IPauseFollowIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.pause_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.PauseFollowIndex(Nest.IPauseFollowIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>ccr.pause_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.PauseFollowIndexAsync(Nest.IPauseFollowIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.pause_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateAutoFollowPattern(Nest.Name,System.Func{Nest.CreateAutoFollowPatternDescriptor,Nest.ICreateAutoFollowPatternRequest})">
      <summary>
        <c>PUT</c> request to the <c>ccr.put_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateAutoFollowPatternAsync(Nest.Name,System.Func{Nest.CreateAutoFollowPatternDescriptor,Nest.ICreateAutoFollowPatternRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ccr.put_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateAutoFollowPattern(Nest.ICreateAutoFollowPatternRequest)">
      <summary>
        <c>PUT</c> request to the <c>ccr.put_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.CreateAutoFollowPatternAsync(Nest.ICreateAutoFollowPatternRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ccr.put_auto_follow_pattern</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ResumeFollowIndex(Nest.IndexName,System.Func{Nest.ResumeFollowIndexDescriptor,Nest.IResumeFollowIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>ccr.resume_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ResumeFollowIndexAsync(Nest.IndexName,System.Func{Nest.ResumeFollowIndexDescriptor,Nest.IResumeFollowIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.resume_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ResumeFollowIndex(Nest.IResumeFollowIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>ccr.resume_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.ResumeFollowIndexAsync(Nest.IResumeFollowIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.resume_follow</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.Stats(System.Func{Nest.CcrStatsDescriptor,Nest.ICcrStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>ccr.stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.StatsAsync(System.Func{Nest.CcrStatsDescriptor,Nest.ICcrStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.Stats(Nest.ICcrStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>ccr.stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.StatsAsync(Nest.ICcrStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ccr.stats</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.UnfollowIndex(Nest.IndexName,System.Func{Nest.UnfollowIndexDescriptor,Nest.IUnfollowIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>ccr.unfollow</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.UnfollowIndexAsync(Nest.IndexName,System.Func{Nest.UnfollowIndexDescriptor,Nest.IUnfollowIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.unfollow</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.UnfollowIndex(Nest.IUnfollowIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>ccr.unfollow</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.UnfollowIndexAsync(Nest.IUnfollowIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ccr.unfollow</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current">http://www.elastic.co/guide/en/elasticsearch/reference/current</a></summary>
    </member>
    <member name="T:Nest.Specification.GraphApi.GraphNamespace">
      <summary>
             Graph APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Graph" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.GraphApi.GraphNamespace.Explore``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
      <summary>
        <c>POST</c> request to the <c>graph.explore</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.GraphApi.GraphNamespace.ExploreAsync``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>graph.explore</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.GraphApi.GraphNamespace.Explore(Nest.IGraphExploreRequest)">
      <summary>
        <c>POST</c> request to the <c>graph.explore</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.GraphApi.GraphNamespace.ExploreAsync(Nest.IGraphExploreRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>graph.explore</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html</a></summary>
    </member>
    <member name="T:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace">
      <summary>
             Index Lifecycle Management APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.IndexLifecycleManagement" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.DeleteLifecycle(Nest.Id,System.Func{Nest.DeleteLifecycleDescriptor,Nest.IDeleteLifecycleRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ilm.delete_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.DeleteLifecycleAsync(Nest.Id,System.Func{Nest.DeleteLifecycleDescriptor,Nest.IDeleteLifecycleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ilm.delete_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.DeleteLifecycle(Nest.IDeleteLifecycleRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ilm.delete_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.DeleteLifecycleAsync(Nest.IDeleteLifecycleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ilm.delete_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.ExplainLifecycle(Nest.IndexName,System.Func{Nest.ExplainLifecycleDescriptor,Nest.IExplainLifecycleRequest})">
      <summary>
        <c>GET</c> request to the <c>ilm.explain_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.ExplainLifecycleAsync(Nest.IndexName,System.Func{Nest.ExplainLifecycleDescriptor,Nest.IExplainLifecycleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ilm.explain_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.ExplainLifecycle(Nest.IExplainLifecycleRequest)">
      <summary>
        <c>GET</c> request to the <c>ilm.explain_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.ExplainLifecycleAsync(Nest.IExplainLifecycleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ilm.explain_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetLifecycle(System.Func{Nest.GetLifecycleDescriptor,Nest.IGetLifecycleRequest})">
      <summary>
        <c>GET</c> request to the <c>ilm.get_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetLifecycleAsync(System.Func{Nest.GetLifecycleDescriptor,Nest.IGetLifecycleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ilm.get_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetLifecycle(Nest.IGetLifecycleRequest)">
      <summary>
        <c>GET</c> request to the <c>ilm.get_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetLifecycleAsync(Nest.IGetLifecycleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ilm.get_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetStatus(System.Func{Nest.GetIlmStatusDescriptor,Nest.IGetIlmStatusRequest})">
      <summary>
        <c>GET</c> request to the <c>ilm.get_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetStatusAsync(System.Func{Nest.GetIlmStatusDescriptor,Nest.IGetIlmStatusRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ilm.get_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetStatus(Nest.IGetIlmStatusRequest)">
      <summary>
        <c>GET</c> request to the <c>ilm.get_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.GetStatusAsync(Nest.IGetIlmStatusRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ilm.get_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.MoveToStep(Nest.IndexName,System.Func{Nest.MoveToStepDescriptor,Nest.IMoveToStepRequest})">
      <summary>
        <c>POST</c> request to the <c>ilm.move_to_step</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.MoveToStepAsync(Nest.IndexName,System.Func{Nest.MoveToStepDescriptor,Nest.IMoveToStepRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.move_to_step</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.MoveToStep(Nest.IMoveToStepRequest)">
      <summary>
        <c>POST</c> request to the <c>ilm.move_to_step</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.MoveToStepAsync(Nest.IMoveToStepRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.move_to_step</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.PutLifecycle(Nest.Id,System.Func{Nest.PutLifecycleDescriptor,Nest.IPutLifecycleRequest})">
      <summary>
        <c>PUT</c> request to the <c>ilm.put_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.PutLifecycleAsync(Nest.Id,System.Func{Nest.PutLifecycleDescriptor,Nest.IPutLifecycleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ilm.put_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.PutLifecycle(Nest.IPutLifecycleRequest)">
      <summary>
        <c>PUT</c> request to the <c>ilm.put_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.PutLifecycleAsync(Nest.IPutLifecycleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ilm.put_lifecycle</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.RemovePolicy(Nest.IndexName,System.Func{Nest.RemovePolicyDescriptor,Nest.IRemovePolicyRequest})">
      <summary>
        <c>POST</c> request to the <c>ilm.remove_policy</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.RemovePolicyAsync(Nest.IndexName,System.Func{Nest.RemovePolicyDescriptor,Nest.IRemovePolicyRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.remove_policy</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.RemovePolicy(Nest.IRemovePolicyRequest)">
      <summary>
        <c>POST</c> request to the <c>ilm.remove_policy</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.RemovePolicyAsync(Nest.IRemovePolicyRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.remove_policy</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.Retry(Nest.IndexName,System.Func{Nest.RetryIlmDescriptor,Nest.IRetryIlmRequest})">
      <summary>
        <c>POST</c> request to the <c>ilm.retry</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.RetryAsync(Nest.IndexName,System.Func{Nest.RetryIlmDescriptor,Nest.IRetryIlmRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.retry</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.Retry(Nest.IRetryIlmRequest)">
      <summary>
        <c>POST</c> request to the <c>ilm.retry</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.RetryAsync(Nest.IRetryIlmRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.retry</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.Start(System.Func{Nest.StartIlmDescriptor,Nest.IStartIlmRequest})">
      <summary>
        <c>POST</c> request to the <c>ilm.start</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.StartAsync(System.Func{Nest.StartIlmDescriptor,Nest.IStartIlmRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.start</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.Start(Nest.IStartIlmRequest)">
      <summary>
        <c>POST</c> request to the <c>ilm.start</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.StartAsync(Nest.IStartIlmRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.start</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.Stop(System.Func{Nest.StopIlmDescriptor,Nest.IStopIlmRequest})">
      <summary>
        <c>POST</c> request to the <c>ilm.stop</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.StopAsync(System.Func{Nest.StopIlmDescriptor,Nest.IStopIlmRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.stop</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.Stop(Nest.IStopIlmRequest)">
      <summary>
        <c>POST</c> request to the <c>ilm.stop</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace.StopAsync(Nest.IStopIlmRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ilm.stop</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html</a></summary>
    </member>
    <member name="T:Nest.Specification.IndicesApi.IndicesNamespace">
      <summary>
             Indices APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Indices" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Analyze(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.analyze</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.AnalyzeAsync(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.analyze</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Analyze(Nest.IAnalyzeRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.analyze</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.AnalyzeAsync(Nest.IAnalyzeRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.analyze</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ClearCache(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.clear_cache</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ClearCacheAsync(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.clear_cache</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ClearCache(Nest.IClearCacheRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.clear_cache</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ClearCacheAsync(Nest.IClearCacheRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.clear_cache</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Close(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.close</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.CloseAsync(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.close</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Close(Nest.ICloseIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.close</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.CloseAsync(Nest.ICloseIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.close</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Create(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.CreateAsync(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Create(Nest.ICreateIndexRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.CreateAsync(Nest.ICreateIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Delete(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteAsync(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Delete(Nest.IDeleteIndexRequest)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteAsync(Nest.IDeleteIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteAlias(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteAliasAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteAlias(Nest.IDeleteAliasRequest)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteAliasAsync(Nest.IDeleteAliasRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteTemplate(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteTemplateAsync(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteTemplate(Nest.IDeleteIndexTemplateRequest)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.DeleteTemplateAsync(Nest.IDeleteIndexTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>indices.delete_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Exists(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ExistsAsync(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Exists(Nest.IIndexExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ExistsAsync(Nest.IIndexExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.AliasExists(Nest.Names,System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.AliasExistsAsync(Nest.Names,System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.AliasExists(Nest.IAliasExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.AliasExistsAsync(Nest.IAliasExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TemplateExists(Nest.Names,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TemplateExistsAsync(Nest.Names,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TemplateExists(Nest.IIndexTemplateExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TemplateExistsAsync(Nest.IIndexTemplateExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TypeExists(Nest.Indices,Nest.Names,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_type</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TypeExistsAsync(Nest.Indices,Nest.Names,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_type</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TypeExists(Nest.ITypeExistsRequest)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_type</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.TypeExistsAsync(Nest.ITypeExistsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>HEAD</c> request to the <c>indices.exists_type</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Flush(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.flush</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.FlushAsync(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.flush</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Flush(Nest.IFlushRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.flush</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.FlushAsync(Nest.IFlushRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.flush</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SyncedFlush(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.flush_synced</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SyncedFlushAsync(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.flush_synced</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SyncedFlush(Nest.ISyncedFlushRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.flush_synced</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SyncedFlushAsync(Nest.ISyncedFlushRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.flush_synced</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ForceMerge(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.forcemerge</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ForceMergeAsync(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.forcemerge</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ForceMerge(Nest.IForceMergeRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.forcemerge</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ForceMergeAsync(Nest.IForceMergeRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.forcemerge</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Freeze(Nest.IndexName,System.Func{Nest.FreezeIndexDescriptor,Nest.IFreezeIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.freeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.FreezeAsync(Nest.IndexName,System.Func{Nest.FreezeIndexDescriptor,Nest.IFreezeIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.freeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Freeze(Nest.IFreezeIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.freeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.FreezeAsync(Nest.IFreezeIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.freeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Get(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAsync(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Get(Nest.IGetIndexRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAsync(Nest.IGetIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAlias(Nest.Indices,System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.get_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAliasAsync(Nest.Indices,System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAlias(Nest.IGetAliasRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.get_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAliasAsync(Nest.IGetAliasRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetFieldMapping``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.get_field_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetFieldMappingAsync``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_field_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetFieldMapping(Nest.IGetFieldMappingRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.get_field_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetFieldMappingAsync(Nest.IGetFieldMappingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_field_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetMapping``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.get_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetMappingAsync``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetMapping(Nest.IGetMappingRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.get_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetMappingAsync(Nest.IGetMappingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetSettings(Nest.Indices,System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetSettingsAsync(Nest.Indices,System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetSettings(Nest.IGetIndexSettingsRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetSettingsAsync(Nest.IGetIndexSettingsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetTemplate(Nest.Names,System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.get_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetTemplateAsync(Nest.Names,System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetTemplate(Nest.IGetIndexTemplateRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.get_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.GetTemplateAsync(Nest.IGetIndexTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.get_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Open(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.open</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.OpenAsync(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.open</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Open(Nest.IOpenIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.open</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.OpenAsync(Nest.IOpenIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.open</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutAlias(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.put_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutAliasAsync(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutAlias(Nest.IPutAliasRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutAliasAsync(Nest.IPutAliasRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_alias</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutMapping``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.put_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutMappingAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutMapping(Nest.IPutMappingRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutMappingAsync(Nest.IPutMappingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_mapping</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.UpdateSettings(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.UpdateSettingsAsync(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.UpdateSettings(Nest.IUpdateIndexSettingsRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.UpdateSettingsAsync(Nest.IUpdateIndexSettingsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_settings</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutTemplate(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.put_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutTemplateAsync(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutTemplate(Nest.IPutIndexTemplateRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.PutTemplateAsync(Nest.IPutIndexTemplateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.put_template</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RecoveryStatus(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RecoveryStatusAsync(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RecoveryStatus(Nest.IRecoveryStatusRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RecoveryStatusAsync(Nest.IRecoveryStatusRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.recovery</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Refresh(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.refresh</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RefreshAsync(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.refresh</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Refresh(Nest.IRefreshRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.refresh</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RefreshAsync(Nest.IRefreshRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.refresh</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Rollover(Nest.Name,System.Func{Nest.RolloverIndexDescriptor,Nest.IRolloverIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.rollover</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RolloverAsync(Nest.Name,System.Func{Nest.RolloverIndexDescriptor,Nest.IRolloverIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.rollover</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Rollover(Nest.IRolloverIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.rollover</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.RolloverAsync(Nest.IRolloverIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.rollover</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Segments(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SegmentsAsync(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Segments(Nest.ISegmentsRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SegmentsAsync(Nest.ISegmentsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.segments</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ShardStores(Nest.Indices,System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.shard_stores</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ShardStoresAsync(Nest.Indices,System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.shard_stores</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ShardStores(Nest.IIndicesShardStoresRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.shard_stores</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ShardStoresAsync(Nest.IIndicesShardStoresRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.shard_stores</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Shrink(Nest.IndexName,Nest.IndexName,System.Func{Nest.ShrinkIndexDescriptor,Nest.IShrinkIndexRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.shrink</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ShrinkAsync(Nest.IndexName,Nest.IndexName,System.Func{Nest.ShrinkIndexDescriptor,Nest.IShrinkIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.shrink</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Shrink(Nest.IShrinkIndexRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.shrink</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ShrinkAsync(Nest.IShrinkIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.shrink</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Split(Nest.IndexName,Nest.IndexName,System.Func{Nest.SplitIndexDescriptor,Nest.ISplitIndexRequest})">
      <summary>
        <c>PUT</c> request to the <c>indices.split</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SplitAsync(Nest.IndexName,Nest.IndexName,System.Func{Nest.SplitIndexDescriptor,Nest.ISplitIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.split</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Split(Nest.ISplitIndexRequest)">
      <summary>
        <c>PUT</c> request to the <c>indices.split</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.SplitAsync(Nest.ISplitIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>indices.split</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Stats(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>indices.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.StatsAsync(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Stats(Nest.IIndicesStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>indices.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.StatsAsync(Nest.IIndicesStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>indices.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Unfreeze(Nest.IndexName,System.Func{Nest.UnfreezeIndexDescriptor,Nest.IUnfreezeIndexRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.unfreeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.UnfreezeAsync(Nest.IndexName,System.Func{Nest.UnfreezeIndexDescriptor,Nest.IUnfreezeIndexRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.unfreeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.Unfreeze(Nest.IUnfreezeIndexRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.unfreeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.UnfreezeAsync(Nest.IUnfreezeIndexRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.unfreeze</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.BulkAlias(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.update_aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.BulkAliasAsync(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.update_aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.BulkAlias(Nest.IBulkAliasRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.update_aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.BulkAliasAsync(Nest.IBulkAliasRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.update_aliases</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ValidateQuery``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
      <summary>
        <c>POST</c> request to the <c>indices.validate_query</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ValidateQueryAsync``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.validate_query</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ValidateQuery(Nest.IValidateQueryRequest)">
      <summary>
        <c>POST</c> request to the <c>indices.validate_query</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IndicesApi.IndicesNamespace.ValidateQueryAsync(Nest.IValidateQueryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>indices.validate_query</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</a></summary>
    </member>
    <member name="T:Nest.Specification.IngestApi.IngestNamespace">
      <summary>
             Ingest APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Ingest" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.DeletePipeline(Nest.Id,System.Func{Nest.DeletePipelineDescriptor,Nest.IDeletePipelineRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ingest.delete_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.DeletePipelineAsync(Nest.Id,System.Func{Nest.DeletePipelineDescriptor,Nest.IDeletePipelineRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ingest.delete_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.DeletePipeline(Nest.IDeletePipelineRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ingest.delete_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.DeletePipelineAsync(Nest.IDeletePipelineRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ingest.delete_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GetPipeline(System.Func{Nest.GetPipelineDescriptor,Nest.IGetPipelineRequest})">
      <summary>
        <c>GET</c> request to the <c>ingest.get_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GetPipelineAsync(System.Func{Nest.GetPipelineDescriptor,Nest.IGetPipelineRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ingest.get_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GetPipeline(Nest.IGetPipelineRequest)">
      <summary>
        <c>GET</c> request to the <c>ingest.get_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GetPipelineAsync(Nest.IGetPipelineRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ingest.get_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GrokProcessorPatterns(System.Func{Nest.GrokProcessorPatternsDescriptor,Nest.IGrokProcessorPatternsRequest})">
      <summary>
        <c>GET</c> request to the <c>ingest.processor_grok</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get">https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GrokProcessorPatternsAsync(System.Func{Nest.GrokProcessorPatternsDescriptor,Nest.IGrokProcessorPatternsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ingest.processor_grok</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get">https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GrokProcessorPatterns(Nest.IGrokProcessorPatternsRequest)">
      <summary>
        <c>GET</c> request to the <c>ingest.processor_grok</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get">https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.GrokProcessorPatternsAsync(Nest.IGrokProcessorPatternsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ingest.processor_grok</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get">https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.PutPipeline(Nest.Id,System.Func{Nest.PutPipelineDescriptor,Nest.IPutPipelineRequest})">
      <summary>
        <c>PUT</c> request to the <c>ingest.put_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.PutPipelineAsync(Nest.Id,System.Func{Nest.PutPipelineDescriptor,Nest.IPutPipelineRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ingest.put_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.PutPipeline(Nest.IPutPipelineRequest)">
      <summary>
        <c>PUT</c> request to the <c>ingest.put_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.PutPipelineAsync(Nest.IPutPipelineRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ingest.put_pipeline</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.SimulatePipeline(System.Func{Nest.SimulatePipelineDescriptor,Nest.ISimulatePipelineRequest})">
      <summary>
        <c>POST</c> request to the <c>ingest.simulate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.SimulatePipelineAsync(System.Func{Nest.SimulatePipelineDescriptor,Nest.ISimulatePipelineRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ingest.simulate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.SimulatePipeline(Nest.ISimulatePipelineRequest)">
      <summary>
        <c>POST</c> request to the <c>ingest.simulate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.IngestApi.IngestNamespace.SimulatePipelineAsync(Nest.ISimulatePipelineRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ingest.simulate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html</a></summary>
    </member>
    <member name="T:Nest.Specification.LicenseApi.LicenseNamespace">
      <summary>
             License APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.License" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.Delete(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
      <summary>
        <c>DELETE</c> request to the <c>license.delete</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.DeleteAsync(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>license.delete</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.Delete(Nest.IDeleteLicenseRequest)">
      <summary>
        <c>DELETE</c> request to the <c>license.delete</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.DeleteAsync(Nest.IDeleteLicenseRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>license.delete</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.Get(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
      <summary>
        <c>GET</c> request to the <c>license.get</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetAsync(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>license.get</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.Get(Nest.IGetLicenseRequest)">
      <summary>
        <c>GET</c> request to the <c>license.get</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetAsync(Nest.IGetLicenseRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>license.get</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetBasicStatus(System.Func{Nest.GetBasicLicenseStatusDescriptor,Nest.IGetBasicLicenseStatusRequest})">
      <summary>
        <c>GET</c> request to the <c>license.get_basic_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetBasicStatusAsync(System.Func{Nest.GetBasicLicenseStatusDescriptor,Nest.IGetBasicLicenseStatusRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>license.get_basic_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetBasicStatus(Nest.IGetBasicLicenseStatusRequest)">
      <summary>
        <c>GET</c> request to the <c>license.get_basic_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetBasicStatusAsync(Nest.IGetBasicLicenseStatusRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>license.get_basic_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetTrialStatus(System.Func{Nest.GetTrialLicenseStatusDescriptor,Nest.IGetTrialLicenseStatusRequest})">
      <summary>
        <c>GET</c> request to the <c>license.get_trial_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetTrialStatusAsync(System.Func{Nest.GetTrialLicenseStatusDescriptor,Nest.IGetTrialLicenseStatusRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>license.get_trial_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetTrialStatus(Nest.IGetTrialLicenseStatusRequest)">
      <summary>
        <c>GET</c> request to the <c>license.get_trial_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.GetTrialStatusAsync(Nest.IGetTrialLicenseStatusRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>license.get_trial_status</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.Post(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
      <summary>
        <c>PUT</c> request to the <c>license.post</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.PostAsync(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>license.post</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.Post(Nest.IPostLicenseRequest)">
      <summary>
        <c>PUT</c> request to the <c>license.post</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.PostAsync(Nest.IPostLicenseRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>license.post</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartBasic(System.Func{Nest.StartBasicLicenseDescriptor,Nest.IStartBasicLicenseRequest})">
      <summary>
        <c>POST</c> request to the <c>license.post_start_basic</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartBasicAsync(System.Func{Nest.StartBasicLicenseDescriptor,Nest.IStartBasicLicenseRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>license.post_start_basic</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartBasic(Nest.IStartBasicLicenseRequest)">
      <summary>
        <c>POST</c> request to the <c>license.post_start_basic</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartBasicAsync(Nest.IStartBasicLicenseRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>license.post_start_basic</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartTrial(System.Func{Nest.StartTrialLicenseDescriptor,Nest.IStartTrialLicenseRequest})">
      <summary>
        <c>POST</c> request to the <c>license.post_start_trial</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartTrialAsync(System.Func{Nest.StartTrialLicenseDescriptor,Nest.IStartTrialLicenseRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>license.post_start_trial</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartTrial(Nest.IStartTrialLicenseRequest)">
      <summary>
        <c>POST</c> request to the <c>license.post_start_trial</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html</a></summary>
    </member>
    <member name="M:Nest.Specification.LicenseApi.LicenseNamespace.StartTrialAsync(Nest.IStartTrialLicenseRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>license.post_start_trial</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html</a></summary>
    </member>
    <member name="T:Nest.Specification.MachineLearningApi.MachineLearningNamespace">
      <summary>
             Machine Learning APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.MachineLearning" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.CloseJob(Nest.Id,System.Func{Nest.CloseJobDescriptor,Nest.ICloseJobRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.close_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.CloseJobAsync(Nest.Id,System.Func{Nest.CloseJobDescriptor,Nest.ICloseJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.close_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.CloseJob(Nest.ICloseJobRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.close_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.CloseJobAsync(Nest.ICloseJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.close_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendar(Nest.Id,System.Func{Nest.DeleteCalendarDescriptor,Nest.IDeleteCalendarRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarAsync(Nest.Id,System.Func{Nest.DeleteCalendarDescriptor,Nest.IDeleteCalendarRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendar(Nest.IDeleteCalendarRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarAsync(Nest.IDeleteCalendarRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarEvent(Nest.Id,Nest.Id,System.Func{Nest.DeleteCalendarEventDescriptor,Nest.IDeleteCalendarEventRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_event</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarEventAsync(Nest.Id,Nest.Id,System.Func{Nest.DeleteCalendarEventDescriptor,Nest.IDeleteCalendarEventRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_event</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarEvent(Nest.IDeleteCalendarEventRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_event</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarEventAsync(Nest.IDeleteCalendarEventRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_event</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarJob(Nest.Id,Nest.Id,System.Func{Nest.DeleteCalendarJobDescriptor,Nest.IDeleteCalendarJobRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarJobAsync(Nest.Id,Nest.Id,System.Func{Nest.DeleteCalendarJobDescriptor,Nest.IDeleteCalendarJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarJob(Nest.IDeleteCalendarJobRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteCalendarJobAsync(Nest.IDeleteCalendarJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteDatafeed(Nest.Id,System.Func{Nest.DeleteDatafeedDescriptor,Nest.IDeleteDatafeedRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteDatafeedAsync(Nest.Id,System.Func{Nest.DeleteDatafeedDescriptor,Nest.IDeleteDatafeedRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteDatafeed(Nest.IDeleteDatafeedRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteDatafeedAsync(Nest.IDeleteDatafeedRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteExpiredData(System.Func{Nest.DeleteExpiredDataDescriptor,Nest.IDeleteExpiredDataRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_expired_data</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteExpiredDataAsync(System.Func{Nest.DeleteExpiredDataDescriptor,Nest.IDeleteExpiredDataRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_expired_data</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteExpiredData(Nest.IDeleteExpiredDataRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_expired_data</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteExpiredDataAsync(Nest.IDeleteExpiredDataRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_expired_data</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteFilter(Nest.Id,System.Func{Nest.DeleteFilterDescriptor,Nest.IDeleteFilterRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteFilterAsync(Nest.Id,System.Func{Nest.DeleteFilterDescriptor,Nest.IDeleteFilterRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteFilter(Nest.IDeleteFilterRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteFilterAsync(Nest.IDeleteFilterRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteForecast(Nest.Id,Nest.Ids,System.Func{Nest.DeleteForecastDescriptor,Nest.IDeleteForecastRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_forecast</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteForecastAsync(Nest.Id,Nest.Ids,System.Func{Nest.DeleteForecastDescriptor,Nest.IDeleteForecastRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_forecast</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteForecast(Nest.IDeleteForecastRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_forecast</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteForecastAsync(Nest.IDeleteForecastRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_forecast</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteJob(Nest.Id,System.Func{Nest.DeleteJobDescriptor,Nest.IDeleteJobRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteJobAsync(Nest.Id,System.Func{Nest.DeleteJobDescriptor,Nest.IDeleteJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteJob(Nest.IDeleteJobRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteJobAsync(Nest.IDeleteJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteModelSnapshot(Nest.Id,Nest.Id,System.Func{Nest.DeleteModelSnapshotDescriptor,Nest.IDeleteModelSnapshotRequest})">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteModelSnapshotAsync(Nest.Id,Nest.Id,System.Func{Nest.DeleteModelSnapshotDescriptor,Nest.IDeleteModelSnapshotRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteModelSnapshot(Nest.IDeleteModelSnapshotRequest)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.DeleteModelSnapshotAsync(Nest.IDeleteModelSnapshotRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>ml.delete_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.FlushJob(Nest.Id,System.Func{Nest.FlushJobDescriptor,Nest.IFlushJobRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.flush_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.FlushJobAsync(Nest.Id,System.Func{Nest.FlushJobDescriptor,Nest.IFlushJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.flush_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.FlushJob(Nest.IFlushJobRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.flush_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.FlushJobAsync(Nest.IFlushJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.flush_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ForecastJob(Nest.Id,System.Func{Nest.ForecastJobDescriptor,Nest.IForecastJobRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.forecast</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ForecastJobAsync(Nest.Id,System.Func{Nest.ForecastJobDescriptor,Nest.IForecastJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.forecast</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ForecastJob(Nest.IForecastJobRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.forecast</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ForecastJobAsync(Nest.IForecastJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.forecast</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetBuckets(Nest.Id,System.Func{Nest.GetBucketsDescriptor,Nest.IGetBucketsRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetBucketsAsync(Nest.Id,System.Func{Nest.GetBucketsDescriptor,Nest.IGetBucketsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetBuckets(Nest.IGetBucketsRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetBucketsAsync(Nest.IGetBucketsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendarEvents(Nest.Id,System.Func{Nest.GetCalendarEventsDescriptor,Nest.IGetCalendarEventsRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.get_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendarEventsAsync(Nest.Id,System.Func{Nest.GetCalendarEventsDescriptor,Nest.IGetCalendarEventsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendarEvents(Nest.IGetCalendarEventsRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.get_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendarEventsAsync(Nest.IGetCalendarEventsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendars(System.Func{Nest.GetCalendarsDescriptor,Nest.IGetCalendarsRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_calendars</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendarsAsync(System.Func{Nest.GetCalendarsDescriptor,Nest.IGetCalendarsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_calendars</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendars(Nest.IGetCalendarsRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_calendars</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCalendarsAsync(Nest.IGetCalendarsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_calendars</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCategories(Nest.Id,System.Func{Nest.GetCategoriesDescriptor,Nest.IGetCategoriesRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_categories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCategoriesAsync(Nest.Id,System.Func{Nest.GetCategoriesDescriptor,Nest.IGetCategoriesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_categories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCategories(Nest.IGetCategoriesRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_categories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetCategoriesAsync(Nest.IGetCategoriesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_categories</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeedStats(System.Func{Nest.GetDatafeedStatsDescriptor,Nest.IGetDatafeedStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeed_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeedStatsAsync(System.Func{Nest.GetDatafeedStatsDescriptor,Nest.IGetDatafeedStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeed_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeedStats(Nest.IGetDatafeedStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeed_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeedStatsAsync(Nest.IGetDatafeedStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeed_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeeds(System.Func{Nest.GetDatafeedsDescriptor,Nest.IGetDatafeedsRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeeds</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeedsAsync(System.Func{Nest.GetDatafeedsDescriptor,Nest.IGetDatafeedsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeeds</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeeds(Nest.IGetDatafeedsRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeeds</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetDatafeedsAsync(Nest.IGetDatafeedsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_datafeeds</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetFilters(System.Func{Nest.GetFiltersDescriptor,Nest.IGetFiltersRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.get_filters</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetFiltersAsync(System.Func{Nest.GetFiltersDescriptor,Nest.IGetFiltersRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_filters</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetFilters(Nest.IGetFiltersRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.get_filters</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetFiltersAsync(Nest.IGetFiltersRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_filters</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetInfluencers(Nest.Id,System.Func{Nest.GetInfluencersDescriptor,Nest.IGetInfluencersRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_influencers</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetInfluencersAsync(Nest.Id,System.Func{Nest.GetInfluencersDescriptor,Nest.IGetInfluencersRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_influencers</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetInfluencers(Nest.IGetInfluencersRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_influencers</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetInfluencersAsync(Nest.IGetInfluencersRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_influencers</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobStats(System.Func{Nest.GetJobStatsDescriptor,Nest.IGetJobStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.get_job_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobStatsAsync(System.Func{Nest.GetJobStatsDescriptor,Nest.IGetJobStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_job_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobStats(Nest.IGetJobStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.get_job_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobStatsAsync(Nest.IGetJobStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_job_stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobs(System.Func{Nest.GetJobsDescriptor,Nest.IGetJobsRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.get_jobs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobsAsync(System.Func{Nest.GetJobsDescriptor,Nest.IGetJobsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_jobs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobs(Nest.IGetJobsRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.get_jobs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetJobsAsync(Nest.IGetJobsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.get_jobs</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetModelSnapshots(Nest.Id,System.Func{Nest.GetModelSnapshotsDescriptor,Nest.IGetModelSnapshotsRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_model_snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetModelSnapshotsAsync(Nest.Id,System.Func{Nest.GetModelSnapshotsDescriptor,Nest.IGetModelSnapshotsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_model_snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetModelSnapshots(Nest.IGetModelSnapshotsRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_model_snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetModelSnapshotsAsync(Nest.IGetModelSnapshotsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_model_snapshots</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetOverallBuckets(Nest.Id,System.Func{Nest.GetOverallBucketsDescriptor,Nest.IGetOverallBucketsRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_overall_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetOverallBucketsAsync(Nest.Id,System.Func{Nest.GetOverallBucketsDescriptor,Nest.IGetOverallBucketsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_overall_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetOverallBuckets(Nest.IGetOverallBucketsRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_overall_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetOverallBucketsAsync(Nest.IGetOverallBucketsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_overall_buckets</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetAnomalyRecords(Nest.Id,System.Func{Nest.GetAnomalyRecordsDescriptor,Nest.IGetAnomalyRecordsRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.get_records</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetAnomalyRecordsAsync(Nest.Id,System.Func{Nest.GetAnomalyRecordsDescriptor,Nest.IGetAnomalyRecordsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_records</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetAnomalyRecords(Nest.IGetAnomalyRecordsRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.get_records</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.GetAnomalyRecordsAsync(Nest.IGetAnomalyRecordsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.get_records</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.Info(System.Func{Nest.MachineLearningInfoDescriptor,Nest.IMachineLearningInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.info</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.InfoAsync(System.Func{Nest.MachineLearningInfoDescriptor,Nest.IMachineLearningInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.info</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.Info(Nest.IMachineLearningInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.info</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.InfoAsync(Nest.IMachineLearningInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.info</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.OpenJob(Nest.Id,System.Func{Nest.OpenJobDescriptor,Nest.IOpenJobRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.open_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.OpenJobAsync(Nest.Id,System.Func{Nest.OpenJobDescriptor,Nest.IOpenJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.open_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.OpenJob(Nest.IOpenJobRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.open_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.OpenJobAsync(Nest.IOpenJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.open_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostCalendarEvents(Nest.Id,System.Func{Nest.PostCalendarEventsDescriptor,Nest.IPostCalendarEventsRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.post_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostCalendarEventsAsync(Nest.Id,System.Func{Nest.PostCalendarEventsDescriptor,Nest.IPostCalendarEventsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.post_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostCalendarEvents(Nest.IPostCalendarEventsRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.post_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostCalendarEventsAsync(Nest.IPostCalendarEventsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.post_calendar_events</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostJobData(Nest.Id,System.Func{Nest.PostJobDataDescriptor,Nest.IPostJobDataRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.post_data</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostJobDataAsync(Nest.Id,System.Func{Nest.PostJobDataDescriptor,Nest.IPostJobDataRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.post_data</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostJobData(Nest.IPostJobDataRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.post_data</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PostJobDataAsync(Nest.IPostJobDataRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.post_data</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PreviewDatafeed``1(Nest.Id,System.Func{Nest.PreviewDatafeedDescriptor,Nest.IPreviewDatafeedRequest})">
      <summary>
        <c>GET</c> request to the <c>ml.preview_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PreviewDatafeedAsync``1(Nest.Id,System.Func{Nest.PreviewDatafeedDescriptor,Nest.IPreviewDatafeedRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.preview_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PreviewDatafeed``1(Nest.IPreviewDatafeedRequest)">
      <summary>
        <c>GET</c> request to the <c>ml.preview_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PreviewDatafeedAsync``1(Nest.IPreviewDatafeedRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ml.preview_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendar(Nest.Id,System.Func{Nest.PutCalendarDescriptor,Nest.IPutCalendarRequest})">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendarAsync(Nest.Id,System.Func{Nest.PutCalendarDescriptor,Nest.IPutCalendarRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendar(Nest.IPutCalendarRequest)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendarAsync(Nest.IPutCalendarRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendarJob(Nest.Id,Nest.Id,System.Func{Nest.PutCalendarJobDescriptor,Nest.IPutCalendarJobRequest})">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendarJobAsync(Nest.Id,Nest.Id,System.Func{Nest.PutCalendarJobDescriptor,Nest.IPutCalendarJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendarJob(Nest.IPutCalendarJobRequest)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutCalendarJobAsync(Nest.IPutCalendarJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_calendar_job</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutDatafeed``1(Nest.Id,System.Func{Nest.PutDatafeedDescriptor{``0},Nest.IPutDatafeedRequest})">
      <summary>
        <c>PUT</c> request to the <c>ml.put_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutDatafeedAsync``1(Nest.Id,System.Func{Nest.PutDatafeedDescriptor{``0},Nest.IPutDatafeedRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutDatafeed(Nest.IPutDatafeedRequest)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutDatafeedAsync(Nest.IPutDatafeedRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutFilter(Nest.Id,System.Func{Nest.PutFilterDescriptor,Nest.IPutFilterRequest})">
      <summary>
        <c>PUT</c> request to the <c>ml.put_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutFilterAsync(Nest.Id,System.Func{Nest.PutFilterDescriptor,Nest.IPutFilterRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutFilter(Nest.IPutFilterRequest)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutFilterAsync(Nest.IPutFilterRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutJob``1(Nest.Id,System.Func{Nest.PutJobDescriptor{``0},Nest.IPutJobRequest})">
      <summary>
        <c>PUT</c> request to the <c>ml.put_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutJobAsync``1(Nest.Id,System.Func{Nest.PutJobDescriptor{``0},Nest.IPutJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutJob(Nest.IPutJobRequest)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.PutJobAsync(Nest.IPutJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>ml.put_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.RevertModelSnapshot(Nest.Id,Nest.Id,System.Func{Nest.RevertModelSnapshotDescriptor,Nest.IRevertModelSnapshotRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.revert_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.RevertModelSnapshotAsync(Nest.Id,Nest.Id,System.Func{Nest.RevertModelSnapshotDescriptor,Nest.IRevertModelSnapshotRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.revert_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.RevertModelSnapshot(Nest.IRevertModelSnapshotRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.revert_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.RevertModelSnapshotAsync(Nest.IRevertModelSnapshotRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.revert_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StartDatafeed(Nest.Id,System.Func{Nest.StartDatafeedDescriptor,Nest.IStartDatafeedRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.start_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StartDatafeedAsync(Nest.Id,System.Func{Nest.StartDatafeedDescriptor,Nest.IStartDatafeedRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.start_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StartDatafeed(Nest.IStartDatafeedRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.start_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StartDatafeedAsync(Nest.IStartDatafeedRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.start_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StopDatafeed(Nest.Id,System.Func{Nest.StopDatafeedDescriptor,Nest.IStopDatafeedRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.stop_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StopDatafeedAsync(Nest.Id,System.Func{Nest.StopDatafeedDescriptor,Nest.IStopDatafeedRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.stop_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StopDatafeed(Nest.IStopDatafeedRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.stop_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.StopDatafeedAsync(Nest.IStopDatafeedRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.stop_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateDatafeed``1(Nest.Id,System.Func{Nest.UpdateDatafeedDescriptor{``0},Nest.IUpdateDatafeedRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.update_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateDatafeedAsync``1(Nest.Id,System.Func{Nest.UpdateDatafeedDescriptor{``0},Nest.IUpdateDatafeedRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateDatafeed(Nest.IUpdateDatafeedRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.update_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateDatafeedAsync(Nest.IUpdateDatafeedRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_datafeed</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateFilter(Nest.Id,System.Func{Nest.UpdateFilterDescriptor,Nest.IUpdateFilterRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.update_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateFilterAsync(Nest.Id,System.Func{Nest.UpdateFilterDescriptor,Nest.IUpdateFilterRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateFilter(Nest.IUpdateFilterRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.update_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateFilterAsync(Nest.IUpdateFilterRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_filter</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateJob``1(Nest.Id,System.Func{Nest.UpdateJobDescriptor{``0},Nest.IUpdateJobRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.update_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateJobAsync``1(Nest.Id,System.Func{Nest.UpdateJobDescriptor{``0},Nest.IUpdateJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateJob(Nest.IUpdateJobRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.update_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateJobAsync(Nest.IUpdateJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_job</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateModelSnapshot(Nest.Id,Nest.Id,System.Func{Nest.UpdateModelSnapshotDescriptor,Nest.IUpdateModelSnapshotRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.update_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateModelSnapshotAsync(Nest.Id,Nest.Id,System.Func{Nest.UpdateModelSnapshotDescriptor,Nest.IUpdateModelSnapshotRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateModelSnapshot(Nest.IUpdateModelSnapshotRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.update_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.UpdateModelSnapshotAsync(Nest.IUpdateModelSnapshotRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.update_model_snapshot</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateJob``1(System.Func{Nest.ValidateJobDescriptor{``0},Nest.IValidateJobRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.validate</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateJobAsync``1(System.Func{Nest.ValidateJobDescriptor{``0},Nest.IValidateJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.validate</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateJob(Nest.IValidateJobRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.validate</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateJobAsync(Nest.IValidateJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.validate</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateDetector``1(System.Func{Nest.ValidateDetectorDescriptor{``0},Nest.IValidateDetectorRequest})">
      <summary>
        <c>POST</c> request to the <c>ml.validate_detector</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateDetectorAsync``1(System.Func{Nest.ValidateDetectorDescriptor{``0},Nest.IValidateDetectorRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.validate_detector</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateDetector(Nest.IValidateDetectorRequest)">
      <summary>
        <c>POST</c> request to the <c>ml.validate_detector</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="M:Nest.Specification.MachineLearningApi.MachineLearningNamespace.ValidateDetectorAsync(Nest.IValidateDetectorRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>ml.validate_detector</c> API, read more about this API online:
            <para></para><a></a></summary>
    </member>
    <member name="T:Nest.Specification.MigrationApi.MigrationNamespace">
      <summary>
             Migration APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Migration" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.MigrationApi.MigrationNamespace.DeprecationInfo(System.Func{Nest.DeprecationInfoDescriptor,Nest.IDeprecationInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>migration.deprecations</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MigrationApi.MigrationNamespace.DeprecationInfoAsync(System.Func{Nest.DeprecationInfoDescriptor,Nest.IDeprecationInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>migration.deprecations</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MigrationApi.MigrationNamespace.DeprecationInfo(Nest.IDeprecationInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>migration.deprecations</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html</a></summary>
    </member>
    <member name="M:Nest.Specification.MigrationApi.MigrationNamespace.DeprecationInfoAsync(Nest.IDeprecationInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>migration.deprecations</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html</a></summary>
    </member>
    <member name="T:Nest.Specification.NodesApi.NodesNamespace">
      <summary>
             Nodes APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Nodes" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.HotThreads(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
      <summary>
        <c>GET</c> request to the <c>nodes.hot_threads</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.HotThreadsAsync(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.hot_threads</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.HotThreads(Nest.INodesHotThreadsRequest)">
      <summary>
        <c>GET</c> request to the <c>nodes.hot_threads</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.HotThreadsAsync(Nest.INodesHotThreadsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.hot_threads</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.Info(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>nodes.info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.InfoAsync(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.Info(Nest.INodesInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>nodes.info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.InfoAsync(Nest.INodesInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.info</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.ReloadSecureSettings(System.Func{Nest.ReloadSecureSettingsDescriptor,Nest.IReloadSecureSettingsRequest})">
      <summary>
        <c>POST</c> request to the <c>nodes.reload_secure_settings</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings">https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.ReloadSecureSettingsAsync(System.Func{Nest.ReloadSecureSettingsDescriptor,Nest.IReloadSecureSettingsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>nodes.reload_secure_settings</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings">https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.ReloadSecureSettings(Nest.IReloadSecureSettingsRequest)">
      <summary>
        <c>POST</c> request to the <c>nodes.reload_secure_settings</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings">https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.ReloadSecureSettingsAsync(Nest.IReloadSecureSettingsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>nodes.reload_secure_settings</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings">https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.Stats(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>nodes.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.StatsAsync(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.Stats(Nest.INodesStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>nodes.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.StatsAsync(Nest.INodesStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.Usage(System.Func{Nest.NodesUsageDescriptor,Nest.INodesUsageRequest})">
      <summary>
        <c>GET</c> request to the <c>nodes.usage</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.UsageAsync(System.Func{Nest.NodesUsageDescriptor,Nest.INodesUsageRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.usage</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.Usage(Nest.INodesUsageRequest)">
      <summary>
        <c>GET</c> request to the <c>nodes.usage</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html</a></summary>
    </member>
    <member name="M:Nest.Specification.NodesApi.NodesNamespace.UsageAsync(Nest.INodesUsageRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>nodes.usage</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html</a></summary>
    </member>
    <member name="T:Nest.Specification.RollupApi.RollupNamespace">
      <summary>
             Rollup APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Rollup" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.DeleteJob(Nest.Id,System.Func{Nest.DeleteRollupJobDescriptor,Nest.IDeleteRollupJobRequest})">
      <summary>
        <c>DELETE</c> request to the <c>rollup.delete_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.DeleteJobAsync(Nest.Id,System.Func{Nest.DeleteRollupJobDescriptor,Nest.IDeleteRollupJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>rollup.delete_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.DeleteJob(Nest.IDeleteRollupJobRequest)">
      <summary>
        <c>DELETE</c> request to the <c>rollup.delete_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.DeleteJobAsync(Nest.IDeleteRollupJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>rollup.delete_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetJob(System.Func{Nest.GetRollupJobDescriptor,Nest.IGetRollupJobRequest})">
      <summary>
        <c>GET</c> request to the <c>rollup.get_jobs</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetJobAsync(System.Func{Nest.GetRollupJobDescriptor,Nest.IGetRollupJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_jobs</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetJob(Nest.IGetRollupJobRequest)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_jobs</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetJobAsync(Nest.IGetRollupJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_jobs</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetCapabilities(System.Func{Nest.GetRollupCapabilitiesDescriptor,Nest.IGetRollupCapabilitiesRequest})">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetCapabilitiesAsync(System.Func{Nest.GetRollupCapabilitiesDescriptor,Nest.IGetRollupCapabilitiesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetCapabilities(Nest.IGetRollupCapabilitiesRequest)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetCapabilitiesAsync(Nest.IGetRollupCapabilitiesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetIndexCapabilities(Nest.IndexName,System.Func{Nest.GetRollupIndexCapabilitiesDescriptor,Nest.IGetRollupIndexCapabilitiesRequest})">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_index_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetIndexCapabilitiesAsync(Nest.IndexName,System.Func{Nest.GetRollupIndexCapabilitiesDescriptor,Nest.IGetRollupIndexCapabilitiesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_index_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetIndexCapabilities(Nest.IGetRollupIndexCapabilitiesRequest)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_index_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.GetIndexCapabilitiesAsync(Nest.IGetRollupIndexCapabilitiesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>rollup.get_rollup_index_caps</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.CreateJob``1(Nest.Id,System.Func{Nest.CreateRollupJobDescriptor{``0},Nest.ICreateRollupJobRequest})">
      <summary>
        <c>PUT</c> request to the <c>rollup.put_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.CreateJobAsync``1(Nest.Id,System.Func{Nest.CreateRollupJobDescriptor{``0},Nest.ICreateRollupJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>rollup.put_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.CreateJob(Nest.ICreateRollupJobRequest)">
      <summary>
        <c>PUT</c> request to the <c>rollup.put_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.CreateJobAsync(Nest.ICreateRollupJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>rollup.put_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.Search``1(System.Func{Nest.RollupSearchDescriptor{``0},Nest.IRollupSearchRequest})">
      <summary>
        <c>POST</c> request to the <c>rollup.rollup_search</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.SearchAsync``1(System.Func{Nest.RollupSearchDescriptor{``0},Nest.IRollupSearchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>rollup.rollup_search</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.Search``1(Nest.IRollupSearchRequest)">
      <summary>
        <c>POST</c> request to the <c>rollup.rollup_search</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.SearchAsync``1(Nest.IRollupSearchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>rollup.rollup_search</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StartJob(Nest.Id,System.Func{Nest.StartRollupJobDescriptor,Nest.IStartRollupJobRequest})">
      <summary>
        <c>POST</c> request to the <c>rollup.start_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StartJobAsync(Nest.Id,System.Func{Nest.StartRollupJobDescriptor,Nest.IStartRollupJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>rollup.start_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StartJob(Nest.IStartRollupJobRequest)">
      <summary>
        <c>POST</c> request to the <c>rollup.start_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StartJobAsync(Nest.IStartRollupJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>rollup.start_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StopJob(Nest.Id,System.Func{Nest.StopRollupJobDescriptor,Nest.IStopRollupJobRequest})">
      <summary>
        <c>POST</c> request to the <c>rollup.stop_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StopJobAsync(Nest.Id,System.Func{Nest.StopRollupJobDescriptor,Nest.IStopRollupJobRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>rollup.stop_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StopJob(Nest.IStopRollupJobRequest)">
      <summary>
        <c>POST</c> request to the <c>rollup.stop_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="M:Nest.Specification.RollupApi.RollupNamespace.StopJobAsync(Nest.IStopRollupJobRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>rollup.stop_job</c> API, read more about this API online:
            <para></para><a href=""></a></summary>
    </member>
    <member name="T:Nest.Specification.SecurityApi.SecurityNamespace">
      <summary>
             Security APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Security" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.Authenticate(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
      <summary>
        <c>GET</c> request to the <c>security.authenticate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.AuthenticateAsync(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.authenticate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.Authenticate(Nest.IAuthenticateRequest)">
      <summary>
        <c>GET</c> request to the <c>security.authenticate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.AuthenticateAsync(Nest.IAuthenticateRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.authenticate</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ChangePassword(System.Func{Nest.ChangePasswordDescriptor,Nest.IChangePasswordRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.change_password</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ChangePasswordAsync(System.Func{Nest.ChangePasswordDescriptor,Nest.IChangePasswordRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.change_password</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ChangePassword(Nest.IChangePasswordRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.change_password</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ChangePasswordAsync(Nest.IChangePasswordRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.change_password</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRealms(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_realms</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRealmsAsync(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_realms</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRealms(Nest.IClearCachedRealmsRequest)">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_realms</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRealmsAsync(Nest.IClearCachedRealmsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_realms</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRoles(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_roles</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRolesAsync(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_roles</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRoles(Nest.IClearCachedRolesRequest)">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_roles</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.ClearCachedRolesAsync(Nest.IClearCachedRolesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.clear_cached_roles</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.CreateApiKey(System.Func{Nest.CreateApiKeyDescriptor,Nest.ICreateApiKeyRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.create_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.CreateApiKeyAsync(System.Func{Nest.CreateApiKeyDescriptor,Nest.ICreateApiKeyRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.create_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.CreateApiKey(Nest.ICreateApiKeyRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.create_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.CreateApiKeyAsync(Nest.ICreateApiKeyRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.create_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeletePrivileges(Nest.Name,Nest.Name,System.Func{Nest.DeletePrivilegesDescriptor,Nest.IDeletePrivilegesRequest})">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeletePrivilegesAsync(Nest.Name,Nest.Name,System.Func{Nest.DeletePrivilegesDescriptor,Nest.IDeletePrivilegesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeletePrivileges(Nest.IDeletePrivilegesRequest)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeletePrivilegesAsync(Nest.IDeletePrivilegesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRole(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRoleAsync(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRole(Nest.IDeleteRoleRequest)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRoleAsync(Nest.IDeleteRoleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRoleMapping(Nest.Name,System.Func{Nest.DeleteRoleMappingDescriptor,Nest.IDeleteRoleMappingRequest})">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRoleMappingAsync(Nest.Name,System.Func{Nest.DeleteRoleMappingDescriptor,Nest.IDeleteRoleMappingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRoleMapping(Nest.IDeleteRoleMappingRequest)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteRoleMappingAsync(Nest.IDeleteRoleMappingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteUser(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteUserAsync(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteUser(Nest.IDeleteUserRequest)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DeleteUserAsync(Nest.IDeleteUserRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.delete_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DisableUser(Nest.Name,System.Func{Nest.DisableUserDescriptor,Nest.IDisableUserRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.disable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DisableUserAsync(Nest.Name,System.Func{Nest.DisableUserDescriptor,Nest.IDisableUserRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.disable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DisableUser(Nest.IDisableUserRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.disable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.DisableUserAsync(Nest.IDisableUserRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.disable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.EnableUser(Nest.Name,System.Func{Nest.EnableUserDescriptor,Nest.IEnableUserRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.enable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.EnableUserAsync(Nest.Name,System.Func{Nest.EnableUserDescriptor,Nest.IEnableUserRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.enable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.EnableUser(Nest.IEnableUserRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.enable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.EnableUserAsync(Nest.IEnableUserRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.enable_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetApiKey(System.Func{Nest.GetApiKeyDescriptor,Nest.IGetApiKeyRequest})">
      <summary>
        <c>GET</c> request to the <c>security.get_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetApiKeyAsync(System.Func{Nest.GetApiKeyDescriptor,Nest.IGetApiKeyRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetApiKey(Nest.IGetApiKeyRequest)">
      <summary>
        <c>GET</c> request to the <c>security.get_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetApiKeyAsync(Nest.IGetApiKeyRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetPrivileges(Nest.Name,System.Func{Nest.GetPrivilegesDescriptor,Nest.IGetPrivilegesRequest})">
      <summary>
        <c>GET</c> request to the <c>security.get_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetPrivilegesAsync(Nest.Name,System.Func{Nest.GetPrivilegesDescriptor,Nest.IGetPrivilegesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetPrivileges(Nest.IGetPrivilegesRequest)">
      <summary>
        <c>GET</c> request to the <c>security.get_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetPrivilegesAsync(Nest.IGetPrivilegesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRole(Nest.Name,System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
      <summary>
        <c>GET</c> request to the <c>security.get_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRoleAsync(Nest.Name,System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRole(Nest.IGetRoleRequest)">
      <summary>
        <c>GET</c> request to the <c>security.get_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRoleAsync(Nest.IGetRoleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRoleMapping(Nest.Name,System.Func{Nest.GetRoleMappingDescriptor,Nest.IGetRoleMappingRequest})">
      <summary>
        <c>GET</c> request to the <c>security.get_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRoleMappingAsync(Nest.Name,System.Func{Nest.GetRoleMappingDescriptor,Nest.IGetRoleMappingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRoleMapping(Nest.IGetRoleMappingRequest)">
      <summary>
        <c>GET</c> request to the <c>security.get_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetRoleMappingAsync(Nest.IGetRoleMappingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserAccessToken(System.String,System.String,System.Func{Nest.GetUserAccessTokenDescriptor,Nest.IGetUserAccessTokenRequest})">
      <summary>
        <c>POST</c> request to the <c>security.get_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserAccessTokenAsync(System.String,System.String,System.Func{Nest.GetUserAccessTokenDescriptor,Nest.IGetUserAccessTokenRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.get_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserAccessToken(Nest.IGetUserAccessTokenRequest)">
      <summary>
        <c>POST</c> request to the <c>security.get_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserAccessTokenAsync(Nest.IGetUserAccessTokenRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.get_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUser(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
      <summary>
        <c>GET</c> request to the <c>security.get_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserAsync(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUser(Nest.IGetUserRequest)">
      <summary>
        <c>GET</c> request to the <c>security.get_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserAsync(Nest.IGetUserRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserPrivileges(System.Func{Nest.GetUserPrivilegesDescriptor,Nest.IGetUserPrivilegesRequest})">
      <summary>
        <c>GET</c> request to the <c>security.get_user_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserPrivilegesAsync(System.Func{Nest.GetUserPrivilegesDescriptor,Nest.IGetUserPrivilegesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_user_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserPrivileges(Nest.IGetUserPrivilegesRequest)">
      <summary>
        <c>GET</c> request to the <c>security.get_user_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetUserPrivilegesAsync(Nest.IGetUserPrivilegesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>security.get_user_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.HasPrivileges(System.Func{Nest.HasPrivilegesDescriptor,Nest.IHasPrivilegesRequest})">
      <summary>
        <c>POST</c> request to the <c>security.has_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.HasPrivilegesAsync(System.Func{Nest.HasPrivilegesDescriptor,Nest.IHasPrivilegesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.has_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.HasPrivileges(Nest.IHasPrivilegesRequest)">
      <summary>
        <c>POST</c> request to the <c>security.has_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.HasPrivilegesAsync(Nest.IHasPrivilegesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>security.has_privileges</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateApiKey(System.Func{Nest.InvalidateApiKeyDescriptor,Nest.IInvalidateApiKeyRequest})">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateApiKeyAsync(System.Func{Nest.InvalidateApiKeyDescriptor,Nest.IInvalidateApiKeyRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateApiKey(Nest.IInvalidateApiKeyRequest)">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateApiKeyAsync(Nest.IInvalidateApiKeyRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_api_key</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateUserAccessToken(System.String,System.Func{Nest.InvalidateUserAccessTokenDescriptor,Nest.IInvalidateUserAccessTokenRequest})">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateUserAccessTokenAsync(System.String,System.Func{Nest.InvalidateUserAccessTokenDescriptor,Nest.IInvalidateUserAccessTokenRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateUserAccessToken(Nest.IInvalidateUserAccessTokenRequest)">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.InvalidateUserAccessTokenAsync(Nest.IInvalidateUserAccessTokenRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>security.invalidate_token</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutPrivileges(System.Func{Nest.PutPrivilegesDescriptor,Nest.IPutPrivilegesRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.put_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutPrivilegesAsync(System.Func{Nest.PutPrivilegesDescriptor,Nest.IPutPrivilegesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutPrivileges(Nest.IPutPrivilegesRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.put_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutPrivilegesAsync(Nest.IPutPrivilegesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_privileges</c> API, read more about this API online:
            <para></para><a href="TODO">TODO</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRole(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.put_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRoleAsync(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRole(Nest.IPutRoleRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.put_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRoleAsync(Nest.IPutRoleRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_role</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRoleMapping(Nest.Name,System.Func{Nest.PutRoleMappingDescriptor,Nest.IPutRoleMappingRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.put_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRoleMappingAsync(Nest.Name,System.Func{Nest.PutRoleMappingDescriptor,Nest.IPutRoleMappingRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRoleMapping(Nest.IPutRoleMappingRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.put_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutRoleMappingAsync(Nest.IPutRoleMappingRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_role_mapping</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutUser(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
      <summary>
        <c>PUT</c> request to the <c>security.put_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutUserAsync(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutUser(Nest.IPutUserRequest)">
      <summary>
        <c>PUT</c> request to the <c>security.put_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.PutUserAsync(Nest.IPutUserRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>security.put_user</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetCertificates(System.Func{Nest.GetCertificatesDescriptor,Nest.IGetCertificatesRequest})">
      <summary>
        <c>GET</c> request to the <c>ssl.certificates</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetCertificatesAsync(System.Func{Nest.GetCertificatesDescriptor,Nest.IGetCertificatesRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ssl.certificates</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetCertificates(Nest.IGetCertificatesRequest)">
      <summary>
        <c>GET</c> request to the <c>ssl.certificates</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SecurityApi.SecurityNamespace.GetCertificatesAsync(Nest.IGetCertificatesRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>ssl.certificates</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html</a></summary>
    </member>
    <member name="T:Nest.Specification.SnapshotApi.SnapshotNamespace">
      <summary>
             Snapshot APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Snapshot" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Snapshot(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.SnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Snapshot(Nest.ISnapshotRequest)">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.SnapshotAsync(Nest.ISnapshotRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.CreateRepository(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.CreateRepositoryAsync(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.CreateRepository(Nest.ICreateRepositoryRequest)">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.CreateRepositoryAsync(Nest.ICreateRepositoryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>snapshot.create_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Delete(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.DeleteAsync(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Delete(Nest.IDeleteSnapshotRequest)">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.DeleteAsync(Nest.IDeleteSnapshotRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.DeleteRepository(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.DeleteRepositoryAsync(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.DeleteRepository(Nest.IDeleteRepositoryRequest)">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.DeleteRepositoryAsync(Nest.IDeleteRepositoryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>snapshot.delete_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Get(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
      <summary>
        <c>GET</c> request to the <c>snapshot.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.GetAsync(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>snapshot.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Get(Nest.IGetSnapshotRequest)">
      <summary>
        <c>GET</c> request to the <c>snapshot.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.GetAsync(Nest.IGetSnapshotRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>snapshot.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.GetRepository(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
      <summary>
        <c>GET</c> request to the <c>snapshot.get_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.GetRepositoryAsync(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>snapshot.get_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.GetRepository(Nest.IGetRepositoryRequest)">
      <summary>
        <c>GET</c> request to the <c>snapshot.get_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.GetRepositoryAsync(Nest.IGetRepositoryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>snapshot.get_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Restore(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
      <summary>
        <c>POST</c> request to the <c>snapshot.restore</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.RestoreAsync(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>snapshot.restore</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Restore(Nest.IRestoreRequest)">
      <summary>
        <c>POST</c> request to the <c>snapshot.restore</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.RestoreAsync(Nest.IRestoreRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>snapshot.restore</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Status(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
      <summary>
        <c>GET</c> request to the <c>snapshot.status</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.StatusAsync(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>snapshot.status</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.Status(Nest.ISnapshotStatusRequest)">
      <summary>
        <c>GET</c> request to the <c>snapshot.status</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.StatusAsync(Nest.ISnapshotStatusRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>snapshot.status</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.VerifyRepository(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
      <summary>
        <c>POST</c> request to the <c>snapshot.verify_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.VerifyRepositoryAsync(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>snapshot.verify_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.VerifyRepository(Nest.IVerifyRepositoryRequest)">
      <summary>
        <c>POST</c> request to the <c>snapshot.verify_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="M:Nest.Specification.SnapshotApi.SnapshotNamespace.VerifyRepositoryAsync(Nest.IVerifyRepositoryRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>snapshot.verify_repository</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</a></summary>
    </member>
    <member name="T:Nest.Specification.SqlApi.SqlNamespace">
      <summary>
             Sql APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Sql" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.ClearCursor(System.Func{Nest.ClearSqlCursorDescriptor,Nest.IClearSqlCursorRequest})">
      <summary>
        <c>POST</c> request to the <c>sql.clear_cursor</c> API, read more about this API online:
            <para></para><a href="Clear SQL cursor">Clear SQL cursor</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.ClearCursorAsync(System.Func{Nest.ClearSqlCursorDescriptor,Nest.IClearSqlCursorRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>sql.clear_cursor</c> API, read more about this API online:
            <para></para><a href="Clear SQL cursor">Clear SQL cursor</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.ClearCursor(Nest.IClearSqlCursorRequest)">
      <summary>
        <c>POST</c> request to the <c>sql.clear_cursor</c> API, read more about this API online:
            <para></para><a href="Clear SQL cursor">Clear SQL cursor</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.ClearCursorAsync(Nest.IClearSqlCursorRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>sql.clear_cursor</c> API, read more about this API online:
            <para></para><a href="Clear SQL cursor">Clear SQL cursor</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.Query(System.Func{Nest.QuerySqlDescriptor,Nest.IQuerySqlRequest})">
      <summary>
        <c>POST</c> request to the <c>sql.query</c> API, read more about this API online:
            <para></para><a href="Execute SQL">Execute SQL</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.QueryAsync(System.Func{Nest.QuerySqlDescriptor,Nest.IQuerySqlRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>sql.query</c> API, read more about this API online:
            <para></para><a href="Execute SQL">Execute SQL</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.Query(Nest.IQuerySqlRequest)">
      <summary>
        <c>POST</c> request to the <c>sql.query</c> API, read more about this API online:
            <para></para><a href="Execute SQL">Execute SQL</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.QueryAsync(Nest.IQuerySqlRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>sql.query</c> API, read more about this API online:
            <para></para><a href="Execute SQL">Execute SQL</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.Translate(System.Func{Nest.TranslateSqlDescriptor,Nest.ITranslateSqlRequest})">
      <summary>
        <c>POST</c> request to the <c>sql.translate</c> API, read more about this API online:
            <para></para><a href="Translate SQL into Elasticsearch queries">Translate SQL into Elasticsearch queries</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.TranslateAsync(System.Func{Nest.TranslateSqlDescriptor,Nest.ITranslateSqlRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>sql.translate</c> API, read more about this API online:
            <para></para><a href="Translate SQL into Elasticsearch queries">Translate SQL into Elasticsearch queries</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.Translate(Nest.ITranslateSqlRequest)">
      <summary>
        <c>POST</c> request to the <c>sql.translate</c> API, read more about this API online:
            <para></para><a href="Translate SQL into Elasticsearch queries">Translate SQL into Elasticsearch queries</a></summary>
    </member>
    <member name="M:Nest.Specification.SqlApi.SqlNamespace.TranslateAsync(Nest.ITranslateSqlRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>sql.translate</c> API, read more about this API online:
            <para></para><a href="Translate SQL into Elasticsearch queries">Translate SQL into Elasticsearch queries</a></summary>
    </member>
    <member name="T:Nest.Specification.TasksApi.TasksNamespace">
      <summary>
             Tasks APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Tasks" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.Cancel(System.Func{Nest.CancelTasksDescriptor,Nest.ICancelTasksRequest})">
      <summary>
        <c>POST</c> request to the <c>tasks.cancel</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.CancelAsync(System.Func{Nest.CancelTasksDescriptor,Nest.ICancelTasksRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>tasks.cancel</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.Cancel(Nest.ICancelTasksRequest)">
      <summary>
        <c>POST</c> request to the <c>tasks.cancel</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.CancelAsync(Nest.ICancelTasksRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>tasks.cancel</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.GetTask(Nest.TaskId,System.Func{Nest.GetTaskDescriptor,Nest.IGetTaskRequest})">
      <summary>
        <c>GET</c> request to the <c>tasks.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.GetTaskAsync(Nest.TaskId,System.Func{Nest.GetTaskDescriptor,Nest.IGetTaskRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>tasks.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.GetTask(Nest.IGetTaskRequest)">
      <summary>
        <c>GET</c> request to the <c>tasks.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.GetTaskAsync(Nest.IGetTaskRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>tasks.get</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.List(System.Func{Nest.ListTasksDescriptor,Nest.IListTasksRequest})">
      <summary>
        <c>GET</c> request to the <c>tasks.list</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.ListAsync(System.Func{Nest.ListTasksDescriptor,Nest.IListTasksRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>tasks.list</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.List(Nest.IListTasksRequest)">
      <summary>
        <c>GET</c> request to the <c>tasks.list</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="M:Nest.Specification.TasksApi.TasksNamespace.ListAsync(Nest.IListTasksRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>tasks.list</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html">http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html</a></summary>
    </member>
    <member name="T:Nest.Specification.WatcherApi.WatcherNamespace">
      <summary>
             Watcher APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.Watcher" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Acknowledge(Nest.Id,System.Func{Nest.AcknowledgeWatchDescriptor,Nest.IAcknowledgeWatchRequest})">
      <summary>
        <c>PUT</c> request to the <c>watcher.ack_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.AcknowledgeAsync(Nest.Id,System.Func{Nest.AcknowledgeWatchDescriptor,Nest.IAcknowledgeWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.ack_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Acknowledge(Nest.IAcknowledgeWatchRequest)">
      <summary>
        <c>PUT</c> request to the <c>watcher.ack_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.AcknowledgeAsync(Nest.IAcknowledgeWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.ack_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Activate(Nest.Id,System.Func{Nest.ActivateWatchDescriptor,Nest.IActivateWatchRequest})">
      <summary>
        <c>PUT</c> request to the <c>watcher.activate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.ActivateAsync(Nest.Id,System.Func{Nest.ActivateWatchDescriptor,Nest.IActivateWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.activate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Activate(Nest.IActivateWatchRequest)">
      <summary>
        <c>PUT</c> request to the <c>watcher.activate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.ActivateAsync(Nest.IActivateWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.activate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Deactivate(Nest.Id,System.Func{Nest.DeactivateWatchDescriptor,Nest.IDeactivateWatchRequest})">
      <summary>
        <c>PUT</c> request to the <c>watcher.deactivate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.DeactivateAsync(Nest.Id,System.Func{Nest.DeactivateWatchDescriptor,Nest.IDeactivateWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.deactivate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Deactivate(Nest.IDeactivateWatchRequest)">
      <summary>
        <c>PUT</c> request to the <c>watcher.deactivate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.DeactivateAsync(Nest.IDeactivateWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.deactivate_watch</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Delete(Nest.Id,System.Func{Nest.DeleteWatchDescriptor,Nest.IDeleteWatchRequest})">
      <summary>
        <c>DELETE</c> request to the <c>watcher.delete_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.DeleteAsync(Nest.Id,System.Func{Nest.DeleteWatchDescriptor,Nest.IDeleteWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>watcher.delete_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Delete(Nest.IDeleteWatchRequest)">
      <summary>
        <c>DELETE</c> request to the <c>watcher.delete_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.DeleteAsync(Nest.IDeleteWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>DELETE</c> request to the <c>watcher.delete_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Execute(System.Func{Nest.ExecuteWatchDescriptor,Nest.IExecuteWatchRequest})">
      <summary>
        <c>PUT</c> request to the <c>watcher.execute_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.ExecuteAsync(System.Func{Nest.ExecuteWatchDescriptor,Nest.IExecuteWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.execute_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Execute(Nest.IExecuteWatchRequest)">
      <summary>
        <c>PUT</c> request to the <c>watcher.execute_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.ExecuteAsync(Nest.IExecuteWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.execute_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Get(Nest.Id,System.Func{Nest.GetWatchDescriptor,Nest.IGetWatchRequest})">
      <summary>
        <c>GET</c> request to the <c>watcher.get_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.GetAsync(Nest.Id,System.Func{Nest.GetWatchDescriptor,Nest.IGetWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>watcher.get_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Get(Nest.IGetWatchRequest)">
      <summary>
        <c>GET</c> request to the <c>watcher.get_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.GetAsync(Nest.IGetWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>watcher.get_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Put(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest})">
      <summary>
        <c>PUT</c> request to the <c>watcher.put_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.PutAsync(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest},System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.put_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Put(Nest.IPutWatchRequest)">
      <summary>
        <c>PUT</c> request to the <c>watcher.put_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.PutAsync(Nest.IPutWatchRequest,System.Threading.CancellationToken)">
      <summary>
        <c>PUT</c> request to the <c>watcher.put_watch</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Start(System.Func{Nest.StartWatcherDescriptor,Nest.IStartWatcherRequest})">
      <summary>
        <c>POST</c> request to the <c>watcher.start</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.StartAsync(System.Func{Nest.StartWatcherDescriptor,Nest.IStartWatcherRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>watcher.start</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Start(Nest.IStartWatcherRequest)">
      <summary>
        <c>POST</c> request to the <c>watcher.start</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.StartAsync(Nest.IStartWatcherRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>watcher.start</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Stats(System.Func{Nest.WatcherStatsDescriptor,Nest.IWatcherStatsRequest})">
      <summary>
        <c>GET</c> request to the <c>watcher.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.StatsAsync(System.Func{Nest.WatcherStatsDescriptor,Nest.IWatcherStatsRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>watcher.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Stats(Nest.IWatcherStatsRequest)">
      <summary>
        <c>GET</c> request to the <c>watcher.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.StatsAsync(Nest.IWatcherStatsRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>watcher.stats</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Stop(System.Func{Nest.StopWatcherDescriptor,Nest.IStopWatcherRequest})">
      <summary>
        <c>POST</c> request to the <c>watcher.stop</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.StopAsync(System.Func{Nest.StopWatcherDescriptor,Nest.IStopWatcherRequest},System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>watcher.stop</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.Stop(Nest.IStopWatcherRequest)">
      <summary>
        <c>POST</c> request to the <c>watcher.stop</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</a></summary>
    </member>
    <member name="M:Nest.Specification.WatcherApi.WatcherNamespace.StopAsync(Nest.IStopWatcherRequest,System.Threading.CancellationToken)">
      <summary>
        <c>POST</c> request to the <c>watcher.stop</c> API, read more about this API online:
            <para></para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</a></summary>
    </member>
    <member name="T:Nest.Specification.XPackApi.XPackNamespace">
      <summary>
             XPack APIs.
             <para>Not intended to be instantiated directly. Use the <see cref="P:Nest.IElasticClient.XPack" /> property
             on <see cref="T:Nest.IElasticClient" />.
            </para></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.Info(System.Func{Nest.XPackInfoDescriptor,Nest.IXPackInfoRequest})">
      <summary>
        <c>GET</c> request to the <c>xpack.info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.InfoAsync(System.Func{Nest.XPackInfoDescriptor,Nest.IXPackInfoRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>xpack.info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.Info(Nest.IXPackInfoRequest)">
      <summary>
        <c>GET</c> request to the <c>xpack.info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.InfoAsync(Nest.IXPackInfoRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>xpack.info</c> API, read more about this API online:
            <para></para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.Usage(System.Func{Nest.XPackUsageDescriptor,Nest.IXPackUsageRequest})">
      <summary>
        <c>GET</c> request to the <c>xpack.usage</c> API, read more about this API online:
            <para></para><a href="Retrieve information about xpack features usage">Retrieve information about xpack features usage</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.UsageAsync(System.Func{Nest.XPackUsageDescriptor,Nest.IXPackUsageRequest},System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>xpack.usage</c> API, read more about this API online:
            <para></para><a href="Retrieve information about xpack features usage">Retrieve information about xpack features usage</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.Usage(Nest.IXPackUsageRequest)">
      <summary>
        <c>GET</c> request to the <c>xpack.usage</c> API, read more about this API online:
            <para></para><a href="Retrieve information about xpack features usage">Retrieve information about xpack features usage</a></summary>
    </member>
    <member name="M:Nest.Specification.XPackApi.XPackNamespace.UsageAsync(Nest.IXPackUsageRequest,System.Threading.CancellationToken)">
      <summary>
        <c>GET</c> request to the <c>xpack.usage</c> API, read more about this API online:
            <para></para><a href="Retrieve information about xpack features usage">Retrieve information about xpack features usage</a></summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.ExpungeDeletesAllowed">
      <summary>
            When expungeDeletes is called, we only merge away a segment if its delete percentage
            is over this threshold. Default is 10.
            </summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.FloorSegment">
      <summary>
            Segments smaller than this are "rounded up" to this size, i.e. treated as equal (floor) size for merge selection.
            This is to prevent frequent flushing of tiny segments, thus preventing a long tail in the index. Default is 2mb.
            </summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.MaxMergeAtOnce">
      <summary>
            Maximum number of segments to be merged at a time during "normal" merging. Default is 10.
            </summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.MaxMergeAtOnceExplicit">
      <summary>
            Maximum number of segments to be merged at a time, during optimize or expungeDeletes. Default is 30.
            </summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.MaxMergedSegment">
      <summary>
            Maximum sized segment to produce during normal merging (not explicit optimize).
            This setting is approximate: the estimate of the merged segment size is made by summing
            sizes of to-be-merged segments (compensating for percent deleted docs). Default is 5gb.
            </summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.ReclaimDeletesWeight">
      <summary>
            Controls how aggressively merges that reclaim more deletions are favored. Higher values
            favor selecting merges that reclaim deletions. A value of 0.0 means deletions don’t
            impact merge selection. Defaults to 2.0
            </summary>
    </member>
    <member name="P:Nest.IMergePolicySettings.SegmentsPerTier">
      <summary>
            Sets the allowed number of segments per tier. Smaller values mean more merging but fewer segments.
            Default is 10. Note, this value needs to be &gt;= than the max_merge_at_once otherwise you’ll force too
            many merges to occur.
            </summary>
    </member>
    <member name="P:Nest.MergePolicySettings.ExpungeDeletesAllowed">
      <summary>
            When expungeDeletes is called, we only merge away a segment if its delete percentage
            is over this threshold. Default is 10.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergePolicySettings.FloorSegment">
      <summary>
            Segments smaller than this are "rounded up" to this size, i.e. treated as equal (floor) size for merge selection.
            This is to prevent frequent flushing of tiny segments, thus preventing a long tail in the index. Default is 2mb.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergePolicySettings.MaxMergeAtOnce">
      <summary>
            Maximum number of segments to be merged at a time during "normal" merging. Default is 10.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergePolicySettings.MaxMergeAtOnceExplicit">
      <summary>
            Maximum number of segments to be merged at a time, during optimize or expungeDeletes. Default is 30.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergePolicySettings.MaxMergedSegment">
      <summary>
            Maximum sized segment to produce during normal merging (not explicit optimize).
            This setting is approximate: the estimate of the merged segment size is made by summing
            sizes of to-be-merged segments (compensating for percent deleted docs). Default is 5gb.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergePolicySettings.ReclaimDeletesWeight">
      <summary>
            Controls how aggressively merges that reclaim more deletions are favored. Higher values
            favor selecting merges that reclaim deletions. A value of 0.0 means deletions don’t
            impact merge selection. Defaults to 2.0
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergePolicySettings.SegmentsPerTier">
      <summary>
            Sets the allowed number of segments per tier. Smaller values mean more merging but fewer segments.
            Default is 10. Note, this value needs to be &gt;= than the max_merge_at_once otherwise you’ll force too
            many merges to occur.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.ExpungeDeletesAllowed(System.Nullable{System.Int32})">
      <summary>
            When expungeDeletes is called, we only merge away a segment if its delete percentage
            is over this threshold. Default is 10.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.FloorSegment(System.String)">
      <summary>
            Segments smaller than this are "rounded up" to this size, i.e. treated as equal (floor) size for merge selection.
            This is to prevent frequent flushing of tiny segments, thus preventing a long tail in the index. Default is 2mb.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergeAtOnce(System.Nullable{System.Int32})">
      <summary>
            Maximum number of segments to be merged at a time during "normal" merging. Default is 10.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergeAtOnceExplicit(System.Nullable{System.Int32})">
      <summary>
            Maximum number of segments to be merged at a time, during optimize or expungeDeletes. Default is 30.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergedSegement(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.ReclaimDeletesWeight(System.Nullable{System.Double})">
      <summary>
            Controls how aggressively merges that reclaim more deletions are favored. Higher values
            favor selecting merges that reclaim deletions. A value of 0.0 means deletions don’t
            impact merge selection. Defaults to 2.0
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergePolicySettingsDescriptor.SegmentsPerTier(System.Nullable{System.Int32})">
      <summary>
            Sets the allowed number of segments per tier. Smaller values mean more merging but fewer segments.
            Default is 10. Note, this value needs to be &gt;= than the max_merge_at_once otherwise you’ll force too
            many merges to occur.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IMergeSchedulerSettings.AutoThrottle">
      <summary>
            If this is true (the default), then the merge scheduler will rate-limit IO (writes) for merges to an
            adaptive value depending on how many merges are requested over time. An application with a low indexing rate
            that unluckily suddenly requires a large merge will see that merge aggressively throttled,
            while an application doing heavy indexing will see the throttle move higher to allow merges to keep
            up with ongoing indexing.
            </summary>
    </member>
    <member name="P:Nest.IMergeSchedulerSettings.MaxThreadCount">
      <summary>
            The maximum number of threads that may be merging at once. Defaults to
            <pre>Math.max(1, Math.min(4, Runtime.getRuntime().availableProcessors() / 2))</pre>
            which works well for a good solid-state-disk (SSD). If your index is on spinning platter drives instead,
            decrease this to 1.
            </summary>
    </member>
    <member name="P:Nest.MergeSchedulerSettings.AutoThrottle">
      <summary>
            If this is true (the default), then the merge scheduler will rate-limit IO (writes) for merges to an
            adaptive value depending on how many merges are requested over time. An application with a low indexing rate
            that unluckily suddenly requires a large merge will see that merge aggressively throttled,
            while an application doing heavy indexing will see the throttle move higher to allow merges to keep
            up with ongoing indexing.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergeSchedulerSettings.MaxThreadCount">
      <summary>
            The maximum number of threads that may be merging at once. Defaults to
            <pre>Math.max(1, Math.min(4, Runtime.getRuntime().availableProcessors() / 2))</pre>
            which works well for a good solid-state-disk (SSD). If your index is on spinning platter drives instead,
            decrease this to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergeSchedulerSettingsDescriptor.AutoThrottle(System.Nullable{System.Boolean})">
      <summary>
            If this is true (the default), then the merge scheduler will rate-limit IO (writes) for merges to an
            adaptive value depending on how many merges are requested over time. An application with a low indexing rate
            that unluckily suddenly requires a large merge will see that merge aggressively throttled,
            while an application doing heavy indexing will see the throttle move higher to allow merges to keep
            up with ongoing indexing.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MergeSchedulerSettingsDescriptor.MaxThreadCount(System.Nullable{System.Int32})">
      <summary>
            The maximum number of threads that may be merging at once. Defaults to
            <pre>Math.max(1, Math.min(4, Runtime.getRuntime().availableProcessors() / 2))</pre>
            which works well for a good solid-state-disk (SSD). If your index is on spinning platter drives instead,
            decrease this to 1.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MergeSettings.Policy">
      <inheritdoc />
    </member>
    <member name="P:Nest.MergeSettings.Scheduler">
      <inheritdoc />
    </member>
    <member name="M:Nest.MergeSettingsDescriptor.Policy(System.Func{Nest.MergePolicySettingsDescriptor,Nest.IMergePolicySettings})">
      <inheritdoc />
    </member>
    <member name="M:Nest.MergeSettingsDescriptor.Scheduler(System.Func{Nest.MergeSchedulerSettingsDescriptor,Nest.IMergeSchedulerSettings})">
      <inheritdoc />
    </member>
    <member name="P:Nest.IQueriesCacheSettings.Enabled">
      <summary>
            Whether the query cache is enabled. <c>True</c> by default.
            </summary>
    </member>
    <member name="M:Nest.QueriesCacheSettingsDescriptor.Enabled(System.Nullable{System.Boolean})">
      <summary>
            Whether the query cache is enabled. <c>True</c> by default.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.QueriesSettingsDescriptor.Cache(System.Func{Nest.QueriesCacheSettingsDescriptor,Nest.IQueriesCacheSettings})">
      <inheritdoc />
    </member>
    <member name="P:Nest.AutoExpandReplicas.Enabled">
      <summary>
            Whether auto expand replicas is enabled
            </summary>
    </member>
    <member name="P:Nest.AutoExpandReplicas.MaxReplicas">
      <summary>
            The upper bound of replicas. Can be an integer value or a string value of "all"
            </summary>
    </member>
    <member name="P:Nest.AutoExpandReplicas.MinReplicas">
      <summary>
            The lower bound of replicas
            </summary>
    </member>
    <member name="M:Nest.AutoExpandReplicas.Create(System.Int32,System.Int32)">
      <summary>
            Creates an <see cref="T:Nest.AutoExpandReplicas" /> with the specified lower and upper bounds of replicas
            </summary>
    </member>
    <member name="M:Nest.AutoExpandReplicas.Create(System.Int32)">
      <summary>
            Creates an <see cref="T:Nest.AutoExpandReplicas" /> with the specified lower bound of replicas and an
            "all" upper bound of replicas
            </summary>
    </member>
    <member name="M:Nest.AutoExpandReplicas.Create(System.String)">
      <summary>
            Creates an <see cref="T:Nest.AutoExpandReplicas" /> with the specified lower and upper bounds of replicas.
            </summary>
      <example>0-5</example>
      <example>0-all</example>
    </member>
    <member name="T:Nest.IDynamicIndexSettings">
      <summary>
            Dynamic index settings
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.Analysis">
      <summary>
            Configure analysis
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.AutoExpandReplicas">
      <summary>
            Auto-expand the number of replicas based on the number of available nodes.
             Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all). Defaults to false (i.e. disabled).
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.BlocksMetadata">
      <summary>
            Set to true to disable index metadata reads and writes.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.BlocksRead">
      <summary>
            Set to true to disable read operations against the index.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.BlocksReadOnly">
      <summary>
            Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.BlocksWrite">
      <summary>
            Set to true to disable write operations against the index.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.Merge">
      <summary>
            All of the settings exposed in the merge module are expert only and may be obsoleted in the future at any time!
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.NumberOfReplicas">
      <summary>
            The number of replicas each primary shard has. Defaults to 1.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.Priority">
      <summary>
            Unallocated shards are recovered in order of priority when set
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.RecoveryInitialShards">
      <summary>
            A primary shard is only recovered only if there are
            enough nodes available to allocate sufficient replicas to form a quorum.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.RefreshInterval">
      <summary>
            How often to perform a refresh operation, which makes recent changes to the index visible to search.
            Defaults to 1s. Can be set to -1 to disable refresh.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.RequestsCacheEnabled">
      <summary>
            Enables the shard-level request cache. Not enabled by default.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.RoutingAllocationTotalShardsPerNode">
      <summary>
            The maximum number of shards (replicas and primaries) that will be allocated to a single node. Defaults to unbounded.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.Similarity">
      <summary>
            Configure similarity
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.SlowLog">
      <summary>
            Configure logging thresholds and levels in Elasticsearch for search/fetch and indexing
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.Translog">
      <summary>
            Configure translog settings. This should only be used by experts who know what they're doing
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.UnassignedNodeLeftDelayedTimeout">
      <summary>
            The allocation of replica shards which become unassigned because a node has left can be
            delayed with this dynamic setting, which defaults to 1m.
            </summary>
    </member>
    <member name="P:Nest.IDynamicIndexSettings.DefaultPipeline">
      <summary>
            The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and
            the pipeline does not exist. The default may be overridden using the pipeline parameter.
            The special pipeline name _none indicates no ingest pipeline should be run.`
            </summary>
    </member>
    <member name="T:Nest.DynamicIndexSettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicIndexSettings.Analysis">
      <summary>
            Configure analysis
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Analysis" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.AutoExpandReplicas">
      <summary>
            Auto-expand the number of replicas based on the number of available nodes.
             Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all). Defaults to false (i.e. disabled).
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.AutoExpandReplicas" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.BlocksMetadata">
      <summary>
            Set to true to disable index metadata reads and writes.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksMetadata" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.BlocksRead">
      <summary>
            Set to true to disable read operations against the index.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksRead" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.BlocksReadOnly">
      <summary>
            Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksReadOnly" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.BlocksWrite">
      <summary>
            Set to true to disable write operations against the index.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksWrite" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.Merge">
      <summary>
            All of the settings exposed in the merge module are expert only and may be obsoleted in the future at any time!
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Merge" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.NumberOfReplicas">
      <summary>
            The number of replicas each primary shard has. Defaults to 1.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.NumberOfReplicas" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.Priority">
      <summary>
            Unallocated shards are recovered in order of priority when set
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Priority" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.RecoveryInitialShards">
      <summary>
            A primary shard is only recovered only if there are
            enough nodes available to allocate sufficient replicas to form a quorum.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RecoveryInitialShards" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.RefreshInterval">
      <summary>
            How often to perform a refresh operation, which makes recent changes to the index visible to search.
            Defaults to 1s. Can be set to -1 to disable refresh.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RefreshInterval" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.RequestsCacheEnabled">
      <summary>
            Enables the shard-level request cache. Not enabled by default.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RequestsCacheEnabled" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.RoutingAllocationTotalShardsPerNode">
      <summary>
            The maximum number of shards (replicas and primaries) that will be allocated to a single node. Defaults to unbounded.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RoutingAllocationTotalShardsPerNode" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.Similarity">
      <summary>
            Configure similarity
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Similarity" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.SlowLog">
      <summary>
            Configure logging thresholds and levels in Elasticsearch for search/fetch and indexing
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.SlowLog" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.Translog">
      <summary>
            Configure translog settings. This should only be used by experts who know what they're doing
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Translog" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.UnassignedNodeLeftDelayedTimeout">
      <summary>
            The allocation of replica shards which become unassigned because a node has left can be
            delayed with this dynamic setting, which defaults to 1m.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.UnassignedNodeLeftDelayedTimeout" />
    </member>
    <member name="P:Nest.DynamicIndexSettings.DefaultPipeline">
      <summary>
            The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and
            the pipeline does not exist. The default may be overridden using the pipeline parameter.
            The special pipeline name _none indicates no ingest pipeline should be run.`
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.DefaultPipeline" />
    </member>
    <member name="M:Nest.DynamicIndexSettings.Add(System.String,System.Object)">
      <summary> Add any setting to the index </summary>
    </member>
    <member name="T:Nest.DynamicIndexSettingsDescriptor">
      <inheritdoc cref="T:Nest.IDynamicIndexSettings" />
    </member>
    <member name="T:Nest.DynamicIndexSettingsDescriptorBase`2">
      <summary>Base descriptor implementation for dynamic index settings</summary>
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Setting(System.String,System.Object)">
      <inheritdoc cref="M:Nest.DynamicIndexSettings.Add(System.String,System.Object)" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.NumberOfReplicas(System.Nullable{System.Int32})">
      <summary>
            The number of replicas each primary shard has. Defaults to 1.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.NumberOfReplicas" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.AutoExpandReplicas(Nest.AutoExpandReplicas)">
      <summary>
            Auto-expand the number of replicas based on the number of available nodes.
             Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all). Defaults to false (i.e. disabled).
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.AutoExpandReplicas" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.DefaultPipeline(System.String)">
      <summary>
            The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and
            the pipeline does not exist. The default may be overridden using the pipeline parameter.
            The special pipeline name _none indicates no ingest pipeline should be run.`
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.DefaultPipeline" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksMetadata(System.Nullable{System.Boolean})">
      <summary>
            Set to true to disable index metadata reads and writes.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksMetadata" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksRead(System.Nullable{System.Boolean})">
      <summary>
            Set to true to disable read operations against the index.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksRead" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksReadOnly(System.Nullable{System.Boolean})">
      <summary>
            Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksReadOnly" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksWrite(System.Nullable{System.Boolean})">
      <summary>
            Set to true to disable write operations against the index.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.BlocksWrite" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Priority(System.Nullable{System.Int32})">
      <summary>
            Unallocated shards are recovered in order of priority when set
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Priority" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Merge(System.Func{Nest.MergeSettingsDescriptor,Nest.IMergeSettings})">
      <summary>
            All of the settings exposed in the merge module are expert only and may be obsoleted in the future at any time!
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Merge" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RecoveryInitialShards(Nest.Union{System.Int32,Nest.RecoveryInitialShards})">
      <summary>
            A primary shard is only recovered only if there are
            enough nodes available to allocate sufficient replicas to form a quorum.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RecoveryInitialShards" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RequestsCacheEnabled(System.Nullable{System.Boolean})">
      <summary>
            Enables the shard-level request cache. Not enabled by default.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RequestsCacheEnabled" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RefreshInterval(Nest.Time)">
      <summary>
            How often to perform a refresh operation, which makes recent changes to the index visible to search.
            Defaults to 1s. Can be set to -1 to disable refresh.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RefreshInterval" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RoutingAllocationTotalShardsPerNode(System.Nullable{System.Int32})">
      <summary>
            The maximum number of shards (replicas and primaries) that will be allocated to a single node. Defaults to unbounded.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.RoutingAllocationTotalShardsPerNode" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.SlowLog(System.Func{Nest.SlowLogDescriptor,Nest.ISlowLog})">
      <summary>
            Configure logging thresholds and levels in Elasticsearch for search/fetch and indexing
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.SlowLog" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Translog(System.Func{Nest.TranslogSettingsDescriptor,Nest.ITranslogSettings})">
      <summary>
            Configure translog settings. This should only be used by experts who know what they're doing
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Translog" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.UnassignedNodeLeftDelayedTimeout(Nest.Time)">
      <summary>
            The allocation of replica shards which become unassigned because a node has left can be
            delayed with this dynamic setting, which defaults to 1m.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.UnassignedNodeLeftDelayedTimeout" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Analysis(System.Func{Nest.AnalysisDescriptor,Nest.IAnalysis})">
      <summary>
            Configure analysis
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Analysis" />
    </member>
    <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Similarity(System.Func{Nest.SimilaritiesDescriptor,Nest.IPromise{Nest.ISimilarities}})">
      <summary>
            Configure similarity
            </summary>
      <inheritdoc cref="P:Nest.IDynamicIndexSettings.Similarity" />
    </member>
    <member name="T:Nest.FixedIndexSettings">
      <summary>
            const string collection of known Elasticsearch index settings that can only be provided at
            index creation time
            </summary>
    </member>
    <member name="F:Nest.FixedIndexSettings.PercolatorMapUnmappedFieldsAsText">
      <summary>
            If a field referred to in a percolator query does not exist,
            it will be handled as a default text field so that adding the percolator query doesn't fail.
            Defaults to <c>false</c></summary>
    </member>
    <member name="T:Nest.IIndexSettings">
      <summary>
            The settings for an index
            </summary>
    </member>
    <member name="P:Nest.IIndexSettings.FileSystemStorageImplementation">
      <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            <para>EXPERT MODE toggle</para></summary>
    </member>
    <member name="P:Nest.IIndexSettings.NumberOfRoutingShards">
      <summary>
            The number of routing shards. Used in conjunction with the Split Index API. If specified, must be
            greater than or equal to <see cref="P:Nest.IIndexSettings.NumberOfShards" /></summary>
    </member>
    <member name="P:Nest.IIndexSettings.NumberOfShards">
      <summary>
            The number of primary shards that an index should have. Defaults to 1.
            This setting can only be set at index creation time. It cannot be changed on a closed index.
            </summary>
    </member>
    <member name="P:Nest.IIndexSettings.Queries">
      <summary> Settings associated with queries. </summary>
    </member>
    <member name="P:Nest.IIndexSettings.RoutingPartitionSize">
      <summary>
            By defaulting, routing resolves to a single shard. Use this settings to have it resolve to a set of shards instead.
            This mitigates creating hotspots and very large shards if you have a few routing keys generating the significant data.
            </summary>
    </member>
    <member name="P:Nest.IIndexSettings.Sorting">
      <summary>
             Settings associated with index sorting.
            https://www.elastic.co/guide/en/elasticsearch/reference/6.0/index-modules-index-sorting.html
            </summary>
    </member>
    <member name="P:Nest.IIndexSettings.SoftDeletes">
      <summary> Soft delete settings for the index </summary>
    </member>
    <member name="T:Nest.IndexSettings">
      <inheritdoc cref="T:Nest.IIndexSettings" />
    </member>
    <member name="P:Nest.IndexSettings.FileSystemStorageImplementation">
      <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            <para>EXPERT MODE toggle</para></summary>
      <inheritdoc cref="P:Nest.IIndexSettings.FileSystemStorageImplementation" />
    </member>
    <member name="P:Nest.IndexSettings.NumberOfRoutingShards">
      <summary>
            The number of routing shards. Used in conjunction with the Split Index API. If specified, must be
            greater than or equal to <see cref="P:Nest.IIndexSettings.NumberOfShards" /></summary>
      <inheritdoc cref="P:Nest.IIndexSettings.NumberOfRoutingShards" />
    </member>
    <member name="P:Nest.IndexSettings.NumberOfShards">
      <summary>
            The number of primary shards that an index should have. Defaults to 1.
            This setting can only be set at index creation time. It cannot be changed on a closed index.
            </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.NumberOfShards" />
    </member>
    <member name="P:Nest.IndexSettings.Queries">
      <summary> Settings associated with queries. </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.Queries" />
    </member>
    <member name="P:Nest.IndexSettings.RoutingPartitionSize">
      <summary>
            By defaulting, routing resolves to a single shard. Use this settings to have it resolve to a set of shards instead.
            This mitigates creating hotspots and very large shards if you have a few routing keys generating the significant data.
            </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.RoutingPartitionSize" />
    </member>
    <member name="P:Nest.IndexSettings.Sorting">
      <summary>
             Settings associated with index sorting.
            https://www.elastic.co/guide/en/elasticsearch/reference/6.0/index-modules-index-sorting.html
            </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.Sorting" />
    </member>
    <member name="P:Nest.IndexSettings.SoftDeletes">
      <summary> Soft delete settings for the index </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IndexSettingsDescriptor">
      <inheritdoc cref="T:Nest.IIndexSettings" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.NumberOfShards(System.Nullable{System.Int32})">
      <summary>
            The number of primary shards that an index should have. Defaults to 1.
            This setting can only be set at index creation time. It cannot be changed on a closed index.
            </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.NumberOfShards" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.NumberOfRoutingShards(System.Nullable{System.Int32})">
      <summary>
            The number of routing shards. Used in conjunction with the Split Index API. If specified, must be
            greater than or equal to <see cref="P:Nest.IIndexSettings.NumberOfShards" /></summary>
      <inheritdoc cref="P:Nest.IIndexSettings.NumberOfRoutingShards" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.RoutingPartitionSize(System.Nullable{System.Int32})">
      <summary>
            By defaulting, routing resolves to a single shard. Use this settings to have it resolve to a set of shards instead.
            This mitigates creating hotspots and very large shards if you have a few routing keys generating the significant data.
            </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.RoutingPartitionSize" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.FileSystemStorageImplementation(System.Nullable{Nest.FileSystemStorageImplementation})">
      <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            <para>EXPERT MODE toggle</para></summary>
      <inheritdoc cref="P:Nest.IIndexSettings.FileSystemStorageImplementation" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.Queries(System.Func{Nest.QueriesSettingsDescriptor,Nest.IQueriesSettings})">
      <summary> Settings associated with queries. </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.Queries" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.Sorting``1(System.Func{Nest.SortingSettingsDescriptor{``0},Nest.ISortingSettings})">
      <inheritdoc cref="P:Nest.IIndexSettings.Sorting" />
    </member>
    <member name="M:Nest.IndexSettingsDescriptor.SoftDeletes(System.Func{Nest.SoftDeleteSettingsDescriptor,Nest.ISoftDeleteSettings})">
      <summary> Soft delete settings for the index </summary>
      <inheritdoc cref="P:Nest.IIndexSettings.SoftDeletes" />
    </member>
    <member name="T:Nest.UpdatableIndexSettings">
      <summary>
            Collection of Elasticsearch index settings that can be dynamically updated
            </summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MappingNestedFieldsLimit">
      <summary>limits the number of unique nested types per index.</summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MappingNestedObjectsLimit">
      <summary>
             limits the number of nested objects that a single document may contain across all nested types,
            in order to prevent out of memory errors when a document contains too many nested objects.
            </summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MaxNGramDiff">
      <summary>the maximum difference between min_gram and max_gram for <see cref="T:Nest.INGramTokenizer" /> and <see cref="T:Nest.INGramTokenFilter" /></summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MaxResultWindow">
      <summary>maximum value of from + size on a query</summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MaxInnerResultWindow">
      <summary>maximum value of from + size on an individual inner hit definition or top hits aggregation</summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MaxScriptFields">
      <summary>maximum value of allowed script_fields that can be retrieved per search request.</summary>
    </member>
    <member name="F:Nest.UpdatableIndexSettings.MaxShingleDiff">
      <summary>the maximum difference between min_shingle_size and max_shingle_size for <see cref="T:Nest.IShingleTokenFilter" /></summary>
    </member>
    <member name="P:Nest.SlowLog.Indexing">
      <inheritdoc />
    </member>
    <member name="P:Nest.SlowLog.Search">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogDescriptor.Search(System.Func{Nest.SlowLogSearchDescriptor,Nest.ISlowLogSearch})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogDescriptor.Indexing(System.Func{Nest.SlowLogIndexingDescriptor,Nest.ISlowLogIndexing})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogIndexingDescriptor.LogLevel(System.Nullable{Nest.LogLevel})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogIndexingDescriptor.Source(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdDebug(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdInfo(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdTrace(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdWarn(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchDescriptor.LogLevel(System.Nullable{Nest.LogLevel})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchDescriptor.Query(System.Func{Nest.SlowLogSearchQueryDescriptor,Nest.ISlowLogSearchQuery})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchDescriptor.Fetch(System.Func{Nest.SlowLogSearchFetchDescriptor,Nest.ISlowLogSearchFetch})">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdDebug(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdInfo(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdTrace(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdWarn(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdDebug(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdInfo(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdTrace(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdWarn(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="P:Nest.ISoftDeleteRetentionSettings.Operations">
      <summary> How many operations should be retained </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SoftDeleteRetentionSettings.Operations" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.SoftDeleteRetentionSettingsDescriptor.Operations(System.Nullable{System.Int64})" -->
    <member name="P:Nest.ISoftDeleteSettings.Enabled">
      <summary> Enables soft deletes on the index</summary>
    </member>
    <member name="P:Nest.ISoftDeleteSettings.Retention">
      <summary> Configure the retention of soft deletes on the index</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SoftDeleteSettings.Retention" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.SoftDeleteSettings.Enabled" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.SoftDeleteSettingsDescriptor.Retention(System.Func{Nest.SoftDeleteRetentionSettingsDescriptor,Nest.ISoftDeleteRetentionSettings})" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.SoftDeleteSettingsDescriptor.Enabled(System.Nullable{System.Boolean})" -->
    <member name="P:Nest.ISortingSettings.Fields">
      <summary>
            The list of fields used to sort the index. Only boolean, numeric, date and keyword fields with doc_values are allowed
            here.
            </summary>
    </member>
    <member name="P:Nest.ISortingSettings.Missing">
      <summary>
            The missing parameter specifies how docs which are missing the field should be treated. The missing value can have the
            following values:
            <see cref="F:Nest.IndexSortMissing.Last" />: Documents without value for the field are sorted last.
            <see cref="F:Nest.IndexSortMissing.First" />: Documents without value for the field are sorted first.
            </summary>
    </member>
    <member name="P:Nest.ISortingSettings.Mode">
      <summary>
            The mode option controls what value, from a multi-value field, is picked to sort the document.
            The mode option can have the following values:
            <see cref="F:Nest.IndexSortMode.Minimum" />: Pick the lowest value.
            <see cref="F:Nest.IndexSortMode.Maximum" />: Pick the highest value.
            </summary>
    </member>
    <member name="P:Nest.ISortingSettings.Order">
      <summary>
            The sort order to use for each field. The order option can have the following values:
            <see cref="F:Nest.IndexSortOrder.Ascending" /> and
            <see cref="F:Nest.IndexSortOrder.Descending" />.
            </summary>
    </member>
    <member name="P:Nest.SortingSettings.Fields">
      <summary>
            The list of fields used to sort the index. Only boolean, numeric, date and keyword fields with doc_values are allowed
            here.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SortingSettings.Missing">
      <summary>
            The missing parameter specifies how docs which are missing the field should be treated. The missing value can have the
            following values:
            <see cref="F:Nest.IndexSortMissing.Last" />: Documents without value for the field are sorted last.
            <see cref="F:Nest.IndexSortMissing.First" />: Documents without value for the field are sorted first.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SortingSettings.Mode">
      <summary>
            The mode option controls what value, from a multi-value field, is picked to sort the document.
            The mode option can have the following values:
            <see cref="F:Nest.IndexSortMode.Minimum" />: Pick the lowest value.
            <see cref="F:Nest.IndexSortMode.Maximum" />: Pick the highest value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SortingSettings.Order">
      <summary>
            The sort order to use for each field. The order option can have the following values:
            <see cref="F:Nest.IndexSortOrder.Ascending" /> and
            <see cref="F:Nest.IndexSortOrder.Descending" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.FileSystemStorageImplementation">
      <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            </summary>
    </member>
    <member name="F:Nest.FileSystemStorageImplementation.Simple">
      <summary>
            The Simple FS type is a straightforward implementation of file system storage (maps to
             Lucene SimpleFsDirectory) using a random access file. This implementation has poor
             concurrent performance (multiple threads will bottleneck). It is usually better to use
              the niofs when you need index persistence.
            </summary>
    </member>
    <member name="F:Nest.FileSystemStorageImplementation.NIO">
      <summary>
            The NIO FS type stores the shard index on the file system (maps to Lucene NIOFSDirectory)
            using NIO. It allows multiple threads to read from the same file concurrently. It is not
            recommended on Windows because of a bug in the SUN Java implementation.
            </summary>
    </member>
    <member name="F:Nest.FileSystemStorageImplementation.MMap">
      <summary>
            The MMap FS type stores the shard index on the file system (maps to Lucene MMapDirectory)
             by mapping a file into memory (mmap). Memory mapping uses up a portion of the virtual memory
              address space in your process equal to the size of the file being mapped. Before using this class,
              be sure you have allowed plenty of virtual address space.
            </summary>
    </member>
    <member name="F:Nest.FileSystemStorageImplementation.Default">
      <summary>
            The default type is a hybrid of NIO FS and MMapFS, which chooses the best file system for each
            type of file. Currently only the Lucene term dictionary and doc values files are memory mapped to
            reduce the impact on the operating system. All other files are opened using Lucene NIOFSDirectory.
            </summary>
    </member>
    <member name="P:Nest.ITranslogFlushSettings.Interval">
      <summary>
            How often to check if a flush is needed, randomized between
            the interval value and 2x the interval value. Defaults to 5s.
            </summary>
    </member>
    <member name="P:Nest.ITranslogFlushSettings.ThresholdPeriod">
      <summary>
            How long to wait before triggering a flush regardless of translog size. Defaults to 30m.
            </summary>
    </member>
    <member name="P:Nest.ITranslogFlushSettings.ThresholdSize">
      <summary>
            Once the translog hits this size, a flush will happen. Defaults to 512mb.
            </summary>
    </member>
    <member name="P:Nest.TranslogFlushSettings.Interval">
      <summary>
            How often to check if a flush is needed, randomized between
            the interval value and 2x the interval value. Defaults to 5s.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TranslogFlushSettings.ThresholdPeriod">
      <summary>
            How long to wait before triggering a flush regardless of translog size. Defaults to 30m.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TranslogFlushSettings.ThresholdSize">
      <summary>
            Once the translog hits this size, a flush will happen. Defaults to 512mb.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdSize(System.String)">
      <summary>
            Once the translog hits this size, a flush will happen. Defaults to 512mb.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdPeriod(Nest.Time)">
      <summary>
            How long to wait before triggering a flush regardless of translog size. Defaults to 30m.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TranslogFlushSettingsDescriptor.Interval(Nest.Time)">
      <summary>
            How often to check if a flush is needed, randomized between
            the interval value and 2x the interval value. Defaults to 5s.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ITranslogSettings.Durability">
      <summary>
            Whether or not to fsync and commit the translog after every index, delete, update, or bulk request
            </summary>
    </member>
    <member name="P:Nest.ITranslogSettings.Flush">
      <summary>
            Dynamically updatable flush settings
            </summary>
    </member>
    <member name="P:Nest.ITranslogSettings.SyncInterval">
      <summary>
            How often the translog is fsynced to disk and committed, regardless of write operations. Defaults to 5s.
            </summary>
    </member>
    <member name="P:Nest.TranslogSettings.Durability">
      <summary>
            Whether or not to fsync and commit the translog after every index, delete, update, or bulk request
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TranslogSettings.Flush">
      <summary>
            Dynamically updatable flush settings
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TranslogSettings.SyncInterval">
      <summary>
            How often the translog is fsynced to disk and committed, regardless of write operations. Defaults to 5s.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TranslogSettingsDescriptor.Flush(System.Func{Nest.TranslogFlushSettingsDescriptor,Nest.ITranslogFlushSettings})">
      <summary>
            Dynamically updatable flush settings
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TranslogSettingsDescriptor.Durability(System.Nullable{Nest.TranslogDurability})">
      <summary>
            Whether or not to fsync and commit the translog after every index, delete, update, or bulk request
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TranslogSettingsDescriptor.SyncInterval(Nest.Time)">
      <summary>
            How often the translog is fsynced to disk and committed, regardless of write operations. Defaults to 5s.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IBM25Similarity">
      <summary>
            BM25 Similarity. Introduced in Stephen E. Robertson, Steve Walker, Susan Jones, Micheline Hancock-Beaulieu,
            and Mike Gatford. Okapi at TREC-3. In Proceedings of the Third Text Retrieval Conference (TREC 1994). Gaithersburg,
            USA, November 1994.
            </summary>
    </member>
    <member name="P:Nest.IBM25Similarity.B">
      <summary>
            Controls to what degree document length normalizes tf values.
            </summary>
    </member>
    <member name="P:Nest.IBM25Similarity.DiscountOverlaps">
      <summary>
            Sets whether overlap tokens (Tokens with 0 position increment) are ignored when computing norm.
            </summary>
    </member>
    <member name="P:Nest.IBM25Similarity.K1">
      <summary>
            Controls non-linear term frequency normalization (saturation).
            </summary>
    </member>
    <member name="T:Nest.BM25Similarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.BM25Similarity.B">
      <summary>
            Controls to what degree document length normalizes tf values.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BM25Similarity.DiscountOverlaps">
      <summary>
            Sets whether overlap tokens (Tokens with 0 position increment) are ignored when computing norm.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BM25Similarity.K1">
      <summary>
            Controls non-linear term frequency normalization (saturation).
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.BM25SimilarityDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.BM25SimilarityDescriptor.DiscountOverlaps(System.Nullable{System.Boolean})">
      <summary>
            Sets whether overlap tokens (Tokens with 0 position increment) are ignored when computing norm.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.BM25SimilarityDescriptor.K1(System.Nullable{System.Double})">
      <summary>
            Controls non-linear term frequency normalization (saturation).
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.BM25SimilarityDescriptor.B(System.Nullable{System.Double})">
      <summary>
            Controls to what degree document length normalizes tf values.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ICustomSimilarity">
      <summary>
            A custom similarity
            </summary>
    </member>
    <member name="T:Nest.CustomSimilarity">
      <inheritdoc />
    </member>
    <member name="T:Nest.CustomSimilarityDescriptor">
      <inheritdoc />
    </member>
    <member name="T:Nest.DFIIndependenceMeasure">
      <summary>
        <see cref="T:Nest.IDFISimilarity" /> independence measure
            </summary>
    </member>
    <member name="T:Nest.IDFISimilarity">
      <summary>
            Similarity that implements the divergence from independence model
            </summary>
    </member>
    <member name="P:Nest.IDFISimilarity.IndependenceMeasure">
      <summary>
            The independence measure
            </summary>
    </member>
    <member name="T:Nest.DFISimilarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.DFISimilarity.IndependenceMeasure">
      <summary>
            The independence measure
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DFISimilarityDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.DFISimilarityDescriptor.IndependenceMeasure(System.Nullable{Nest.DFIIndependenceMeasure})">
      <summary>
            The independence measure
            </summary>
      <inheritdoc />
    </member>
    <member name="F:Nest.DFRAfterEffect.No">
      <summary>
            Implementation used when there is no aftereffect.
            </summary>
    </member>
    <member name="F:Nest.DFRAfterEffect.B">
      <summary>
            Model of the information gain based on the ratio of two Bernoulli processes.
            </summary>
    </member>
    <member name="F:Nest.DFRAfterEffect.L">
      <summary>
            Model of the information gain based on Laplace's law of succession.
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.BE">
      <summary>
            Limiting form of the Bose-Einstein model. The formula used in Lucene differs slightly from the one in the original paper: F is increased by
            tfn+1 and N is increased by F
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.D">
      <summary>
            Implements the approximation of the binomial model with the divergence for DFR.
            The formula used in Lucene differs slightly from the one in the original paper: to avoid underflow for small values of N and F, N is
            increased by 1 and F is always increased by tfn+1.
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.G">
      <summary>
            Geometric as limiting form of the Bose-Einstein model. The formula used in Lucene differs slightly from the one in the original paper: F is
            increased by 1 and N is increased by F.
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.IF">
      <summary>
            An approximation of the I(ne) model.
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.IN">
      <summary>
            The basic tf-idf model of randomness.
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.INE">
      <summary>
            Tf-idf model of randomness, based on a mixture of Poisson and inverse document frequency.
            </summary>
    </member>
    <member name="F:Nest.DFRBasicModel.P">
      <summary>
            Implements the Poisson approximation for the binomial model for DFR.
            </summary>
    </member>
    <member name="T:Nest.IDFRSimilarity">
      <summary>
            Implements the divergence from randomness (DFR) framework introduced in Gianni Amati and Cornelis Joost Van Rijsbergen.
            2002.
            Probabilistic models of information retrieval based on measuring the divergence from randomness. ACM Trans. Inf. Syst.
            20, 4 (October
            2002), 357-389.
            The DFR scoring formula is composed of three separate components: the basic model, the aftereffect and an additional
            normalization
            component,
            represented by the classes BasicModel, AfterEffect and Normalization, respectively.The names of these classes were
            chosen to match the
            names of their counterparts in the Terrier IR engine.
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.AfterEffect">
      <summary>
            The after effect
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.BasicModel">
      <summary>
            The basic model
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.Normalization">
      <summary>
            The normalization
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.NormalizationH1C">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.NormalizationH2C">
      <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.NormalizationH3C">
      <summary>
             Dirichlet Priors normalization
            </summary>
    </member>
    <member name="P:Nest.IDFRSimilarity.NormalizationZZ">
      <summary>
            Pareto-Zipf Normalization
            </summary>
    </member>
    <member name="T:Nest.DFRSimilarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.AfterEffect">
      <summary>
            The after effect
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.BasicModel">
      <summary>
            The basic model
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.Normalization">
      <summary>
            The normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.NormalizationH1C">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.NormalizationH2C">
      <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.NormalizationH3C">
      <summary>
             Dirichlet Priors normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DFRSimilarity.NormalizationZZ">
      <summary>
            Pareto-Zipf Normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DFRSimilarityDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.BasicModel(System.Nullable{Nest.DFRBasicModel})">
      <summary>
            The basic model
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.AfterEffect(System.Nullable{Nest.DFRAfterEffect})">
      <summary>
            The after effect
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.NoNormalization">
      <inheritdoc />
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH1(System.Nullable{System.Double})">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
      <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH2(System.Nullable{System.Double})">
      <summary>
            Normalization model in which the term frequency is inversely related to the length.
            </summary>
      <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH3(System.Nullable{System.Double})">
      <summary>
            Dirichlet Priors normalization
            </summary>
      <param name="mu">smoothing parameter μ.</param>
    </member>
    <member name="M:Nest.DFRSimilarityDescriptor.NormalizationZ(System.Nullable{System.Double})">
      <summary> Pareto-Zipf Normalization </summary>
      <param name="z">represents A/(A+1) where A measures the specificity of the language..</param>
    </member>
    <member name="F:Nest.IBLambda.DocumentFrequency">
      <summary>
            Nw/N or average number of documents where w occurs
            </summary>
    </member>
    <member name="F:Nest.IBLambda.TermFrequency">
      <summary>
            Fw/N or average number of occurrences of w in the collection
            </summary>
    </member>
    <member name="T:Nest.IIBSimilarity">
      <summary>
            Information based model similarity.
            The algorithm is based on the concept that the information content in any symbolic distribution sequence
            is primarily determined by the repetitive usage of its basic elements.
            For written texts this challenge would correspond to comparing the writing styles of different authors.
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.Distribution">
      <summary>
            The distribution
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.Lambda">
      <summary>
            The lambda
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.Normalization">
      <summary>
            The normalization
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.NormalizationH1C">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.NormalizationH2C">
      <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.NormalizationH3C">
      <summary>
             Dirichlet Priors normalization
            </summary>
    </member>
    <member name="P:Nest.IIBSimilarity.NormalizationZZ">
      <summary>
            Pareto-Zipf Normalization
            </summary>
    </member>
    <member name="T:Nest.IBSimilarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.Distribution">
      <summary>
            The distribution
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.Lambda">
      <summary>
            The lambda
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.Normalization">
      <summary>
            The normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.NormalizationH1C">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.NormalizationH2C">
      <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.NormalizationH3C">
      <summary>
             Dirichlet Priors normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IBSimilarity.NormalizationZZ">
      <summary>
            Pareto-Zipf Normalization
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IBSimilarityDescriptor">
      <inheritdoc cref="T:Nest.IIBSimilarity" />
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.Distribution(System.Nullable{Nest.IBDistribution})">
      <summary>
            The distribution
            </summary>
      <inheritdoc cref="P:Nest.IIBSimilarity.Distribution" />
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.Lambda(System.Nullable{Nest.IBLambda})">
      <summary>
            The lambda
            </summary>
      <inheritdoc cref="P:Nest.IIBSimilarity.Lambda" />
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.NoNormalization">
      <inheritdoc cref="P:Nest.IIBSimilarity.Normalization" />
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.NormalizationH1(System.Nullable{System.Double})">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
      <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.NormalizationH2(System.Nullable{System.Double})">
      <summary>
            Normalization model in which the term frequency is inversely related to the length.
            </summary>
      <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.NormalizationH3(System.Nullable{System.Double})">
      <summary>
            Dirichlet Priors normalization
            </summary>
      <param name="mu">smoothing parameter μ.</param>
    </member>
    <member name="M:Nest.IBSimilarityDescriptor.NormalizationZ(System.Nullable{System.Double})">
      <summary>
            Pareto-Zipf Normalization
            </summary>
      <param name="z">represents A/(A+1) where A measures the specificity of the language..</param>
    </member>
    <member name="T:Nest.ILMDirichletSimilarity">
      <summary>
            A similarity with Bayesian smoothing using Dirichlet priors.
            </summary>
    </member>
    <member name="P:Nest.ILMDirichletSimilarity.Mu">
      <summary>
            The mu parameter. Defaults to 2000.
            </summary>
    </member>
    <member name="T:Nest.LMDirichletSimilarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.LMDirichletSimilarity.Mu">
      <summary>
            The mu parameter. Defaults to 2000.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LMDirichletSimilarityDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.LMDirichletSimilarityDescriptor.Mu(System.Nullable{System.Int32})">
      <summary>
            The mu parameter. Defaults to 2000.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ILMJelinekMercerSimilarity">
      <summary>
            A similarity that attempts to capture important patterns in the text,
            while leaving out noise.
            </summary>
    </member>
    <member name="P:Nest.ILMJelinekMercerSimilarity.Lambda">
      <summary>
            The lambda parameter
            </summary>
    </member>
    <member name="T:Nest.LMJelinekMercerSimilarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.LMJelinekMercerSimilarity.Lambda">
      <summary>
            The lambda parameter
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LMJelinekMercerSimilarityDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.LMJelinekMercerSimilarityDescriptor.Lamdba(System.Nullable{System.Double})">
      <inheritdoc />
    </member>
    <member name="F:Nest.Normalization.No">
      <summary>
            Implementation used when there is no normalization.
            </summary>
    </member>
    <member name="F:Nest.Normalization.H1">
      <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
    </member>
    <member name="F:Nest.Normalization.H2">
      <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
    </member>
    <member name="F:Nest.Normalization.H3">
      <summary>
            Dirichlet Priors normalization
            </summary>
    </member>
    <member name="F:Nest.Normalization.Z">
      <summary>
            Pareto-Zipf Normalization
            </summary>
    </member>
    <member name="T:Nest.IScriptedSimilarity">
      <summary>
            A similarity that allows a script to be used in order to specify how scores should be computed.
            </summary>
      <remarks>
            Valid in Elasticsearch 6.1.0+
            </remarks>
    </member>
    <member name="P:Nest.IScriptedSimilarity.Script">
      <summary>
            Script to calculate similarity
            </summary>
    </member>
    <member name="T:Nest.ScriptedSimilarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.ScriptedSimilarity.Script">
      <summary>
            Script to calculate similarity
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ScriptedSimilarityDescriptor">
      <inheritdoc cref="T:Nest.IScriptedSimilarity" />
    </member>
    <member name="M:Nest.ScriptedSimilarityDescriptor.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            Script to calculate similarity
            </summary>
      <inheritdoc cref="P:Nest.IScriptedSimilarity.Script" />
    </member>
    <member name="M:Nest.Similarities.Add(System.String,Nest.ISimilarity)">
      <summary>
            Add an <see cref="T:Nest.ISimilarity" /></summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.BM25(System.String,System.Func{Nest.BM25SimilarityDescriptor,Nest.IBM25Similarity})">
      <summary>
            BM25 Similarity. Introduced in Stephen E. Robertson, Steve Walker, Susan Jones, Micheline Hancock-Beaulieu,
            and Mike Gatford. Okapi at TREC-3. In Proceedings of the Third Text Retrieval Conference (TREC 1994). Gaithersburg,
            USA, November 1994.
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.LMDirichlet(System.String,System.Func{Nest.LMDirichletSimilarityDescriptor,Nest.ILMDirichletSimilarity})">
      <summary>
            A similarity with Bayesian smoothing using Dirichlet priors.
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.LMJelinek(System.String,System.Func{Nest.LMJelinekMercerSimilarityDescriptor,Nest.ILMJelinekMercerSimilarity})">
      <summary>
            A similarity that attempts to capture important patterns in the text,
            while leaving out noise.
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.DFI(System.String,System.Func{Nest.DFISimilarityDescriptor,Nest.IDFISimilarity})">
      <summary>
            Similarity that implements the divergence from independence model
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.DFR(System.String,System.Func{Nest.DFRSimilarityDescriptor,Nest.IDFRSimilarity})">
      <summary>
            Implements the divergence from randomness (DFR) framework introduced in Gianni Amati and Cornelis Joost Van Rijsbergen.
            2002.
            Probabilistic models of information retrieval based on measuring the divergence from randomness. ACM Trans. Inf. Syst.
            20, 4 (October
            2002), 357-389.
            The DFR scoring formula is composed of three separate components: the basic model, the aftereffect and an additional
            normalization
            component,
            represented by the classes BasicModel, AfterEffect and Normalization, respectively.The names of these classes were
            chosen to match the
            names of their counterparts in the Terrier IR engine.
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.IB(System.String,System.Func{Nest.IBSimilarityDescriptor,Nest.IIBSimilarity})">
      <summary>
            Information based model similarity.
            The algorithm is based on the concept that the information content in any symbolic distribution sequence
            is primarily determined by the repetitive usage of its basic elements.
            For written texts this challenge would correspond to comparing the writing styles of different authors.
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.Custom(System.String,System.String,System.Func{Nest.CustomSimilarityDescriptor,Nest.IPromise{Nest.ICustomSimilarity}})">
      <summary>
            A custom similarity
            </summary>
    </member>
    <member name="M:Nest.SimilaritiesDescriptor.Scripted(System.String,System.Func{Nest.ScriptedSimilarityDescriptor,Nest.IScriptedSimilarity})">
      <summary>
            A similarity that allows a script to be used in order to specify how scores should be computed.
            </summary>
      <remarks>
            Valid in Elasticsearch 6.1.0+
            </remarks>
    </member>
    <member name="T:Nest.ISimilarity">
      <summary>
            A similarity.
            </summary>
    </member>
    <member name="P:Nest.ISimilarity.Type">
      <summary>
            The type of similarity.
            </summary>
    </member>
    <member name="T:Nest.IAlias">
      <summary>
            An alias to one or more indices
            </summary>
    </member>
    <member name="P:Nest.IAlias.Filter">
      <summary>
            Provides an easy way to create different "views" of the same index. A filter can be defined using Query DSL and is
            applied to all Search, Count, Delete By Query and More Like This operations with this alias.
            </summary>
    </member>
    <member name="P:Nest.IAlias.IndexRouting">
      <summary>
            Associates routing values with aliases for index operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
    </member>
    <member name="P:Nest.IAlias.IsWriteIndex">
      <inheritdoc cref="P:Nest.AliasAddOperation.IsWriteIndex" />
    </member>
    <member name="P:Nest.IAlias.Routing">
      <summary>
            Associates routing values with aliases for both index and search operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
    </member>
    <member name="P:Nest.IAlias.SearchRouting">
      <summary>
            Associates routing values with aliases for search operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
    </member>
    <member name="T:Nest.Alias">
      <inheritdoc />
    </member>
    <member name="P:Nest.Alias.Filter">
      <summary>
            Provides an easy way to create different "views" of the same index. A filter can be defined using Query DSL and is
            applied to all Search, Count, Delete By Query and More Like This operations with this alias.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Alias.IndexRouting">
      <summary>
            Associates routing values with aliases for index operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Alias.IsWriteIndex">
      <inheritdoc />
    </member>
    <member name="P:Nest.Alias.Routing">
      <summary>
            Associates routing values with aliases for both index and search operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Alias.SearchRouting">
      <summary>
            Associates routing values with aliases for search operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.AliasDescriptor">
      <inheritdoc cref="T:Nest.IAlias" />
    </member>
    <member name="M:Nest.AliasDescriptor.Filter``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IAlias.Filter" />
    </member>
    <member name="M:Nest.AliasDescriptor.IndexRouting(Nest.Routing)">
      <summary>
            Associates routing values with aliases for index operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
      <inheritdoc cref="P:Nest.IAlias.IndexRouting" />
    </member>
    <member name="M:Nest.AliasDescriptor.IsWriteIndex(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.IAlias.IsWriteIndex" />
    </member>
    <member name="M:Nest.AliasDescriptor.Routing(Nest.Routing)">
      <summary>
            Associates routing values with aliases for both index and search operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
      <inheritdoc cref="P:Nest.IAlias.Routing" />
    </member>
    <member name="M:Nest.AliasDescriptor.SearchRouting(Nest.Routing)">
      <summary>
            Associates routing values with aliases for search operations. This feature can be used together
            with filtering aliases in order to avoid unnecessary shard operations.
            </summary>
      <inheritdoc cref="P:Nest.IAlias.SearchRouting" />
    </member>
    <member name="M:Nest.Aliases.Add(Nest.IndexName,Nest.IAlias)">
      <summary>
            Add any setting to the index
            </summary>
    </member>
    <member name="T:Nest.AliasExistsRequest">
      <summary>Request for AliasExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Names)">
      <summary>/_alias/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.AliasExistsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.AliasExistsRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.AliasExistsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.AliasExistsRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.AliasExistsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.AliasAddOperation.IsWriteIndex">
      <summary>
            If an alias points to multiple indices, Elasticsearch will reject the write operations
            unless one is explicitly marked as the write alias using this property.
            </summary>
    </member>
    <member name="T:Nest.IAliasAction">
      <summary>
            Marker interface for alias operation
            </summary>
    </member>
    <member name="T:Nest.BulkAliasRequest">
      <summary>Request for BulkAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="P:Nest.BulkAliasRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.BulkAliasRequest.Timeout">
      <summary>Request timeout</summary>
    </member>
    <member name="T:Nest.DeleteAliasRequest">
      <summary>Request for DeleteAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.DeleteAliasRequest.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">this parameter is required</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteAliasRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteAliasRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.DeleteAliasRequest.Timeout">
      <summary>Explicit timestamp for the document</summary>
    </member>
    <member name="M:Nest.AliasPointingToIndexExtensions.GetAliasesPointingToIndex(Nest.IElasticClient,Nest.IndexName)">
      <summary>
            Returns a dictionary of aliases that point to the specified index, simplified version of
            <see cref="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAlias(Nest.IGetAliasRequest)" />..
            </summary>
      <param name="index">The index name we want to know aliases of</param>
    </member>
    <member name="M:Nest.AliasPointingToIndexExtensions.GetAliasesPointingToIndexAsync(Nest.IElasticClient,Nest.IndexName)">
      <summary>
            Returns a dictionary of aliases that point to the specified index, simplified version of
            <see cref="M:Nest.Specification.IndicesApi.IndicesNamespace.GetAlias(Nest.IGetAliasRequest)" />..
            </summary>
      <param name="index">The index name we want to know aliases of</param>
    </member>
    <member name="T:Nest.IndicesPointingToAliasExtensions">
      <summary>
            Implements several handy alias extensions.
            </summary>
    </member>
    <member name="M:Nest.IndicesPointingToAliasExtensions.GetIndicesPointingToAlias(Nest.IElasticClient,Nest.Names)">
      <summary>
            Returns a collection of indices that have the specified alias(es) applied to them. Simplified version of GetAlias.
            </summary>
      <param name="client">The client</param>
      <param name="alias">The alias name(s)</param>
    </member>
    <member name="M:Nest.IndicesPointingToAliasExtensions.GetIndicesPointingToAliasAsync(Nest.IElasticClient,Nest.Names)">
      <summary>
            Returns a collection of indices that have the specified alias(es) applied to them. Simplified version of GetAlias.
            </summary>
      <param name="client">The client</param>
      <param name="alias">The alias name(s)</param>
    </member>
    <member name="T:Nest.GetAliasRequest">
      <summary>Request for GetAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="M:Nest.GetAliasRequest.#ctor">
      <summary>/_alias</summary>
    </member>
    <member name="M:Nest.GetAliasRequest.#ctor(Nest.Names)">
      <summary>/_alias/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetAliasRequest.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetAliasRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_alias</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetAliasRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.GetAliasRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.GetAliasRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.GetAliasRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.IPutAliasRequest">
      <summary>
            A request to put an alias to one or more indices
            </summary>
    </member>
    <member name="P:Nest.IPutAliasRequest.Filter">
      <inheritdoc cref="P:Nest.IAlias.Filter" />
    </member>
    <member name="P:Nest.IPutAliasRequest.IndexRouting">
      <inheritdoc cref="P:Nest.IAlias.IndexRouting" />
    </member>
    <member name="P:Nest.IPutAliasRequest.IsWriteIndex">
      <inheritdoc cref="P:Nest.IAlias.IsWriteIndex" />
    </member>
    <member name="P:Nest.IPutAliasRequest.Routing">
      <inheritdoc cref="P:Nest.IAlias.Routing" />
    </member>
    <member name="P:Nest.IPutAliasRequest.SearchRouting">
      <inheritdoc cref="P:Nest.IAlias.SearchRouting" />
    </member>
    <member name="T:Nest.PutAliasRequest">
      <inheritdoc cref="T:Nest.IPutAliasRequest" />
      <summary>Request for PutAlias <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html</para></summary>
    </member>
    <member name="P:Nest.PutAliasRequest.Filter">
      <inheritdoc cref="P:Nest.IPutAliasRequest.Filter" />
    </member>
    <member name="P:Nest.PutAliasRequest.IndexRouting">
      <inheritdoc cref="P:Nest.IPutAliasRequest.IndexRouting" />
    </member>
    <member name="P:Nest.PutAliasRequest.IsWriteIndex">
      <inheritdoc cref="P:Nest.IPutAliasRequest.IsWriteIndex" />
    </member>
    <member name="P:Nest.PutAliasRequest.Routing">
      <inheritdoc cref="P:Nest.IPutAliasRequest.Routing" />
    </member>
    <member name="P:Nest.PutAliasRequest.SearchRouting">
      <inheritdoc cref="P:Nest.IPutAliasRequest.SearchRouting" />
    </member>
    <member name="M:Nest.PutAliasRequest.#ctor(Nest.Indices,Nest.Name)">
      <summary>/{index}/_alias/{name}</summary>
      <param name="index">this parameter is required</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutAliasRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutAliasRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.PutAliasRequest.Timeout">
      <summary>Explicit timestamp for the document</summary>
    </member>
    <member name="M:Nest.AnalyzeCharFiltersDescriptor.Name(System.String)">
      <summary>
            A reference to a token filter that is part of the mapping
            </summary>
    </member>
    <member name="M:Nest.AnalyzeCharFiltersDescriptor.PatternReplace(System.Func{Nest.PatternReplaceCharFilterDescriptor,Nest.IPatternReplaceCharFilter})">
      <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeCharFiltersDescriptor.HtmlStrip(System.Func{Nest.HtmlStripCharFilterDescriptor,Nest.IHtmlStripCharFilter})">
      <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeCharFiltersDescriptor.Mapping(System.Func{Nest.MappingCharFilterDescriptor,Nest.IMappingCharFilter})">
      <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeCharFiltersDescriptor.KuromojiIterationMark(System.Func{Nest.KuromojiIterationMarkCharFilterDescriptor,Nest.IKuromojiIterationMarkCharFilter})">
      <summary>
            The kuromoji_iteration_mark normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.
            Part of the `analysis-kuromoji` plugin:
            https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeCharFiltersDescriptor.IcuNormalization(System.Func{Nest.IcuNormalizationCharFilterDescriptor,Nest.IIcuNormalizationCharFilter})">
      <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Analyzer">
      <summary>The name of the analyzer to use</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Attributes">
      <summary>Filter only certain token attributes to be returned</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.CharFilter">
      <summary>A collection of character filters to use for the analysis</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Explain">
      <summary>Return more details, and output the analyzer chain per step in the process</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Field">
      <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Filter">
      <summary>A collection of filters to use for the analysis</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Normalizer">
      <summary>The name of the normalizer to use</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Text">
      <summary>The text on which the analysis should be performed (when request body is not used)</summary>
    </member>
    <member name="P:Nest.IAnalyzeRequest.Tokenizer">
      <summary>The name of the tokenizer to use for the analysis</summary>
    </member>
    <member name="T:Nest.AnalyzeRequest">
      <summary>Request for Analyze <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html</para></summary>
    </member>
    <member name="P:Nest.AnalyzeRequest.Analyzer">
      <summary>The name of the analyzer to use</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Attributes">
      <summary>Filter only certain token attributes to be returned</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.CharFilter">
      <summary>A collection of character filters to use for the analysis</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Explain">
      <summary>Return more details, and output the analyzer chain per step in the process</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Field">
      <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Filter">
      <summary>A collection of filters to use for the analysis</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Normalizer">
      <summary>The name of the normalizer to use</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Text">
      <summary>The text on which the analysis should be performed (when request body is not used)</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalyzeRequest.Tokenizer">
      <summary>The name of the tokenizer to use for the analysis</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalyzeRequest.#ctor">
      <summary>/_analyze</summary>
    </member>
    <member name="M:Nest.AnalyzeRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_analyze</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.AnalyzeResponse.Detail">
      <summary>
            When <see cref="P:Nest.IAnalyzeRequest.Explain" /> is to true this will hold the detailed view of the analyzed tokens.
            </summary>
    </member>
    <member name="P:Nest.AnalyzeResponse.Tokens">
      <summary>
            When <see cref="P:Nest.IAnalyzeRequest.Explain" /> is not true this will hold the analyzed tokens.
            </summary>
    </member>
    <member name="T:Nest.AnalyzeTokenFilters">
      <summary>
            A list of string references to stored token filters and/or inline token filter definitions
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Name(System.String)">
      <summary>
            A reference to a token filter that is part of the mapping
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.DictionaryDecompounder(System.Func{Nest.DictionaryDecompounderTokenFilterDescriptor,Nest.IDictionaryDecompounderTokenFilter})">
      <summary>
            Token filters that allow to decompose compound words using a dictionary
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.HyphenationDecompounder(System.Func{Nest.HyphenationDecompounderTokenFilterDescriptor,Nest.IHyphenationDecompounderTokenFilter})">
      <summary>
            Token filters that allow to decompose compound words using FOP XML
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.EdgeNGram(System.Func{Nest.EdgeNGramTokenFilterDescriptor,Nest.IEdgeNGramTokenFilter})">
      <summary>
            A token filter of type edgeNGram.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Phonetic(System.Func{Nest.PhoneticTokenFilterDescriptor,Nest.IPhoneticTokenFilter})">
      <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Shingle(System.Func{Nest.ShingleTokenFilterDescriptor,Nest.IShingleTokenFilter})">
      <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream.
            <para>In other words, it creates combinations of tokens as a single token. </para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Stop(System.Func{Nest.StopTokenFilterDescriptor,Nest.IStopTokenFilter})">
      <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Synonym(System.Func{Nest.SynonymTokenFilterDescriptor,Nest.ISynonymTokenFilter})">
      <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.SynonymGraph(System.Func{Nest.SynonymGraphTokenFilterDescriptor,Nest.ISynonymGraphTokenFilter})">
      <summary>
            The synonym_graph token filter allows to easily handle synonyms,
            including multi-word synonyms correctly during the analysis process.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.WordDelimiter(System.Func{Nest.WordDelimiterTokenFilterDescriptor,Nest.IWordDelimiterTokenFilter})">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.WordDelimiterGraph(System.Func{Nest.WordDelimiterGraphTokenFilterDescriptor,Nest.IWordDelimiterGraphTokenFilter})">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.AsciiFolding(System.Func{Nest.AsciiFoldingTokenFilterDescriptor,Nest.IAsciiFoldingTokenFilter})">
      <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.CommonGrams(System.Func{Nest.CommonGramsTokenFilterDescriptor,Nest.ICommonGramsTokenFilter})">
      <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.DelimitedPayload(System.Func{Nest.DelimitedPayloadTokenFilterDescriptor,Nest.IDelimitedPayloadTokenFilter})">
      <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Elision(System.Func{Nest.ElisionTokenFilterDescriptor,Nest.IElisionTokenFilter})">
      <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Hunspell(System.Func{Nest.HunspellTokenFilterDescriptor,Nest.IHunspellTokenFilter})">
      <summary>
             Basic support for hunspell stemming.
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KeepTypes(System.Func{Nest.KeepTypesTokenFilterDescriptor,Nest.IKeepTypesTokenFilter})">
      <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KeepWords(System.Func{Nest.KeepWordsTokenFilterDescriptor,Nest.IKeepWordsTokenFilter})">
      <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KeywordMarker(System.Func{Nest.KeywordMarkerTokenFilterDescriptor,Nest.IKeywordMarkerTokenFilter})">
      <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KStem(System.Func{Nest.KStemTokenFilterDescriptor,Nest.IKStemTokenFilter})">
      <summary>
            The kstem token filter is a high performance filter for english.
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Length(System.Func{Nest.LengthTokenFilterDescriptor,Nest.ILengthTokenFilter})">
      <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.LimitTokenCount(System.Func{Nest.LimitTokenCountTokenFilterDescriptor,Nest.ILimitTokenCountTokenFilter})">
      <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Lowercase(System.Func{Nest.LowercaseTokenFilterDescriptor,Nest.ILowercaseTokenFilter})">
      <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.NGram(System.Func{Nest.NGramTokenFilterDescriptor,Nest.INGramTokenFilter})">
      <summary>
            A token filter of type nGram.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.PatternCapture(System.Func{Nest.PatternCaptureTokenFilterDescriptor,Nest.IPatternCaptureTokenFilter})">
      <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular expression.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.PatternReplace(System.Func{Nest.PatternReplaceTokenFilterDescriptor,Nest.IPatternReplaceTokenFilter})">
      <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.PorterStem(System.Func{Nest.PorterStemTokenFilterDescriptor,Nest.IPorterStemTokenFilter})">
      <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Reverse(System.Func{Nest.ReverseTokenFilterDescriptor,Nest.IReverseTokenFilter})">
      <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Snowball(System.Func{Nest.SnowballTokenFilterDescriptor,Nest.ISnowballTokenFilter})">
      <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Condition(System.Func{Nest.ConditionTokenFilterDescriptor,Nest.IConditionTokenFilter})">
      <inheritdoc cref="T:Nest.IConditionTokenFilter" />
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Stemmer(System.Func{Nest.StemmerTokenFilterDescriptor,Nest.IStemmerTokenFilter})">
      <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Predicate(System.Func{Nest.PredicateTokenFilterDescriptor,Nest.IPredicateTokenFilter})">
      <inheritdoc cref="T:Nest.IPredicateTokenFilter" />
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.StemmerOverride(System.Func{Nest.StemmerOverrideTokenFilterDescriptor,Nest.IStemmerOverrideTokenFilter})">
      <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by stemmers. Must be placed
            before any stemming filters.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Trim(System.Func{Nest.TrimTokenFilterDescriptor,Nest.ITrimTokenFilter})">
      <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Truncate(System.Func{Nest.TruncateTokenFilterDescriptor,Nest.ITruncateTokenFilter})">
      <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token)
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Unique(System.Func{Nest.UniqueTokenFilterDescriptor,Nest.IUniqueTokenFilter})">
      <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the token stream
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Uppercase(System.Func{Nest.UppercaseTokenFilterDescriptor,Nest.IUppercaseTokenFilter})">
      <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Fingerprint(System.Func{Nest.FingerprintTokenFilterDescriptor,Nest.IFingerprintTokenFilter})">
      <summary>
            A token filter of type fingerprint The fingerprint token filter that emits a single token which is useful
            for fingerprinting a body of text, and/or providing a token that can be clustered on.
            It does this by sorting the tokens, deduplicating and then concatenating them back into a single token.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KuromojiStemmer(System.Func{Nest.KuromojiStemmerTokenFilterDescriptor,Nest.IKuromojiStemmerTokenFilter})">
      <summary>
            The kuromoji_stemmer token filter normalizes common katakana spelling variations ending in a
            long sound character by removing this character (U+30FC). Only full-width katakana characters are supported.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KuromojiReadingForm(System.Func{Nest.KuromojiReadingFormTokenFilterDescriptor,Nest.IKuromojiReadingFormTokenFilter})">
      <summary>
            The kuromoji_readingform token filter replaces the token with its reading form in either katakana or romaji.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.KuromojiPartOfSpeech(System.Func{Nest.KuromojiPartOfSpeechTokenFilterDescriptor,Nest.IKuromojiPartOfSpeechTokenFilter})">
      <summary>
            The kuromoji_part_of_speech token filter removes tokens that match a set of part-of-speech tags.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.IcuCollation(System.Func{Nest.IcuCollationTokenFilterDescriptor,Nest.IIcuCollationTokenFilter})">
      <summary>
            Collations are used for sorting documents in a language-specific word order. The icu_collation token filter is available to all indices and
            defaults to using the DUCET collation, which is a best-effort attempt at language-neutral sorting.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.IcuFolding(System.Func{Nest.IcuFoldingTokenFilterDescriptor,Nest.IIcuFoldingTokenFilter})">
      <summary>
            Case folding of Unicode characters based on UTR#30, like the ASCII-folding token filter on steroids.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.IcuNormalization(System.Func{Nest.IcuNormalizationTokenFilterDescriptor,Nest.IIcuNormalizationTokenFilter})">
      <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.IcuTransform(System.Func{Nest.IcuTransformTokenFilterDescriptor,Nest.IIcuTransformTokenFilter})">
      <summary>
            Transforms are used to process Unicode text in many different ways, such as case mapping,
            normalization, transliteration and bidirectional text handling.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.NoriPartOfSpeech(System.Func{Nest.NoriPartOfSpeechTokenFilterDescriptor,Nest.INoriPartOfSpeechTokenFilter})">
      <inheritdoc cref="T:Nest.INoriPartOfSpeechTokenFilter" />
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.Multiplexer(System.Func{Nest.MultiplexerTokenFilterDescriptor,Nest.IMultiplexerTokenFilter})">
      <inheritdoc cref="T:Nest.IMultiplexerTokenFilter" />
    </member>
    <member name="M:Nest.AnalyzeTokenFiltersDescriptor.RemoveDuplicates(System.Func{Nest.RemoveDuplicatesTokenFilterDescriptor,Nest.IRemoveDuplicatesTokenFilter})">
      <inheritdoc cref="T:Nest.IRemoveDuplicatesTokenFilter" />
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.EdgeNGram(System.Func{Nest.EdgeNGramTokenizerDescriptor,Nest.IEdgeNGramTokenizer})">
      <summary>
            A tokenizer of type edgeNGram.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.NGram(System.Func{Nest.NGramTokenizerDescriptor,Nest.INGramTokenizer})">
      <summary>
            A tokenizer of type nGram.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Keyword(System.Func{Nest.KeywordTokenizerDescriptor,Nest.IKeywordTokenizer})">
      <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Letter(System.Func{Nest.LetterTokenizerDescriptor,Nest.ILetterTokenizer})">
      <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters.
            <para>
            Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not
            separated by spaces.
            </para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Lowercase(System.Func{Nest.LowercaseTokenizerDescriptor,Nest.ILowercaseTokenizer})">
      <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together.
            <para>It divides text at non-letters and converts them to lower case. </para><para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para><para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.PathHierarchy(System.Func{Nest.PathHierarchyTokenizerDescriptor,Nest.IPathHierarchyTokenizer})">
      <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para><para>And produces tokens:</para><para></para><para>/something</para><para>/something/something</para><para>/something/something/else</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Pattern(System.Func{Nest.PatternTokenizerDescriptor,Nest.IPatternTokenizer})">
      <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Standard(System.Func{Nest.StandardTokenizerDescriptor,Nest.IStandardTokenizer})">
      <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language documents.
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para></summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.UaxEmailUrl(System.Func{Nest.UaxEmailUrlTokenizerDescriptor,Nest.IUaxEmailUrlTokenizer})">
      <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Whitespace(System.Func{Nest.WhitespaceTokenizerDescriptor,Nest.IWhitespaceTokenizer})">
      <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Kuromoji(System.Func{Nest.KuromojiTokenizerDescriptor,Nest.IKuromojiTokenizer})">
      <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Icu(System.Func{Nest.IcuTokenizerDescriptor,Nest.IIcuTokenizer})">
      <summary>
            Tokenizes text into words on word boundaries, as defined in UAX #29: Unicode Text Segmentation. It behaves much
            like the standard tokenizer, but adds better support for some Asian languages by using a dictionary-based approach
            to identify words in Thai, Lao, Chinese, Japanese, and Korean, and using custom rules to break Myanmar and Khmer
            text into syllables.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.Nori(System.Func{Nest.NoriTokenizerDescriptor,Nest.INoriTokenizer})">
      <inheritdoc cref="T:Nest.INoriTokenizer" />
    </member>
    <member name="M:Nest.AnalyzeTokenizersSelector.CharGroup(System.Func{Nest.CharGroupTokenizerDescriptor,Nest.ICharGroupTokenizer})">
      <inheritdoc cref="P:Nest.ICharGroupTokenizer.TokenizeOnCharacters" />
            &gt;
        </member>
    <member name="T:Nest.CreateIndexRequest">
      <summary>Request for Create <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html</para></summary>
    </member>
    <member name="M:Nest.CreateIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CreateIndexRequest.IncludeTypeName">
      <summary>Whether a type should be expected in the body of the mappings.</summary>
    </member>
    <member name="P:Nest.CreateIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.CreateIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.CreateIndexRequest.WaitForActiveShards">
      <summary>Set the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.DeleteIndexRequest">
      <summary>Request for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html</para></summary>
    </member>
    <member name="M:Nest.DeleteIndexRequest.#ctor(Nest.Indices)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteIndexRequest.AllowNoIndices">
      <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
    </member>
    <member name="P:Nest.DeleteIndexRequest.ExpandWildcards">
      <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
    </member>
    <member name="P:Nest.DeleteIndexRequest.IgnoreUnavailable">
      <summary>Ignore unavailable indexes (default: false)</summary>
    </member>
    <member name="P:Nest.DeleteIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.DeleteIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.FreezeIndexRequest">
      <summary>Request for Freeze <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</para></summary>
    </member>
    <member name="M:Nest.FreezeIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_freeze</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.FreezeIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.FreezeIndexRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.FreezeIndexRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.FreezeIndexRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.FreezeIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.FreezeIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.FreezeIndexRequest.WaitForActiveShards">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.GetIndexRequest">
      <summary>Request for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html</para></summary>
    </member>
    <member name="M:Nest.GetIndexRequest.#ctor(Nest.Indices)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GetIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.AllowNoIndices">
      <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.ExpandWildcards">
      <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.IgnoreUnavailable">
      <summary>Ignore unavailable indexes (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.IncludeDefaults">
      <summary>Whether to return all default setting for each of the indices.</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.IncludeTypeName">
      <summary>Whether to add the type name to the response (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.IndexExistsRequest">
      <summary>Request for Exists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html</para></summary>
    </member>
    <member name="M:Nest.IndexExistsRequest.#ctor(Nest.Indices)">
      <summary>/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.IndexExistsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.IndexExistsRequest.AllowNoIndices">
      <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
    </member>
    <member name="P:Nest.IndexExistsRequest.ExpandWildcards">
      <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
    </member>
    <member name="P:Nest.IndexExistsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.IndexExistsRequest.IgnoreUnavailable">
      <summary>Ignore unavailable indexes (default: false)</summary>
    </member>
    <member name="P:Nest.IndexExistsRequest.IncludeDefaults">
      <summary>Whether to return all default setting for each of the indices.</summary>
    </member>
    <member name="P:Nest.IndexExistsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.CloseIndexRequest">
      <summary>Request for Close <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</para></summary>
    </member>
    <member name="M:Nest.CloseIndexRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_close</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.CloseIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CloseIndexRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.CloseIndexRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.CloseIndexRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.CloseIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.CloseIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.CloseIndexRequest.WaitForActiveShards">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="P:Nest.CloseIndexResponse.Indices">
      <summary>
            Individual index responses
            <para />
            Valid only for Elasticsearch 7.3.0+
            </summary>
    </member>
    <member name="P:Nest.CloseIndexResponse.ShardsAcknowledged">
      <summary>
            Acknowledgement from shards
            <para />
            Valid only for Elasticsearch 7.2.0+
            </summary>
    </member>
    <member name="T:Nest.OpenIndexRequest">
      <summary>Request for Open <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html</para></summary>
    </member>
    <member name="M:Nest.OpenIndexRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_open</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.OpenIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.OpenIndexRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.OpenIndexRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.OpenIndexRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.OpenIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.OpenIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.OpenIndexRequest.WaitForActiveShards">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.IRolloverConditions">
      <summary>
            Conditions that must be satisfied for a new index to be created
            with the rollover index API
            </summary>
    </member>
    <member name="P:Nest.IRolloverConditions.MaxAge">
      <summary>
            The maximum age of the index
            </summary>
    </member>
    <member name="P:Nest.IRolloverConditions.MaxDocs">
      <summary>
            The maximum number of documents
            </summary>
    </member>
    <member name="P:Nest.IRolloverConditions.MaxSize">
      <summary>
            The maximum size of the index e.g. "5gb"
            </summary>
      <remarks>
            Valid in Elasticsearch 6.1.0+
            </remarks>
    </member>
    <member name="T:Nest.RolloverConditions">
      <inheritdoc />
    </member>
    <member name="P:Nest.RolloverConditions.MaxAge">
      <summary>
            The maximum age of the index
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RolloverConditions.MaxDocs">
      <summary>
            The maximum number of documents
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RolloverConditions.MaxSize">
      <summary>
            The maximum size of the index e.g. "5gb"
            </summary>
      <remarks>
            Valid in Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc />
    </member>
    <member name="T:Nest.RolloverConditionsDescriptor">
      <inheritdoc cref="T:Nest.IRolloverConditions" />
    </member>
    <member name="M:Nest.RolloverConditionsDescriptor.MaxAge(Nest.Time)">
      <summary>
            The maximum age of the index
            </summary>
      <inheritdoc cref="P:Nest.IRolloverConditions.MaxAge" />
    </member>
    <member name="M:Nest.RolloverConditionsDescriptor.MaxDocs(System.Nullable{System.Int64})">
      <summary>
            The maximum number of documents
            </summary>
      <inheritdoc cref="P:Nest.IRolloverConditions.MaxDocs" />
    </member>
    <member name="M:Nest.RolloverConditionsDescriptor.MaxSize(System.String)">
      <summary>
            The maximum size of the index e.g. "5gb"
            </summary>
      <remarks>
            Valid in Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc cref="P:Nest.IRolloverConditions.MaxSize" />
    </member>
    <member name="T:Nest.RolloverIndexRequest">
      <summary>Request for Rollover <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html</para></summary>
    </member>
    <member name="M:Nest.RolloverIndexRequest.#ctor(Nest.Name)">
      <summary>/{alias}/_rollover</summary>
      <param name="alias">this parameter is required</param>
    </member>
    <member name="M:Nest.RolloverIndexRequest.#ctor(Nest.Name,Nest.IndexName)">
      <summary>/{alias}/_rollover/{new_index}</summary>
      <param name="alias">this parameter is required</param>
      <param name="newIndex">Optional, accepts null</param>
    </member>
    <member name="M:Nest.RolloverIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.RolloverIndexRequest.DryRun">
      <summary>If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false</summary>
    </member>
    <member name="P:Nest.RolloverIndexRequest.IncludeTypeName">
      <summary>Whether a type should be included in the body of the mappings.</summary>
    </member>
    <member name="P:Nest.RolloverIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.RolloverIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.RolloverIndexRequest.WaitForActiveShards">
      <summary>Set the number of active shards to wait for on the newly created rollover index before the operation returns.</summary>
    </member>
    <member name="T:Nest.ShrinkIndexRequest">
      <summary>Request for Shrink <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html</para></summary>
    </member>
    <member name="M:Nest.ShrinkIndexRequest.#ctor(Nest.IndexName,Nest.IndexName)">
      <summary>/{index}/_shrink/{target}</summary>
      <param name="index">this parameter is required</param>
      <param name="target">this parameter is required</param>
    </member>
    <member name="M:Nest.ShrinkIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ShrinkIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.ShrinkIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.ShrinkIndexRequest.WaitForActiveShards">
      <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
    </member>
    <member name="T:Nest.ISplitIndexRequest">
      <summary>
            A request to split an existing index into a new index, where each original primary
            shard is split into two or more primary shards in the new index.
            </summary>
    </member>
    <member name="P:Nest.ISplitIndexRequest.Aliases">
      <summary>
            The aliases for the target index
            </summary>
    </member>
    <member name="P:Nest.ISplitIndexRequest.Settings">
      <summary>
            The settings for the target index
            </summary>
    </member>
    <member name="T:Nest.SplitIndexRequest">
      <inheritdoc cref="T:Nest.ISplitIndexRequest" />
      <summary>Request for Split <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html</para></summary>
    </member>
    <member name="P:Nest.SplitIndexRequest.Aliases">
      <summary>
            The aliases for the target index
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SplitIndexRequest.Settings">
      <summary>
            The settings for the target index
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SplitIndexRequest.#ctor(Nest.IndexName,Nest.IndexName)">
      <summary>/{index}/_split/{target}</summary>
      <param name="index">this parameter is required</param>
      <param name="target">this parameter is required</param>
    </member>
    <member name="M:Nest.SplitIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.SplitIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.SplitIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.SplitIndexRequest.WaitForActiveShards">
      <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
    </member>
    <member name="T:Nest.TypeExistsRequest">
      <summary>Request for TypeExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html</para></summary>
    </member>
    <member name="M:Nest.TypeExistsRequest.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_mapping/{type}</summary>
      <param name="index">this parameter is required</param>
      <param name="type">this parameter is required</param>
    </member>
    <member name="M:Nest.TypeExistsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.TypeExistsRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.TypeExistsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.TypeExistsRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.TypeExistsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.UnfreezeIndexRequest">
      <summary>Request for Unfreeze <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html</para></summary>
    </member>
    <member name="M:Nest.UnfreezeIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_unfreeze</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UnfreezeIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UnfreezeIndexRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.UnfreezeIndexRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.UnfreezeIndexRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.UnfreezeIndexRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.UnfreezeIndexRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.UnfreezeIndexRequest.WaitForActiveShards">
      <summary>Sets the number of active shards to wait for before the operation returns.</summary>
    </member>
    <member name="T:Nest.GetIndexSettingsRequest">
      <summary>Request for GetSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html</para></summary>
    </member>
    <member name="M:Nest.GetIndexSettingsRequest.#ctor">
      <summary>/_settings</summary>
    </member>
    <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_settings</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Indices,Nest.Names)">
      <summary>/{index}/_settings/{name}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Names)">
      <summary>/_settings/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.IncludeDefaults">
      <summary>Whether to return all default setting for each of the indices.</summary>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexSettingsRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.DeleteIndexTemplateRequest">
      <summary>Request for DeleteTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.DeleteIndexTemplateRequest.#ctor(Nest.Name)">
      <summary>/_template/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteIndexTemplateRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteIndexTemplateRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.DeleteIndexTemplateRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.GetIndexTemplateRequest">
      <summary>Request for GetTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.GetIndexTemplateRequest.#ctor">
      <summary>/_template</summary>
    </member>
    <member name="M:Nest.GetIndexTemplateRequest.#ctor(Nest.Names)">
      <summary>/_template/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetIndexTemplateRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexTemplateRequest.IncludeTypeName">
      <summary>Whether a type should be returned in the body of the mappings.</summary>
    </member>
    <member name="P:Nest.GetIndexTemplateRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.GetIndexTemplateRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.IndexTemplateExistsRequest">
      <summary>Request for TemplateExists <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.IndexTemplateExistsRequest.#ctor(Nest.Names)">
      <summary>/_template/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.IndexTemplateExistsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.IndexTemplateExistsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.IndexTemplateExistsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.IndexTemplateExistsRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.PutIndexTemplateRequest">
      <summary>Request for PutTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html</para></summary>
    </member>
    <member name="M:Nest.PutIndexTemplateRequest.#ctor(Nest.Name)">
      <summary>/_template/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutIndexTemplateRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutIndexTemplateRequest.Create">
      <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
    </member>
    <member name="P:Nest.PutIndexTemplateRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.PutIndexTemplateRequest.IncludeTypeName">
      <summary>Whether a type should be returned in the body of the mappings.</summary>
    </member>
    <member name="P:Nest.PutIndexTemplateRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.PutIndexTemplateRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.UpdateIndexSettingsRequest">
      <summary>Request for UpdateSettings <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html</para></summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsRequest.#ctor">
      <summary>/_settings</summary>
    </member>
    <member name="M:Nest.UpdateIndexSettingsRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_settings</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.FlatSettings">
      <summary>Return settings in flat format (default: false)</summary>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.PreserveExisting">
      <summary>Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`</summary>
    </member>
    <member name="P:Nest.UpdateIndexSettingsRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.GetFieldMappingRequest">
      <summary>Request for GetFieldMapping <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html</para></summary>
    </member>
    <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Fields)">
      <summary>/_mapping/field/{fields}</summary>
      <param name="fields">this parameter is required</param>
    </member>
    <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Indices,Nest.Fields)">
      <summary>/{index}/_mapping/field/{fields}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="fields">this parameter is required</param>
    </member>
    <member name="M:Nest.GetFieldMappingRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetFieldMappingRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.GetFieldMappingRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.GetFieldMappingRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.GetFieldMappingRequest.IncludeDefaults">
      <summary>Whether the default mapping values should be returned as well</summary>
    </member>
    <member name="P:Nest.GetFieldMappingRequest.IncludeTypeName">
      <summary>Whether a type should be returned in the body of the mappings.</summary>
    </member>
    <member name="P:Nest.GetFieldMappingRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.GetMappingRequest">
      <summary>Request for GetMapping <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html</para></summary>
    </member>
    <member name="M:Nest.GetMappingRequest.#ctor">
      <summary>/_mapping</summary>
    </member>
    <member name="M:Nest.GetMappingRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_mapping</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetMappingRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.GetMappingRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.GetMappingRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.GetMappingRequest.IncludeTypeName">
      <summary>Whether to add the type name to the response (default: false)</summary>
    </member>
    <member name="P:Nest.GetMappingRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.GetMappingRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.PutMappingRequest">
      <summary>Request for PutMapping <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html</para></summary>
    </member>
    <member name="P:Nest.PutMappingRequest.AllField">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.DateDetection">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.Dynamic">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.DynamicDateFormats">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.DynamicTemplates">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.FieldNamesField">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.IndexField">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.Meta">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.NumericDetection">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.Properties">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.RoutingField">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.SizeField">
      <inheritdoc />
    </member>
    <member name="P:Nest.PutMappingRequest.SourceField">
      <inheritdoc />
    </member>
    <member name="M:Nest.PutMappingRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_mapping</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.PutMappingRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutMappingRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.PutMappingRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.PutMappingRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.PutMappingRequest.IncludeTypeName">
      <summary>Whether a type should be expected in the body of the mappings.</summary>
    </member>
    <member name="P:Nest.PutMappingRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.PutMappingRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.PutMappingRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_mapping</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.PutMappingRequest`1.#ctor">
      <summary>/{index}/_mapping</summary>
    </member>
    <member name="T:Nest.RecoveryStatusRequest">
      <summary>Request for RecoveryStatus <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html</para></summary>
    </member>
    <member name="M:Nest.RecoveryStatusRequest.#ctor">
      <summary>/_recovery</summary>
    </member>
    <member name="M:Nest.RecoveryStatusRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_recovery</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.RecoveryStatusRequest.ActiveOnly">
      <summary>Display only those recoveries that are currently on-going</summary>
    </member>
    <member name="P:Nest.RecoveryStatusRequest.Detailed">
      <summary>Whether to display detailed information about shard recovery</summary>
    </member>
    <member name="T:Nest.SegmentsRequest">
      <summary>Request for Segments <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html</para></summary>
    </member>
    <member name="M:Nest.SegmentsRequest.#ctor">
      <summary>/_segments</summary>
    </member>
    <member name="M:Nest.SegmentsRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_segments</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SegmentsRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.SegmentsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.SegmentsRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.SegmentsRequest.Verbose">
      <summary>Includes detailed memory usage by Lucene.</summary>
    </member>
    <member name="T:Nest.IndicesShardStoresRequest">
      <summary>Request for ShardStores <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html</para></summary>
    </member>
    <member name="M:Nest.IndicesShardStoresRequest.#ctor">
      <summary>/_shard_stores</summary>
    </member>
    <member name="M:Nest.IndicesShardStoresRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_shard_stores</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.IndicesShardStoresRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.IndicesShardStoresRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.IndicesShardStoresRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.IndicesShardStoresRequest.Status">
      <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
    </member>
    <member name="P:Nest.IndicesStats.UUID">
      <summary>
            Universal Unique Identifier for the index
            </summary>
      <remarks>
            Introduced in Elasticsearch 6.4.0
            </remarks>
    </member>
    <member name="T:Nest.IndicesStatsRequest">
      <summary>Request for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html</para></summary>
    </member>
    <member name="M:Nest.IndicesStatsRequest.#ctor">
      <summary>/_stats</summary>
    </member>
    <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Metrics)">
      <summary>/_stats/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_stats</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Indices,Nest.Metrics)">
      <summary>/{index}/_stats/{metric}</summary>
      <param name="index">Optional, accepts null</param>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="P:Nest.IndicesStatsRequest.CompletionFields">
      <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.FielddataFields">
      <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.Fields">
      <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.ForbidClosedIndices">
      <summary>If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.Groups">
      <summary>A comma-separated list of search groups for `search` index metric</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.IncludeSegmentFileSizes">
      <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.IncludeUnloadedSegments">
      <summary>If set to true segment stats will include stats for segments that are not currently loaded into memory</summary>
    </member>
    <member name="P:Nest.IndicesStatsRequest.Level">
      <summary>Return stats aggregated at cluster, index or shard level</summary>
    </member>
    <member name="P:Nest.ShardIndexing.DeleteCurrent">
      <summary>
            Returns the currently in-flight delete operations
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.DeleteTimeInMilliseconds">
      <summary>
            The total amount of time spend on executing delete operations.
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.DeleteTotal">
      <summary>
            Returns the number of delete operation executed
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.IndexCurrent">
      <summary>
            Returns the currently in-flight indexing operations.
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.IndexFailed">
      <summary>
            The number of failed indexing operations
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.IndexTimeInMilliseconds">
      <summary>
            The total amount of time spend on executing index operations.
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.IndexTotal">
      <summary>
            The total number of indexing operations
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.IsThrottled">
      <summary>
            Returns if the index is under merge throttling control
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.NoopUpdateTotal">
      <summary>
            Returns the number of noop update operations
            </summary>
    </member>
    <member name="P:Nest.ShardIndexing.ThrottleTimeInMilliseconds">
      <summary>
            Gets the amount of time that the index has been under merge throttling control
            </summary>
    </member>
    <member name="F:Nest.ShardRoutingState.Unassigned">
      <summary>
            The shard is not assigned to any node.
            </summary>
    </member>
    <member name="F:Nest.ShardRoutingState.Initializing">
      <summary>
            The shard is initializing (probably recovering from either a peer shard or gateway).
            </summary>
    </member>
    <member name="F:Nest.ShardRoutingState.Started">
      <summary>
            The shard is started.
            </summary>
    </member>
    <member name="F:Nest.ShardRoutingState.Relocating">
      <summary>
            The shard is in the process being relocated.
            </summary>
    </member>
    <member name="T:Nest.ClearCacheRequest">
      <summary>Request for ClearCache <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html</para></summary>
    </member>
    <member name="M:Nest.ClearCacheRequest.#ctor">
      <summary>/_cache/clear</summary>
    </member>
    <member name="M:Nest.ClearCacheRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_cache/clear</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ClearCacheRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.ClearCacheRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.ClearCacheRequest.Fielddata">
      <summary>Clear field data</summary>
    </member>
    <member name="P:Nest.ClearCacheRequest.Fields">
      <summary>A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)</summary>
    </member>
    <member name="P:Nest.ClearCacheRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.ClearCacheRequest.Query">
      <summary>Clear query caches</summary>
    </member>
    <member name="P:Nest.ClearCacheRequest.Request">
      <summary>Clear request cache</summary>
    </member>
    <member name="T:Nest.FlushRequest">
      <summary>Request for Flush <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html</para></summary>
    </member>
    <member name="M:Nest.FlushRequest.#ctor">
      <summary>/_flush</summary>
    </member>
    <member name="M:Nest.FlushRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_flush</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.FlushRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.FlushRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.FlushRequest.Force">
      <summary>
             Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if
             transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)
            </summary>
    </member>
    <member name="P:Nest.FlushRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.FlushRequest.WaitIfOngoing">
      <summary>
             If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default
             is true. If set to false the flush will be skipped iff if another flush operation is already running.
            </summary>
    </member>
    <member name="T:Nest.ForceMergeRequest">
      <summary>Request for ForceMerge <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html</para></summary>
    </member>
    <member name="M:Nest.ForceMergeRequest.#ctor">
      <summary>/_forcemerge</summary>
    </member>
    <member name="M:Nest.ForceMergeRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_forcemerge</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ForceMergeRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.ForceMergeRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.ForceMergeRequest.Flush">
      <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
    </member>
    <member name="P:Nest.ForceMergeRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.ForceMergeRequest.MaxNumSegments">
      <summary>The number of segments the index should be merged into (default: dynamic)</summary>
    </member>
    <member name="P:Nest.ForceMergeRequest.OnlyExpungeDeletes">
      <summary>Specify whether the operation should only expunge deleted documents</summary>
    </member>
    <member name="T:Nest.RefreshRequest">
      <summary>Request for Refresh <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html</para></summary>
    </member>
    <member name="M:Nest.RefreshRequest.#ctor">
      <summary>/_refresh</summary>
    </member>
    <member name="M:Nest.RefreshRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_refresh</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.RefreshRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.RefreshRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.RefreshRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="T:Nest.SyncedFlushRequest">
      <summary>Request for SyncedFlush <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html#synced-flush-api</para></summary>
    </member>
    <member name="M:Nest.SyncedFlushRequest.#ctor">
      <summary>/_flush/synced</summary>
    </member>
    <member name="M:Nest.SyncedFlushRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_flush/synced</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SyncedFlushRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.SyncedFlushRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.SyncedFlushRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="T:Nest.DeletePipelineRequest">
      <summary>Request for DeletePipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.DeletePipelineRequest.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeletePipelineRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeletePipelineRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.DeletePipelineRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.GetPipelineRequest">
      <summary>Request for GetPipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.GetPipelineRequest.#ctor">
      <summary>/_ingest/pipeline</summary>
    </member>
    <member name="M:Nest.GetPipelineRequest.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetPipelineRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="M:Nest.PipelineDescriptor.Description(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.PipelineDescriptor.Processors(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PipelineDescriptor.Processors(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PipelineDescriptor.OnFailure(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
      <inheritdoc />
    </member>
    <member name="M:Nest.PipelineDescriptor.OnFailure(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
      <inheritdoc />
    </member>
    <member name="T:Nest.IProcessor">
      <summary> Ingest pipelines are composed of one or more processors </summary>
    </member>
    <member name="P:Nest.IProcessor.Name">
      <summary> The name of the processor, will be used as the key when persisting the processor on the pipeline </summary>
    </member>
    <member name="P:Nest.IProcessor.OnFailure">
      <summary>
            If a processor fails, call these processors instead. Read more about handling failures here:
            https://www.elastic.co/guide/en/elasticsearch/reference/current/handling-failure-in-pipelines.html
            </summary>
    </member>
    <member name="P:Nest.IProcessor.If">
      <summary> A painless script predicate that can control whether this processor should be executed or not </summary>
    </member>
    <member name="P:Nest.IProcessor.Tag">
      <summary>
            A tag is simply a string identifier of the specific instantiation of a certain processor
            in a pipeline. The tag field does not affect the processor’s behavior, but is very useful
            for bookkeeping and tracing errors to specific processors.
            </summary>
    </member>
    <member name="P:Nest.IProcessor.IgnoreFailure">
      <summary> When a failure happens, ignore it and proceed to the next processor </summary>
    </member>
    <member name="T:Nest.ProcessorBase">
      <inheritdoc cref="T:Nest.IProcessor" />
    </member>
    <member name="P:Nest.ProcessorBase.If">
      <inheritdoc cref="P:Nest.IProcessor.If" />
    </member>
    <member name="P:Nest.ProcessorBase.Tag">
      <inheritdoc cref="P:Nest.IProcessor.Tag" />
    </member>
    <member name="P:Nest.ProcessorBase.IgnoreFailure">
      <inheritdoc cref="P:Nest.IProcessor.IgnoreFailure" />
    </member>
    <member name="P:Nest.ProcessorBase.OnFailure">
      <inheritdoc cref="P:Nest.IProcessor.OnFailure" />
    </member>
    <member name="T:Nest.ProcessorDescriptorBase`2">
      <inheritdoc cref="T:Nest.IProcessor" />
    </member>
    <member name="M:Nest.ProcessorDescriptorBase`2.OnFailure(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
      <summary>
            If a processor fails, call these processors instead. Read more about handling failures here:
            https://www.elastic.co/guide/en/elasticsearch/reference/current/handling-failure-in-pipelines.html
            </summary>
      <inheritdoc cref="P:Nest.IProcessor.OnFailure" />
    </member>
    <member name="M:Nest.ProcessorDescriptorBase`2.OnFailure(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
      <summary>
            If a processor fails, call these processors instead. Read more about handling failures here:
            https://www.elastic.co/guide/en/elasticsearch/reference/current/handling-failure-in-pipelines.html
            </summary>
      <inheritdoc cref="P:Nest.IProcessor.OnFailure" />
    </member>
    <member name="M:Nest.ProcessorDescriptorBase`2.If(System.String)">
      <summary> A painless script predicate that can control whether this processor should be executed or not </summary>
      <inheritdoc cref="P:Nest.IProcessor.If" />
    </member>
    <member name="M:Nest.ProcessorDescriptorBase`2.Tag(System.String)">
      <summary>
            A tag is simply a string identifier of the specific instantiation of a certain processor
            in a pipeline. The tag field does not affect the processor’s behavior, but is very useful
            for bookkeeping and tracing errors to specific processors.
            </summary>
      <inheritdoc cref="P:Nest.IProcessor.Tag" />
    </member>
    <member name="M:Nest.ProcessorDescriptorBase`2.IgnoreFailure(System.Nullable{System.Boolean})">
      <summary> When a failure happens, ignore it and proceed to the next processor </summary>
      <inheritdoc cref="P:Nest.IProcessor.IgnoreFailure" />
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Attachment``1(System.Func{Nest.AttachmentProcessorDescriptor{``0},Nest.IAttachmentProcessor})">
      <summary>
            The ingest attachment plugin lets Elasticsearch extract file attachments in common formats
            (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.
            You can use the ingest attachment plugin as a replacement for the mapper attachment plugin.
            </summary>
      <remarks>
            Requires the Ingest Attachment Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.DateIndexName``1(System.Func{Nest.DateIndexNameProcessorDescriptor{``0},Nest.IDateIndexNameProcessor})">
      <summary>
            Point documents to the right time-based index based on a date or timestamp field in a document
            by using the date math index name support.
            </summary>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.DotExpander``1(System.Func{Nest.DotExpanderProcessorDescriptor{``0},Nest.IDotExpanderProcessor})">
      <summary>
            Expands a field with dots into an object field.
            This processor allows fields with dots in the name to be accessible by other processors in the pipeline.
            Otherwise these fields can’t be accessed by any processor.
            </summary>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.GeoIp``1(System.Func{Nest.GeoIpProcessorDescriptor{``0},Nest.IGeoIpProcessor})">
      <summary>
            Adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
      <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Script(System.Func{Nest.ScriptProcessorDescriptor,Nest.IScriptProcessor})">
      <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Sort``1(System.Func{Nest.SortProcessorDescriptor{``0},Nest.ISortProcessor})">
      <summary>
            The Sort processor sorts the elements of an array ascending or descending. Homogeneous arrays of numbers
            will be sorted numerically, while arrays of strings or heterogeneous arrays
             of strings and numbers will be sorted lexicographically.
            </summary>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Json``1(System.Func{Nest.JsonProcessorDescriptor{``0},Nest.IJsonProcessor})">
      <summary>
            Converts a JSON string into a structured JSON object.
            </summary>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.UserAgent``1(System.Func{Nest.UserAgentProcessorDescriptor{``0},Nest.IUserAgentProcessor})">
      <summary>
            The user_agent processor extracts details from the user agent string a browser sends with its web requests.
            This processor adds this information by default under the user_agent field.
            The ingest-user-agent plugin ships by default with the regexes.yaml made available by
            uap-java with an Apache 2.0 license.
            </summary>
      <remarks>
            Requires the UserAgent Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Kv``1(System.Func{Nest.KeyValueProcessorDescriptor{``0},Nest.IKeyValueProcessor})">
      <inheritdoc cref="T:Nest.IKeyValueProcessor" />
    </member>
    <member name="M:Nest.ProcessorsDescriptor.UrlDecode``1(System.Func{Nest.UrlDecodeProcessorDescriptor{``0},Nest.IUrlDecodeProcessor})">
      <summary>
            URL-decodes a string
            </summary>
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Bytes``1(System.Func{Nest.BytesProcessorDescriptor{``0},Nest.IBytesProcessor})">
      <inheritdoc cref="T:Nest.IBytesProcessor" />
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Dissect``1(System.Func{Nest.DissectProcessorDescriptor{``0},Nest.IDissectProcessor})">
      <inheritdoc cref="T:Nest.IDissectProcessor" />
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Drop(System.Func{Nest.DropProcessorDescriptor,Nest.IDropProcessor})">
      <inheritdoc cref="T:Nest.IDropProcessor" />
    </member>
    <member name="M:Nest.ProcessorsDescriptor.SetSecurityUser``1(System.Func{Nest.SetSecurityUserProcessorDescriptor{``0},Nest.ISetSecurityUserProcessor})">
      <inheritdoc cref="T:Nest.ISetSecurityUserProcessor" />
    </member>
    <member name="M:Nest.ProcessorsDescriptor.Pipeline(System.Func{Nest.PipelineProcessorDescriptor,Nest.IPipelineProcessor})">
      <inheritdoc cref="T:Nest.IPipelineProcessor" />
    </member>
    <member name="T:Nest.IBytesProcessor">
      <summary>
            Converts a human readable byte value (e.g. 1kb) to its value in bytes (e.g. 1024).
            Supported human readable units are "b", "kb", "mb", "gb", "tb", "pb" case insensitive.
            An error will occur if the field is not a supported format or resultant value exceeds 2^63.
            </summary>
    </member>
    <member name="P:Nest.IBytesProcessor.Field">
      <summary> The field to convert bytes from </summary>
    </member>
    <member name="P:Nest.IBytesProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IBytesProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="P:Nest.IBytesProcessor.TargetField">
      <summary> The field to assign the converted value to, by default <see cref="P:Nest.IBytesProcessor.Field" /> is updated in-place </summary>
    </member>
    <member name="T:Nest.BytesProcessor">
      <inheritdoc cref="T:Nest.IBytesProcessor" />
    </member>
    <member name="P:Nest.BytesProcessor.Field">
      <summary> The field to convert bytes from </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BytesProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IBytesProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.BytesProcessor.TargetField">
      <summary> The field to assign the converted value to, by default <see cref="P:Nest.IBytesProcessor.Field" /> is updated in-place </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.BytesProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IBytesProcessor" />
    </member>
    <member name="M:Nest.BytesProcessorDescriptor`1.Field(Nest.Field)">
      <summary> The field to convert bytes from </summary>
      <inheritdoc cref="P:Nest.IBytesProcessor.Field" />
    </member>
    <member name="M:Nest.BytesProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IBytesProcessor.Field" />
    </member>
    <member name="M:Nest.BytesProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary> The field to assign the converted value to, by default <see cref="P:Nest.IBytesProcessor.Field" /> is updated in-place </summary>
      <inheritdoc cref="P:Nest.IBytesProcessor.TargetField" />
    </member>
    <member name="M:Nest.BytesProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IBytesProcessor.TargetField" />
    </member>
    <member name="M:Nest.BytesProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IBytesProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IBytesProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IConvertProcessor">
      <summary>
            Converts a field in the currently ingested document to a different type,
            such as converting a string to an integer.
            If the field value is an array, all members will be converted.
            </summary>
    </member>
    <member name="P:Nest.IConvertProcessor.Field">
      <summary>
            The field whose value is to be converted
            </summary>
    </member>
    <member name="P:Nest.IConvertProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
    </member>
    <member name="P:Nest.IConvertProcessor.Type">
      <summary>
            The type to convert the existing value to
            </summary>
    </member>
    <member name="P:Nest.IConvertProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IConvertProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="P:Nest.ConvertProcessor.Field">
      <summary>
            The field whose value is to be converted
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ConvertProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ConvertProcessor.Type">
      <summary>
            The type to convert the existing value to
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ConvertProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IConvertProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ConvertProcessor.Name">
      <inheritdoc />
    </member>
    <member name="M:Nest.ConvertProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field whose value is to be converted
            </summary>
      <inheritdoc cref="P:Nest.IConvertProcessor.Field" />
    </member>
    <member name="M:Nest.ConvertProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IConvertProcessor.Field" />
    </member>
    <member name="M:Nest.ConvertProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IConvertProcessor.TargetField" />
    </member>
    <member name="M:Nest.ConvertProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IConvertProcessor.TargetField" />
    </member>
    <member name="M:Nest.ConvertProcessorDescriptor`1.Type(System.Nullable{Nest.ConvertProcessorType})">
      <summary>
            The type to convert the existing value to
            </summary>
      <inheritdoc cref="P:Nest.IConvertProcessor.Type" />
    </member>
    <member name="M:Nest.ConvertProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IConvertProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IConvertProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IDateIndexNameProcessor">
      <summary>
            The purpose of this processor is to point documents to the right time
            based index based on a date or timestamp field in a document
            by using the date math index name support.
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.DateFormats">
      <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.DateRounding">
      <summary>
            How to round the date when formatting the date into the index name.
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.Field">
      <summary>
            The field to get the date or timestamp from.
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.IndexNameFormat">
      <summary>
            The format to be used when printing the parsed date into
            the index name.
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.IndexNamePrefix">
      <summary>
            A prefix of the index name to be prepended before the printed date.
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.Locale">
      <summary>
            The locale to use when parsing the date from the document
            being preprocessed, relevant when parsing month names or
            week days.
            </summary>
    </member>
    <member name="P:Nest.IDateIndexNameProcessor.TimeZone">
      <summary>
            The timezone to use when parsing the date and when date
            math index supports resolves expressions into concrete
            index names.
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.DateFormats">
      <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.DateRounding">
      <summary>
            How to round the date when formatting the date into the index name.
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.Field">
      <summary>
            The field to get the date or timestamp from.
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.IndexNameFormat">
      <summary>
            The format to be used when printing the parsed date into
            the index name.
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.IndexNamePrefix">
      <summary>
            A prefix of the index name to be prepended before the printed date.
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.Locale">
      <summary>
            The locale to use when parsing the date from the document
            being preprocessed, relevant when parsing month names or
            week days.
            </summary>
    </member>
    <member name="P:Nest.DateIndexNameProcessor.TimeZone">
      <summary>
            The timezone to use when parsing the date and when date
            math index supports resolves expressions into concrete
            index names.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to get the date or timestamp from.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            The field to get the date or timestamp from.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.IndexNamePrefix(System.String)">
      <summary>
            A prefix of the index name to be prepended before the printed date.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.DateRounding(System.Nullable{Nest.DateRounding})">
      <summary>
            How to round the date when formatting the date into the index name.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.DateFormats(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.DateFormats(System.String[])">
      <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd'T'HH:mm:ss.SSSZ
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.TimeZone(System.String)">
      <summary>
            The timezone to use when parsing the date and when date
            math index supports resolves expressions into concrete
            index names.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.Locale(System.String)">
      <summary>
            The locale to use when parsing the date from the document
            being preprocessed, relevant when parsing month names or
            week days.
            </summary>
    </member>
    <member name="M:Nest.DateIndexNameProcessorDescriptor`1.IndexNameFormat(System.String)">
      <summary>
            The format to be used when printing the parsed date into
            the index name.
            </summary>
    </member>
    <member name="P:Nest.IDateProcessor.Field">
      <summary>
            The field to get the date from.
            </summary>
    </member>
    <member name="P:Nest.IDateProcessor.Formats">
      <summary>
            An array of the expected date formats. Can be a Joda pattern or one of
            the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.
            </summary>
    </member>
    <member name="P:Nest.IDateProcessor.Locale">
      <summary>
            The locale to use when parsing the date, relevant when parsing month names or week days.
            Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.IDateProcessor.TargetField">
      <summary>
            The field that will hold the parsed date. Defaults to @timestamp
            </summary>
    </member>
    <member name="P:Nest.IDateProcessor.TimeZone">
      <summary>
            The timezone to use when parsing the date. Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.DateProcessor.Field">
      <summary>
            The field to get the date from.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProcessor.Formats">
      <summary>
            An array of the expected date formats. Can be a Joda pattern or one of
            the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProcessor.Locale">
      <summary>
            The locale to use when parsing the date, relevant when parsing month names or week days.
            Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProcessor.TargetField">
      <summary>
            The field that will hold the parsed date. Defaults to @timestamp
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProcessor.TimeZone">
      <summary>
            The timezone to use when parsing the date. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProcessor.Name">
      <inheritdoc />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to get the date from.
            </summary>
      <inheritdoc cref="P:Nest.IDateProcessor.Field" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IDateProcessor.Field" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field that will hold the parsed date. Defaults to @timestamp
            </summary>
      <inheritdoc cref="P:Nest.IDateProcessor.TargetField" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IDateProcessor.TargetField" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.Formats(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            An array of the expected date formats. Can be a Joda pattern or one of
            the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.
            </summary>
      <inheritdoc cref="P:Nest.IDateProcessor.Formats" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.Formats(System.String[])">
      <summary>
            An array of the expected date formats. Can be a Joda pattern or one of
            the following formats: ISO8601, UNIX, UNIX_MS, or TAI64N.
            </summary>
      <inheritdoc cref="P:Nest.IDateProcessor.Formats" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.TimeZone(System.String)">
      <summary>
            The timezone to use when parsing the date. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IDateProcessor.TimeZone" />
    </member>
    <member name="M:Nest.DateProcessorDescriptor`1.Locale(System.String)">
      <summary>
            The locale to use when parsing the date, relevant when parsing month names or week days.
            Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IDateProcessor.Locale" />
    </member>
    <member name="T:Nest.IDissectProcessor">
      <summary>
            Similar to the Grok Processor, dissect also extracts structured fields out of a single text field
            within a document. However unlike the Grok Processor, dissect does not use Regular Expressions.
            This allows dissect’s syntax to be simple and, for some cases faster, than the Grok Processor.
            </summary>
    </member>
    <member name="P:Nest.IDissectProcessor.Field">
      <summary> The field to dissect </summary>
    </member>
    <member name="P:Nest.IDissectProcessor.Pattern">
      <summary> The pattern to apply to the field </summary>
    </member>
    <member name="P:Nest.IDissectProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and field does not exist or is null, the processor quietly exits without modifying the document
            </summary>
    </member>
    <member name="P:Nest.IDissectProcessor.AppendSeparator">
      <summary> The character(s) that separate the appended fields. </summary>
    </member>
    <member name="T:Nest.DissectProcessor">
      <inheritdoc cref="T:Nest.IDissectProcessor" />
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.DissectProcessor.Field" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.DissectProcessor.Pattern" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.DissectProcessor.IgnoreMissing" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.DissectProcessor.AppendSeparator" -->
    <member name="T:Nest.DissectProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IDissectProcessor" />
    </member>
    <!-- Badly formed XML comment ignored for member "M:Nest.DissectProcessorDescriptor`1.Field(Nest.Field)" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.DissectProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.DissectProcessorDescriptor`1.Pattern(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.DissectProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})" -->
    <!-- Badly formed XML comment ignored for member "M:Nest.DissectProcessorDescriptor`1.AppendSeparator(System.String)" -->
    <member name="T:Nest.IDotExpanderProcessor">
      <summary>
            Expands a field with dots into an object field.
            This processor allows fields with dots in the name to be accessible by other processors in the pipeline.
            Otherwise these fields can’t be accessed by any processor.
            </summary>
    </member>
    <member name="P:Nest.IDotExpanderProcessor.Field">
      <summary>
            The field to expand into an object field
            </summary>
    </member>
    <member name="P:Nest.IDotExpanderProcessor.Path">
      <summary>
            The field that contains the field to expand.
            Only required if the field to expand is part another object field,
            because the field option can only understand leaf fields.
            </summary>
    </member>
    <member name="T:Nest.DotExpanderProcessor">
      <inheritdoc cref="T:Nest.IDotExpanderProcessor" />
    </member>
    <member name="P:Nest.DotExpanderProcessor.Field">
      <summary>
            The field to expand into an object field
            </summary>
    </member>
    <member name="P:Nest.DotExpanderProcessor.Path">
      <summary>
            The field that contains the field to expand.
            Only required if the field to expand is part another object field,
            because the field option can only understand leaf fields.
            </summary>
    </member>
    <member name="T:Nest.DotExpanderProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IDotExpanderProcessor" />
    </member>
    <member name="M:Nest.DotExpanderProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to expand into an object field
            </summary>
      <inheritdoc cref="P:Nest.IDotExpanderProcessor.Field" />
    </member>
    <member name="M:Nest.DotExpanderProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            The field to expand into an object field
            </summary>
    </member>
    <member name="M:Nest.DotExpanderProcessorDescriptor`1.Path(System.String)">
      <summary>
            The field that contains the field to expand.
            Only required if the field to expand is part another object field,
            because the field option can only understand leaf fields.
            </summary>
      <inheritdoc cref="P:Nest.IDotExpanderProcessor.Path" />
    </member>
    <member name="T:Nest.IDropProcessor">
      <summary>
            Drops the document without raising any errors. This is useful to prevent the document from getting indexed based on some condition.
            </summary>
    </member>
    <member name="T:Nest.DropProcessor">
      <inheritdoc cref="T:Nest.IDropProcessor" />
    </member>
    <member name="T:Nest.DropProcessorDescriptor">
      <inheritdoc cref="T:Nest.IDropProcessor" />
    </member>
    <member name="T:Nest.IFailProcessor">
      <summary>
            Raises an exception. This is useful for when you expect a pipeline to
            fail and want to relay a specific message to the requester.
            </summary>
    </member>
    <member name="P:Nest.IFailProcessor.Message">
      <summary>
            The error message thrown by the processor. Supports template snippets.
            </summary>
    </member>
    <member name="T:Nest.FailProcessor">
      <inheritdoc cref="T:Nest.IFailProcessor" />
    </member>
    <member name="P:Nest.FailProcessor.Message">
      <summary>
            The error message thrown by the processor. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.FailProcessorDescriptor">
      <inheritdoc cref="T:Nest.IFailProcessor" />
    </member>
    <member name="M:Nest.FailProcessorDescriptor.Message(System.String)">
      <summary>
            The error message thrown by the processor. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IFailProcessor.Message" />
    </member>
    <member name="T:Nest.IForeachProcessor">
      <summary>
            Processes elements in an array of unknown length.
            All processors can operate on elements inside an array, but if all elements of
            an array need to be processed in the same way, defining a processor for each
            element becomes cumbersome and tricky because it is likely that the number of
            elements in an array is unknown. For this reason the foreach processor exists.
            By specifying the field holding array elements and a processor that defines what
            should happen to each element, array fields can easily be preprocessed.
            </summary>
    </member>
    <member name="P:Nest.IForeachProcessor.Field">
      <summary>
            The array field
            </summary>
    </member>
    <member name="P:Nest.IForeachProcessor.Processor">
      <summary>
            The processor to execute against each field
            </summary>
    </member>
    <member name="P:Nest.IForeachProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IForeachProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="T:Nest.ForeachProcessor">
      <inheritdoc cref="T:Nest.IForeachProcessor" />
    </member>
    <member name="P:Nest.ForeachProcessor.Field">
      <summary>
            The array field
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ForeachProcessor.Processor">
      <summary>
            The processor to execute against each field
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ForeachProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IForeachProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ForeachProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IForeachProcessor" />
    </member>
    <member name="M:Nest.ForeachProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The array field
            </summary>
      <inheritdoc cref="P:Nest.IForeachProcessor.Field" />
    </member>
    <member name="M:Nest.ForeachProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IForeachProcessor.Field" />
    </member>
    <member name="M:Nest.ForeachProcessorDescriptor`1.Processor(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
      <summary>
            The processor to execute against each field
            </summary>
      <inheritdoc cref="P:Nest.IForeachProcessor.Processor" />
    </member>
    <member name="M:Nest.ForeachProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IForeachProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IForeachProcessor.IgnoreMissing" />
    </member>
    <member name="P:Nest.IGrokProcessor.Field">
      <summary>
            The field to use for grok expression parsing
            </summary>
    </member>
    <member name="P:Nest.IGrokProcessor.PatternDefinitions">
      <summary>
            A map of pattern-name and pattern tuples defining custom patterns
            to be used by the current processor. Patterns matching existing
            names will override the pre-existing definition.
            </summary>
    </member>
    <member name="P:Nest.IGrokProcessor.Patterns">
      <summary>
            An ordered list of grok expression to match and extract named captures with.
            Returns on the first expression in the list that matches.
            </summary>
    </member>
    <member name="P:Nest.IGrokProcessor.TraceMatch">
      <summary>
            when <c>true</c>, _ingest._grok_match_index will be inserted into your matched document’s
            metadata with the index into the pattern found in patterns that matched.
            </summary>
    </member>
    <member name="P:Nest.IGrokProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IGrokProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="T:Nest.GrokProcessor">
      <inheritdoc cref="T:Nest.IGrokProcessor" />
    </member>
    <member name="P:Nest.GrokProcessor.Field">
      <summary>
            The field to use for grok expression parsing
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GrokProcessor.PatternDefinitions">
      <summary>
            A map of pattern-name and pattern tuples defining custom patterns
            to be used by the current processor. Patterns matching existing
            names will override the pre-existing definition.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GrokProcessor.Patterns">
      <summary>
            An ordered list of grok expression to match and extract named captures with.
            Returns on the first expression in the list that matches.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GrokProcessor.TraceMatch">
      <summary>
            when <c>true</c>, _ingest._grok_match_index will be inserted into your matched document’s
            metadata with the index into the pattern found in patterns that matched.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GrokProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IGrokProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GrokProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IGrokProcessor" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to use for grok expression parsing
            </summary>
      <inheritdoc cref="P:Nest.IGrokProcessor.Field" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IGrokProcessor.Field" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.Patterns(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            An ordered list of grok expression to match and extract named captures with.
            Returns on the first expression in the list that matches.
            </summary>
      <inheritdoc cref="P:Nest.IGrokProcessor.Patterns" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.Patterns(System.String[])">
      <summary>
            An ordered list of grok expression to match and extract named captures with.
            Returns on the first expression in the list that matches.
            </summary>
      <inheritdoc cref="P:Nest.IGrokProcessor.Patterns" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.PatternDefinitions(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <summary>
            A map of pattern-name and pattern tuples defining custom patterns
            to be used by the current processor. Patterns matching existing
            names will override the pre-existing definition.
            </summary>
      <inheritdoc cref="P:Nest.IGrokProcessor.PatternDefinitions" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.TraceMatch(System.Nullable{System.Boolean})">
      <summary>
            when <c>true</c>, _ingest._grok_match_index will be inserted into your matched document’s
            metadata with the index into the pattern found in patterns that matched.
            </summary>
      <inheritdoc cref="P:Nest.IGrokProcessor.TraceMatch" />
    </member>
    <member name="M:Nest.GrokProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IGrokProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IGrokProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IGsubProcessor">
      <summary>
            Converts a string field by applying a regular expression and a replacement.
            If the field is not a string, the processor will throw an exception.
            </summary>
    </member>
    <member name="P:Nest.IGsubProcessor.Field">
      <summary>
            The field to apply the replacement to
            </summary>
    </member>
    <member name="P:Nest.IGsubProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
    </member>
    <member name="P:Nest.IGsubProcessor.Pattern">
      <summary>
            The pattern to be replaced
            </summary>
    </member>
    <member name="P:Nest.IGsubProcessor.Replacement">
      <summary>
            The string to replace the matching patterns with
            </summary>
    </member>
    <member name="P:Nest.IGsubProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IGsubProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="T:Nest.GsubProcessor">
      <inheritdoc cref="T:Nest.IGsubProcessor" />
    </member>
    <member name="P:Nest.GsubProcessor.Field">
      <summary>
            The field to apply the replacement to
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GsubProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GsubProcessor.Pattern">
      <summary>
            The pattern to be replaced
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GsubProcessor.Replacement">
      <summary>
            The string to replace the matching patterns with
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GsubProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IGsubProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GsubProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IGsubProcessor" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to apply the replacement to
            </summary>
      <inheritdoc cref="P:Nest.IGsubProcessor.Field" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IGsubProcessor.Field" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IGsubProcessor.TargetField" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IGsubProcessor.TargetField" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.Pattern(System.String)">
      <summary>
            The pattern to be replaced
            </summary>
      <inheritdoc cref="P:Nest.IGsubProcessor.Pattern" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.Replacement(System.String)">
      <summary>
            The string to replace the matching patterns with
            </summary>
      <inheritdoc cref="P:Nest.IGsubProcessor.Replacement" />
    </member>
    <member name="M:Nest.GsubProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IGsubProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IGsubProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IJoinProcessor">
      <summary>
            Joins each element of an array into a single string using a separator
            character between each element. Throws an error when the field is not an array.
            </summary>
    </member>
    <member name="P:Nest.IJoinProcessor.Field">
      <summary>
            The field to be joined
            </summary>
    </member>
    <member name="P:Nest.IJoinProcessor.Separator">
      <summary>
            The separator character
            </summary>
    </member>
    <member name="P:Nest.IJoinProcessor.TargetField">
      <summary>
            The field to assign the joined value to, by default field is updated in-place
            </summary>
    </member>
    <member name="T:Nest.JoinProcessor">
      <inheritdoc cref="T:Nest.IJoinProcessor" />
    </member>
    <member name="P:Nest.JoinProcessor.Field">
      <summary>
            The field to be joined
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.JoinProcessor.Separator">
      <summary>
            The separator character
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.JoinProcessor.TargetField">
      <summary>
            The field to assign the joined value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.JoinProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IJoinProcessor" />
    </member>
    <member name="M:Nest.JoinProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to be joined
            </summary>
      <inheritdoc cref="P:Nest.IJoinProcessor.Field" />
    </member>
    <member name="M:Nest.JoinProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IJoinProcessor.Field" />
    </member>
    <member name="M:Nest.JoinProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the joined value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IJoinProcessor.TargetField" />
    </member>
    <member name="M:Nest.JoinProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the joined value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IJoinProcessor.TargetField" />
    </member>
    <member name="M:Nest.JoinProcessorDescriptor`1.Separator(System.String)">
      <summary>
            The separator character
            </summary>
      <inheritdoc cref="P:Nest.IJoinProcessor.Separator" />
    </member>
    <member name="T:Nest.IJsonProcessor">
      <summary>
            Converts a JSON string into a structured JSON object.
            </summary>
    </member>
    <member name="P:Nest.IJsonProcessor.AddToRoot">
      <summary>
            Flag that forces the serialized json to be injected into the top level of the document.
            <see cref="P:Nest.IJsonProcessor.TargetField" /> must not be set when this option is chosen.
            </summary>
    </member>
    <member name="P:Nest.IJsonProcessor.Field">
      <summary>
            Field holding json as a string
            </summary>
    </member>
    <member name="P:Nest.IJsonProcessor.TargetField">
      <summary>
            The field to insert the converted structured object into
            </summary>
    </member>
    <member name="T:Nest.JsonProcessor">
      <inheritdoc cref="T:Nest.IJsonProcessor" />
    </member>
    <member name="P:Nest.JsonProcessor.AddToRoot">
      <summary>
            Flag that forces the serialized json to be injected into the top level of the document.
            <see cref="P:Nest.IJsonProcessor.TargetField" /> must not be set when this option is chosen.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.JsonProcessor.Field">
      <summary>
            Field holding json as a string
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.JsonProcessor.TargetField">
      <summary>
            The field to insert the converted structured object into
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.JsonProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IJsonProcessor" />
    </member>
    <member name="M:Nest.JsonProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            Field holding json as a string
            </summary>
      <inheritdoc cref="P:Nest.IJsonProcessor.Field" />
    </member>
    <member name="M:Nest.JsonProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IJsonProcessor.Field" />
    </member>
    <member name="M:Nest.JsonProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to insert the converted structured object into
            </summary>
      <inheritdoc cref="P:Nest.IJsonProcessor.TargetField" />
    </member>
    <member name="M:Nest.JsonProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IJsonProcessor.TargetField" />
    </member>
    <member name="M:Nest.JsonProcessorDescriptor`1.AddToRoot(System.Nullable{System.Boolean})">
      <summary>
            Flag that forces the serialized json to be injected into the top level of the document.
            <see cref="P:Nest.IJsonProcessor.TargetField" /> must not be set when this option is chosen.
            </summary>
      <inheritdoc cref="P:Nest.IJsonProcessor.AddToRoot" />
    </member>
    <member name="T:Nest.IKeyValueProcessor">
      <summary>
            Processor to automatically parse messages (or specific event fields) which are of the key=value variety.
            </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.ExcludeKeys">
      <summary> List of keys to exclude from document </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.Field">
      <summary> The field to be parsed </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.FieldSplit">
      <summary> Regex pattern to use for splitting key-value pairs </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IKeyValueProcessor.Field" /> does not exist or is `null`,
            the processor quietly exits without modifying the document
            </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.IncludeKeys">
      <summary> List of keys to filter and insert into document. Defaults to including all keys </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.Prefix">
      <summary> Prefix to be added to extracted keys </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.StripBrackets">
      <summary> If true strip brackets (), &lt;&gt;, [] as well as quotes ' and " from extracted values </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.TargetField">
      <summary> The field to insert the extracted keys into. Defaults to the root of the document </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.TrimKey">
      <summary> String of characters to trim from extracted keys </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.TrimValue">
      <summary> String of characters to trim from extracted values </summary>
    </member>
    <member name="P:Nest.IKeyValueProcessor.ValueSplit">
      <summary> Regex pattern to use for splitting the key from the value within a key-value pair </summary>
    </member>
    <member name="T:Nest.KeyValueProcessor">
      <inheritdoc cref="T:Nest.IKeyValueProcessor" />
    </member>
    <member name="P:Nest.KeyValueProcessor.ExcludeKeys">
      <summary> List of keys to exclude from document </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.Field">
      <summary> The field to be parsed </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.FieldSplit">
      <summary> Regex pattern to use for splitting key-value pairs </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IKeyValueProcessor.Field" /> does not exist or is `null`,
            the processor quietly exits without modifying the document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.IncludeKeys">
      <summary> List of keys to filter and insert into document. Defaults to including all keys </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.Prefix">
      <summary> Prefix to be added to extracted keys </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.StripBrackets">
      <summary> If true strip brackets (), &lt;&gt;, [] as well as quotes ' and " from extracted values </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.TargetField">
      <summary> The field to insert the extracted keys into. Defaults to the root of the document </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.TrimKey">
      <summary> String of characters to trim from extracted keys </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.TrimValue">
      <summary> String of characters to trim from extracted values </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.KeyValueProcessor.ValueSplit">
      <summary> Regex pattern to use for splitting the key from the value within a key-value pair </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.KeyValueProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IKeyValueProcessor" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.Field(Nest.Field)">
      <summary> The field to be parsed </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.Field" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IKeyValueProcessor.Field" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary> The field to insert the extracted keys into. Defaults to the root of the document </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.TargetField" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IKeyValueProcessor.TargetField" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.FieldSplit(System.String)">
      <summary> Regex pattern to use for splitting key-value pairs </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.FieldSplit" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.ValueSplit(System.String)">
      <summary> Regex pattern to use for splitting the key from the value within a key-value pair </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.ValueSplit" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.Prefix(System.String)">
      <summary> Prefix to be added to extracted keys </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.Prefix" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IKeyValueProcessor.Field" /> does not exist or is `null`,
            the processor quietly exits without modifying the document
            </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.IgnoreMissing" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.IncludeKeys(System.Collections.Generic.IEnumerable{System.String})">
      <summary> List of keys to filter and insert into document. Defaults to including all keys </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.IncludeKeys" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.IncludeKeys(System.String[])">
      <summary> List of keys to filter and insert into document. Defaults to including all keys </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.IncludeKeys" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.ExcludeKeys(System.Collections.Generic.IEnumerable{System.String})">
      <summary> List of keys to exclude from document </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.ExcludeKeys" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.ExcludeKeys(System.String[])">
      <summary> List of keys to exclude from document </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.ExcludeKeys" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.TrimKey(System.String)">
      <summary> String of characters to trim from extracted keys </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.TrimKey" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.TrimValue(System.String)">
      <summary> String of characters to trim from extracted values </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.TrimValue" />
    </member>
    <member name="M:Nest.KeyValueProcessorDescriptor`1.StripBrackets(System.Nullable{System.Boolean})">
      <summary> If true strip brackets (), &lt;&gt;, [] as well as quotes ' and " from extracted values </summary>
      <inheritdoc cref="P:Nest.IKeyValueProcessor.StripBrackets" />
    </member>
    <member name="T:Nest.ILowercaseProcessor">
      <summary>
            Converts a string to its lowercase equivalent.
            </summary>
    </member>
    <member name="P:Nest.ILowercaseProcessor.Field">
      <summary>
            	The field to make lowercase
            </summary>
    </member>
    <member name="P:Nest.ILowercaseProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ILowercaseProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document
            </summary>
    </member>
    <member name="P:Nest.ILowercaseProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
    </member>
    <member name="T:Nest.LowercaseProcessor">
      <inheritdoc cref="T:Nest.ILowercaseProcessor" />
    </member>
    <member name="P:Nest.LowercaseProcessor.Field">
      <summary>
            	The field to make lowercase
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.LowercaseProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ILowercaseProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.LowercaseProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.LowercaseProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.ILowercaseProcessor" />
    </member>
    <member name="M:Nest.LowercaseProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            	The field to make lowercase
            </summary>
      <inheritdoc cref="P:Nest.ILowercaseProcessor.Field" />
    </member>
    <member name="M:Nest.LowercaseProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.ILowercaseProcessor.Field" />
    </member>
    <member name="M:Nest.LowercaseProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.ILowercaseProcessor.TargetField" />
    </member>
    <member name="M:Nest.LowercaseProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.ILowercaseProcessor.TargetField" />
    </member>
    <member name="M:Nest.LowercaseProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ILowercaseProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document
            </summary>
      <inheritdoc cref="P:Nest.ILowercaseProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IPipelineProcessor">
      <summary> Executes another pipeline.</summary>
    </member>
    <member name="P:Nest.IPipelineProcessor.ProcessorName">
      <summary>The name of the pipeline to execute. </summary>
    </member>
    <member name="T:Nest.PipelineProcessor">
      <inheritdoc cref="T:Nest.IPipelineProcessor" />
    </member>
    <member name="P:Nest.PipelineProcessor.ProcessorName">
      <summary>The name of the pipeline to execute. </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PipelineProcessorDescriptor">
      <inheritdoc cref="T:Nest.IPipelineProcessor" />
    </member>
    <member name="M:Nest.PipelineProcessorDescriptor.ProcessorName(System.String)">
      <summary>The name of the pipeline to execute. </summary>
      <inheritdoc cref="P:Nest.IPipelineProcessor.ProcessorName" />
    </member>
    <member name="T:Nest.IAttachmentProcessor">
      <summary>
            The ingest attachment plugin lets Elasticsearch extract file attachments in common formats
            (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.
            You can use the ingest attachment plugin as a replacement for the mapper attachment plugin.
            </summary>
      <remarks>
            Requires the Ingest Attachment Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="P:Nest.IAttachmentProcessor.Field">
      <summary> The field to get the base64 encoded field from </summary>
    </member>
    <member name="P:Nest.IAttachmentProcessor.IgnoreMissing">
      <summary> If `true` and `field` does not exist, the processor quietly exits without modifying the document </summary>
    </member>
    <member name="P:Nest.IAttachmentProcessor.IndexedCharacters">
      <summary>
            The number of chars being used for extraction to prevent huge fields. Use -1 for no limit.
            Defaults to 100000.
            </summary>
    </member>
    <member name="P:Nest.IAttachmentProcessor.IndexedCharactersField">
      <summary> Field name from which you can overwrite the number of chars being used for extraction. </summary>
    </member>
    <member name="P:Nest.IAttachmentProcessor.Properties">
      <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
    </member>
    <member name="P:Nest.IAttachmentProcessor.TargetField">
      <summary> The field that will hold the attachment information </summary>
    </member>
    <member name="T:Nest.AttachmentProcessor">
      <inheritdoc cref="T:Nest.IAttachmentProcessor" />
    </member>
    <member name="P:Nest.AttachmentProcessor.Field">
      <summary> The field to get the base64 encoded field from </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.Field" />
    </member>
    <member name="P:Nest.AttachmentProcessor.IgnoreMissing">
      <summary> If `true` and `field` does not exist, the processor quietly exits without modifying the document </summary>
      <inheritdoc />
      <summary> If `true` and `field` does not exist, the processor quietly exits without modifying the document </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IgnoreMissing" />
    </member>
    <member name="P:Nest.AttachmentProcessor.IndexedCharacters">
      <summary>
            The number of chars being used for extraction to prevent huge fields. Use -1 for no limit.
            Defaults to 100000.
            </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IndexedCharacters" />
    </member>
    <member name="P:Nest.AttachmentProcessor.IndexedCharactersField">
      <summary> Field name from which you can overwrite the number of chars being used for extraction. </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IndexedCharactersField" />
    </member>
    <member name="P:Nest.AttachmentProcessor.Properties">
      <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.Properties" />
    </member>
    <member name="P:Nest.AttachmentProcessor.TargetField">
      <summary> The field that will hold the attachment information </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.TargetField" />
    </member>
    <member name="T:Nest.AttachmentProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IAttachmentProcessor" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.Field(Nest.Field)">
      <summary> The field to get the base64 encoded field from </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.Field" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IAttachmentProcessor.Field" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary> The field that will hold the attachment information </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.TargetField" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IAttachmentProcessor.TargetField" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.IndexedCharacters(System.Nullable{System.Int64})">
      <summary>
            The number of chars being used for extraction to prevent huge fields. Use -1 for no limit.
            Defaults to 100000.
            </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IndexedCharacters" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.IndexedCharactersField(Nest.Field)">
      <summary> Field name from which you can overwrite the number of chars being used for extraction. </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IndexedCharactersField" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.IndexedCharactersField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IndexedCharactersField" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary> If `true` and `field` does not exist, the processor quietly exits without modifying the document </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.IgnoreMissing" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.Properties(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.Properties" />
    </member>
    <member name="M:Nest.AttachmentProcessorDescriptor`1.Properties(System.String[])">
      <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
      <inheritdoc cref="P:Nest.IAttachmentProcessor.Properties" />
    </member>
    <member name="T:Nest.IGeoIpProcessor">
      <summary>
            The GeoIP processor adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
      <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="P:Nest.IGeoIpProcessor.IgnoreMissing">
      <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
    </member>
    <member name="T:Nest.GeoIpProcessor">
      <summary>
            The GeoIP processor adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
      <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="P:Nest.GeoIpProcessor.IgnoreMissing">
      <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GeoIpProcessorDescriptor`1">
      <summary>
            The GeoIP processor adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
      <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="M:Nest.GeoIpProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IUserAgentProcessor">
      <summary>
            The user_agent processor extracts details from the user agent string a browser sends with its web requests.
            This processor adds this information by default under the user_agent field.
            The ingest-user-agent plugin ships by default with the regexes.yaml made available by
            uap-java with an Apache 2.0 license.
            </summary>
      <remarks>
            Requires the UserAgent Processor Plugin to be installed on the cluster.
            </remarks>
    </member>
    <member name="P:Nest.IUserAgentProcessor.IgnoreMissing">
      <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
    </member>
    <member name="T:Nest.UserAgentProcessor">
      <inheritdoc />
    </member>
    <member name="P:Nest.UserAgentProcessor.Field">
      <inheritdoc />
    </member>
    <member name="P:Nest.UserAgentProcessor.IgnoreMissing">
      <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UserAgentProcessor.Properties">
      <inheritdoc />
    </member>
    <member name="P:Nest.UserAgentProcessor.RegexFile">
      <inheritdoc />
    </member>
    <member name="P:Nest.UserAgentProcessor.TargetField">
      <inheritdoc />
    </member>
    <member name="T:Nest.UserAgentProcessorDescriptor`1">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.Field(Nest.Field)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.TargetField(Nest.Field)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.RegexFile(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.Properties(System.Collections.Generic.IEnumerable{Nest.UserAgentProperty})">
      <inheritdoc />
    </member>
    <member name="M:Nest.UserAgentProcessorDescriptor`1.Properties(Nest.UserAgentProperty[])">
      <inheritdoc />
    </member>
    <member name="T:Nest.IRemoveProcessor">
      <summary>
            Removes existing fields. If one field doesn't exist, an exception will be thrown.
            </summary>
    </member>
    <member name="P:Nest.IRemoveProcessor.Field">
      <summary>
            fields to be removed. Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.IRemoveProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="T:Nest.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="T:Nest.RemoveProcessor">
      <inheritdoc cref="T:Nest.IRemoveProcessor" />
    </member>
    <member name="P:Nest.RemoveProcessor.Field">
      <summary>
            fields to be removed. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RemoveProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="T:Nest.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.RemoveProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IRemoveProcessor" />
    </member>
    <member name="M:Nest.RemoveProcessorDescriptor`1.Field(Nest.Fields)">
      <summary>
            fields to be removed. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IRemoveProcessor.Field" />
    </member>
    <member name="M:Nest.RemoveProcessorDescriptor`1.Field(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            fields to be removed. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IRemoveProcessor.Field" />
    </member>
    <member name="M:Nest.RemoveProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="T:Nest.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IRemoveProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IRenameProcessor">
      <summary>
            Renames an existing field. If the field doesn't exist or the new name is already used, an exception will be thrown.
            </summary>
    </member>
    <member name="P:Nest.IRenameProcessor.Field">
      <summary>
            The field to be renamed. Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.IRenameProcessor.TargetField">
      <summary>
            The new name of the field. Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.IRenameProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IRenameProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="T:Nest.RenameProcessor">
      <inheritdoc cref="T:Nest.IRenameProcessor" />
    </member>
    <member name="P:Nest.RenameProcessor.Field">
      <summary>
            The field to be renamed. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RenameProcessor.TargetField">
      <summary>
            The new name of the field. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RenameProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IRenameProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.RenameProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IRenameProcessor" />
    </member>
    <member name="M:Nest.RenameProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to be renamed. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IRenameProcessor.Field" />
    </member>
    <member name="M:Nest.RenameProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IRenameProcessor.Field" />
    </member>
    <member name="M:Nest.RenameProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The new name of the field. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.IRenameProcessor.TargetField" />
    </member>
    <member name="M:Nest.RenameProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IRenameProcessor.TargetField" />
    </member>
    <member name="M:Nest.RenameProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IRenameProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IRemoveProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IScriptProcessor">
      <summary>
            Allows inline and stored scripts to be executed within ingest pipelines.
            </summary>
    </member>
    <member name="P:Nest.IScriptProcessor.Id">
      <summary>
            The stored script id to refer to
            </summary>
    </member>
    <member name="P:Nest.IScriptProcessor.Lang">
      <summary>
            The scripting language. Defaults to painless
            </summary>
    </member>
    <member name="P:Nest.IScriptProcessor.Params">
      <summary>
            Parameters for the script
            </summary>
    </member>
    <member name="P:Nest.IScriptProcessor.Source">
      <summary>
            An inline script to be executed
            </summary>
    </member>
    <member name="T:Nest.ScriptProcessor">
      <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
    </member>
    <member name="P:Nest.ScriptProcessor.Id">
      <summary>
            The stored script id to refer to
            </summary>
    </member>
    <member name="P:Nest.ScriptProcessor.Lang">
      <summary>
            The scripting language. Defaults to painless
            </summary>
    </member>
    <member name="P:Nest.ScriptProcessor.Params">
      <summary>
            Parameters for the script
            </summary>
    </member>
    <member name="P:Nest.ScriptProcessor.Source">
      <summary> An inline script to be executed </summary>
    </member>
    <member name="T:Nest.ScriptProcessorDescriptor">
      <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
    </member>
    <member name="M:Nest.ScriptProcessorDescriptor.Lang(System.String)">
      <summary>
            The scripting language. Defaults to painless
            </summary>
    </member>
    <member name="M:Nest.ScriptProcessorDescriptor.Id(System.String)">
      <summary>
            The stored script id to refer to
            </summary>
    </member>
    <member name="M:Nest.ScriptProcessorDescriptor.Source(System.String)">
      <summary>
            An inline script to be executed
            </summary>
    </member>
    <member name="M:Nest.ScriptProcessorDescriptor.Params(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Parameters for the script
            </summary>
    </member>
    <member name="M:Nest.ScriptProcessorDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            Parameters for the script
            </summary>
    </member>
    <member name="T:Nest.ISetProcessor">
      <summary>
            Sets one field and associates it with the specified value.
            If the field already exists, its value will be replaced with the provided one.
            </summary>
    </member>
    <member name="P:Nest.ISetProcessor.Field">
      <summary>
            The field to insert, upsert, or update. Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.ISetProcessor.Value">
      <summary>
            The value to be set for the field. Supports template snippets.
            </summary>
    </member>
    <member name="P:Nest.ISetProcessor.Override">
      <summary>
            If processor will update fields with pre-existing non-null-valued field.
            When set to false, such fields will not be touched.
            Default is <c>true</c></summary>
    </member>
    <member name="T:Nest.SetProcessor">
      <inheritdoc cref="T:Nest.ISetProcessor" />
    </member>
    <member name="P:Nest.SetProcessor.Field">
      <summary>
            The field to insert, upsert, or update. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SetProcessor.Value">
      <summary>
            The value to be set for the field. Supports template snippets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SetProcessor.Override">
      <summary>
            If processor will update fields with pre-existing non-null-valued field.
            When set to false, such fields will not be touched.
            Default is <c>true</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SetProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.ISetProcessor" />
    </member>
    <member name="M:Nest.SetProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to insert, upsert, or update. Supports template snippets.
            </summary>
      <inheritdoc cref="P:Nest.ISetProcessor.Field" />
    </member>
    <member name="M:Nest.SetProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.ISetProcessor.Field" />
    </member>
    <member name="M:Nest.SetProcessorDescriptor`1.Value``1(``0)">
      <inheritdoc cref="P:Nest.ISetProcessor.Value" />
    </member>
    <member name="M:Nest.SetProcessorDescriptor`1.Override(System.Nullable{System.Boolean})">
      <summary>
            If processor will update fields with pre-existing non-null-valued field.
            When set to false, such fields will not be touched.
            Default is <c>true</c></summary>
      <inheritdoc cref="P:Nest.ISetProcessor.Override" />
    </member>
    <member name="T:Nest.ISetSecurityUserProcessor">
      <summary>
            Sets user-related details (such as username, roles, email, full_name and metadata ) from the
            current authenticated user to the current document by pre-processing the ingest.
            </summary>
    </member>
    <member name="P:Nest.ISetSecurityUserProcessor.Field">
      <summary>The field to store the user information into. </summary>
    </member>
    <member name="P:Nest.ISetSecurityUserProcessor.Properties">
      <summary>
            Controls what user related properties are added to the field.
            Defaults to username, roles, email, full_name, metadata
            </summary>
    </member>
    <member name="T:Nest.SetSecurityUserProcessor">
      <inheritdoc cref="T:Nest.ISetSecurityUserProcessor" />
    </member>
    <member name="P:Nest.SetSecurityUserProcessor.Field">
      <summary>The field to store the user information into. </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SetSecurityUserProcessor.Properties">
      <summary>
            Controls what user related properties are added to the field.
            Defaults to username, roles, email, full_name, metadata
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SetSecurityUserProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.ISetSecurityUserProcessor" />
    </member>
    <member name="M:Nest.SetSecurityUserProcessorDescriptor`1.Field(Nest.Field)">
      <summary>The field to store the user information into. </summary>
      <inheritdoc cref="P:Nest.ISetSecurityUserProcessor.Field" />
    </member>
    <member name="M:Nest.SetSecurityUserProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.ISetSecurityUserProcessor.Field" />
    </member>
    <member name="M:Nest.SetSecurityUserProcessorDescriptor`1.Properties(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Controls what user related properties are added to the field.
            Defaults to username, roles, email, full_name, metadata
            </summary>
      <inheritdoc cref="P:Nest.ISetSecurityUserProcessor.Properties" />
    </member>
    <member name="M:Nest.SetSecurityUserProcessorDescriptor`1.Properties(System.String[])">
      <summary>
            Controls what user related properties are added to the field.
            Defaults to username, roles, email, full_name, metadata
            </summary>
      <inheritdoc cref="P:Nest.ISetSecurityUserProcessor.Properties" />
    </member>
    <member name="T:Nest.ISortProcessor">
      <summary>
            Sorts the elements of an array ascending or descending. Homogeneous arrays of numbers
            will be sorted numerically, while arrays of strings or heterogeneous arrays
             of strings and numbers will be sorted lexicographically.
            </summary>
    </member>
    <member name="P:Nest.ISortProcessor.Field">
      <summary>
            The field to be sorted
            </summary>
    </member>
    <member name="P:Nest.ISortProcessor.Order">
      <summary>
            The sort order to use. Default is ascending.
            </summary>
    </member>
    <member name="P:Nest.ISortProcessor.TargetField">
      <summary>
            The field to assign the sorted value to, by default field is updated in-place
            </summary>
    </member>
    <member name="T:Nest.SortProcessor">
      <inheritdoc cref="T:Nest.ISortProcessor" />
    </member>
    <member name="P:Nest.SortProcessor.Field">
      <summary>
            The field to be sorted
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SortProcessor.Order">
      <summary>
            The sort order to use. Default is ascending.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SortProcessor.TargetField">
      <summary>
            The field to assign the sorted value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SortProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.ISortProcessor" />
    </member>
    <member name="M:Nest.SortProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to be sorted
            </summary>
      <inheritdoc cref="P:Nest.ISortProcessor.Field" />
    </member>
    <member name="M:Nest.SortProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.ISortProcessor.Field" />
    </member>
    <member name="M:Nest.SortProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the sorted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.ISortProcessor.TargetField" />
    </member>
    <member name="M:Nest.SortProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the sorted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.ISortProcessor.TargetField" />
    </member>
    <member name="M:Nest.SortProcessorDescriptor`1.Order(System.Nullable{Nest.SortOrder})">
      <summary>
            The sort order to use. Default is ascending.
            </summary>
      <inheritdoc cref="P:Nest.ISortProcessor.Order" />
    </member>
    <member name="T:Nest.ISplitProcessor">
      <summary>
            Splits a field into an array using a separator character. Only works on string fields
            </summary>
    </member>
    <member name="P:Nest.ISplitProcessor.Field">
      <summary>
            The field to split
            </summary>
    </member>
    <member name="P:Nest.ISplitProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ISplitProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="P:Nest.ISplitProcessor.Separator">
      <summary>
            A regex which matches the separator, eg , or \s+
            </summary>
    </member>
    <member name="P:Nest.ISplitProcessor.TargetField">
      <summary>
            The field to assign the split value to, by default field is updated in-place
            </summary>
    </member>
    <member name="T:Nest.SplitProcessor">
      <inheritdoc cref="T:Nest.SplitProcessor" />
    </member>
    <member name="P:Nest.SplitProcessor.Field">
      <summary>
            The field to split
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SplitProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ISplitProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SplitProcessor.Separator">
      <summary>
            A regex which matches the separator, eg , or \s+
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SplitProcessor.TargetField">
      <summary>
            The field to assign the split value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SplitProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.SplitProcessor" />
    </member>
    <member name="M:Nest.SplitProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to split
            </summary>
      <inheritdoc cref="P:Nest.SplitProcessor.Field" />
    </member>
    <member name="M:Nest.SplitProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.SplitProcessor.Field" />
    </member>
    <member name="M:Nest.SplitProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the split value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.SplitProcessor.TargetField" />
    </member>
    <member name="M:Nest.SplitProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the split value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.SplitProcessor.TargetField" />
    </member>
    <member name="M:Nest.SplitProcessorDescriptor`1.Separator(System.String)">
      <summary>
            A regex which matches the separator, eg , or \s+
            </summary>
      <inheritdoc cref="P:Nest.SplitProcessor.Separator" />
    </member>
    <member name="M:Nest.SplitProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ISplitProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.SplitProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.ITrimProcessor">
      <summary>
            Trims whitespace from field. This only works on leading and trailing whitespace
            </summary>
    </member>
    <member name="P:Nest.ITrimProcessor.Field">
      <summary>
            The string-valued field to trim whitespace from
            </summary>
    </member>
    <member name="P:Nest.ITrimProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ITrimProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="P:Nest.ITrimProcessor.TargetField">
      <summary>
            The field to assign the trimmed value to, by default field is updated in-place
            </summary>
    </member>
    <member name="T:Nest.TrimProcessor">
      <inheritdoc cref="T:Nest.ITrimProcessor" />
    </member>
    <member name="P:Nest.TrimProcessor.Field">
      <summary>
            The string-valued field to trim whitespace from
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TrimProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ITrimProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TrimProcessor.TargetField">
      <summary>
            The field to assign the trimmed value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.TrimProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.ITrimProcessor" />
    </member>
    <member name="M:Nest.TrimProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The string-valued field to trim whitespace from
            </summary>
      <inheritdoc cref="P:Nest.ITrimProcessor.Field" />
    </member>
    <member name="M:Nest.TrimProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.ITrimProcessor.Field" />
    </member>
    <member name="M:Nest.TrimProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the trimmed value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.ITrimProcessor.TargetField" />
    </member>
    <member name="M:Nest.TrimProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the trimmed value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.ITrimProcessor.TargetField" />
    </member>
    <member name="M:Nest.TrimProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.ITrimProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.ITrimProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IUppercaseProcessor">
      <summary>
            Converts a string to its uppercase equivalent.
            </summary>
    </member>
    <member name="P:Nest.IUppercaseProcessor.Field">
      <summary>
            The field to make uppercase
            </summary>
    </member>
    <member name="P:Nest.IUppercaseProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IUppercaseProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="P:Nest.IUppercaseProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
    </member>
    <member name="P:Nest.UppercaseProcessor.Field">
      <summary>
            The field to make uppercase
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UppercaseProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IUppercaseProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UppercaseProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UppercaseProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to make uppercase
            </summary>
      <inheritdoc cref="P:Nest.IUppercaseProcessor.Field" />
    </member>
    <member name="M:Nest.UppercaseProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IUppercaseProcessor.Field" />
    </member>
    <member name="M:Nest.UppercaseProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IUppercaseProcessor.TargetField" />
    </member>
    <member name="M:Nest.UppercaseProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            The field to assign the converted value to, by default field is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IUppercaseProcessor.TargetField" />
    </member>
    <member name="M:Nest.UppercaseProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IUppercaseProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IUppercaseProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.IUrlDecodeProcessor">
      <summary>
            URL-decodes a string
            </summary>
    </member>
    <member name="P:Nest.IUrlDecodeProcessor.Field">
      <summary>
            The field to decode
            </summary>
    </member>
    <member name="P:Nest.IUrlDecodeProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IUrlDecodeProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
    </member>
    <member name="P:Nest.IUrlDecodeProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default <see cref="P:Nest.IUrlDecodeProcessor.Field" /> is updated in-place
            </summary>
    </member>
    <member name="T:Nest.UrlDecodeProcessor">
      <inheritdoc cref="T:Nest.IUrlDecodeProcessor" />
    </member>
    <member name="P:Nest.UrlDecodeProcessor.Field">
      <summary>
            The field to decode
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UrlDecodeProcessor.IgnoreMissing">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IUrlDecodeProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UrlDecodeProcessor.TargetField">
      <summary>
            The field to assign the converted value to, by default <see cref="P:Nest.IUrlDecodeProcessor.Field" /> is updated in-place
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.UrlDecodeProcessorDescriptor`1">
      <inheritdoc cref="T:Nest.IUrlDecodeProcessor" />
    </member>
    <member name="M:Nest.UrlDecodeProcessorDescriptor`1.Field(Nest.Field)">
      <summary>
            The field to decode
            </summary>
      <inheritdoc cref="P:Nest.IUrlDecodeProcessor.Field" />
    </member>
    <member name="M:Nest.UrlDecodeProcessorDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IUrlDecodeProcessor.Field" />
    </member>
    <member name="M:Nest.UrlDecodeProcessorDescriptor`1.TargetField(Nest.Field)">
      <summary>
            The field to assign the converted value to, by default <see cref="P:Nest.IUrlDecodeProcessor.Field" /> is updated in-place
            </summary>
      <inheritdoc cref="P:Nest.IUrlDecodeProcessor.TargetField" />
    </member>
    <member name="M:Nest.UrlDecodeProcessorDescriptor`1.TargetField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IUrlDecodeProcessor.TargetField" />
    </member>
    <member name="M:Nest.UrlDecodeProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c> and <see cref="P:Nest.IUrlDecodeProcessor.Field" /> does not exist or is null,
            the processor quietly exits without modifying the document. Default is <c>false</c></summary>
      <inheritdoc cref="P:Nest.IUrlDecodeProcessor.IgnoreMissing" />
    </member>
    <member name="T:Nest.GrokProcessorPatternsRequest">
      <summary>Request for GrokProcessorPatterns <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get</para></summary>
    </member>
    <member name="T:Nest.PutPipelineRequest">
      <summary>Request for PutPipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.PutPipelineRequest.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.PutPipelineRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutPipelineRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.PutPipelineRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.SimulatePipelineRequest">
      <summary>Request for SimulatePipeline <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html</para></summary>
    </member>
    <member name="M:Nest.SimulatePipelineRequest.#ctor">
      <summary>/_ingest/pipeline/_simulate</summary>
    </member>
    <member name="M:Nest.SimulatePipelineRequest.#ctor(Nest.Id)">
      <summary>/_ingest/pipeline/{id}/_simulate</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SimulatePipelineRequest.Verbose">
      <summary>Verbose mode. Display data output for each processor in executed pipeline</summary>
    </member>
    <member name="P:Nest.ElasticsearchCorePropertyAttributeBase.Similarity">
      <inheritdoc cref="T:Nest.ICoreProperty" />
    </member>
    <member name="P:Nest.ElasticsearchCorePropertyAttributeBase.Store">
      <inheritdoc cref="T:Nest.ICoreProperty" />
    </member>
    <member name="T:Nest.ElasticsearchTypeAttribute">
      <summary>
            Applied to a CLR type to override the name of a CLR type and the property from which an _id is inferred
            when serializing an instance of the type.
            </summary>
    </member>
    <member name="P:Nest.ElasticsearchTypeAttribute.IdProperty">
      <summary>
            The property on CLR type to use as the _id of the document
            </summary>
    </member>
    <member name="P:Nest.ElasticsearchTypeAttribute.RelationName">
      <summary>
            The name of the CLR type for serialization
            </summary>
    </member>
    <member name="P:Nest.ElasticsearchTypeAttribute.Name">
      <inheritdoc cref="P:Nest.ElasticsearchTypeAttribute.RelationName" />
    </member>
    <member name="M:Nest.ElasticsearchTypeAttribute.From(System.Type)">
      <summary>
            Gets the first <see cref="T:Nest.ElasticsearchTypeAttribute" /> from a given CLR type
            </summary>
    </member>
    <member name="F:Nest.DynamicMapping.Strict">
      <summary>
            If new unmapped fields are passed, the whole document will not be added/updated
            </summary>
    </member>
    <member name="T:Nest.IDynamicTemplate">
      <summary>
            A Dynamic template that defines custom mappings to be applied
            to dynamically added fields based on:
            <para />
            - the datatype detected by Elasticsearch, with <see cref="P:Nest.IDynamicTemplate.MatchMappingType" />.
            <para />
            - the name of the field, with <see cref="P:Nest.IDynamicTemplate.Match" /> and <see cref="P:Nest.IDynamicTemplate.Unmatch" /> or <see cref="P:Nest.IDynamicTemplate.MatchPattern" />.
            <para />
            - the full dotted path to the field, with <see cref="P:Nest.IDynamicTemplate.PathMatch" /> and <see cref="P:Nest.IDynamicTemplate.PathUnmatch" />.
            </summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.Mapping">
      <summary>
            The mapping to apply to matching fields
            </summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.Match">
      <summary>
            A pattern to match on the field name
            </summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.MatchMappingType">
      <summary>
            Matches on the datatype detected by dynamic field mapping,
            in other words, the datatype that Elasticsearch thinks the field should have.
            Only the following datatypes can be automatically detected: boolean, date, double,
            long, object, string. It also accepts * to match all datatypes.
            </summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.MatchPattern">
      <summary>
            Adjusts the behavior of <see cref="P:Nest.IDynamicTemplate.Match" /> such that it supports full
            Java regular expression matching on the field name instead of simple wildcards
            </summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.PathMatch">
      <summary>
            A pattern to match on the field name, which may be the full dotted path
            to the field name
            </summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.PathUnmatch">
      <summary>
            A pattern to exclude fields matched by <see cref="P:Nest.IDynamicTemplate.PathMatch" /></summary>
    </member>
    <member name="P:Nest.IDynamicTemplate.Unmatch">
      <summary>
            A pattern to exclude fields matched by <see cref="P:Nest.IDynamicTemplate.Match" /></summary>
    </member>
    <member name="T:Nest.DynamicTemplate">
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.Mapping">
      <summary>
            The mapping to apply to matching fields
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.Match">
      <summary>
            A pattern to match on the field name
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.MatchMappingType">
      <summary>
            Matches on the datatype detected by dynamic field mapping,
            in other words, the datatype that Elasticsearch thinks the field should have.
            Only the following datatypes can be automatically detected: boolean, date, double,
            long, object, string. It also accepts * to match all datatypes.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.MatchPattern">
      <summary>
            Adjusts the behavior of <see cref="P:Nest.IDynamicTemplate.Match" /> such that it supports full
            Java regular expression matching on the field name instead of simple wildcards
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.PathMatch">
      <summary>
            A pattern to match on the field name, which may be the full dotted path
            to the field name
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.PathUnmatch">
      <summary>
            A pattern to exclude fields matched by <see cref="P:Nest.IDynamicTemplate.PathMatch" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DynamicTemplate.Unmatch">
      <summary>
            A pattern to exclude fields matched by <see cref="P:Nest.IDynamicTemplate.Match" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DynamicTemplateDescriptor`1">
      <inheritdoc cref="T:Nest.IDynamicTemplate" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.Match(System.String)">
      <summary>
            A pattern to match on the field name
            </summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.Match" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.MatchPattern(System.Nullable{Nest.MatchType})">
      <summary>
            Adjusts the behavior of <see cref="P:Nest.IDynamicTemplate.Match" /> such that it supports full
            Java regular expression matching on the field name instead of simple wildcards
            </summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.MatchPattern" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.Unmatch(System.String)">
      <summary>
            A pattern to exclude fields matched by <see cref="P:Nest.IDynamicTemplate.Match" /></summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.Unmatch" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.MatchMappingType(System.String)">
      <summary>
            Matches on the datatype detected by dynamic field mapping,
            in other words, the datatype that Elasticsearch thinks the field should have.
            Only the following datatypes can be automatically detected: boolean, date, double,
            long, object, string. It also accepts * to match all datatypes.
            </summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.MatchMappingType" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.PathMatch(System.String)">
      <summary>
            A pattern to match on the field name, which may be the full dotted path
            to the field name
            </summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.PathMatch" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.PathUnmatch(System.String)">
      <summary>
            A pattern to exclude fields matched by <see cref="P:Nest.IDynamicTemplate.PathMatch" /></summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.PathUnmatch" />
    </member>
    <member name="M:Nest.DynamicTemplateDescriptor`1.Mapping(System.Func{Nest.SingleMappingSelector{`0},Nest.IProperty})">
      <summary>
            The mapping to apply to matching fields
            </summary>
      <inheritdoc cref="P:Nest.IDynamicTemplate.Mapping" />
    </member>
    <member name="T:Nest.MatchType">
      <summary>
            Dynamic match pattern type
            </summary>
    </member>
    <member name="F:Nest.MatchType.Simple">
      <summary>
            Simple matching with wildcards
            </summary>
    </member>
    <member name="F:Nest.MatchType.Regex">
      <summary>
            Regular expression matching
            </summary>
    </member>
    <member name="M:Nest.DynamicTemplateContainer.Add(System.String,Nest.IDynamicTemplate)">
      <summary>
            Add any setting to the index
            </summary>
    </member>
    <member name="M:Nest.SingleMappingSelector`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})">
      <summary>
            Number introduces a numeric mapping that defaults to `float` use .Type() to set the right type if needed or use
            Scalar instead of <see cref="M:Nest.SingleMappingSelector`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})" /></summary>
    </member>
    <member name="T:Nest.Mappings">
      <summary>
            Types are gone from Elasticsearch 7.x this class solely exist to help you move your complex mappings over
            to the new way of writing the mappings. Use TypeMapping directly instead.
            <pre>
            This class won't receive updates after the 7.0.0 release please be advised to move over if you need to utilize
            new features in the future.
            </pre></summary>
    </member>
    <member name="T:Nest.PreventMappingMultipleTypesDescriptor">
      <summary>
            The common pattern in NEST is that you can call fluent methods multiple types overriding what was previously set.
            This type prevents a user to call Map() multiple times with different types making it crystal clear not only can you
            no longer have multiple types in an index <see cref="T:Nest.MappingsDescriptor" /> makes the overloads that take type obsolete
            as well. Both <see cref="T:Nest.PreventMappingMultipleTypesDescriptor" /> and <see cref="T:Nest.MappingsDescriptor" /> are obsolete.
            Please move to
            </summary>
    </member>
    <member name="T:Nest.IFieldMapping">
      <summary>
            A document field mapping in Elasticsearch
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.DateDetection">
      <summary>
            If enabled (default), then new string fields are checked to see whether their contents match
            any of the date patterns specified in <see cref="P:Nest.ITypeMapping.DynamicDateFormats" />.
            If a match is found, a new date field is added with the corresponding format.
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.Dynamic">
      <summary>
            Whether new unseen fields will be added to the mapping. Default is <c>true</c>.
            A value of <c>false</c> will ignore unknown fields and a value of <see cref="F:Nest.DynamicMapping.Strict" />
            will result in an error if an unknown field is encountered in a document.
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.DynamicDateFormats">
      <summary>
            Date formats used by <see cref="P:Nest.ITypeMapping.DateDetection" /></summary>
    </member>
    <member name="P:Nest.ITypeMapping.DynamicTemplates">
      <summary>
            Dynamic templates allow you to define custom mappings that can be applied to dynamically added fields based on
            <para>- the datatype detected by Elasticsearch, with <see cref="P:Nest.IDynamicTemplate.MatchMappingType" />.</para><para>- the name of the field, with <see cref="P:Nest.IDynamicTemplate.Match" /> and <see cref="P:Nest.IDynamicTemplate.Unmatch" /> or
            <see cref="P:Nest.IDynamicTemplate.MatchPattern" />.</para><para>- the full dotted path to the field, with <see cref="P:Nest.IDynamicTemplate.PathMatch" /> and
            <see cref="P:Nest.IDynamicTemplate.PathUnmatch" />.</para><para>The original field name <c>{name}</c> and the detected datatype <c>{dynamic_type}</c> template variables can be
            used in the mapping specification as placeholders.</para></summary>
    </member>
    <member name="P:Nest.ITypeMapping.FieldNamesField">
      <summary>
            Used to index the names of every field in a document that contains any value other than null.
            This field was used by the exists query to find documents that either have or don’t have any non-null value for a particular field.
            Now, it only indexes the names of fields that have doc_values and norms disabled.
            Can be disabled. Disabling _field_names is often not necessary because it no longer carries the index overhead it once did.
            If you have a lot of fields which have doc_values and norms disabled and you do not need to execute exists queries
            using those fields you might want to disable
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.Meta">
      <summary>
            Custom meta data to associate with a mapping. Not used by Elasticsearch,
            but can be used to store application-specific metadata.
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.NumericDetection">
      <summary>
            If enabled (not enabled by default), then new string fields are checked to see whether
            they wholly contain a numeric value and if so, to map as a numeric field.
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.Properties">
      <summary>
            Specifies the mapping properties
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.RoutingField">
      <summary>
            Specifies configuration for the _routing parameter
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.SizeField">
      <summary>
            If enabled, indexes the size in bytes of the original _source field.
            Requires mapper-size plugin be installed
            </summary>
    </member>
    <member name="P:Nest.ITypeMapping.SourceField">
      <summary>
            Specifies configuration for the _source field
            </summary>
    </member>
    <member name="P:Nest.TypeMapping.AllField">
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.DateDetection">
      <summary>
            If enabled (default), then new string fields are checked to see whether their contents match
            any of the date patterns specified in <see cref="P:Nest.ITypeMapping.DynamicDateFormats" />.
            If a match is found, a new date field is added with the corresponding format.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.Dynamic">
      <summary>
            Whether new unseen fields will be added to the mapping. Default is <c>true</c>.
            A value of <c>false</c> will ignore unknown fields and a value of <see cref="F:Nest.DynamicMapping.Strict" />
            will result in an error if an unknown field is encountered in a document.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.DynamicDateFormats">
      <summary>
            Date formats used by <see cref="P:Nest.ITypeMapping.DateDetection" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.DynamicTemplates">
      <summary>
            Dynamic templates allow you to define custom mappings that can be applied to dynamically added fields based on
            <para>- the datatype detected by Elasticsearch, with <see cref="P:Nest.IDynamicTemplate.MatchMappingType" />.</para><para>- the name of the field, with <see cref="P:Nest.IDynamicTemplate.Match" /> and <see cref="P:Nest.IDynamicTemplate.Unmatch" /> or
            <see cref="P:Nest.IDynamicTemplate.MatchPattern" />.</para><para>- the full dotted path to the field, with <see cref="P:Nest.IDynamicTemplate.PathMatch" /> and
            <see cref="P:Nest.IDynamicTemplate.PathUnmatch" />.</para><para>The original field name <c>{name}</c> and the detected datatype <c>{dynamic_type}</c> template variables can be
            used in the mapping specification as placeholders.</para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.FieldNamesField">
      <summary>
            Used to index the names of every field in a document that contains any value other than null.
            This field was used by the exists query to find documents that either have or don’t have any non-null value for a particular field.
            Now, it only indexes the names of fields that have doc_values and norms disabled.
            Can be disabled. Disabling _field_names is often not necessary because it no longer carries the index overhead it once did.
            If you have a lot of fields which have doc_values and norms disabled and you do not need to execute exists queries
            using those fields you might want to disable
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.IndexField">
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.Meta">
      <summary>
            Custom meta data to associate with a mapping. Not used by Elasticsearch,
            but can be used to store application-specific metadata.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.NumericDetection">
      <summary>
            If enabled (not enabled by default), then new string fields are checked to see whether
            they wholly contain a numeric value and if so, to map as a numeric field.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.Properties">
      <summary>
            Specifies the mapping properties
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.RoutingField">
      <summary>
            Specifies configuration for the _routing parameter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.SizeField">
      <summary>
            If enabled, indexes the size in bytes of the original _source field.
            Requires mapper-size plugin be installed
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TypeMapping.SourceField">
      <summary>
            Specifies configuration for the _source field
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)">
      <summary>
            Convenience method to map as much as it can based on <see cref="T:Nest.ElasticsearchTypeAttribute" /> attributes set on the
            type, as well as inferring mappings from the CLR property types.
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etc)</pre><pre>Class types default to object and Enums to int</pre><pre>Later calls can override whatever is set is by this call.</pre></summary>
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(System.Type,Nest.IPropertyVisitor,System.Int32)">
      <summary>
            Convenience method to map as much as it can based on <see cref="T:Nest.ElasticsearchTypeAttribute" /> attributes set on the
            type, as well as inferring mappings from the CLR property types.
            This particular overload is useful for automapping any children
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etc)</pre><pre>Class types default to object and Enums to int</pre><pre>Later calls can override whatever is set is by this call.</pre></summary>
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.AutoMap``1(Nest.IPropertyVisitor,System.Int32)">
      <summary>
            Convenience method to map as much as it can based on <see cref="T:Nest.ElasticsearchTypeAttribute" /> attributes set on the
            type, as well as inferring mappings from the CLR property types.
            This particular overload is useful for automapping any children
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etc)</pre><pre>Class types default to object and Enums to int</pre><pre>Later calls can override whatever is set is by this call.</pre></summary>
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(System.Int32)">
      <summary>
            Convenience method to map as much as it can based on <see cref="T:Nest.ElasticsearchTypeAttribute" /> attributes set on the
            type, as well as inferring mappings from the CLR property types.
            This overload determines how deep automapping should recurse on a complex CLR type.
            </summary>
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.Dynamic(Nest.Union{System.Boolean,Nest.DynamicMapping})">
      <summary>
            Whether new unseen fields will be added to the mapping. Default is <c>true</c>.
            A value of <c>false</c> will ignore unknown fields and a value of <see cref="F:Nest.DynamicMapping.Strict" />
            will result in an error if an unknown field is encountered in a document.
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.Dynamic" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.Dynamic(System.Boolean)">
      <summary>
            Whether new unseen fields will be added to the mapping. Default is <c>true</c>.
            A value of <c>false</c> will ignore unknown fields and a value of <see cref="F:Nest.DynamicMapping.Strict" />
            will result in an error if an unknown field is encountered in a document.
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.Dynamic" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.SizeField(System.Func{Nest.SizeFieldDescriptor,Nest.ISizeField})">
      <summary>
            If enabled, indexes the size in bytes of the original _source field.
            Requires mapper-size plugin be installed
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.SizeField" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.SourceField(System.Func{Nest.SourceFieldDescriptor,Nest.ISourceField})">
      <summary>
            Specifies configuration for the _source field
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.SourceField" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.DisableSizeField(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.ITypeMapping.SizeField" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.DynamicDateFormats(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Date formats used by <see cref="P:Nest.ITypeMapping.DateDetection" /></summary>
      <inheritdoc cref="P:Nest.ITypeMapping.DynamicDateFormats" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.DateDetection(System.Nullable{System.Boolean})">
      <summary>
            If enabled (default), then new string fields are checked to see whether their contents match
            any of the date patterns specified in <see cref="P:Nest.ITypeMapping.DynamicDateFormats" />.
            If a match is found, a new date field is added with the corresponding format.
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.DateDetection" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.NumericDetection(System.Nullable{System.Boolean})">
      <summary>
            If enabled (not enabled by default), then new string fields are checked to see whether
            they wholly contain a numeric value and if so, to map as a numeric field.
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.NumericDetection" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.RoutingField(System.Func{Nest.RoutingFieldDescriptor{`0},Nest.IRoutingField})">
      <summary>
            Specifies configuration for the _routing parameter
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.RoutingField" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.FieldNamesField(System.Func{Nest.FieldNamesFieldDescriptor{`0},Nest.IFieldNamesField})">
      <summary>
            Used to index the names of every field in a document that contains any value other than null.
            This field was used by the exists query to find documents that either have or don’t have any non-null value for a particular field.
            Now, it only indexes the names of fields that have doc_values and norms disabled.
            Can be disabled. Disabling _field_names is often not necessary because it no longer carries the index overhead it once did.
            If you have a lot of fields which have doc_values and norms disabled and you do not need to execute exists queries
            using those fields you might want to disable
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.FieldNamesField" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            Custom meta data to associate with a mapping. Not used by Elasticsearch,
            but can be used to store application-specific metadata.
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.Meta" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.Meta(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Custom meta data to associate with a mapping. Not used by Elasticsearch,
            but can be used to store application-specific metadata.
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.Meta" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.Properties(System.Func{Nest.PropertiesDescriptor{`0},Nest.IPromise{Nest.IProperties}})">
      <summary>
            Specifies the mapping properties
            </summary>
      <inheritdoc cref="P:Nest.ITypeMapping.Properties" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.Properties``1(System.Func{Nest.PropertiesDescriptor{``0},Nest.IPromise{Nest.IProperties}})">
      <inheritdoc cref="P:Nest.ITypeMapping.Properties" />
    </member>
    <member name="M:Nest.TypeMappingDescriptor`1.DynamicTemplates(System.Func{Nest.DynamicTemplateContainerDescriptor{`0},Nest.IPromise{Nest.IDynamicTemplateContainer}})">
      <summary>
            Dynamic templates allow you to define custom mappings that can be applied to dynamically added fields based on
            <para>- the datatype detected by Elasticsearch, with <see cref="P:Nest.IDynamicTemplate.MatchMappingType" />.</para><para>- the name of the field, with <see cref="P:Nest.IDynamicTemplate.Match" /> and <see cref="P:Nest.IDynamicTemplate.Unmatch" /> or
            <see cref="P:Nest.IDynamicTemplate.MatchPattern" />.</para><para>- the full dotted path to the field, with <see cref="P:Nest.IDynamicTemplate.PathMatch" /> and
            <see cref="P:Nest.IDynamicTemplate.PathUnmatch" />.</para><para>The original field name <c>{name}</c> and the detected datatype <c>{dynamic_type}</c> template variables can be
            used in the mapping specification as placeholders.</para></summary>
      <inheritdoc cref="P:Nest.ITypeMapping.DynamicTemplates" />
    </member>
    <member name="T:Nest.FlattenedAttribute">
      <inheritdoc cref="T:Nest.IFlattenedProperty" />
    </member>
    <member name="P:Nest.FlattenedAttribute.Boost">
      <inheritdoc cref="P:Nest.IFlattenedProperty.Boost" />
    </member>
    <member name="P:Nest.FlattenedAttribute.DepthLimit">
      <inheritdoc cref="P:Nest.IFlattenedProperty.DepthLimit" />
    </member>
    <member name="P:Nest.FlattenedAttribute.DocValues">
      <inheritdoc cref="P:Nest.IFlattenedProperty.DocValues" />
    </member>
    <member name="P:Nest.FlattenedAttribute.EagerGlobalOrdinals">
      <inheritdoc cref="P:Nest.IFlattenedProperty.EagerGlobalOrdinals" />
    </member>
    <member name="P:Nest.FlattenedAttribute.IgnoreAbove">
      <inheritdoc cref="P:Nest.IFlattenedProperty.IgnoreAbove" />
    </member>
    <member name="P:Nest.FlattenedAttribute.Index">
      <inheritdoc cref="P:Nest.IFlattenedProperty.Index" />
    </member>
    <member name="P:Nest.FlattenedAttribute.IndexOptions">
      <inheritdoc cref="P:Nest.IFlattenedProperty.IndexOptions" />
    </member>
    <member name="P:Nest.FlattenedAttribute.SplitQueriesOnWhitespace">
      <inheritdoc cref="P:Nest.IFlattenedProperty.SplitQueriesOnWhitespace" />
    </member>
    <member name="P:Nest.FlattenedAttribute.NullValue">
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedAttribute.Similarity">
      <inheritdoc />
    </member>
    <member name="T:Nest.IFlattenedProperty">
      <summary>
            By default, each subfield in an object is mapped and indexed separately.
            If the names or types of the subfields are not known in advance, then they are mapped dynamically.
            The flattened type provides an alternative approach, where the entire object is mapped as a single field.
            Given an object, the flattened mapping will parse out its leaf values and index them into one
            field as keywords. The object's contents can then be searched through simple queries and aggregations.
            <para></para>
            Available in Elasticsearch 7.3.0+ with at least basic license level
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.DepthLimit">
      <summary>
            The maximum allowed depth of the flattened object field,
            in terms of nested inner objects. If a flattened object field exceeds this limit,
            then an error will be thrown. Defaults to <c>20</c>.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.DocValues">
      <summary>
            Whether to persist the value at index time in a columnar data structure (referred to as doc_values in Lucene)
            which makes the value available for efficient sorting and aggregations. Default is <c>true</c>.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.EagerGlobalOrdinals">
      <summary>
            Should global ordinals be loaded eagerly on refresh? Accepts true or false (default).
            Enabling this is a good idea on fields that are frequently used for terms aggregations.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.IgnoreAbove">
      <summary>
            Leaf values longer than this limit will not be indexed. By default, there is no limit and all values will be indexed.
            Note that this limit applies to the leaf values within the flattened object field, and not the length of the entire
            field.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.Index">
      <summary>
            Should the field be searchable? Accepts <c>true</c> (default) and <c>false</c>.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.IndexOptions">
      <summary>
            What information should be stored in the index for scoring purposes.
            Defaults to docs but can also be set to freqs to take term frequency into account when computing scores.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.NullValue">
      <summary>
            A string value which is substituted for any explicit null values within the flattened
            object field. Defaults to null, which means null fields are treated as if it were missing.
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.Similarity">
      <summary>
            Which relevancy scoring algorithm or similarity should be used.
            Defaults to BM25
            </summary>
    </member>
    <member name="P:Nest.IFlattenedProperty.SplitQueriesOnWhitespace">
      <summary> Whether full text queries should split the input on whitespace when building a query for this field. </summary>
    </member>
    <member name="T:Nest.FlattenedProperty">
      <inheritdoc cref="T:Nest.IFlattenedProperty" />
    </member>
    <member name="P:Nest.FlattenedProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.DepthLimit">
      <summary>
            The maximum allowed depth of the flattened object field,
            in terms of nested inner objects. If a flattened object field exceeds this limit,
            then an error will be thrown. Defaults to <c>20</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.DocValues">
      <summary>
            Whether to persist the value at index time in a columnar data structure (referred to as doc_values in Lucene)
            which makes the value available for efficient sorting and aggregations. Default is <c>true</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.EagerGlobalOrdinals">
      <summary>
            Should global ordinals be loaded eagerly on refresh? Accepts true or false (default).
            Enabling this is a good idea on fields that are frequently used for terms aggregations.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.IgnoreAbove">
      <summary>
            Leaf values longer than this limit will not be indexed. By default, there is no limit and all values will be indexed.
            Note that this limit applies to the leaf values within the flattened object field, and not the length of the entire
            field.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.Index">
      <summary>
            Should the field be searchable? Accepts <c>true</c> (default) and <c>false</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.IndexOptions">
      <summary>
            What information should be stored in the index for scoring purposes.
            Defaults to docs but can also be set to freqs to take term frequency into account when computing scores.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.NullValue">
      <summary>
            A string value which is substituted for any explicit null values within the flattened
            object field. Defaults to null, which means null fields are treated as if it were missing.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.Similarity">
      <summary>
            Which relevancy scoring algorithm or similarity should be used.
            Defaults to BM25
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlattenedProperty.SplitQueriesOnWhitespace">
      <summary> Whether full text queries should split the input on whitespace when building a query for this field. </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.FlattenedPropertyDescriptor`1">
      <inheritdoc cref="T:Nest.IFlattenedProperty" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.Boost(System.Nullable{System.Double})">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.Boost" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.DepthLimit(System.Nullable{System.Int32})">
      <summary>
            The maximum allowed depth of the flattened object field,
            in terms of nested inner objects. If a flattened object field exceeds this limit,
            then an error will be thrown. Defaults to <c>20</c>.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.DepthLimit" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.DocValues(System.Nullable{System.Boolean})">
      <summary>
            Whether to persist the value at index time in a columnar data structure (referred to as doc_values in Lucene)
            which makes the value available for efficient sorting and aggregations. Default is <c>true</c>.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.DepthLimit" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.EagerGlobalOrdinals(System.Nullable{System.Boolean})">
      <summary>
            Should global ordinals be loaded eagerly on refresh? Accepts true or false (default).
            Enabling this is a good idea on fields that are frequently used for terms aggregations.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.EagerGlobalOrdinals" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.IgnoreAbove(System.Nullable{System.Int32})">
      <summary>
            Leaf values longer than this limit will not be indexed. By default, there is no limit and all values will be indexed.
            Note that this limit applies to the leaf values within the flattened object field, and not the length of the entire
            field.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.IgnoreAbove" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.Index(System.Nullable{System.Boolean})">
      <summary>
            Should the field be searchable? Accepts <c>true</c> (default) and <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.Index" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.IndexOptions(System.Nullable{Nest.IndexOptions})">
      <summary>
            What information should be stored in the index for scoring purposes.
            Defaults to docs but can also be set to freqs to take term frequency into account when computing scores.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.IndexOptions" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.NullValue(System.String)">
      <summary>
            A string value which is substituted for any explicit null values within the flattened
            object field. Defaults to null, which means null fields are treated as if it were missing.
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.NullValue" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.SplitQueriesOnWhitespace(System.Nullable{System.Boolean})">
      <summary> Whether full text queries should split the input on whitespace when building a query for this field. </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.SplitQueriesOnWhitespace" />
    </member>
    <member name="M:Nest.FlattenedPropertyDescriptor`1.Similarity(System.String)">
      <summary>
            Which relevancy scoring algorithm or similarity should be used.
            Defaults to BM25
            </summary>
      <inheritdoc cref="P:Nest.IFlattenedProperty.Similarity" />
    </member>
    <member name="T:Nest.IObjectProperty">
      <summary>
            A object datatype mapping for an inner object
            </summary>
    </member>
    <member name="P:Nest.IObjectProperty.Dynamic">
      <summary>
            Whether or not new properties should be added dynamically to an existing object.
            Default is <c>true</c></summary>
    </member>
    <member name="P:Nest.IObjectProperty.Enabled">
      <summary>
            Whether the JSON value given for this field should be parsed and indexed. Default is <c>true</c></summary>
    </member>
    <member name="P:Nest.IObjectProperty.Properties">
      <summary>
            The fields within the object
            </summary>
    </member>
    <member name="T:Nest.ObjectProperty">
      <summary>
            A object datatype mapping for an inner object
            </summary>
    </member>
    <member name="P:Nest.ObjectProperty.Dynamic">
      <summary>
            Whether or not new properties should be added dynamically to an existing object.
            Default is <c>true</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ObjectProperty.Enabled">
      <summary>
            Whether the JSON value given for this field should be parsed and indexed. Default is <c>true</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ObjectProperty.Properties">
      <summary>
            The fields within the object
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ObjectPropertyDescriptorBase`4.Dynamic(Nest.Union{System.Boolean,Nest.DynamicMapping})">
      <summary>
            Whether or not new properties should be added dynamically to an existing object.
            Default is <c>true</c></summary>
    </member>
    <member name="M:Nest.ObjectPropertyDescriptorBase`4.Dynamic(System.Boolean)">
      <summary>
            Whether or not new properties should be added dynamically to an existing object.
            Default is <c>true</c></summary>
    </member>
    <member name="M:Nest.ObjectPropertyDescriptorBase`4.Enabled(System.Nullable{System.Boolean})">
      <summary>
            Whether the JSON value given for this field should be parsed and indexed. Default is <c>true</c></summary>
    </member>
    <member name="M:Nest.ObjectPropertyDescriptorBase`4.Properties(System.Func{Nest.PropertiesDescriptor{`3},Nest.IPromise{Nest.IProperties}})">
      <summary>
            The fields within the object
            </summary>
    </member>
    <member name="T:Nest.ICoreProperty">
      <summary>
            Core properties of a mapping for a property type to a document field in Elasticsearch
            </summary>
    </member>
    <member name="P:Nest.ICoreProperty.CopyTo">
      <summary>
            Copies the value of this field into another field, which can be queried as a single field.
            Allows for the creation of custom _all fields
            </summary>
    </member>
    <member name="P:Nest.ICoreProperty.Fields">
      <summary>
            Configures multi-fields for this field. Allows one field to be indexed in different
            ways to serve different search and analytics purposes
            </summary>
    </member>
    <member name="P:Nest.ICoreProperty.Similarity">
      <summary>
            Which relevancy scoring algorithm or similarity should be used.
            Defaults to BM25
            </summary>
    </member>
    <member name="P:Nest.ICoreProperty.Store">
      <summary>
            Whether the field value should be stored and retrievable separately from the _source field
            Default is <c>false</c>.
            </summary>
      <remarks>
            Not valid on <see cref="T:Nest.ObjectProperty" /></remarks>
    </member>
    <member name="T:Nest.CorePropertyBase">
      <inheritdoc cref="T:Nest.ICoreProperty" />
    </member>
    <member name="P:Nest.CorePropertyBase.CopyTo">
      <inheritdoc />
    </member>
    <member name="P:Nest.CorePropertyBase.Fields">
      <inheritdoc />
    </member>
    <member name="P:Nest.CorePropertyBase.Similarity">
      <inheritdoc />
    </member>
    <member name="P:Nest.CorePropertyBase.Store">
      <inheritdoc />
    </member>
    <member name="T:Nest.CorePropertyDescriptorBase`3">
      <inheritdoc cref="T:Nest.ICoreProperty" />
    </member>
    <member name="M:Nest.CorePropertyDescriptorBase`3.Store(System.Nullable{System.Boolean})">
      <summary>
            Whether the field value should be stored and retrievable separately from the _source field
            Default is <c>false</c>.
            </summary>
      <remarks>
            Not valid on <see cref="T:Nest.ObjectProperty" /></remarks>
      <inheritdoc cref="P:Nest.ICoreProperty.Store" />
    </member>
    <member name="M:Nest.CorePropertyDescriptorBase`3.Fields(System.Func{Nest.PropertiesDescriptor{`2},Nest.IPromise{Nest.IProperties}})">
      <summary>
            Configures multi-fields for this field. Allows one field to be indexed in different
            ways to serve different search and analytics purposes
            </summary>
      <inheritdoc cref="P:Nest.ICoreProperty.Fields" />
    </member>
    <member name="M:Nest.CorePropertyDescriptorBase`3.Similarity(System.String)">
      <summary>
            Which relevancy scoring algorithm or similarity should be used.
            Defaults to BM25
            </summary>
      <inheritdoc cref="P:Nest.ICoreProperty.Similarity" />
    </member>
    <member name="M:Nest.CorePropertyDescriptorBase`3.CopyTo(System.Func{Nest.FieldsDescriptor{`2},Nest.IPromise{Nest.Fields}})">
      <summary>
            Copies the value of this field into another field, which can be queried as a single field.
            Allows for the creation of custom _all fields
            </summary>
      <inheritdoc cref="P:Nest.ICoreProperty.CopyTo" />
    </member>
    <member name="P:Nest.IDateNanosProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
    </member>
    <member name="P:Nest.IDateNanosProperty.Format">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
    </member>
    <member name="P:Nest.IDateNanosProperty.IgnoreMalformed">
      <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
    </member>
    <member name="P:Nest.IDateNanosProperty.Index">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
    </member>
    <member name="P:Nest.IDateNanosProperty.NullValue">
      <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
    </member>
    <member name="P:Nest.DateNanosProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateNanosProperty.Format">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateNanosProperty.IgnoreMalformed">
      <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateNanosProperty.Index">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateNanosProperty.NullValue">
      <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateNanosProperty.PrecisionStep">
      <inheritdoc />
    </member>
    <member name="M:Nest.DateNanosPropertyDescriptor`1.Index(System.Nullable{System.Boolean})">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
      <inheritdoc cref="P:Nest.IDateNanosProperty.Index" />
    </member>
    <member name="M:Nest.DateNanosPropertyDescriptor`1.Boost(System.Nullable{System.Double})">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc cref="P:Nest.IDateNanosProperty.Boost" />
    </member>
    <member name="M:Nest.DateNanosPropertyDescriptor`1.NullValue(System.Nullable{System.DateTime})">
      <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
      <inheritdoc cref="P:Nest.IDateNanosProperty.NullValue" />
    </member>
    <member name="M:Nest.DateNanosPropertyDescriptor`1.IgnoreMalformed(System.Nullable{System.Boolean})">
      <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
      <inheritdoc cref="P:Nest.IDateNanosProperty.IgnoreMalformed" />
    </member>
    <member name="M:Nest.DateNanosPropertyDescriptor`1.Format(System.String)">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
      <inheritdoc cref="P:Nest.IDateNanosProperty.Format" />
    </member>
    <member name="P:Nest.IDateProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
    </member>
    <member name="P:Nest.IDateProperty.Format">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
    </member>
    <member name="P:Nest.IDateProperty.IgnoreMalformed">
      <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
    </member>
    <member name="P:Nest.IDateProperty.Index">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
    </member>
    <member name="P:Nest.IDateProperty.NullValue">
      <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
    </member>
    <member name="P:Nest.DateProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProperty.Fielddata">
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProperty.Format">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProperty.IgnoreMalformed">
      <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProperty.Index">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProperty.NullValue">
      <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateProperty.PrecisionStep">
      <inheritdoc />
    </member>
    <member name="M:Nest.DatePropertyDescriptor`1.Index(System.Nullable{System.Boolean})">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DatePropertyDescriptor`1.Boost(System.Nullable{System.Double})">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DatePropertyDescriptor`1.NullValue(System.Nullable{System.DateTime})">
      <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DatePropertyDescriptor`1.IgnoreMalformed(System.Nullable{System.Boolean})">
      <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DatePropertyDescriptor`1.Format(System.String)">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DatePropertyDescriptor`1.Fielddata(System.Func{Nest.NumericFielddataDescriptor,Nest.INumericFielddata})">
      <inheritdoc />
    </member>
    <member name="T:Nest.JoinField">
      <summary>
            The field on which a parent-child relationship is joined
            </summary>
    </member>
    <member name="P:Nest.IJoinProperty.Relations">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
    </member>
    <member name="P:Nest.IKeywordProperty.SplitQueriesOnWhitespace">
      <summary> Whether full text queries should split the input on whitespace when building a query for this field. </summary>
    </member>
    <member name="P:Nest.KeywordProperty.SplitQueriesOnWhitespace">
      <summary> Whether full text queries should split the input on whitespace when building a query for this field. </summary>
      <inheritdoc cref="P:Nest.IKeywordProperty.SplitQueriesOnWhitespace" />
    </member>
    <member name="M:Nest.KeywordPropertyDescriptor`1.SplitQueriesOnWhitespace(System.Nullable{System.Boolean})">
      <summary> Whether full text queries should split the input on whitespace when building a query for this field. </summary>
      <inheritdoc cref="P:Nest.IKeywordProperty.SplitQueriesOnWhitespace" />
    </member>
    <member name="T:Nest.NumberAttribute">
      <summary>
            Maps a property as a number type. If no type is specified,
            the default type is float (single precision floating point).
            </summary>
    </member>
    <member name="T:Nest.IDateRangeProperty">
      <summary>
            A range of date values represented as unsigned 64-bit integer milliseconds elapsed since system epoch.
            </summary>
    </member>
    <member name="P:Nest.IDateRangeProperty.Format">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
    </member>
    <member name="T:Nest.DateRangeProperty">
      <inheritdoc />
    </member>
    <member name="P:Nest.DateRangeProperty.Format">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DateRangePropertyDescriptor`1">
      <inheritdoc />
    </member>
    <member name="M:Nest.DateRangePropertyDescriptor`1.Format(System.String)">
      <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IDoubleRangeProperty">
      <summary>
            A range of double-precision 64-bit IEEE 754 floating point values.
            </summary>
    </member>
    <member name="T:Nest.DoubleRangeProperty">
      <inheritdoc />
    </member>
    <member name="T:Nest.DoubleRangePropertyDescriptor`1">
      <inheritdoc />
    </member>
    <member name="T:Nest.IFloatRangeProperty">
      <summary>
            A range of single-precision 32-bit IEEE 754 floating point values.
            </summary>
    </member>
    <member name="T:Nest.FloatRangeProperty">
      <inheritdoc />
    </member>
    <member name="T:Nest.FloatRangePropertyDescriptor`1">
      <inheritdoc />
    </member>
    <member name="T:Nest.IIntegerRangeProperty">
      <summary>
            A range of signed 32-bit integers with a minimum value of -231 and maximum of 231-1.
            </summary>
    </member>
    <member name="T:Nest.IntegerRangeProperty">
      <inheritdoc />
    </member>
    <member name="T:Nest.IntegerRangePropertyDescriptor`1">
      <inheritdoc />
    </member>
    <member name="P:Nest.IRangeProperty.Boost">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
    </member>
    <member name="P:Nest.IRangeProperty.Coerce">
      <summary>
            Try to convert strings to numbers and truncate fractions for integers. Accepts true (default) and false.
            </summary>
    </member>
    <member name="P:Nest.IRangeProperty.Index">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
    </member>
    <member name="P:Nest.RangePropertyBase.Boost">
      <inheritdoc />
    </member>
    <member name="P:Nest.RangePropertyBase.Coerce">
      <inheritdoc />
    </member>
    <member name="P:Nest.RangePropertyBase.Index">
      <inheritdoc />
    </member>
    <member name="M:Nest.RangePropertyDescriptorBase`3.Coerce(System.Nullable{System.Boolean})">
      <summary>
            Try to convert strings to numbers and truncate fractions for integers. Accepts true (default) and false.
            </summary>
      <inheritdoc cref="P:Nest.IRangeProperty.Coerce" />
    </member>
    <member name="M:Nest.RangePropertyDescriptorBase`3.Boost(System.Nullable{System.Double})">
      <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
      <inheritdoc cref="P:Nest.IRangeProperty.Boost" />
    </member>
    <member name="M:Nest.RangePropertyDescriptorBase`3.Index(System.Nullable{System.Boolean})">
      <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
      <inheritdoc cref="P:Nest.IRangeProperty.Index" />
    </member>
    <member name="F:Nest.RangeType.IntegerRange">
      <summary>
            A range of signed 32-bit integers with a minimum value of -231 and maximum of 231-1.
            </summary>
    </member>
    <member name="F:Nest.RangeType.FloatRange">
      <summary>
            A range of single-precision 32-bit IEEE 754 floating point values.
            </summary>
    </member>
    <member name="F:Nest.RangeType.LongRange">
      <summary>
            A range of signed 64-bit integers with a minimum value of -263 and maximum of 263-1.
            </summary>
    </member>
    <member name="F:Nest.RangeType.DoubleRange">
      <summary>
            A range of double-precision 64-bit IEEE 754 floating point values.
            </summary>
    </member>
    <member name="F:Nest.RangeType.DateRange">
      <summary>
            A range of date values represented as unsigned 64-bit integer milliseconds elapsed since system epoch.
            </summary>
    </member>
    <member name="F:Nest.RangeType.IpRange">
      <summary>
            A range of ip values supporting either IPv4 or IPv6 (or mixed) addresses.
            </summary>
    </member>
    <member name="T:Nest.RankFeaturesAttribute">
      <inheritdoc cref="T:Nest.IRankFeaturesProperty" />
    </member>
    <member name="T:Nest.IRankFeaturesProperty">
      <summary>
            A field that can index numeric feature vectors, so that they can later be used to boost documents in queries with a rank_feature query.
            It is analogous to the <see cref="T:Nest.IRankFeatureProperty" /> datatype, but is better suited when the list of features is sparse so that it
            wouldn't be reasonable to add one field to the mappings for each of them.
            </summary>
    </member>
    <member name="T:Nest.RankFeaturesProperty">
      <inheritdoc cref="T:Nest.IRankFeaturesProperty" />
    </member>
    <member name="T:Nest.RankFeaturesPropertyDescriptor`1">
      <inheritdoc cref="T:Nest.IRankFeaturesProperty" />
    </member>
    <member name="T:Nest.RankFeatureAttribute">
      <inheritdoc cref="T:Nest.IRankFeatureProperty" />
    </member>
    <member name="P:Nest.RankFeatureAttribute.PositiveScoreImpact">
      <inheritdoc cref="P:Nest.IRankFeatureProperty.PositiveScoreImpact" />
    </member>
    <member name="T:Nest.IRankFeatureProperty">
      <summary>
            A field that can index numbers so that they can later be used
            to boost documents in queries with a rank_feature query.
            </summary>
    </member>
    <member name="P:Nest.IRankFeatureProperty.PositiveScoreImpact">
      <summary>
            Rank features that correlate negatively with the score should set <see cref="P:Nest.IRankFeatureProperty.PositiveScoreImpact" />
            to false (defaults to true). This will be used by the rank_feature query to modify the scoring
            formula in such a way that the score decreases with the value of the feature instead of
            increasing. For instance in web search, the url length is a commonly used feature
            which correlates negatively with scores.
            </summary>
    </member>
    <member name="T:Nest.RankFeatureProperty">
      <inheritdoc cref="T:Nest.IRankFeatureProperty" />
    </member>
    <member name="P:Nest.RankFeatureProperty.PositiveScoreImpact">
      <summary>
            Rank features that correlate negatively with the score should set <see cref="P:Nest.IRankFeatureProperty.PositiveScoreImpact" />
            to false (defaults to true). This will be used by the rank_feature query to modify the scoring
            formula in such a way that the score decreases with the value of the feature instead of
            increasing. For instance in web search, the url length is a commonly used feature
            which correlates negatively with scores.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.RankFeaturePropertyDescriptor`1">
      <inheritdoc cref="T:Nest.IRankFeatureProperty" />
    </member>
    <member name="M:Nest.RankFeaturePropertyDescriptor`1.PositiveScoreImpact(System.Nullable{System.Boolean})">
      <summary>
            Rank features that correlate negatively with the score should set <see cref="P:Nest.IRankFeatureProperty.PositiveScoreImpact" />
            to false (defaults to true). This will be used by the rank_feature query to modify the scoring
            formula in such a way that the score decreases with the value of the feature instead of
            increasing. For instance in web search, the url length is a commonly used feature
            which correlates negatively with scores.
            </summary>
      <inheritdoc cref="P:Nest.IRankFeatureProperty.PositiveScoreImpact" />
    </member>
    <member name="T:Nest.ISearchAsYouTypeProperty">
      <summary>
            A text-like field that is optimized to provide out-of-the-box support for the "search as you type" completion use case.
            <para></para>
            It creates a series of subfields that are analyzed to index terms that can be efficiently matched by a query that
            partially matches the entire indexed text value. Both prefix completion (i.e matching terms starting at the beginning of the input)
            and infix completion (i.e. matching terms at any position within the input) are supported.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.Analyzer">
      <summary>
            The analyzer which should be used for analyzed string fields, both at index-time and at
            search-time (unless overridden by the search_analyzer).
            Defaults to the default index analyzer, or the standard analyzer.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.Index">
      <summary>
            Should the field be searchable? Accepts <c>true</c> (default) or <c>false</c>.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.IndexOptions">
      <summary>
            What information should be stored in the index, for search and highlighting purposes. Defaults to <see cref="F:Nest.IndexOptions.Positions" />.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.MaxShingleSize">
      <summary>
            The largest shingle size to index the input with and create subfields for.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.Norms">
      <summary>
            Whether field-length should be taken into account when scoring queries. Accepts true or false. This option configures the root field
            and shingle subfields, where its default is true.
            It does not configure the prefix subfield, where it it false.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.SearchAnalyzer">
      <summary>
            The analyzer that should be used at search time on analyzed fields. Defaults to the analyzer setting.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.SearchQuoteAnalyzer">
      <summary>
            The analyzer that should be used at search time when a phrase is encountered. Defaults to the search_analyzer setting.
            </summary>
    </member>
    <member name="P:Nest.ISearchAsYouTypeProperty.TermVector">
      <summary>
            Whether term vectors should be stored for an analyzed field. Defaults to no. This option
            configures the root field and shingle subfields, but not the prefix subfield.
            </summary>
    </member>
    <member name="T:Nest.SearchAsYouTypeProperty">
      <inheritdoc cref="T:Nest.ISearchAsYouTypeProperty" />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.Analyzer">
      <summary>
            The analyzer which should be used for analyzed string fields, both at index-time and at
            search-time (unless overridden by the search_analyzer).
            Defaults to the default index analyzer, or the standard analyzer.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.Index">
      <summary>
            Should the field be searchable? Accepts <c>true</c> (default) or <c>false</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.IndexOptions">
      <summary>
            What information should be stored in the index, for search and highlighting purposes. Defaults to <see cref="F:Nest.IndexOptions.Positions" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.MaxShingleSize">
      <summary>
            The largest shingle size to index the input with and create subfields for.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.Norms">
      <summary>
            Whether field-length should be taken into account when scoring queries. Accepts true or false. This option configures the root field
            and shingle subfields, where its default is true.
            It does not configure the prefix subfield, where it it false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.SearchAnalyzer">
      <summary>
            The analyzer that should be used at search time on analyzed fields. Defaults to the analyzer setting.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.SearchQuoteAnalyzer">
      <summary>
            The analyzer that should be used at search time when a phrase is encountered. Defaults to the search_analyzer setting.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchAsYouTypeProperty.TermVector">
      <summary>
            Whether term vectors should be stored for an analyzed field. Defaults to no. This option
            configures the root field and shingle subfields, but not the prefix subfield.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SearchAsYouTypePropertyDescriptor`1">
      <inheritdoc cref="T:Nest.ISearchAsYouTypeProperty" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.Analyzer(System.String)">
      <summary>
            The analyzer which should be used for analyzed string fields, both at index-time and at
            search-time (unless overridden by the search_analyzer).
            Defaults to the default index analyzer, or the standard analyzer.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.Analyzer" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.Index(System.Nullable{System.Boolean})">
      <summary>
            Should the field be searchable? Accepts <c>true</c> (default) or <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.Index" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.IndexOptions(System.Nullable{Nest.IndexOptions})">
      <summary>
            What information should be stored in the index, for search and highlighting purposes. Defaults to <see cref="F:Nest.IndexOptions.Positions" />.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.IndexOptions" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.MaxShingleSize(System.Nullable{System.Int32})">
      <summary>
            The largest shingle size to index the input with and create subfields for.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.MaxShingleSize" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.Norms(System.Nullable{System.Boolean})">
      <summary>
            Whether field-length should be taken into account when scoring queries. Accepts true or false. This option configures the root field
            and shingle subfields, where its default is true.
            It does not configure the prefix subfield, where it it false.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.Norms" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.SearchAnalyzer(System.String)">
      <summary>
            The analyzer that should be used at search time on analyzed fields. Defaults to the analyzer setting.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.SearchAnalyzer" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.SearchQuoteAnalyzer(System.String)">
      <summary>
            The analyzer that should be used at search time when a phrase is encountered. Defaults to the search_analyzer setting.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.SearchQuoteAnalyzer" />
    </member>
    <member name="M:Nest.SearchAsYouTypePropertyDescriptor`1.TermVector(System.Nullable{Nest.TermVectorOption})">
      <summary>
            Whether term vectors should be stored for an analyzed field. Defaults to no. This option
            configures the root field and shingle subfields, but not the prefix subfield.
            </summary>
      <inheritdoc cref="P:Nest.ISearchAsYouTypeProperty.TermVector" />
    </member>
    <member name="T:Nest.IDocValuesProperty">
      <summary>
            Properties of a mapping for a property type to a document field that has doc_values in Elasticsearch
            </summary>
    </member>
    <member name="P:Nest.IDocValuesProperty.DocValues">
      <summary>
            Whether to persist the value at index time in a columnar data structure (referred to as doc_values in Lucene)
            which makes the value available for efficient sorting and aggregations. Default is <c>true</c>.
            </summary>
    </member>
    <member name="T:Nest.DocValuesPropertyBase">
      <inheritdoc cref="T:Nest.IDocValuesProperty" />
    </member>
    <member name="P:Nest.DocValuesPropertyBase.DocValues">
      <inheritdoc />
    </member>
    <member name="T:Nest.DocValuesPropertyDescriptorBase`3">
      <inheritdoc cref="T:Nest.IDocValuesProperty" />
    </member>
    <member name="M:Nest.DocValuesPropertyDescriptorBase`3.DocValues(System.Nullable{System.Boolean})">
      <summary>
            Whether to persist the value at index time in a columnar data structure (referred to as doc_values in Lucene)
            which makes the value available for efficient sorting and aggregations. Default is <c>true</c>.
            </summary>
      <inheritdoc cref="P:Nest.IDocValuesProperty.DocValues" />
    </member>
    <member name="T:Nest.FieldType">
      <summary>
            Define the type of field content.
            </summary>
    </member>
    <member name="F:Nest.FieldType.None">
      <summary>
            Default. Will be defined by the type of property return.
            </summary>
    </member>
    <member name="F:Nest.FieldType.Ip">
      <summary>
            An ip mapping type allows to store ipv4 addresses in a numeric form allowing to easily sort, and range query it (using ip values).
            </summary>
    </member>
    <member name="F:Nest.FieldType.Binary">
      <summary>
            The binary type is a base64 representation of binary data that can be stored in the index.
            </summary>
    </member>
    <member name="F:Nest.FieldType.SearchAsYouType">
      <summary>
            A text-like field that is optimized to provide out-of-the-box support for queries that serve an as-you-type completion use case.
            </summary>
    </member>
    <member name="F:Nest.FieldType.Object">
      <summary>
            object type, no need to set this manually if its not a value type this will be set.
            Only set this if you need to force a value type to be mapped to an Elasticsearch object type.
            </summary>
    </member>
    <member name="F:Nest.FieldType.Murmur3Hash">
      <summary>
            Murmur hash type, for use with the cardinality aggregation.
            </summary>
    </member>
    <member name="P:Nest.GeoPointAttribute.IgnoreMalformed">
      <inheritdoc cref="P:Nest.IGeoPointProperty.IgnoreMalformed" />
    </member>
    <member name="P:Nest.GeoPointAttribute.IgnoreZValue">
      <inheritdoc cref="P:Nest.IGeoPointProperty.IgnoreZValue" />
    </member>
    <member name="T:Nest.IGeoPointProperty">
      <summary>
            Data type mapping to map a property as a geopoint
            </summary>
    </member>
    <member name="P:Nest.IGeoPointProperty.IgnoreMalformed">
      <summary>
            If true, malformed geo-points are ignored. If false (default), malformed
            geo-points throw an exception and reject the whole document.
            </summary>
    </member>
    <member name="P:Nest.IGeoPointProperty.IgnoreZValue">
      <summary>
            If true (default) three dimension points will be accepted (stored in source) but only
            latitude and longitude values will be indexed; the third dimension is ignored. If false, geo-points
            containing any more than latitude and longitude (two dimensions) values
            throw an exception and reject the whole document.
            </summary>
    </member>
    <member name="P:Nest.IGeoPointProperty.NullValue">
      <summary>
            Accepts a geo_point value which is substituted for any explicit null values.
            Defaults to null, which means the field is treated as missing.
            </summary>
    </member>
    <member name="P:Nest.GeoPointProperty.IgnoreMalformed">
      <summary>
            If true, malformed geo-points are ignored. If false (default), malformed
            geo-points throw an exception and reject the whole document.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoPointProperty.IgnoreZValue">
      <summary>
            If true (default) three dimension points will be accepted (stored in source) but only
            latitude and longitude values will be indexed; the third dimension is ignored. If false, geo-points
            containing any more than latitude and longitude (two dimensions) values
            throw an exception and reject the whole document.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoPointProperty.NullValue">
      <summary>
            Accepts a geo_point value which is substituted for any explicit null values.
            Defaults to null, which means the field is treated as missing.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GeoPointPropertyDescriptor`1.IgnoreMalformed(System.Nullable{System.Boolean})">
      <summary>
            If true, malformed geo-points are ignored. If false (default), malformed
            geo-points throw an exception and reject the whole document.
            </summary>
      <inheritdoc cref="P:Nest.IGeoPointProperty.IgnoreMalformed" />
    </member>
    <member name="M:Nest.GeoPointPropertyDescriptor`1.IgnoreZValue(System.Nullable{System.Boolean})">
      <summary>
            If true (default) three dimension points will be accepted (stored in source) but only
            latitude and longitude values will be indexed; the third dimension is ignored. If false, geo-points
            containing any more than latitude and longitude (two dimensions) values
            throw an exception and reject the whole document.
            </summary>
      <inheritdoc cref="P:Nest.IGeoPointProperty.IgnoreZValue" />
    </member>
    <member name="M:Nest.GeoPointPropertyDescriptor`1.NullValue(Nest.GeoLocation)">
      <summary>
            Accepts a geo_point value which is substituted for any explicit null values.
            Defaults to null, which means the field is treated as missing.
            </summary>
      <inheritdoc cref="P:Nest.IGeoPointProperty.NullValue" />
    </member>
    <member name="T:Nest.GeoShapeAttribute">
      <inheritdoc cref="T:Nest.IGeoShapeProperty" />
    </member>
    <member name="P:Nest.GeoShapeAttribute.IgnoreMalformed">
      <inheritdoc cref="P:Nest.IGeoShapeProperty.IgnoreMalformed" />
    </member>
    <member name="P:Nest.GeoShapeAttribute.IgnoreZValue">
      <inheritdoc cref="P:Nest.IGeoShapeProperty.IgnoreZValue" />
    </member>
    <member name="P:Nest.GeoShapeAttribute.Orientation">
      <inheritdoc cref="P:Nest.IGeoShapeProperty.Orientation" />
    </member>
    <member name="P:Nest.GeoShapeAttribute.Strategy">
      <inheritdoc cref="P:Nest.IGeoShapeProperty.Strategy" />
    </member>
    <member name="P:Nest.GeoShapeAttribute.Coerce">
      <inheritdoc cref="P:Nest.IGeoShapeProperty.Coerce" />
    </member>
    <member name="T:Nest.IGeoShapeProperty">
      <summary>
            Maps a property as a geo_shape field
            </summary>
    </member>
    <member name="P:Nest.IGeoShapeProperty.IgnoreMalformed">
      <summary>
            If <c>true</c>, malformed geojson shapes are ignored. If false (default),
            malformed geojson shapes throw an exception and reject the whole document.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.1.0+
            </remarks>
    </member>
    <member name="P:Nest.IGeoShapeProperty.IgnoreZValue">
      <summary>
            If true (default) three dimension points will be accepted (stored in source) but
            only latitude and longitude values will be indexed; the third dimension is ignored. If false,
            geo-points containing any more than latitude and longitude (two dimensions) values throw
            an exception and reject the whole document.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.3.0+
            </remarks>
    </member>
    <member name="P:Nest.IGeoShapeProperty.Orientation">
      <summary>
            Defines how to interpret vertex order for polygons and multipolygons.
            Defaults to <see cref="F:Nest.GeoOrientation.CounterClockWise" /></summary>
    </member>
    <member name="P:Nest.IGeoShapeProperty.Strategy">
      <summary>
            Defines the approach for how to represent shapes at indexing and search time.
            It also influences the capabilities available so it is recommended to let
            Elasticsearch set this parameter automatically.
            </summary>
    </member>
    <member name="P:Nest.IGeoShapeProperty.Coerce">
      <summary>
            Should the data be coerced into becoming a valid geo shape (for instance closing a polygon)
            </summary>
    </member>
    <member name="T:Nest.GeoShapeProperty">
      <inheritdoc cref="T:Nest.IGeoShapeProperty" />
    </member>
    <member name="P:Nest.GeoShapeProperty.IgnoreMalformed">
      <summary>
            If <c>true</c>, malformed geojson shapes are ignored. If false (default),
            malformed geojson shapes throw an exception and reject the whole document.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeProperty.IgnoreZValue">
      <summary>
            If true (default) three dimension points will be accepted (stored in source) but
            only latitude and longitude values will be indexed; the third dimension is ignored. If false,
            geo-points containing any more than latitude and longitude (two dimensions) values throw
            an exception and reject the whole document.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.3.0+
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeProperty.Orientation">
      <summary>
            Defines how to interpret vertex order for polygons and multipolygons.
            Defaults to <see cref="F:Nest.GeoOrientation.CounterClockWise" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeProperty.Strategy">
      <summary>
            Defines the approach for how to represent shapes at indexing and search time.
            It also influences the capabilities available so it is recommended to let
            Elasticsearch set this parameter automatically.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeProperty.Coerce">
      <summary>
            Should the data be coerced into becoming a valid geo shape (for instance closing a polygon)
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GeoShapePropertyDescriptor`1">
      <inheritdoc cref="T:Nest.IGeoShapeProperty" />
    </member>
    <member name="M:Nest.GeoShapePropertyDescriptor`1.Strategy(System.Nullable{Nest.GeoStrategy})">
      <summary>
            Defines the approach for how to represent shapes at indexing and search time.
            It also influences the capabilities available so it is recommended to let
            Elasticsearch set this parameter automatically.
            </summary>
      <inheritdoc cref="P:Nest.IGeoShapeProperty.Strategy" />
    </member>
    <member name="M:Nest.GeoShapePropertyDescriptor`1.Orientation(System.Nullable{Nest.GeoOrientation})">
      <summary>
            Defines how to interpret vertex order for polygons and multipolygons.
            Defaults to <see cref="F:Nest.GeoOrientation.CounterClockWise" /></summary>
      <inheritdoc cref="P:Nest.IGeoShapeProperty.Orientation" />
    </member>
    <member name="M:Nest.GeoShapePropertyDescriptor`1.IgnoreMalformed(System.Nullable{System.Boolean})">
      <summary>
            If <c>true</c>, malformed geojson shapes are ignored. If false (default),
            malformed geojson shapes throw an exception and reject the whole document.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc cref="P:Nest.IGeoShapeProperty.IgnoreMalformed" />
    </member>
    <member name="M:Nest.GeoShapePropertyDescriptor`1.IgnoreZValue(System.Nullable{System.Boolean})">
      <summary>
            If true (default) three dimension points will be accepted (stored in source) but
            only latitude and longitude values will be indexed; the third dimension is ignored. If false,
            geo-points containing any more than latitude and longitude (two dimensions) values throw
            an exception and reject the whole document.
            </summary>
      <remarks>
            Valid for Elasticsearch 6.3.0+
            </remarks>
      <inheritdoc cref="P:Nest.IGeoShapeProperty.IgnoreZValue" />
    </member>
    <member name="M:Nest.GeoShapePropertyDescriptor`1.Coerce(System.Nullable{System.Boolean})">
      <summary>
            Should the data be coerced into becoming a valid geo shape (for instance closing a polygon)
            </summary>
      <inheritdoc cref="P:Nest.IGeoShapeProperty.Coerce" />
    </member>
    <member name="F:Nest.GeoStrategy.Recursive">
      <summary>
            supports all shape types
            </summary>
    </member>
    <member name="F:Nest.GeoStrategy.Term">
      <summary>
            supports point types only
            </summary>
    </member>
    <member name="M:Nest.IPropertiesDescriptor`2.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})">
      <summary>
            Number introduces a numeric mapping that defaults to `float`. Use .Type() to set the right type if needed or use
            Scalar instead of <see cref="M:Nest.IPropertiesDescriptor`2.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})" /></summary>
    </member>
    <member name="M:Nest.PropertiesDescriptor`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})">
      <summary>
            Number introduces a numeric mapping that defaults to <c>float</c>. use
            <see cref="P:Nest.IProperty.Type" /> to set the right type if needed, or use .Scalar()
            instead of <see cref="M:Nest.PropertiesDescriptor`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})" /></summary>
    </member>
    <member name="M:Nest.PropertiesDescriptor`1.RankFeature(System.Func{Nest.RankFeaturePropertyDescriptor{`0},Nest.IRankFeatureProperty})">
      <inheritdoc cref="T:Nest.IRankFeatureProperty" />
    </member>
    <member name="M:Nest.PropertiesDescriptor`1.RankFeatures(System.Func{Nest.RankFeaturesPropertyDescriptor{`0},Nest.IRankFeaturesProperty})">
      <inheritdoc cref="T:Nest.IRankFeaturesProperty" />
    </member>
    <member name="M:Nest.PropertiesDescriptor`1.Flattened(System.Func{Nest.FlattenedPropertyDescriptor{`0},Nest.IFlattenedProperty})">
      <inheritdoc cref="T:Nest.IFlattenedProperty" />
    </member>
    <member name="T:Nest.IProperty">
      <summary>
            A mapping for a property type to a document field in Elasticsearch
            </summary>
    </member>
    <member name="P:Nest.IProperty.LocalMetadata">
      <summary>
            Local property metadata that will not be stored in Elasticsearch with the mappings
            </summary>
    </member>
    <member name="P:Nest.IProperty.Name">
      <summary>
            The name of the property
            </summary>
    </member>
    <member name="P:Nest.IProperty.Type">
      <summary>
            The datatype of the property
            </summary>
    </member>
    <member name="T:Nest.IPropertyWithClrOrigin">
      <summary>
            A mapping for a property from a CLR type
            </summary>
    </member>
    <member name="P:Nest.IPropertyWithClrOrigin.ClrOrigin">
      <summary>
            The CLR property to which the mapping relates
            </summary>
    </member>
    <member name="T:Nest.PropertyBase">
      <inheritdoc cref="T:Nest.IProperty" />
    </member>
    <member name="P:Nest.PropertyBase.LocalMetadata">
      <inheritdoc />
    </member>
    <member name="P:Nest.PropertyBase.Name">
      <inheritdoc />
    </member>
    <member name="P:Nest.PropertyBase.TypeOverride">
      <summary>
            Override for the property type, used for custom mappings
            </summary>
    </member>
    <member name="T:Nest.PropertyDescriptorBase`3">
      <inheritdoc cref="T:Nest.IProperty" />
    </member>
    <member name="M:Nest.PropertyDescriptorBase`3.Name(Nest.PropertyName)">
      <summary>
            The name of the property
            </summary>
      <inheritdoc cref="P:Nest.IProperty.Name" />
    </member>
    <member name="M:Nest.PropertyDescriptorBase`3.Name``1(System.Linq.Expressions.Expression{System.Func{`2,``0}})">
      <inheritdoc cref="P:Nest.IProperty.Name" />
    </member>
    <member name="M:Nest.PropertyDescriptorBase`3.LocalMetadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            Local property metadata that will not be stored in Elasticsearch with the mappings
            </summary>
      <inheritdoc cref="P:Nest.IProperty.LocalMetadata" />
    </member>
    <member name="T:Nest.Attachment">
      <summary>
            An attachment indexed with an ingest pipeline using the ingest-attachment plugin.
            Convenience class for working with attachment fields.
            </summary>
    </member>
    <member name="P:Nest.Attachment.Author">
      <summary>
            The author
            </summary>
    </member>
    <member name="P:Nest.Attachment.ContainsMetadata">
      <summary>
            Whether the attachment contains explicit metadata in addition to the
            content. Used at indexing time to determine the serialized form of the
            attachment.
            </summary>
    </member>
    <member name="P:Nest.Attachment.Content">
      <summary>
            The base64 encoded content. Can be explicitly set
            </summary>
    </member>
    <member name="P:Nest.Attachment.ContentLength">
      <summary>
            The length of the content before text extraction.
            </summary>
    </member>
    <member name="P:Nest.Attachment.ContentType">
      <summary>
            The content type of the attachment. Can be explicitly set
            </summary>
    </member>
    <member name="P:Nest.Attachment.Date">
      <summary>
            The date of the attachment.
            </summary>
    </member>
    <member name="P:Nest.Attachment.DetectLanguage">
      <summary>
            Detect the language of the attachment. Language detection is
            disabled by default.
            </summary>
    </member>
    <member name="P:Nest.Attachment.IndexedCharacters">
      <summary>
            Determines how many characters are extracted when indexing the content.
            By default, 100000 characters are extracted when indexing the content.
            -1 can be set to extract all text, but note that all the text needs to be
            allowed to be represented in memory
            </summary>
    </member>
    <member name="P:Nest.Attachment.Keywords">
      <summary>
            The keywords in the attachment.
            </summary>
    </member>
    <member name="P:Nest.Attachment.Language">
      <summary>
            The language of the attachment. Can be explicitly set.
            </summary>
    </member>
    <member name="P:Nest.Attachment.Name">
      <summary>
            The name of the attachment. Can be explicitly set
            </summary>
    </member>
    <member name="P:Nest.Attachment.Title">
      <summary>
            The title of the attachment.
            </summary>
    </member>
    <member name="P:Nest.IGeoSuggestContext.Precision">
      <summary>
            The precision of the geohash to encode the query geo point.
            Only the first value will be serialized.
            </summary>
    </member>
    <member name="P:Nest.GeoSuggestContext.Precision">
      <summary>
            The precision of the geohash to encode the query geo point.
            Only the first value will be serialized.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GeoSuggestContextDescriptor`1.Precision(System.String[])">
      <summary>
            The precision of the geohash to encode the query geo point.
            Only the first value will be serialized.
            </summary>
      <inheritdoc cref="P:Nest.IGeoSuggestContext.Precision" />
    </member>
    <member name="T:Nest.IFieldAliasProperty">
      <summary>
            An alias mapping defines an alternate name for a field in the index. The alias can be used in place
            of the target field in search requests, and selected other APIs like field capabilities.
            </summary>
    </member>
    <member name="P:Nest.IFieldAliasProperty.Path">
      <summary> The full path to alias </summary>
    </member>
    <member name="T:Nest.FieldAliasProperty">
      <inheritdoc cref="P:Nest.IFieldAliasProperty.Path" />
    </member>
    <member name="P:Nest.FieldAliasProperty.Path">
      <summary> The full path to alias </summary>
      <inheritdoc cref="P:Nest.IFieldAliasProperty.Path" />
    </member>
    <member name="T:Nest.FieldAliasPropertyDescriptor`1">
      <inheritdoc cref="P:Nest.IFieldAliasProperty.Path" />
    </member>
    <member name="M:Nest.FieldAliasPropertyDescriptor`1.Path``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IFieldAliasProperty.Path" />
    </member>
    <member name="M:Nest.FieldAliasPropertyDescriptor`1.Path(Nest.Field)">
      <summary> The full path to alias </summary>
      <inheritdoc cref="P:Nest.IFieldAliasProperty.Path" />
    </member>
    <member name="T:Nest.IGenericProperty">
      <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
    </member>
    <member name="T:Nest.GenericProperty">
      <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
    </member>
    <member name="T:Nest.GenericPropertyDescriptor`1">
      <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
      <typeparam name="T">the type on which the property is declared</typeparam>
    </member>
    <member name="P:Nest.IAllocationAwarenessSettings.Attributes">
      <summary>Determines which node attributes are taken into account when balancing shards across the shards</summary>
    </member>
    <member name="P:Nest.IAllocationAwarenessSettings.Forced">
      <summary>With forced awareness shard copies are NEVER allicated within the same attribute</summary>
    </member>
    <member name="P:Nest.AllocationAwarenessSettings.Attributes">
      <summary>Determines which node attributes are taken into account when balancing shards across the shards</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationAwarenessSettings.Forced">
      <summary>With forced awareness shard copies are NEVER allicated within the same attribute</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationAwarenessSettingsDescriptor.Nest#IAllocationAwarenessSettings#Attributes">
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationAwarenessSettingsDescriptor.Nest#IAllocationAwarenessSettings#Forced">
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Attributes(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Determines which node attributes are taken into account when balancing shards across the shards</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Attributes(System.String[])">
      <summary>Determines which node attributes are taken into account when balancing shards across the shards</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Force(Nest.IAllocationAttributes)">
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Force(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
      <inheritdoc />
    </member>
    <member name="P:Nest.IAllocationFilteringSettings.Exclude">
      <summary>Assign the index to a node whose {attribute} has all of the comma-separated values.</summary>
    </member>
    <member name="P:Nest.IAllocationFilteringSettings.Include">
      <summary>Assign the index to a node whose {attribute} has at least one of the comma-separated values.</summary>
    </member>
    <member name="P:Nest.IAllocationFilteringSettings.Require">
      <summary>Assign the index to a node whose {attribute} has none of the comma-separated values.</summary>
    </member>
    <member name="P:Nest.AllocationFilteringSettings.Exclude">
      <summary>Assign the index to a node whose {attribute} has all of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationFilteringSettings.Include">
      <summary>Assign the index to a node whose {attribute} has at least one of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationFilteringSettings.Require">
      <summary>Assign the index to a node whose {attribute} has none of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Exclude">
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Include">
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Require">
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationFilteringSettingsDescriptor.Include(Nest.IAllocationAttributes)">
      <summary>Assign the index to a node whose {attribute} has at least one of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationFilteringSettingsDescriptor.Include(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
      <summary>Assign the index to a node whose {attribute} has at least one of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationFilteringSettingsDescriptor.Exlude(Nest.IAllocationAttributes)">
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationFilteringSettingsDescriptor.Exclude(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
      <summary>Assign the index to a node whose {attribute} has all of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationFilteringSettingsDescriptor.Require(Nest.IAllocationAttributes)">
      <summary>Assign the index to a node whose {attribute} has none of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AllocationFilteringSettingsDescriptor.Require(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
      <summary>Assign the index to a node whose {attribute} has none of the comma-separated values.</summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IClusterModuleSettings">
      <summary> Settings to control where, when, and how shards are allocated to nodes. </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.AllocationAwareness">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.AllocationFiltering">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.DiskBasedShardAllocation">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.Logger">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.ReadOnly">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.ShardAllocation">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.ShardBalancingHeuristics">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IClusterModuleSettings.ShardRebalancing">
      <summary>
      </summary>
    </member>
    <member name="T:Nest.ClusterModuleSettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.AllocationAwareness">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.AllocationFiltering">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.DiskBasedShardAllocation">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.Logger">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.ReadOnly">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.ShardAllocation">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.ShardBalancingHeuristics">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ClusterModuleSettings.ShardRebalancing">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ClusterModuleSettingsDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardRebalancing(System.Nullable{System.Boolean})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.Logger(System.Collections.Generic.IDictionary{System.String,Nest.LogLevel})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.Logger(System.Func{Nest.FluentDictionary{System.String,Nest.LogLevel},Nest.FluentDictionary{System.String,Nest.LogLevel}})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.AllocationAwareness(System.Func{Nest.AllocationAwarenessSettings,Nest.IAllocationAwarenessSettings})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.AllocationFiltering(System.Func{Nest.AllocationFilteringSettingsDescriptor,Nest.IAllocationFilteringSettings})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.DiskBasedShardAllocation(System.Func{Nest.DiskBasedShardAllocationSettingsDescriptor,Nest.IDiskBasedShardAllocationSettings})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardAllocation(System.Func{Nest.ShardAllocationSettingsDescriptor,Nest.IShardAllocationSettings})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardBalancingHeuristics(System.Func{Nest.ShardBalancingHeuristicsSettingsDescriptor,Nest.IShardBalancingHeuristicsSettings})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardRebalancing(System.Func{Nest.ShardRebalancingSettingsDescriptor,Nest.IShardRebalancingSettings})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IDiskBasedShardAllocationSettings.HighWatermark">
      <summary>
            Controls the high watermark. It defaults to 90%, meaning ES will attempt to relocate shards to another node if the node disk usage rises
            above 90%.
            It can also be set to an absolute byte value (similar to the low watermark) to relocate shards once less than the
             configured amount of space is available on the node.
            </summary>
    </member>
    <member name="P:Nest.IDiskBasedShardAllocationSettings.IncludeRelocations">
      <summary>
            Defaults to true, which means that Elasticsearch will take into account shards that are currently being relocated to the target node when
            computing
            a node’s disk usage. Taking relocating shards' sizes into account may, however, mean that the disk usage for a node is incorrectly
            estimated on the high side,
            since the relocation could be 90% complete and a recently retrieved disk usage would include the total size of the
            relocating shard as well as the space already used by the running relocation.
            </summary>
    </member>
    <member name="P:Nest.IDiskBasedShardAllocationSettings.LowWatermark">
      <summary>
            Controls the low watermark for disk usage. It defaults to 85%, meaning ES will not allocate new shards to nodes once they have more than
            85% disk used. It can also be set
            to an absolute byte value (like 500mb) to prevent ES from allocating shards if less than the configured amount of space is available.
            </summary>
    </member>
    <member name="P:Nest.IDiskBasedShardAllocationSettings.ThresholdEnabled">
      <summary>Defaults to true. Set to false to disable the disk allocation decider.</summary>
    </member>
    <member name="P:Nest.IDiskBasedShardAllocationSettings.UpdateInterval">
      <summary>How often Elasticsearch should check on disk usage for each node in the cluster. Defaults to 30s.</summary>
    </member>
    <member name="P:Nest.DiskBasedShardAllocationSettings.HighWatermark">
      <summary>
            Controls the high watermark. It defaults to 90%, meaning ES will attempt to relocate shards to another node if the node disk usage rises
            above 90%.
            It can also be set to an absolute byte value (similar to the low watermark) to relocate shards once less than the
             configured amount of space is available on the node.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DiskBasedShardAllocationSettings.IncludeRelocations">
      <summary>
            Defaults to true, which means that Elasticsearch will take into account shards that are currently being relocated to the target node when
            computing
            a node’s disk usage. Taking relocating shards' sizes into account may, however, mean that the disk usage for a node is incorrectly
            estimated on the high side,
            since the relocation could be 90% complete and a recently retrieved disk usage would include the total size of the
            relocating shard as well as the space already used by the running relocation.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DiskBasedShardAllocationSettings.LowWatermark">
      <summary>
            Controls the low watermark for disk usage. It defaults to 85%, meaning ES will not allocate new shards to nodes once they have more than
            85% disk used. It can also be set
            to an absolute byte value (like 500mb) to prevent ES from allocating shards if less than the configured amount of space is available.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DiskBasedShardAllocationSettings.ThresholdEnabled">
      <summary>Defaults to true. Set to false to disable the disk allocation decider.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DiskBasedShardAllocationSettings.UpdateInterval">
      <summary>How often Elasticsearch should check on disk usage for each node in the cluster. Defaults to 30s.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.ThresholdEnabled(System.Nullable{System.Boolean})">
      <summary>Defaults to true. Set to false to disable the disk allocation decider.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.LowWatermark(System.String)">
      <summary>
            Controls the low watermark for disk usage. It defaults to 85%, meaning ES will not allocate new shards to nodes once they have more than
            85% disk used. It can also be set
            to an absolute byte value (like 500mb) to prevent ES from allocating shards if less than the configured amount of space is available.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.HighWatermark(System.String)">
      <summary>
            Controls the high watermark. It defaults to 90%, meaning ES will attempt to relocate shards to another node if the node disk usage rises
            above 90%.
            It can also be set to an absolute byte value (similar to the low watermark) to relocate shards once less than the
             configured amount of space is available on the node.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.UpdateInterval(Nest.Time)">
      <summary>How often Elasticsearch should check on disk usage for each node in the cluster. Defaults to 30s.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.IncludeRelocations(System.Nullable{System.Boolean})">
      <summary>
            Defaults to true, which means that Elasticsearch will take into account shards that are currently being relocated to the target node when
            computing
            a node’s disk usage. Taking relocating shards' sizes into account may, however, mean that the disk usage for a node is incorrectly
            estimated on the high side,
            since the relocation could be 90% complete and a recently retrieved disk usage would include the total size of the
            relocating shard as well as the space already used by the running relocation.
            </summary>
      <inheritdoc />
    </member>
    <member name="F:Nest.AllocationEnable.All">
      <summary>
             (default) Allows shard allocation for all kinds of shards.
            </summary>
    </member>
    <member name="F:Nest.AllocationEnable.Primaries">
      <summary>
            Allows shard allocation only for primary shards.
            </summary>
    </member>
    <member name="F:Nest.AllocationEnable.NewPrimaries">
      <summary>
            Allows shard allocation only for primary shards for new indices.
            </summary>
    </member>
    <member name="F:Nest.AllocationEnable.None">
      <summary>
            No shard allocations of any kind are allowed for any indices.
            </summary>
    </member>
    <member name="F:Nest.AllowRebalance.All">
      <summary>
            (default) Always allow rebalancing.
            </summary>
    </member>
    <member name="F:Nest.AllowRebalance.Primaries">
      <summary>
            Only when all primaries in the cluster are allocated.
            </summary>
    </member>
    <member name="F:Nest.AllowRebalance.Replicas">
      <summary>
            Only when all shards (primaries and replicas) in the cluster are allocated.
            </summary>
    </member>
    <member name="F:Nest.RebalanceEnable.All">
      <summary>
            (default) Allows shard balancing for all kinds of shards.
            </summary>
    </member>
    <member name="F:Nest.RebalanceEnable.Primaries">
      <summary>
            Allows shard balancing only for primary shards.
            </summary>
    </member>
    <member name="F:Nest.RebalanceEnable.Replicas">
      <summary>
            Allows shard balancing only for replica shards.
            </summary>
    </member>
    <member name="F:Nest.RebalanceEnable.None">
      <summary>
            No shard balancing of any kind are allowed for any indices.
            </summary>
    </member>
    <member name="P:Nest.IShardAllocationSettings.AllocationEnable">
      <summary> Enable or disable allocation for specific kinds of shards, defaults to all</summary>
    </member>
    <member name="P:Nest.IShardAllocationSettings.NodeConcurrentRecoveries">
      <summary>How many concurrent shard recoveries are allowed to happen on a node. Defaults to 2.</summary>
    </member>
    <member name="P:Nest.IShardAllocationSettings.NodeInitialPrimariesRecoveries">
      <summary>
            While the recovery of replicas happens over the network, the recovery of an unassigned primary after node restart uses
            data from the local disk. These should be fast so more initial primary recoveries can happen in
            parallel on the same node. Defaults to 4.
            </summary>
    </member>
    <member name="P:Nest.IShardAllocationSettings.SameShardHost">
      <summary>
            Allows to perform a check to prevent allocation of multiple instances of
            the same shard on a single host, based on host name and host address.
            Defaults to false, meaning that no check is performed by default. This setting only
            applies if multiple nodes are started on the same machine.
            </summary>
    </member>
    <member name="P:Nest.ShardAllocationSettings.AllocationEnable">
      <summary> Enable or disable allocation for specific kinds of shards, defaults to all</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardAllocationSettings.NodeConcurrentRecoveries">
      <summary>How many concurrent shard recoveries are allowed to happen on a node. Defaults to 2.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardAllocationSettings.NodeInitialPrimariesRecoveries">
      <summary>
            While the recovery of replicas happens over the network, the recovery of an unassigned primary after node restart uses
            data from the local disk. These should be fast so more initial primary recoveries can happen in
            parallel on the same node. Defaults to 4.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardAllocationSettings.SameShardHost">
      <summary>
            Allows to perform a check to prevent allocation of multiple instances of
            the same shard on a single host, based on host name and host address.
            Defaults to false, meaning that no check is performed by default. This setting only
            applies if multiple nodes are started on the same machine.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardAllocationSettingsDescriptor.AllocationEnable(System.Nullable{Nest.AllocationEnable})">
      <summary> Enable or disable allocation for specific kinds of shards, defaults to all</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardAllocationSettingsDescriptor.NodeConcurrentRecoveries(System.Nullable{System.Int32})">
      <summary>How many concurrent shard recoveries are allowed to happen on a node. Defaults to 2.</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardAllocationSettingsDescriptor.NodeInitialPrimariesRecoveries(System.Nullable{System.Int32})">
      <summary>
            While the recovery of replicas happens over the network, the recovery of an unassigned primary after node restart uses
            data from the local disk. These should be fast so more initial primary recoveries can happen in
            parallel on the same node. Defaults to 4.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardAllocationSettingsDescriptor.SameShardHost(System.Nullable{System.Boolean})">
      <summary>
            Allows to perform a check to prevent allocation of multiple instances of
            the same shard on a single host, based on host name and host address.
            Defaults to false, meaning that no check is performed by default. This setting only
            applies if multiple nodes are started on the same machine.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceIndex">
      <summary>
            Defines a factor to the number of shards per index allocated on a specific node (float). Defaults to 0.55f.
            Raising this raises the tendency to equalize the number of shards per index across all nodes in the cluster.
            </summary>
    </member>
    <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceShard">
      <summary>
            Defines the weight factor for shards allocated on a node (float). Defaults to 0.45f.
             Raising this raises the tendency to equalize the number of shards across all nodes in the cluster.
            </summary>
    </member>
    <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceThreshold">
      <summary>
            Minimal optimization value of operations that should be performed (non negative float). Defaults to 1.0f.
             Raising this will cause the cluster to be less aggressive about optimizing the shard balance
            </summary>
    </member>
    <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceIndex">
      <summary>
            Defines a factor to the number of shards per index allocated on a specific node (float). Defaults to 0.55f.
            Raising this raises the tendency to equalize the number of shards per index across all nodes in the cluster.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceShard">
      <summary>
            Defines the weight factor for shards allocated on a node (float). Defaults to 0.45f.
             Raising this raises the tendency to equalize the number of shards across all nodes in the cluster.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceThreshold">
      <summary>
            Minimal optimization value of operations that should be performed (non negative float). Defaults to 1.0f.
             Raising this will cause the cluster to be less aggressive about optimizing the shard balance
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceShard(System.Nullable{System.Single})">
      <summary>
            Defines the weight factor for shards allocated on a node (float). Defaults to 0.45f.
             Raising this raises the tendency to equalize the number of shards across all nodes in the cluster.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceIndex(System.Nullable{System.Single})">
      <summary>
            Defines a factor to the number of shards per index allocated on a specific node (float). Defaults to 0.55f.
            Raising this raises the tendency to equalize the number of shards per index across all nodes in the cluster.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceThreshold(System.Nullable{System.Single})">
      <summary>
            Minimal optimization value of operations that should be performed (non negative float). Defaults to 1.0f.
             Raising this will cause the cluster to be less aggressive about optimizing the shard balance
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IShardRebalancingSettings.AllowRebalance">
      <summary>Specify when shard rebalancing is allowed</summary>
    </member>
    <member name="P:Nest.IShardRebalancingSettings.ConcurrentRebalance">
      <summary>Allow to control how many concurrent shard rebalances are allowed cluster wide. Defaults to 2.</summary>
    </member>
    <member name="P:Nest.IShardRebalancingSettings.RebalanceEnable">
      <summary>Enable or disable rebalancing for specific kinds of shards</summary>
    </member>
    <member name="P:Nest.ShardRebalancingSettings.AllowRebalance">
      <summary>Specify when shard rebalancing is allowed</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardRebalancingSettings.ConcurrentRebalance">
      <summary>Allow to control how many concurrent shard rebalances are allowed cluster wide. Defaults to 2.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShardRebalancingSettings.RebalanceEnable">
      <summary>Enable or disable rebalancing for specific kinds of shards</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardRebalancingSettingsDescriptor.RebalanceEnable(System.Nullable{Nest.RebalanceEnable})">
      <summary>Enable or disable rebalancing for specific kinds of shards</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardRebalancingSettingsDescriptor.AllowRebalance(System.Nullable{Nest.AllowRebalance})">
      <summary>Specify when shard rebalancing is allowed</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ShardRebalancingSettingsDescriptor.ConcurrentRebalance(System.Nullable{System.Int32})">
      <summary>Allow to control how many concurrent shard rebalances are allowed cluster wide. Defaults to 2.</summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GatewaySettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.GatewaySettings.ExpectedDataNodes">
      <inheritdoc />
    </member>
    <member name="P:Nest.GatewaySettings.ExpectedMasterNodes">
      <inheritdoc />
    </member>
    <member name="P:Nest.GatewaySettings.ExpectedNodes">
      <inheritdoc />
    </member>
    <member name="P:Nest.GatewaySettings.RecoveryAfterTime">
      <inheritdoc />
    </member>
    <member name="P:Nest.ICircuitBreakerSettings.FielddataLimit">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.ICircuitBreakerSettings.FielddataOverhead">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.ICircuitBreakerSettings.RequestLimit">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.ICircuitBreakerSettings.RequestOverhead">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.ICircuitBreakerSettings.TotalLimit">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.CircuitBreakerSettings.FielddataLimit">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CircuitBreakerSettings.FielddataOverhead">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CircuitBreakerSettings.RequestLimit">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CircuitBreakerSettings.RequestOverhead">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CircuitBreakerSettings.TotalLimit">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CircuitBreakerSettingsDescriptor.TotalLimit(System.String)">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CircuitBreakerSettingsDescriptor.FielddataLimit(System.String)">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CircuitBreakerSettingsDescriptor.RequestLimit(System.String)">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CircuitBreakerSettingsDescriptor.FielddataOverhead(System.Nullable{System.Single})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CircuitBreakerSettingsDescriptor.RequestOverhead(System.Nullable{System.Single})">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.FielddataSettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.FielddataSettings.CacheExpire">
      <inheritdoc />
    </member>
    <member name="P:Nest.FielddataSettings.CacheSize">
      <inheritdoc />
    </member>
    <member name="T:Nest.IndexingBufferSettings">
      <summary>
            The indexing buffer is used to store newly indexed documents. When it fills up, the documents in the buffer are written to a segment on
            disk. It is divided between all shards on the node.
            <para>The following settings are static and must be configured on every data node in the cluster</para></summary>
    </member>
    <member name="P:Nest.IndexingBufferSettings.IndexBufferSize">
      <summary>
            Accepts either a percentage or a byte size value. It defaults to 10%, meaning that 10% of the total heap allocated to a node will
            be used as the indexing buffer size.
            </summary>
    </member>
    <member name="P:Nest.IndexingBufferSettings.IndexBufferSizeMaximum">
      <summary>
            If the index_buffer_size is specified as a percentage, then this setting can be used to specify an absolute maximum. Defaults to
            unbounded.
            </summary>
    </member>
    <member name="P:Nest.IndexingBufferSettings.IndexBufferSizeMinimum">
      <summary>
            If the index_buffer_size is specified as a percentage, then this setting can be used to specify an absolute minimum. Defaults to
            48mb.
            </summary>
    </member>
    <member name="P:Nest.IndexingBufferSettings.ShardBufferSizeMinimum">
      <summary>Sets a hard lower limit for the memory allocated per shard for its own indexing buffer. Defaults to 4mb.</summary>
    </member>
    <member name="T:Nest.IIndicesModuleSettings">
      <summary> Settings to control where, when, and how shards are allocated to nodes. </summary>
    </member>
    <member name="P:Nest.IIndicesModuleSettings.CircuitBreakerSettings">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IIndicesModuleSettings.FielddataSettings">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IIndicesModuleSettings.QeueriesCacheSize">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IIndicesModuleSettings.RecoverySettings">
      <summary>
      </summary>
    </member>
    <member name="T:Nest.IndicesModuleSettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettings.CircuitBreakerSettings">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettings.FielddataSettings">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettings.QeueriesCacheSize">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettings.RecoverySettings">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IndicesModuleSettingsDescriptor">
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#CircuitBreakerSettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#FielddataSettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#QeueriesCacheSize">
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#RecoverySettings">
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesModuleSettingsDescriptor.CircuitBreaker(System.Func{Nest.CircuitBreakerSettingsDescriptor,Nest.ICircuitBreakerSettings})">
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesModuleSettingsDescriptor.IndicesRecovery(System.Func{Nest.IndicesRecoverySettingsDescriptor,Nest.IIndicesRecoverySettings})">
      <inheritdoc />
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.Compress">
      <summary> defaults to true</summary>
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.ConcurrentSmallFileStreams">
      <summary> defaults to 2</summary>
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.ConcurrentStreams">
      <summary> defaults to 3</summary>
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.FileChunkSize">
      <summary> defaults to 512kb</summary>
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.MaxBytesPerSecond">
      <summary> defaults to 40mb</summary>
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.TranslogOperations">
      <summary> defaults to 1000</summary>
    </member>
    <member name="P:Nest.IIndicesRecoverySettings.TranslogSize">
      <summary> defaults to 512kb</summary>
    </member>
    <member name="P:Nest.IndicesRecoverySettings.Compress">
      <summary> defaults to true</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesRecoverySettings.ConcurrentSmallFileStreams">
      <summary> defaults to 2</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesRecoverySettings.ConcurrentStreams">
      <summary> defaults to 3</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesRecoverySettings.FileChunkSize">
      <summary> defaults to 512kb</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesRecoverySettings.MaxBytesPerSecond">
      <summary> defaults to 40mb</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesRecoverySettings.TranslogOperations">
      <summary> defaults to 1000</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IndicesRecoverySettings.TranslogSize">
      <summary> defaults to 512kb</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.ConcurrentStreams(System.Nullable{System.Int32})">
      <summary> defaults to 3</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.ConcurrentSmallFileStreams(System.Nullable{System.Int32})">
      <summary> defaults to 2</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.FileChunkSize(System.String)">
      <summary> defaults to 512kb</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.TranslogOperations(System.Nullable{System.Int32})">
      <summary> defaults to 1000</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.TranslogSize(System.String)">
      <summary> defaults to 512kb</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
      <summary> defaults to true</summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.IndicesRecoverySettingsDescriptor.MaxBytesPerSecond(System.String)">
      <summary> defaults to 40mb</summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DeleteScriptRequest">
      <summary>Request for DeleteScript <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</para></summary>
    </member>
    <member name="M:Nest.DeleteScriptRequest.#ctor(Nest.Id)">
      <summary>/_scripts/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteScriptRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteScriptRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.DeleteScriptRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.IExecutePainlessScriptRequest">
      <summary> The Painless execute API allows an arbitrary script to be executed and a result to be returned. </summary>
    </member>
    <member name="P:Nest.IExecutePainlessScriptRequest.Context">
      <summary> The context the script should be executed in </summary>
    </member>
    <member name="P:Nest.IExecutePainlessScriptRequest.ContextSetup">
      <inheritdoc cref="T:Nest.IPainlessContextSetup" />
    </member>
    <member name="P:Nest.IExecutePainlessScriptRequest.Script">
      <summary> The script to execute </summary>
    </member>
    <member name="T:Nest.ExecutePainlessScriptRequest">
      <inheritdoc cref="T:Nest.IExecutePainlessScriptRequest" />
      <summary>Request for ExecutePainlessScript <para>https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html</para></summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="P:Nest.ExecutePainlessScriptRequest.Context">
      <summary> The context the script should be executed in </summary>
      <inheritdoc cref="P:Nest.IExecutePainlessScriptRequest.Context" />
    </member>
    <member name="P:Nest.ExecutePainlessScriptRequest.ContextSetup">
      <inheritdoc cref="P:Nest.IExecutePainlessScriptRequest.ContextSetup" />
    </member>
    <member name="P:Nest.ExecutePainlessScriptRequest.Script">
      <summary> The script to execute </summary>
      <inheritdoc cref="P:Nest.IExecutePainlessScriptRequest.Script" />
    </member>
    <member name="T:Nest.IPainlessContextSetup">
      <summary>
            Sets up contextual scope for the painless script the execute under.
            </summary>
    </member>
    <member name="P:Nest.IPainlessContextSetup.Document">
      <summary>
            Contains the document that will be temporarily indexed in-memory and is accessible from the script.
            </summary>
    </member>
    <member name="P:Nest.IPainlessContextSetup.Index">
      <summary>
            The name of an index containing a mapping that is compatible with the document being indexed.
            </summary>
    </member>
    <member name="P:Nest.IPainlessContextSetup.Query">
      <summary>
            If _score is used in the script then a query can specified that will be used to compute a score.
            </summary>
    </member>
    <member name="T:Nest.PainlessContextSetup">
      <inheritdoc cref="T:Nest.IPainlessContextSetup" />
    </member>
    <member name="P:Nest.PainlessContextSetup.Document">
      <summary>
            Contains the document that will be temporarily indexed in-memory and is accessible from the script.
            </summary>
      <inheritdoc cref="P:Nest.IPainlessContextSetup.Document" />
    </member>
    <member name="P:Nest.PainlessContextSetup.Index">
      <summary>
            The name of an index containing a mapping that is compatible with the document being indexed.
            </summary>
      <inheritdoc cref="P:Nest.IPainlessContextSetup.Index" />
    </member>
    <member name="P:Nest.PainlessContextSetup.Query">
      <summary>
            If _score is used in the script then a query can specified that will be used to compute a score.
            </summary>
      <inheritdoc cref="P:Nest.IPainlessContextSetup.Query" />
    </member>
    <member name="T:Nest.PainlessContextSetupDescriptor">
      <inheritdoc cref="T:Nest.IPainlessContextSetup" />
    </member>
    <member name="M:Nest.PainlessContextSetupDescriptor.Document``1(``0)">
      <inheritdoc cref="P:Nest.IPainlessContextSetup.Document" />
    </member>
    <member name="M:Nest.PainlessContextSetupDescriptor.Index(Nest.IndexName)">
      <summary>
            The name of an index containing a mapping that is compatible with the document being indexed.
            </summary>
      <inheritdoc cref="P:Nest.IPainlessContextSetup.Index" />
    </member>
    <member name="M:Nest.PainlessContextSetupDescriptor.Query``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer})">
      <inheritdoc cref="P:Nest.IPainlessContextSetup.Query" />
    </member>
    <member name="T:Nest.GetScriptRequest">
      <summary>Request for GetScript <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</para></summary>
    </member>
    <member name="M:Nest.GetScriptRequest.#ctor(Nest.Id)">
      <summary>/_scripts/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetScriptRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetScriptRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="T:Nest.IStoredScript">
      <summary>
            A Stored script
            </summary>
    </member>
    <member name="P:Nest.IStoredScript.Lang">
      <summary>
            The script language
            </summary>
    </member>
    <member name="P:Nest.IStoredScript.Source">
      <summary>
            The script source
            </summary>
    </member>
    <member name="T:Nest.StoredScript">
      <inheritdoc />
    </member>
    <member name="M:Nest.StoredScript.#ctor(System.String,System.String)">
      <summary>
            Instantiates a new instance of <see cref="T:Nest.StoredScript" /></summary>
      <param name="lang">Script language</param>
      <param name="source">Script source</param>
    </member>
    <member name="T:Nest.PutScriptRequest">
      <summary>Request for PutScript <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html</para></summary>
    </member>
    <member name="M:Nest.PutScriptRequest.#ctor(Nest.Id)">
      <summary>/_scripts/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.PutScriptRequest.#ctor(Nest.Id,Nest.Name)">
      <summary>/_scripts/{id}/{context}</summary>
      <param name="id">this parameter is required</param>
      <param name="context">Optional, accepts null</param>
    </member>
    <member name="M:Nest.PutScriptRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutScriptRequest.MasterTimeout">
      <summary>Specify timeout for connection to master</summary>
    </member>
    <member name="P:Nest.PutScriptRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.IAzureRepository">
      <summary>
            A snapshot repository that stores snapshots in an Azure storage account
            <para />
            Requires the repository-azure plugin to be installed on the cluster
            </summary>
    </member>
    <member name="T:Nest.AzureRepository">
      <inheritdoc />
    </member>
    <member name="T:Nest.IAzureRepositorySettings">
      <summary>
            Snapshot repository settings for <see cref="T:Nest.IAzureRepository" /></summary>
    </member>
    <member name="P:Nest.IAzureRepositorySettings.BasePath">
      <summary>
            The path within the container on which to store the snapshot data.
            </summary>
    </member>
    <member name="P:Nest.IAzureRepositorySettings.ChunkSize">
      <summary>
             Big files can be broken down into chunks during the snapshot process, if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Defaults to 64m (64m max)
            </summary>
    </member>
    <member name="P:Nest.IAzureRepositorySettings.Compress">
      <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to <c>false</c>.
            </summary>
    </member>
    <member name="P:Nest.IAzureRepositorySettings.Container">
      <summary>
            Tha name of the container
            </summary>
    </member>
    <member name="T:Nest.AzureRepositorySettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.AzureRepositorySettings.BasePath">
      <summary>
            The path within the container on which to store the snapshot data.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AzureRepositorySettings.ChunkSize">
      <summary>
             Big files can be broken down into chunks during the snapshot process, if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Defaults to 64m (64m max)
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AzureRepositorySettings.Compress">
      <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to <c>false</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AzureRepositorySettings.Container">
      <summary>
            Tha name of the container
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AzureRepositorySettingsDescriptor.Container(System.String)">
      <summary>
            Tha name of the container
            </summary>
      <inheritdoc cref="P:Nest.IAzureRepositorySettings.Container" />
    </member>
    <member name="M:Nest.AzureRepositorySettingsDescriptor.BasePath(System.String)">
      <summary>
            The path within the container on which to store the snapshot data.
            </summary>
      <inheritdoc cref="P:Nest.IAzureRepositorySettings.BasePath" />
    </member>
    <member name="M:Nest.AzureRepositorySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
      <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.IAzureRepositorySettings.Compress" />
    </member>
    <member name="M:Nest.AzureRepositorySettingsDescriptor.ChunkSize(System.String)">
      <summary>
             Big files can be broken down into chunks during the snapshot process, if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Defaults to 64m (64m max)
            </summary>
      <inheritdoc cref="P:Nest.IAzureRepositorySettings.ChunkSize" />
    </member>
    <member name="T:Nest.AzureRepositoryDescriptor">
      <inheritdoc cref="T:Nest.IAzureRepository" />
    </member>
    <member name="M:Nest.AzureRepositoryDescriptor.Settings(System.Func{Nest.AzureRepositorySettingsDescriptor,Nest.IAzureRepositorySettings})">
      <inheritdoc cref="T:Nest.IAzureRepositorySettings" />
    </member>
    <member name="T:Nest.ICreateRepositoryRequest">
      <summary>
            Creates a snapshot repository
            </summary>
    </member>
    <member name="P:Nest.ICreateRepositoryRequest.Repository">
      <summary>
            The snapshot repository
            </summary>
    </member>
    <member name="T:Nest.CreateRepositoryRequest">
      <inheritdoc cref="T:Nest.ICreateRepositoryRequest" />
      <summary>Request for CreateRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="P:Nest.CreateRepositoryRequest.Repository">
      <summary>
            The snapshot repository
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.CreateRepositoryRequest.#ctor(Nest.Name)">
      <summary>/_snapshot/{repository}</summary>
      <param name="repository">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateRepositoryRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CreateRepositoryRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.CreateRepositoryRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.CreateRepositoryRequest.Verify">
      <summary>Whether to verify the repository after creation</summary>
    </member>
    <member name="T:Nest.DeleteRepositoryRequest">
      <summary>Request for DeleteRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRepositoryRequest.#ctor(Nest.Names)">
      <summary>/_snapshot/{repository}</summary>
      <param name="repository">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRepositoryRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteRepositoryRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.DeleteRepositoryRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="T:Nest.IFileSystemRepository">
      <summary>
            A snapshot repository that uses a shared file system to store snapshot data.
            The path specified in the location parameter should point to the same location in the shared
            filesystem and be accessible on all data and master nodes.
            </summary>
    </member>
    <member name="T:Nest.FileSystemRepository">
      <inheritdoc />
    </member>
    <member name="T:Nest.IFileSystemRepositorySettings">
      <summary>
            Repository settings for <see cref="T:Nest.IFileSystemRepository" /></summary>
    </member>
    <member name="P:Nest.IFileSystemRepositorySettings.ChunkSize">
      <summary>
            Big files can be broken down into chunks during the snapshot process, if needed.
            The chunk size can be specified in bytes or by using size value notation, i.e. 1g, 10m, 5k.
            Defaults to null (unlimited chunk size).
            </summary>
    </member>
    <member name="P:Nest.IFileSystemRepositorySettings.Compress">
      <summary>
            Turns on compression of the snapshot files. Defaults to true.
            </summary>
    </member>
    <member name="P:Nest.IFileSystemRepositorySettings.ConcurrentStreams">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
    </member>
    <member name="P:Nest.IFileSystemRepositorySettings.Location">
      <summary>
            Location of the snapshots. Mandatory.
            </summary>
    </member>
    <member name="P:Nest.IFileSystemRepositorySettings.RestoreBytesPerSecondMaximum">
      <summary>
            Throttles per node restore rate. Defaults to 20mb per second.
            </summary>
    </member>
    <member name="P:Nest.IFileSystemRepositorySettings.SnapshotBytesPerSecondMaximum">
      <summary>
            Throttles per node snapshot rate. Defaults to 20mb per second.
            </summary>
    </member>
    <member name="T:Nest.FileSystemRepositorySettings">
      <inheritdoc cref="T:Nest.IFileSystemRepositorySettings" />
    </member>
    <member name="T:Nest.FileSystemRepositorySettingsDescriptor">
      <inheritdoc cref="T:Nest.IFileSystemRepositorySettings" />
    </member>
    <member name="M:Nest.FileSystemRepositorySettingsDescriptor.Location(System.String)">
      <summary>
            Location of the snapshots. Mandatory.
            </summary>
      <inheritdoc cref="P:Nest.IFileSystemRepositorySettings.Location" />
    </member>
    <member name="M:Nest.FileSystemRepositorySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
      <summary>
            Turns on compression of the snapshot files. Defaults to true.
            </summary>
      <inheritdoc cref="P:Nest.IFileSystemRepositorySettings.Compress" />
    </member>
    <member name="M:Nest.FileSystemRepositorySettingsDescriptor.ConcurrentStreams(System.Nullable{System.Int32})">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
      <inheritdoc cref="P:Nest.IFileSystemRepositorySettings.ConcurrentStreams" />
    </member>
    <member name="M:Nest.FileSystemRepositorySettingsDescriptor.ChunkSize(System.String)">
      <summary>
            Big files can be broken down into chunks during the snapshot process, if needed.
            The chunk size can be specified in bytes or by using size value notation, i.e. 1g, 10m, 5k.
            Defaults to null (unlimited chunk size).
            </summary>
      <inheritdoc cref="P:Nest.IFileSystemRepositorySettings.ChunkSize" />
    </member>
    <member name="M:Nest.FileSystemRepositorySettingsDescriptor.RestoreBytesPerSecondMaximum(System.String)">
      <summary>
            Throttles per node restore rate. Defaults to 20mb per second.
            </summary>
      <inheritdoc cref="P:Nest.IFileSystemRepositorySettings.RestoreBytesPerSecondMaximum" />
    </member>
    <member name="M:Nest.FileSystemRepositorySettingsDescriptor.SnapshotBytesPerSecondMaximum(System.String)">
      <summary>
            Throttles per node snapshot rate. Defaults to 20mb per second.
            </summary>
      <inheritdoc cref="P:Nest.IFileSystemRepositorySettings.SnapshotBytesPerSecondMaximum" />
    </member>
    <member name="T:Nest.FileSystemRepositoryDescriptor">
      <inheritdoc cref="T:Nest.IFileSystemRepository" />
    </member>
    <member name="M:Nest.FileSystemRepositoryDescriptor.Settings(System.String,System.Func{Nest.FileSystemRepositorySettingsDescriptor,Nest.IFileSystemRepositorySettings})">
      <inheritdoc cref="T:Nest.IFileSystemRepositorySettings" />
    </member>
    <member name="T:Nest.GetRepositoryRequest">
      <summary>Request for GetRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.GetRepositoryRequest.#ctor">
      <summary>/_snapshot</summary>
    </member>
    <member name="M:Nest.GetRepositoryRequest.#ctor(Nest.Names)">
      <summary>/_snapshot/{repository}</summary>
      <param name="repository">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetRepositoryRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.GetRepositoryRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.IHdfsRepository">
      <summary>
            A snapshot repository that stores snapshot data within a Hadoop HDFS filesystem
            <para />
            Requires the repository-hdfs plugin to be installed on the cluster
            </summary>
    </member>
    <member name="T:Nest.HdfsRepository">
      <inheritdoc />
    </member>
    <member name="T:Nest.IHdfsRepositorySettings">
      <summary>
            Snapshot repository settings for <see cref="T:Nest.IHdfsRepository" /></summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.ChunkSize">
      <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Disabled by default
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.Compress">
      <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to <c>false</c>.
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.ConcurrentStreams">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.ConfigurationLocation">
      <summary>
            Hadoop configuration XML to be loaded (use commas for multi values)
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.InlineHadoopConfiguration">
      <summary>
            'inlined' key=value added to the Hadoop configuration
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.LoadDefaults">
      <summary>
            Whether to load the default Hadoop configuration (default) or not
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.Path">
      <summary>
            The path with the file-system where data is stored/loaded. Required
            </summary>
    </member>
    <member name="P:Nest.IHdfsRepositorySettings.Uri">
      <summary>
            The Hadoop file-system URI. Optional
            </summary>
    </member>
    <member name="T:Nest.HdfsRepositorySettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.ChunkSize">
      <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Disabled by default
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.Compress">
      <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to <c>false</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.ConcurrentStreams">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.ConfigurationLocation">
      <summary>
            Hadoop configuration XML to be loaded (use commas for multi values)
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.InlineHadoopConfiguration">
      <summary>
            'inlined' key=value added to the Hadoop configuration
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.LoadDefaults">
      <summary>
            Whether to load the default Hadoop configuration (default) or not
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.Path">
      <summary>
            The path with the file-system where data is stored/loaded. Required
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HdfsRepositorySettings.Uri">
      <summary>
            The Hadoop file-system URI. Optional
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.HdfsRepositorySettingsDescriptor">
      <inheritdoc cref="T:Nest.IHdfsRepositorySettings" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.Uri(System.String)">
      <summary>
            The Hadoop file-system URI. Optional
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.Uri" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.Path(System.String)">
      <summary>
            The path with the file-system where data is stored/loaded. Required
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.Path" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.LoadDefaults(System.Nullable{System.Boolean})">
      <summary>
            Whether to load the default Hadoop configuration (default) or not
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.LoadDefaults" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.ConfigurationLocation(System.String)">
      <summary>
            Hadoop configuration XML to be loaded (use commas for multi values)
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.ConfigurationLocation" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.InlinedHadoopConfiguration(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.InlineHadoopConfiguration" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
      <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.Compress" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.ConcurrentStreams(System.Nullable{System.Int32})">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.ConcurrentStreams" />
    </member>
    <member name="M:Nest.HdfsRepositorySettingsDescriptor.ChunkSize(System.String)">
      <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Disabled by default
            </summary>
      <inheritdoc cref="P:Nest.IHdfsRepositorySettings.ChunkSize" />
    </member>
    <member name="T:Nest.HdfsRepositoryDescriptor">
      <inheritdoc cref="T:Nest.IHdfsRepository" />
    </member>
    <member name="M:Nest.HdfsRepositoryDescriptor.Settings(System.String,System.Func{Nest.HdfsRepositorySettingsDescriptor,Nest.IHdfsRepositorySettings})">
      <inheritdoc cref="T:Nest.IHdfsRepositorySettings" />
    </member>
    <member name="T:Nest.ISnapshotRepository">
      <summary>
            A snapshot repository
            </summary>
    </member>
    <member name="T:Nest.IRepositoryWithSettings">
      <summary>
            A snapshot repository with settings
            </summary>
    </member>
    <member name="P:Nest.IRepositoryWithSettings.DelegateSettings">
      <summary>
            The repository settings
            </summary>
    </member>
    <member name="T:Nest.IRepository`1">
      <summary>
            A snapshot repository with typed settings
            </summary>
    </member>
    <member name="P:Nest.IRepository`1.Settings">
      <summary>
            The repository settings
            </summary>
    </member>
    <member name="T:Nest.IRepositorySettings">
      <summary>
            Snapshot repository settings
            </summary>
    </member>
    <member name="T:Nest.IReadOnlyUrlRepository">
      <summary>
            A snapshot repository that can be used as an alternative read-only way to access data created by the <see cref="T:Nest.IFileSystemRepository" />.
            The URL specified in the url parameter should point to the root of the shared filesystem repository.
            </summary>
    </member>
    <member name="T:Nest.ReadOnlyUrlRepository">
      <inheritdoc />
    </member>
    <member name="T:Nest.IReadOnlyUrlRepositorySettings">
      <summary>
            Snapshot repository settings for <see cref="T:Nest.IReadOnlyUrlRepository" /></summary>
    </member>
    <member name="P:Nest.IReadOnlyUrlRepositorySettings.ConcurrentStreams">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
    </member>
    <member name="P:Nest.IReadOnlyUrlRepositorySettings.Location">
      <summary>
            Location of the snapshots. Required
            </summary>
    </member>
    <member name="T:Nest.ReadOnlyUrlRepositorySettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.ReadOnlyUrlRepositorySettings.ConcurrentStreams">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ReadOnlyUrlRepositorySettings.Location">
      <summary>
            Location of the snapshots. Required
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ReadOnlyUrlRepositorySettingsDescriptor">
      <inheritdoc cref="T:Nest.IReadOnlyUrlRepositorySettings" />
    </member>
    <member name="M:Nest.ReadOnlyUrlRepositorySettingsDescriptor.Location(System.String)">
      <summary>
            Location of the snapshots. Required
            </summary>
      <inheritdoc cref="P:Nest.IReadOnlyUrlRepositorySettings.Location" />
    </member>
    <member name="M:Nest.ReadOnlyUrlRepositorySettingsDescriptor.ConcurrentStreams(System.Nullable{System.Int32})">
      <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
      <inheritdoc cref="P:Nest.IReadOnlyUrlRepositorySettings.ConcurrentStreams" />
    </member>
    <member name="T:Nest.ReadOnlyUrlRepositoryDescriptor">
      <inheritdoc cref="T:Nest.IReadOnlyUrlRepository" />
    </member>
    <member name="M:Nest.ReadOnlyUrlRepositoryDescriptor.Settings(System.String,System.Func{Nest.ReadOnlyUrlRepositorySettingsDescriptor,Nest.IReadOnlyUrlRepositorySettings})">
      <inheritdoc cref="T:Nest.IReadOnlyUrlRepositorySettings" />
    </member>
    <member name="T:Nest.IS3Repository">
      <summary>
            A snapshot repository that stores snapshots in an Amazon S3 bucket
            <para />
            Requires the repository-s3 plugin to be installed on the cluster
            </summary>
    </member>
    <member name="T:Nest.S3Repository">
      <inheritdoc />
    </member>
    <member name="T:Nest.IS3RepositorySettings">
      <summary>
            Snapshot repository settings for <see cref="T:Nest.IS3Repository" /></summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.BasePath">
      <summary>
            Specifies the path within bucket to repository data.
            Defaults to value of repositories.s3.base_path or to root directory if not set.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.Bucket">
      <summary>
            The name of the bucket to be used for snapshots. This field is required
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.BufferSize">
      <summary>
            Minimum threshold below which the chunk is uploaded using a single request.
            Beyond this threshold, the S3 repository will use the AWS Multipart Upload API to split the chunk into
            several parts, each of buffer_size length, and to upload each part in its own request. Note that setting a
            buffer size lower than 5mb is not allowed since it will prevent the use of the Multipart API and may result
            in upload errors. It is also not possible to set a buffer size greater than 5gb as it is the maximum upload
            size allowed by S3. Defaults to the minimum between 100mb and 5% of the heap size.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.CannedAcl">
      <summary>
            Specify a canned ACL for the S3 bucket.
            The S3 repository supports all S3 canned ACLs : private, public-read, public-read-write, authenticated-read,
            log-delivery-write, bucket-owner-read, bucket-owner-full-control. Defaults to private.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.ChunkSize">
      <summary>
            Big files can be broken down into chunks during snapshotting if needed.
            The chunk size can be specified in bytes or by using size value notation,
            i.e. 1gb, 10mb, 5kb. Defaults to 1gb.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.Client">
      <summary>
            The name of the s3 client to use to connect to S3. Defaults to default.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.Compress">
      <summary>
            When set to true metadata files are stored in compressed format.
            This setting doesn't affect index files that are already compressed by default.
            Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.ServerSideEncryption">
      <summary>
            When set to true files are encrypted on server side using AES256 algorithm.
            Defaults to false.
            </summary>
    </member>
    <member name="P:Nest.IS3RepositorySettings.StorageClass">
      <summary>
            Sets the S3 storage class type for the backup files. Values may be standard, reduced_redundancy, standard_ia.
            Defaults to standard.
            </summary>
    </member>
    <member name="T:Nest.S3RepositorySettings">
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.BasePath">
      <summary>
            Specifies the path within bucket to repository data.
            Defaults to value of repositories.s3.base_path or to root directory if not set.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.Bucket">
      <summary>
            The name of the bucket to be used for snapshots. This field is required
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.BufferSize">
      <summary>
            Minimum threshold below which the chunk is uploaded using a single request.
            Beyond this threshold, the S3 repository will use the AWS Multipart Upload API to split the chunk into
            several parts, each of buffer_size length, and to upload each part in its own request. Note that setting a
            buffer size lower than 5mb is not allowed since it will prevent the use of the Multipart API and may result
            in upload errors. It is also not possible to set a buffer size greater than 5gb as it is the maximum upload
            size allowed by S3. Defaults to the minimum between 100mb and 5% of the heap size.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.CannedAcl">
      <summary>
            Specify a canned ACL for the S3 bucket.
            The S3 repository supports all S3 canned ACLs : private, public-read, public-read-write, authenticated-read,
            log-delivery-write, bucket-owner-read, bucket-owner-full-control. Defaults to private.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.ChunkSize">
      <summary>
            Big files can be broken down into chunks during snapshotting if needed.
            The chunk size can be specified in bytes or by using size value notation,
            i.e. 1gb, 10mb, 5kb. Defaults to 1gb.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.Client">
      <summary>
            The name of the s3 client to use to connect to S3. Defaults to default.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.Compress">
      <summary>
            When set to true metadata files are stored in compressed format.
            This setting doesn't affect index files that are already compressed by default.
            Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.ServerSideEncryption">
      <summary>
            When set to true files are encrypted on server side using AES256 algorithm.
            Defaults to false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.S3RepositorySettings.StorageClass">
      <summary>
            Sets the S3 storage class type for the backup files. Values may be standard, reduced_redundancy, standard_ia.
            Defaults to standard.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.S3RepositorySettingsDescriptor">
      <inheritdoc cref="T:Nest.IS3RepositorySettings" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.Bucket(System.String)">
      <summary>
            The name of the bucket to be used for snapshots. This field is required
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.Bucket" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.Client(System.String)">
      <summary>
            The name of the s3 client to use to connect to S3. Defaults to default.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.Client" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.BasePath(System.String)">
      <summary>
            Specifies the path within bucket to repository data.
            Defaults to value of repositories.s3.base_path or to root directory if not set.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.BasePath" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
      <summary>
            When set to true metadata files are stored in compressed format.
            This setting doesn't affect index files that are already compressed by default.
            Defaults to false.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.Compress" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.ChunkSize(System.String)">
      <summary>
            Big files can be broken down into chunks during snapshotting if needed.
            The chunk size can be specified in bytes or by using size value notation,
            i.e. 1gb, 10mb, 5kb. Defaults to 1gb.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.ChunkSize" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.ServerSideEncryption(System.Nullable{System.Boolean})">
      <summary>
            When set to true files are encrypted on server side using AES256 algorithm.
            Defaults to false.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.ServerSideEncryption" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.BufferSize(System.String)">
      <summary>
            Minimum threshold below which the chunk is uploaded using a single request.
            Beyond this threshold, the S3 repository will use the AWS Multipart Upload API to split the chunk into
            several parts, each of buffer_size length, and to upload each part in its own request. Note that setting a
            buffer size lower than 5mb is not allowed since it will prevent the use of the Multipart API and may result
            in upload errors. It is also not possible to set a buffer size greater than 5gb as it is the maximum upload
            size allowed by S3. Defaults to the minimum between 100mb and 5% of the heap size.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.BufferSize" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.CannedAcl(System.String)">
      <summary>
            Specify a canned ACL for the S3 bucket.
            The S3 repository supports all S3 canned ACLs : private, public-read, public-read-write, authenticated-read,
            log-delivery-write, bucket-owner-read, bucket-owner-full-control. Defaults to private.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.CannedAcl" />
    </member>
    <member name="M:Nest.S3RepositorySettingsDescriptor.StorageClass(System.String)">
      <summary>
            Sets the S3 storage class type for the backup files. Values may be standard, reduced_redundancy, standard_ia.
            Defaults to standard.
            </summary>
      <inheritdoc cref="P:Nest.IS3RepositorySettings.StorageClass" />
    </member>
    <member name="T:Nest.S3RepositoryDescriptor">
      <inheritdoc cref="T:Nest.IS3Repository" />
    </member>
    <member name="M:Nest.S3RepositoryDescriptor.Settings(System.String,System.Func{Nest.S3RepositorySettingsDescriptor,Nest.IS3RepositorySettings})">
      <inheritdoc cref="T:Nest.IS3RepositorySettings" />
    </member>
    <member name="T:Nest.ISourceOnlyRepository">
      <summary>
            A source repository enables you to create minimal, source-only snapshots that take up to 50% less space on disk.
            Source only snapshots contain stored fields and index metadata. They do not include index or doc values structures
            and are not searchable when restored. After restoring a source-only snapshot, you must reindex the data into a new index.
            </summary>
    </member>
    <member name="P:Nest.ISourceOnlyRepository.DelegateType">
      <summary>
            The type of snapshot repository to delegate to for storage
            </summary>
    </member>
    <member name="T:Nest.SourceOnlyRepository">
      <inheritdoc />
    </member>
    <member name="T:Nest.SourceOnlyRepositoryDescriptor">
      <inheritdoc cref="T:Nest.ISourceOnlyRepository" />
    </member>
    <member name="M:Nest.SourceOnlyRepositoryDescriptor.FileSystem(System.Func{Nest.FileSystemRepositoryDescriptor,Nest.IFileSystemRepository})">
      <inheritdoc cref="M:Nest.CreateRepositoryDescriptor.FileSystem(System.Func{Nest.FileSystemRepositoryDescriptor,Nest.IFileSystemRepository})" />
    </member>
    <member name="M:Nest.SourceOnlyRepositoryDescriptor.ReadOnlyUrl(System.Func{Nest.ReadOnlyUrlRepositoryDescriptor,Nest.IReadOnlyUrlRepository})">
      <inheritdoc cref="M:Nest.CreateRepositoryDescriptor.ReadOnlyUrl(System.Func{Nest.ReadOnlyUrlRepositoryDescriptor,Nest.IReadOnlyUrlRepository})" />
    </member>
    <member name="M:Nest.SourceOnlyRepositoryDescriptor.Azure(System.Func{Nest.AzureRepositoryDescriptor,Nest.IAzureRepository})">
      <inheritdoc cref="M:Nest.CreateRepositoryDescriptor.Azure(System.Func{Nest.AzureRepositoryDescriptor,Nest.IAzureRepository})" />
    </member>
    <member name="M:Nest.SourceOnlyRepositoryDescriptor.Hdfs(System.Func{Nest.HdfsRepositoryDescriptor,Nest.IHdfsRepository})">
      <inheritdoc cref="M:Nest.CreateRepositoryDescriptor.Hdfs(System.Func{Nest.HdfsRepositoryDescriptor,Nest.IHdfsRepository})" />
    </member>
    <member name="M:Nest.SourceOnlyRepositoryDescriptor.S3(System.Func{Nest.S3RepositoryDescriptor,Nest.IS3Repository})">
      <inheritdoc cref="M:Nest.CreateRepositoryDescriptor.S3(System.Func{Nest.S3RepositoryDescriptor,Nest.IS3Repository})" />
    </member>
    <member name="M:Nest.SourceOnlyRepositoryDescriptor.Custom(Nest.IRepositoryWithSettings)">
      <inheritdoc cref="M:Nest.CreateRepositoryDescriptor.Custom(Nest.ISnapshotRepository)" />
    </member>
    <member name="T:Nest.VerifyRepositoryRequest">
      <summary>Request for VerifyRepository <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.VerifyRepositoryRequest.#ctor(Nest.Name)">
      <summary>/_snapshot/{repository}/_verify</summary>
      <param name="repository">this parameter is required</param>
    </member>
    <member name="M:Nest.VerifyRepositoryRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.VerifyRepositoryRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.VerifyRepositoryRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="P:Nest.VerifyRepositoryResponse.Nodes">
      <summary>
             A dictionary of nodeId =&gt; nodeinfo of nodes that verified the repository
            </summary>
    </member>
    <member name="T:Nest.IRestoreRequest">
      <summary>
            Restores a snapshot
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.IgnoreIndexSettings">
      <summary>
            The index settings to ignore as part of the restore operation
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.IgnoreUnavailable">
      <summary>
            Whether indices specified that do not exist
            should be ignored.
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.IncludeAliases">
      <summary>
            Whether to include aliases as part of the restore
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.IncludeGlobalState">
      <summary>
            Whether the cluster global state should be included
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.IndexSettings">
      <summary>
            The index settings that should be applied as part of
            the restore operation. Some settings cannot be changed
            as part of a restore operation, for example, the number
            of shards.
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.Indices">
      <summary>
            The indices to restore
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.Partial">
      <summary>
            Allow partial restore for indices that don't have snapshots of all shards available.
            <para />
            By default, the entire restore operation will fail if one or more indices participating
            in the operation don’t have snapshots of all shards available. It can occur if some
            shards failed to snapshot for example. It is still possible to restore such indices
            by setting <see cref="P:Nest.IRestoreRequest.Partial" /> to <c>true</c>. Only successfully snapshotted shards
            will be restored in this case and all missing shards will be recreated empty.
            </summary>
    </member>
    <member name="P:Nest.IRestoreRequest.RenamePattern">
      <summary>
            A pattern to use to rename restored indices. The pattern
            can be used to capture parts of the original index name
            and used within <see cref="P:Nest.IRestoreRequest.RenameReplacement" /></summary>
    </member>
    <member name="P:Nest.IRestoreRequest.RenameReplacement">
      <summary>
            A replacement to use to rename restored indices. Used
            in conjunction with <see cref="P:Nest.IRestoreRequest.RenamePattern" />.
            </summary>
    </member>
    <member name="T:Nest.RestoreRequest">
      <inheritdoc cref="T:Nest.IRestoreRequest" />
      <summary>Request for Restore <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="P:Nest.RestoreRequest.IgnoreIndexSettings">
      <summary>
            The index settings to ignore as part of the restore operation
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.IgnoreUnavailable">
      <summary>
            Whether indices specified that do not exist
            should be ignored.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.IncludeAliases">
      <summary>
            Whether to include aliases as part of the restore
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.IncludeGlobalState">
      <summary>
            Whether the cluster global state should be included
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.IndexSettings">
      <summary>
            The index settings that should be applied as part of
            the restore operation. Some settings cannot be changed
            as part of a restore operation, for example, the number
            of shards.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.Indices">
      <summary>
            The indices to restore
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.Partial">
      <summary>
            Allow partial restore for indices that don't have snapshots of all shards available.
            <para />
            By default, the entire restore operation will fail if one or more indices participating
            in the operation don’t have snapshots of all shards available. It can occur if some
            shards failed to snapshot for example. It is still possible to restore such indices
            by setting <see cref="P:Nest.IRestoreRequest.Partial" /> to <c>true</c>. Only successfully snapshotted shards
            will be restored in this case and all missing shards will be recreated empty.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.RenamePattern">
      <summary>
            A pattern to use to rename restored indices. The pattern
            can be used to capture parts of the original index name
            and used within <see cref="P:Nest.IRestoreRequest.RenameReplacement" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RestoreRequest.RenameReplacement">
      <summary>
            A replacement to use to rename restored indices. Used
            in conjunction with <see cref="P:Nest.IRestoreRequest.RenamePattern" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.RestoreRequest.#ctor(Nest.Name,Nest.Name)">
      <summary>/_snapshot/{repository}/{snapshot}/_restore</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.RestoreRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.RestoreRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.RestoreRequest.WaitForCompletion">
      <summary>Should this request wait until the operation has completed before returning</summary>
    </member>
    <member name="T:Nest.DeleteSnapshotRequest">
      <summary>Request for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.DeleteSnapshotRequest.#ctor(Nest.Name,Nest.Name)">
      <summary>/_snapshot/{repository}/{snapshot}</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteSnapshotRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteSnapshotRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.GetSnapshotRequest">
      <summary>Request for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.GetSnapshotRequest.#ctor(Nest.Name,Nest.Names)">
      <summary>/_snapshot/{repository}/{snapshot}</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.GetSnapshotRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetSnapshotRequest.IgnoreUnavailable">
      <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
    </member>
    <member name="P:Nest.GetSnapshotRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.GetSnapshotRequest.Verbose">
      <summary>Whether to show verbose snapshot info or only show the basic info found in the repository index blob</summary>
    </member>
    <member name="T:Nest.SnapshotStatusRequest">
      <summary>Request for Status <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.SnapshotStatusRequest.#ctor">
      <summary>/_snapshot/_status</summary>
    </member>
    <member name="M:Nest.SnapshotStatusRequest.#ctor(Nest.Name)">
      <summary>/_snapshot/{repository}/_status</summary>
      <param name="repository">Optional, accepts null</param>
    </member>
    <member name="M:Nest.SnapshotStatusRequest.#ctor(Nest.Name,Nest.Names)">
      <summary>/_snapshot/{repository}/{snapshot}/_status</summary>
      <param name="repository">Optional, accepts null</param>
      <param name="snapshot">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SnapshotStatusRequest.IgnoreUnavailable">
      <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
    </member>
    <member name="P:Nest.SnapshotStatusRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="T:Nest.SnapshotRequest">
      <summary>Request for Snapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html</para></summary>
    </member>
    <member name="M:Nest.SnapshotRequest.#ctor(Nest.Name,Nest.Name)">
      <summary>/_snapshot/{repository}/{snapshot}</summary>
      <param name="repository">this parameter is required</param>
      <param name="snapshot">this parameter is required</param>
    </member>
    <member name="M:Nest.SnapshotRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.SnapshotRequest.MasterTimeout">
      <summary>Explicit operation timeout for connection to master node</summary>
    </member>
    <member name="P:Nest.SnapshotRequest.WaitForCompletion">
      <summary>Should this request wait until the operation has completed before returning</summary>
    </member>
    <member name="P:Nest.IQueryContainer.ScriptScore">
      <inheritdoc cref="T:Nest.IScriptScoreQuery" />
    </member>
    <member name="P:Nest.IQueryContainer.RankFeature">
      <inheritdoc cref="T:Nest.IRankFeatureQuery" />
    </member>
    <member name="P:Nest.IQueryContainer.DistanceFeature">
      <inheritdoc cref="T:Nest.IDistanceFeatureQuery" />
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Raw(System.String)">
      <summary>
            A query defined using a raw json string.
            <para>The query must be enclosed within '{' and '}'</para></summary>
      <param name="rawJson">The query dsl json</param>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.QueryString(System.Func{Nest.QueryStringQueryDescriptor{`0},Nest.IQueryStringQuery})">
      <summary>
            A query that uses a query parser in order to parse its content.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SimpleQueryString(System.Func{Nest.SimpleQueryStringQueryDescriptor{`0},Nest.ISimpleQueryStringQuery})">
      <summary>
            A query that uses the SimpleQueryParser to parse its context.
            Unlike the regular query_string query, the simple_query_string query will
            never throw an exception, and discards invalid parts of the query.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Terms(System.Func{Nest.TermsQueryDescriptor{`0},Nest.ITermsQuery})">
      <summary>
            A query that match on any (configurable) of the provided terms.
            This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Fuzzy(System.Func{Nest.FuzzyQueryDescriptor{`0},Nest.IFuzzyQuery})">
      <summary>
            A fuzzy based query that uses similarity based on Levenshtein (edit distance) algorithm.
            Warning: this query is not very scalable with its default prefix length of 0 � in this case,
            every term will be enumerated and cause an edit score calculation or max_expansions is not set.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Match(System.Func{Nest.MatchQueryDescriptor{`0},Nest.IMatchQuery})">
      <summary>
            The default match query is of type boolean. It means that the text provided is analyzed and the analysis
            process constructs a boolean query from the provided text.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.MatchPhrase(System.Func{Nest.MatchPhraseQueryDescriptor{`0},Nest.IMatchPhraseQuery})">
      <summary>
            The match_phrase query analyzes the match and creates a phrase query out of the analyzed text.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.MatchPhrasePrefix(System.Func{Nest.MatchPhrasePrefixQueryDescriptor{`0},Nest.IMatchPhrasePrefixQuery})">
      <summary>
            The match_phrase_prefix is the same as match_phrase, expect it allows for prefix matches on the last term
            in the text
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.MultiMatch(System.Func{Nest.MultiMatchQueryDescriptor{`0},Nest.IMultiMatchQuery})">
      <summary>
            The multi_match query builds further on top of the match query by allowing multiple fields to be specified.
            The idea here is to allow to more easily build a concise match type query over multiple fields instead of using a
            relatively more expressive query by using multiple match queries within a bool query.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Nested(System.Func{Nest.NestedQueryDescriptor{`0},Nest.INestedQuery})">
      <summary>
            Nested query allows to query nested objects / docs (see nested mapping). The query is executed against the
            nested objects / docs as if they were indexed as separate docs (they are, internally) and resulting in the
            root parent doc (or parent nested mapping).
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Conditionless(System.Func{Nest.ConditionlessQueryDescriptor{`0},Nest.IConditionlessQuery})">
      <summary>
            A thin wrapper allowing fined grained control what should happen if a query is conditionless
            if you need to fallback to something other than a match_all query
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Range(System.Func{Nest.NumericRangeQueryDescriptor{`0},Nest.INumericRangeQuery})">
      <summary>
            Matches documents with fields that have terms within a certain numeric range.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.DateRange(System.Func{Nest.DateRangeQueryDescriptor{`0},Nest.IDateRangeQuery})">
      <summary>
            Matches documents with fields that have terms within a certain date range.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.TermRange(System.Func{Nest.TermRangeQueryDescriptor{`0},Nest.ITermRangeQuery})">
      <summary>
            Matches documents with fields that have terms within a certain term range.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.MoreLikeThis(System.Func{Nest.MoreLikeThisQueryDescriptor{`0},Nest.IMoreLikeThisQuery})">
      <summary>
            More like this query find documents that are �like� provided text by running it against one or more fields.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.GeoShape(System.Func{Nest.GeoShapeQueryDescriptor{`0},Nest.IGeoShapeQuery})">
      <summary>
            A geo_shape query that finds documents
            that have a geometry that matches for the given spatial relation and input shape
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.GeoPolygon(System.Func{Nest.GeoPolygonQueryDescriptor{`0},Nest.IGeoPolygonQuery})">
      <summary>
            Matches documents with a geo_point type field that falls within a polygon of points
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.GeoDistance(System.Func{Nest.GeoDistanceQueryDescriptor{`0},Nest.IGeoDistanceQuery})">
      <summary>
            Matches documents with a geo_point type field to include only those
            that exist within a specific distance from a given geo_point
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.GeoBoundingBox(System.Func{Nest.GeoBoundingBoxQueryDescriptor{`0},Nest.IGeoBoundingBoxQuery})">
      <summary>
            Matches documents with a geo_point type field to include only those that exist within a bounding box
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.CommonTerms(System.Func{Nest.CommonTermsQueryDescriptor{`0},Nest.ICommonTermsQuery})">
      <summary>
            The common terms query is a modern alternative to stopwords which improves the precision and recall
            of search results (by taking stopwords into account), without sacrificing performance.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.HasChild``1(System.Func{Nest.HasChildQueryDescriptor{``0},Nest.IHasChildQuery})">
      <summary>
            The has_child query works the same as the has_child filter, by automatically wrapping the filter with a
            constant_score.
            </summary>
      <typeparam name="TChild">Type of the child</typeparam>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.HasParent``1(System.Func{Nest.HasParentQueryDescriptor{``0},Nest.IHasParentQuery})">
      <summary>
            The has_parent query works the same as the has_parent filter, by automatically wrapping the filter with a
            constant_score.
            </summary>
      <typeparam name="TParent">Type of the parent</typeparam>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.DisMax(System.Func{Nest.DisMaxQueryDescriptor{`0},Nest.IDisMaxQuery})">
      <summary>
            A query that generates the union of documents produced by its subqueries, and that scores each document
            with the maximum score for that document as produced by any subquery, plus a tie breaking increment for
            any additional matching subqueries.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.DistanceFeature(System.Func{Nest.DistanceFeatureQueryDescriptor{`0},Nest.IDistanceFeatureQuery})">
      <inheritdoc cref="T:Nest.IDistanceFeatureQuery" />
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.ConstantScore(System.Func{Nest.ConstantScoreQueryDescriptor{`0},Nest.IConstantScoreQuery})">
      <summary>
            A query that wraps a filter or another query and simply returns a constant score equal to the query boost
            for every document in the filter. Maps to Lucene ConstantScoreQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Bool(System.Func{Nest.BoolQueryDescriptor{`0},Nest.IBoolQuery})">
      <summary>
            A query that matches documents matching boolean combinations of other queries. The bool query maps to
            Lucene BooleanQuery.
            It is built using one or more boolean clauses, each clause with a typed occurrence
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Boosting(System.Func{Nest.BoostingQueryDescriptor{`0},Nest.IBoostingQuery})">
      <summary>
            A query that can be used to effectively demote results that match a given query.
            Unlike the "must_not" clause in bool query, this still selects documents that contain
            undesirable terms, but reduces their overall score.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.MatchAll(System.Func{Nest.MatchAllQueryDescriptor,Nest.IMatchAllQuery})">
      <summary>
            A query that matches all documents. Maps to Lucene MatchAllDocsQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.MatchNone(System.Func{Nest.MatchNoneQueryDescriptor,Nest.IMatchNoneQuery})">
      <summary>
            A query that matches no documents. This is the inverse of the match_all query.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Nullable{System.Double},System.String)">
      <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.HasRelationName(System.Linq.Expressions.Expression{System.Func{`0,Nest.JoinField}},Nest.RelationName)">
      <summary>
            Helper method to easily filter on join relations
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.HasRelationName``1(System.Linq.Expressions.Expression{System.Func{`0,Nest.JoinField}})">
      <summary>Helper method to easily filter on join relations</summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Term(Nest.Field,System.Object,System.Nullable{System.Double},System.String)">
      <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Term(System.Func{Nest.TermQueryDescriptor{`0},Nest.ITermQuery})">
      <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Wildcard``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
      <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate
            over many terms. In order to prevent extremely slow wildcard queries, a wildcard term should
            not start with one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(Nest.Field,System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
      <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms.
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(System.Func{Nest.WildcardQueryDescriptor{`0},Nest.IWildcardQuery})">
      <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms.
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Prefix``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
      <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Prefix(Nest.Field,System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
      <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Prefix(System.Func{Nest.PrefixQueryDescriptor{`0},Nest.IPrefixQuery})">
      <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Ids(System.Func{Nest.IdsQueryDescriptor,Nest.IIdsQuery})">
      <summary>
            Matches documents that only have the provided ids.
            Note, this filter does not require the _id field to be indexed since
            it works using the _uid field.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Intervals(System.Func{Nest.IntervalsQueryDescriptor{`0},Nest.IIntervalsQuery})">
      <summary>
            Allows fine-grained control over the order and proximity of matching terms.
            Matching rules are constructed from a small set of definitions,
            and the rules are then applied to terms from a particular field.
            The definitions produce sequences of minimal intervals that span terms in a body of text.
            These intervals can be further combined and filtered by parent sources.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.RankFeature(System.Func{Nest.RankFeatureQueryDescriptor{`0},Nest.IRankFeatureQuery})">
      <inheritdoc cref="T:Nest.IRankFeatureQuery" />
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanTerm(System.Func{Nest.SpanTermQueryDescriptor{`0},Nest.ISpanTermQuery})">
      <summary>
            Matches spans containing a term. The span term query maps to Lucene SpanTermQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanFirst(System.Func{Nest.SpanFirstQueryDescriptor{`0},Nest.ISpanFirstQuery})">
      <summary>
            Matches spans near the beginning of a field. The span first query maps to Lucene SpanFirstQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanNear(System.Func{Nest.SpanNearQueryDescriptor{`0},Nest.ISpanNearQuery})">
      <summary>
            Matches spans which are near one another. One can specify slop, the maximum number of
            intervening unmatched positions, as well as whether matches are required to be in-order.
            The span near query maps to Lucene SpanNearQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanOr(System.Func{Nest.SpanOrQueryDescriptor{`0},Nest.ISpanOrQuery})">
      <summary>
            Matches the union of its span clauses.
            The span or query maps to Lucene SpanOrQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanNot(System.Func{Nest.SpanNotQueryDescriptor{`0},Nest.ISpanNotQuery})">
      <summary>
            Removes matches which overlap with another span query.
            The span not query maps to Lucene SpanNotQuery.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanMultiTerm(System.Func{Nest.SpanMultiTermQueryDescriptor{`0},Nest.ISpanMultiTermQuery})">
      <summary>
            Wrap a multi term query (one of fuzzy, prefix, term range or regexp query)
            as a span query so it can be nested.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanContaining(System.Func{Nest.SpanContainingQueryDescriptor{`0},Nest.ISpanContainingQuery})">
      <summary>
            Returns matches which enclose another span query.
            The span containing query maps to Lucene SpanContainingQuery
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanWithin(System.Func{Nest.SpanWithinQueryDescriptor{`0},Nest.ISpanWithinQuery})">
      <summary>
            Returns Matches which are enclosed inside another span query.
            The span within query maps to Lucene SpanWithinQuery
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.SpanFieldMasking(System.Func{Nest.SpanFieldMaskingQueryDescriptor{`0},Nest.ISpanFieldMaskingQuery})">
      <summary>
            Wraps span queries to allow them to participate in composite single-field Span queries by 'lying' about their search field.
            That is, the masked span query will function as normal, but the field points back to the set field of the query.
            This can be used to support queries like SpanNearQuery or SpanOrQuery across different fields,
            which is not ordinarily permitted.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Regexp(System.Func{Nest.RegexpQueryDescriptor{`0},Nest.IRegexpQuery})">
      <summary>
            Allows you to use regular expression term queries.
            "term queries" means that Elasticsearch will apply the regexp to the terms produced
            by the tokenizer for that field, and not to the original text of the field.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.FunctionScore(System.Func{Nest.FunctionScoreQueryDescriptor{`0},Nest.IFunctionScoreQuery})">
      <summary>
            The function_score query allows you to modify the score of documents that are retrieved by a query.
            This can be useful if, for example, a score function is computationally expensive and it is
            sufficient to compute the score on a filtered set of documents.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.Percolate(System.Func{Nest.PercolateQueryDescriptor{`0},Nest.IPercolateQuery})">
      <summary>
            Used to match queries stored in an index.
            The percolate query itself contains the document that will be used as query
            to match with the stored queries.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.ParentId(System.Func{Nest.ParentIdQueryDescriptor{`0},Nest.IParentIdQuery})">
      <summary>
            Used to find child documents which belong to a particular parent.
            </summary>
    </member>
    <member name="M:Nest.QueryContainerDescriptor`1.TermsSet(System.Func{Nest.TermsSetQueryDescriptor{`0},Nest.ITermsSetQuery})">
      <summary>
            Returns any documents that match with at least one or more of the provided terms.
            The terms are not analyzed and thus must match exactly. The number of terms that must match varies
            per document and is either controlled by a minimum should match field or
            computed per document in a minimum should match script.
            </summary>
    </member>
    <member name="M:Nest.BoolQueryAndExtensions.TryHandleUnmergableBools(Nest.QueryContainer,Nest.QueryContainer,Nest.IBoolQuery,Nest.IBoolQuery,Nest.QueryContainer@)">
      <summary>
            Handles cases where either side is a bool which indicates it can't be merged yet the other side is mergable.
            A side is considered unmergable if its locked (has important metadata) or has should clauses.
            Instead of always wrapping these cases in another bool we merge to unmergable side into to others must clause therefor flattening the
            generated graph
            </summary>
    </member>
    <member name="M:Nest.BoolQueryAndExtensions.TryHandleBoolsWithOnlyShouldClauses(Nest.QueryContainer,Nest.QueryContainer,Nest.IBoolQuery,Nest.IBoolQuery,Nest.QueryContainer@)">
      <summary>
            Both Sides are bools, but one of them has only should clauses so we should wrap into a new container.
            Unless we know one of the sides is a bool with only a must who's clauses are all bools with only shoulds.
            This is a piece of metadata we set at the bools creation time so we do not have to itterate the clauses on each combination
            In this case we can optimize the generated graph by merging and preventing stack overflows
            </summary>
    </member>
    <member name="P:Nest.IQuery.Boost">
      <summary>
            Provides a boost to this query to influence its relevance score.
            For example, a query with a boost of 2 is twice as important as a query with a boost of 1,
            although the actual boost value that is applied undergoes normalization and internal optimization.
            </summary>
      <remarks>
            Setting a boost for an <see cref="T:Nest.ISpanOrQuery" /> query will throw a parsing exception on the server.
            </remarks>
    </member>
    <member name="P:Nest.IQuery.Conditionless">
      <summary>
            Whether the query is conditionless. A conditionless query is not serialized as part of the request
            sent to Elasticsearch.
            </summary>
    </member>
    <member name="P:Nest.IQuery.IsStrict">
      <summary>
            Whether the query should be treated as strict. A strict query will throw an exception when serialized
            if it is <see cref="P:Nest.IQuery.Conditionless" />.
            </summary>
    </member>
    <member name="P:Nest.IQuery.IsVerbatim">
      <summary>
            Whether the query should be treated as verbatim. A verbatim query will be serialized as part of the request,
            irrespective
            of whether it is <see cref="P:Nest.IQuery.Conditionless" /> or not.
            </summary>
    </member>
    <member name="P:Nest.IQuery.IsWritable">
      <summary>
            Whether the query should be treated as writable. Used when determining how to combine queries.
            </summary>
    </member>
    <member name="P:Nest.IQuery.Name">
      <summary>
            The name of the query. Allows you to retrieve for each document what part of the query it matched on.
            </summary>
    </member>
    <member name="P:Nest.QueryBase.Name">
      <inheritdoc />
    </member>
    <member name="P:Nest.IBoolQuery.Filter">
      <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
    </member>
    <member name="P:Nest.IBoolQuery.MinimumShouldMatch">
      <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
    </member>
    <member name="P:Nest.IBoolQuery.Must">
      <summary>
            The clause(s) that must appear in matching documents
            </summary>
    </member>
    <member name="P:Nest.IBoolQuery.MustNot">
      <summary>
            The clause (query) must not appear in the matching documents.
            Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
    </member>
    <member name="P:Nest.IBoolQuery.Should">
      <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a
            document.
            The minimum number of should clauses to match can be set using <see cref="P:Nest.IBoolQuery.MinimumShouldMatch" />.
            </summary>
    </member>
    <member name="P:Nest.BoolQuery.Filter">
      <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
    </member>
    <member name="P:Nest.BoolQuery.MinimumShouldMatch">
      <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
    </member>
    <member name="P:Nest.BoolQuery.Must">
      <summary>
            The clause(s) that must appear in matching documents
            </summary>
    </member>
    <member name="P:Nest.BoolQuery.MustNot">
      <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a
            must_not clauses.
            </summary>
    </member>
    <member name="P:Nest.BoolQuery.Should">
      <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a
            document.
            The minimum number of should clauses to match can be set using <see cref="P:Nest.BoolQuery.MinimumShouldMatch" />.
            </summary>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
      <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
      <param name="minimumShouldMatches">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
      <summary>
            The clause(s) that must appear in matching documents
            </summary>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
      <summary>
            The clause(s) that must appear in matching documents
            </summary>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Must(Nest.QueryContainer[])">
      <summary>
            The clause(s) that must appear in matching documents
            </summary>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
      <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a
            must_not clauses.
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
      <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a
            must_not clauses.
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.MustNot(Nest.QueryContainer[])">
      <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a
            must_not clauses.
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
      <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a
            document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)" />.
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
      <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a
            document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)" />.
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Should(Nest.QueryContainer[])">
      <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a
            document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)" />.
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
      <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Filter(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
      <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.BoolQueryDescriptor`1.Filter(Nest.QueryContainer[])">
      <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
      <param name="queries">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Nest.IScriptScoreFunction">
      <summary>
            The script score function allows you to wrap another query and customize the
            scoring of it optionally with a computation derived from other numeric
            field values in the doc using a script expression.
            </summary>
    </member>
    <member name="P:Nest.IScriptScoreFunction.Script">
      <summary>
            The script to execute to calculate score
            </summary>
    </member>
    <member name="T:Nest.ScriptScoreFunction">
      <inheritdoc cref="T:Nest.IScriptScoreFunction" />
    </member>
    <member name="P:Nest.ScriptScoreFunction.Script">
      <summary>
            The script to execute to calculate score
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ScriptScoreFunctionDescriptor`1">
      <inheritdoc cref="T:Nest.IScriptScoreFunction" />
    </member>
    <member name="M:Nest.ScriptScoreFunctionDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            The script to execute to calculate score
            </summary>
      <inheritdoc cref="P:Nest.IScriptScoreFunction.Script" />
    </member>
    <member name="M:Nest.CommonTermsQueryDescriptor`1.Query(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonTermsQueryDescriptor`1.HighFrequencyOperator(System.Nullable{Nest.Operator})">
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonTermsQueryDescriptor`1.Analyzer(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonTermsQueryDescriptor`1.CutoffFrequency(System.Nullable{System.Double})">
      <inheritdoc />
    </member>
    <member name="M:Nest.CommonTermsQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
      <inheritdoc />
    </member>
    <member name="T:Nest.IIntervalsAllOf">
      <summary>
            A rule that returns matches that span a combination of other rules.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsAllOf.Intervals">
      <summary>
            An array of rules to combine. All rules must produce a match in a document for the overall source to match.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsAllOf.MaxGaps">
      <summary>
            Specify a maximum number of gaps between the terms in the text. Terms that appear further apart than this will not
            match.
            If unspecified, or set to -1, then there is no width restriction on the match.
            If set to 0 then the terms must appear next to each other.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsAllOf.Ordered">
      <summary>
            Whether or not the terms must appear in their specified order. Defaults to <c>false</c></summary>
    </member>
    <member name="T:Nest.IntervalsAllOf">
      <inheritdoc cref="T:Nest.IIntervalsAllOf" />
    </member>
    <member name="P:Nest.IntervalsAllOf.Intervals">
      <summary>
            An array of rules to combine. All rules must produce a match in a document for the overall source to match.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsAllOf.MaxGaps">
      <summary>
            Specify a maximum number of gaps between the terms in the text. Terms that appear further apart than this will not
            match.
            If unspecified, or set to -1, then there is no width restriction on the match.
            If set to 0 then the terms must appear next to each other.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsAllOf.Ordered">
      <summary>
            Whether or not the terms must appear in their specified order. Defaults to <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsAllOfDescriptor">
      <inheritdoc cref="T:Nest.IIntervalsAllOf" />
    </member>
    <member name="M:Nest.IntervalsAllOfDescriptor.MaxGaps(System.Nullable{System.Int32})">
      <summary>
            Specify a maximum number of gaps between the terms in the text. Terms that appear further apart than this will not
            match.
            If unspecified, or set to -1, then there is no width restriction on the match.
            If set to 0 then the terms must appear next to each other.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsAllOf.MaxGaps" />
    </member>
    <member name="M:Nest.IntervalsAllOfDescriptor.Ordered(System.Nullable{System.Boolean})">
      <summary>
            Whether or not the terms must appear in their specified order. Defaults to <c>false</c></summary>
      <inheritdoc cref="P:Nest.IIntervalsAllOf.Ordered" />
    </member>
    <member name="M:Nest.IntervalsAllOfDescriptor.Intervals(System.Func{Nest.IntervalsListDescriptor,Nest.IPromise{System.Collections.Generic.List{Nest.IntervalsContainer}}})">
      <summary>
            An array of rules to combine. All rules must produce a match in a document for the overall source to match.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsAllOf.Intervals" />
    </member>
    <member name="T:Nest.IIntervalsAnyOf">
      <summary>
            A rule that emits intervals produced by any of its sub-rules.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsAnyOf.Intervals">
      <summary>
            An array of rules to match.
            </summary>
    </member>
    <member name="T:Nest.IntervalsAnyOf">
      <inheritdoc cref="T:Nest.IIntervalsAnyOf" />
    </member>
    <member name="P:Nest.IntervalsAnyOf.Intervals">
      <summary>
            An array of rules to match.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsAnyOfDescriptor">
      <inheritdoc cref="T:Nest.IIntervalsAnyOf" />
    </member>
    <member name="M:Nest.IntervalsAnyOfDescriptor.Intervals(System.Func{Nest.IntervalsListDescriptor,Nest.IPromise{System.Collections.Generic.List{Nest.IntervalsContainer}}})">
      <summary>
            An array of rules to match.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsAnyOf.Intervals" />
    </member>
    <member name="T:Nest.IIntervalsFilter">
      <summary>
            Filters intervals produced by any rules by their relation to the intervals produced by another rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.After">
      <summary>
            Produces intervals that appear after an interval from the filter role
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.Before">
      <summary>
            Produces intervals that appear before an interval from the filter role
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.ContainedBy">
      <summary>
            Produces intervals that are contained by an interval from the filter rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.Containing">
      <summary>
            Produces intervals that contain an interval from the filter rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.NotContainedBy">
      <summary>
            Produces intervals that are not contained by an interval from the filter rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.NotContaining">
      <summary>
            Produces intervals that do not contain an interval from the filter rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.NotOverlapping">
      <summary>
            Produces intervals that do not overlap with an interval from the filter rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.Overlapping">
      <summary>
            Produces intervals that overlap with an interval from the filter rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsFilter.Script">
      <summary>
            filter intervals based on their start position, end position and internal gap count, using a script.
            The script has access to an <code>interval</code> variable, with <code>start</code>,
            <code>end</code> and <code>gaps</code> properties
            </summary>
    </member>
    <member name="T:Nest.IntervalsFilter">
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.After">
      <summary>
            Produces intervals that appear after an interval from the filter role
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.Before">
      <summary>
            Produces intervals that appear before an interval from the filter role
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.ContainedBy">
      <summary>
            Produces intervals that are contained by an interval from the filter rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.Containing">
      <summary>
            Produces intervals that contain an interval from the filter rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.NotContainedBy">
      <summary>
            Produces intervals that are not contained by an interval from the filter rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.NotContaining">
      <summary>
            Produces intervals that do not contain an interval from the filter rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.NotOverlapping">
      <summary>
            Produces intervals that do not overlap with an interval from the filter rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.Overlapping">
      <summary>
            Produces intervals that overlap with an interval from the filter rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsFilter.Script">
      <summary>
            filter intervals based on their start position, end position and internal gap count, using a script.
            The script has access to an <code>interval</code> variable, with <code>start</code>,
            <code>end</code> and <code>gaps</code> properties
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsFilterDescriptor">
      <inheritdoc cref="T:Nest.IIntervalsFilter" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.Containing(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that contain an interval from the filter rule
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.Containing" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.ContainedBy(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that are contained by an interval from the filter rule
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.ContainedBy" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.NotContaining(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that do not contain an interval from the filter rule
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.NotContaining" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.NotContainedBy(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that are not contained by an interval from the filter rule
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.NotContainedBy" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.Overlapping(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that overlap with an interval from the filter rule
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.Overlapping" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.NotOverlapping(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that do not overlap with an interval from the filter rule
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.NotOverlapping" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.Before(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that appear before an interval from the filter role
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.Before" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.After(System.Func{Nest.IntervalsDescriptor,Nest.IntervalsContainer})">
      <summary>
            Produces intervals that appear after an interval from the filter role
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.After" />
    </member>
    <member name="M:Nest.IntervalsFilterDescriptor.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            filter intervals based on their start position, end position and internal gap count, using a script.
            The script has access to an <code>interval</code> variable, with <code>start</code>,
            <code>end</code> and <code>gaps</code> properties
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsFilter.Script" />
    </member>
    <member name="T:Nest.IIntervalsMatch">
      <summary>
            Matches the analyzed text
            </summary>
    </member>
    <member name="P:Nest.IIntervalsMatch.Analyzer">
      <summary>
            Which analyzer should be used to analyze terms in the query.
            By default, the search analyzer of the top-level field will be used.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsMatch.MaxGaps">
      <summary>
            Specify a maximum number of gaps between the terms in the text. Terms that appear further apart than this will not
            match.
            If unspecified, or set to -1, then there is no width restriction on the match.
            If set to 0 then the terms must appear next to each other.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsMatch.Ordered">
      <summary>
            Whether or not the terms must appear in their specified order. Defaults to <c>false</c></summary>
    </member>
    <member name="P:Nest.IIntervalsMatch.Query">
      <summary>
            The text to match.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsMatch.UseField">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            Terms will be analyzed using the search analyzer from this field.
            This allows you to search across multiple fields as if they were all the same field
            </summary>
    </member>
    <member name="T:Nest.IntervalsMatch">
      <inheritdoc cref="T:Nest.IIntervalsMatch" />
    </member>
    <member name="P:Nest.IntervalsMatch.Analyzer">
      <summary>
            Which analyzer should be used to analyze terms in the query.
            By default, the search analyzer of the top-level field will be used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsMatch.MaxGaps">
      <summary>
            Specify a maximum number of gaps between the terms in the text. Terms that appear further apart than this will not
            match.
            If unspecified, or set to -1, then there is no width restriction on the match.
            If set to 0 then the terms must appear next to each other.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsMatch.Ordered">
      <summary>
            Whether or not the terms must appear in their specified order. Defaults to <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsMatch.Query">
      <summary>
            The text to match.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsMatch.UseField">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            Terms will be analyzed using the search analyzer from this field.
            This allows you to search across multiple fields as if they were all the same field
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsMatchDescriptor">
      <inheritdoc cref="T:Nest.IIntervalsMatch" />
    </member>
    <member name="M:Nest.IntervalsMatchDescriptor.Analyzer(System.String)">
      <summary>
            Which analyzer should be used to analyze terms in the query.
            By default, the search analyzer of the top-level field will be used.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsMatch.Analyzer" />
    </member>
    <member name="M:Nest.IntervalsMatchDescriptor.MaxGaps(System.Nullable{System.Int32})">
      <summary>
            Specify a maximum number of gaps between the terms in the text. Terms that appear further apart than this will not
            match.
            If unspecified, or set to -1, then there is no width restriction on the match.
            If set to 0 then the terms must appear next to each other.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsMatch.MaxGaps" />
    </member>
    <member name="M:Nest.IntervalsMatchDescriptor.Ordered(System.Nullable{System.Boolean})">
      <summary>
            Whether or not the terms must appear in their specified order. Defaults to <c>false</c></summary>
      <inheritdoc cref="P:Nest.IIntervalsMatch.Ordered" />
    </member>
    <member name="M:Nest.IntervalsMatchDescriptor.Query(System.String)">
      <summary>
            The text to match.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsMatch.Query" />
    </member>
    <member name="M:Nest.IntervalsMatchDescriptor.UseField``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <inheritdoc cref="P:Nest.IIntervalsMatch.UseField" />
    </member>
    <member name="M:Nest.IntervalsMatchDescriptor.UseField(Nest.Field)">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            Terms will be analyzed using the search analyzer from this field.
            This allows you to search across multiple fields as if they were all the same field
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsMatch.UseField" />
    </member>
    <member name="T:Nest.IIntervalsPrefix">
      <summary>
            Matches terms that start with a specified set of characters. This prefix can expand to match at most 128 terms.
            If the prefix matches more than 128 terms, Elasticsearch returns an error.
            You can use the index-prefixes option in the field mapping to avoid this limit.
            <para />
            Available in Elasticsearch 7.3.0+
            </summary>
    </member>
    <member name="P:Nest.IIntervalsPrefix.Analyzer">
      <summary>
            Analyzer used to normalize the prefix. Defaults to the top-level field's analyzer.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsPrefix.Prefix">
      <summary>
            Beginning characters of terms you wish to find in the top-level field
            </summary>
    </member>
    <member name="P:Nest.IIntervalsPrefix.UseField">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            The prefix is normalized using the search analyzer from this field, unless a separate analyzer is specified.
            </summary>
    </member>
    <member name="T:Nest.IntervalsPrefix">
      <inheritdoc cref="T:Nest.IIntervalsPrefix" />
    </member>
    <member name="P:Nest.IntervalsPrefix.Analyzer">
      <summary>
            Analyzer used to normalize the prefix. Defaults to the top-level field's analyzer.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsPrefix.Prefix">
      <summary>
            Beginning characters of terms you wish to find in the top-level field
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsPrefix.UseField">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            The prefix is normalized using the search analyzer from this field, unless a separate analyzer is specified.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsPrefixDescriptor">
      <inheritdoc cref="T:Nest.IIntervalsPrefix" />
    </member>
    <member name="M:Nest.IntervalsPrefixDescriptor.Analyzer(System.String)">
      <summary>
            Analyzer used to normalize the prefix. Defaults to the top-level field's analyzer.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsPrefix.Analyzer" />
    </member>
    <member name="M:Nest.IntervalsPrefixDescriptor.Prefix(System.String)">
      <summary>
            Beginning characters of terms you wish to find in the top-level field
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsPrefix.Prefix" />
    </member>
    <member name="M:Nest.IntervalsPrefixDescriptor.UseField``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <inheritdoc cref="P:Nest.IIntervalsPrefix.UseField" />
    </member>
    <member name="M:Nest.IntervalsPrefixDescriptor.UseField(Nest.Field)">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            The prefix is normalized using the search analyzer from this field, unless a separate analyzer is specified.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsPrefix.UseField" />
    </member>
    <member name="T:Nest.IIntervalsQuery">
      <summary>
            A query that allows fine-grained control over the order and proximity of matching terms.
            Matching rules are constructed from a small set of definitions, and the rules are then applied to terms from a
            particular field.
            The definitions produce sequences of minimal intervals that span terms in a body of text.
            These intervals can be further combined and filtered by parent sources.
            </summary>
    </member>
    <member name="T:Nest.IntervalsQuery">
      <inheritdoc cref="T:Nest.IIntervalsQuery" />
    </member>
    <member name="P:Nest.IntervalsQuery.AllOf">
      <inheritdoc cref="T:Nest.IIntervalsAllOf" />
    </member>
    <member name="P:Nest.IntervalsQuery.AnyOf">
      <inheritdoc cref="T:Nest.IIntervalsAnyOf" />
    </member>
    <member name="P:Nest.IntervalsQuery.Match">
      <inheritdoc cref="T:Nest.IIntervalsMatch" />
    </member>
    <member name="P:Nest.IntervalsQuery.Prefix">
      <inheritdoc cref="T:Nest.IIntervalsPrefix" />
    </member>
    <member name="P:Nest.IntervalsQuery.Wildcard">
      <inheritdoc cref="T:Nest.IIntervalsWildcard" />
    </member>
    <member name="T:Nest.IntervalsQueryDescriptor`1">
      <inheritdoc cref="T:Nest.IIntervalsQuery" />
    </member>
    <member name="M:Nest.IntervalsQueryDescriptor`1.Match(System.Func{Nest.IntervalsMatchDescriptor,Nest.IIntervalsMatch})">
      <inheritdoc cref="P:Nest.IntervalsQuery.Match" />
    </member>
    <member name="M:Nest.IntervalsQueryDescriptor`1.Prefix(System.Func{Nest.IntervalsPrefixDescriptor,Nest.IIntervalsPrefix})">
      <inheritdoc cref="P:Nest.IntervalsQuery.Prefix" />
    </member>
    <member name="M:Nest.IntervalsQueryDescriptor`1.Wildcard(System.Func{Nest.IntervalsWildcardDescriptor,Nest.IIntervalsWildcard})">
      <inheritdoc cref="P:Nest.IntervalsQuery.Wildcard" />
    </member>
    <member name="M:Nest.IntervalsQueryDescriptor`1.AnyOf(System.Func{Nest.IntervalsAnyOfDescriptor,Nest.IIntervalsAnyOf})">
      <inheritdoc cref="P:Nest.IntervalsQuery.AnyOf" />
    </member>
    <member name="M:Nest.IntervalsQueryDescriptor`1.AllOf(System.Func{Nest.IntervalsAllOfDescriptor,Nest.IIntervalsAllOf})">
      <inheritdoc cref="P:Nest.IntervalsQuery.AllOf" />
    </member>
    <member name="T:Nest.IIntervalsContainer">
      <summary>
            Container for an <see cref="T:Nest.IIntervalsQuery" /> rule
            </summary>
    </member>
    <member name="P:Nest.IIntervalsContainer.AllOf">
      <inheritdoc cref="T:Nest.IIntervalsAllOf" />
    </member>
    <member name="P:Nest.IIntervalsContainer.AnyOf">
      <inheritdoc cref="T:Nest.IIntervalsAnyOf" />
    </member>
    <member name="P:Nest.IIntervalsContainer.Match">
      <inheritdoc cref="T:Nest.IIntervalsMatch" />
    </member>
    <member name="P:Nest.IIntervalsContainer.Prefix">
      <inheritdoc cref="T:Nest.IIntervalsPrefix" />
    </member>
    <member name="P:Nest.IIntervalsContainer.Wildcard">
      <inheritdoc cref="T:Nest.IIntervalsWildcard" />
    </member>
    <member name="T:Nest.IntervalsContainer">
      <inheritdoc cref="T:Nest.IIntervalsContainer" />
    </member>
    <member name="T:Nest.IntervalsDescriptor">
      <summary>
            Descriptor to construct an <see cref="T:Nest.IIntervalsQuery" /> rule
            </summary>
    </member>
    <member name="M:Nest.IntervalsDescriptor.Match(System.Func{Nest.IntervalsMatchDescriptor,Nest.IIntervalsMatch})">
      <inheritdoc cref="T:Nest.IntervalsMatchDescriptor" />
    </member>
    <member name="M:Nest.IntervalsDescriptor.Prefix(System.Func{Nest.IntervalsPrefixDescriptor,Nest.IIntervalsPrefix})">
      <inheritdoc cref="T:Nest.IntervalsPrefixDescriptor" />
    </member>
    <member name="M:Nest.IntervalsDescriptor.Wildcard(System.Func{Nest.IntervalsWildcardDescriptor,Nest.IIntervalsWildcard})">
      <inheritdoc cref="T:Nest.IntervalsWildcardDescriptor" />
    </member>
    <member name="M:Nest.IntervalsDescriptor.AnyOf(System.Func{Nest.IntervalsAnyOfDescriptor,Nest.IIntervalsAnyOf})">
      <inheritdoc cref="T:Nest.IntervalsAnyOfDescriptor" />
    </member>
    <member name="M:Nest.IntervalsDescriptor.AllOf(System.Func{Nest.IntervalsAllOfDescriptor,Nest.IIntervalsAllOf})">
      <inheritdoc cref="T:Nest.IntervalsAllOfDescriptor" />
    </member>
    <member name="T:Nest.IIntervals">
      <summary>
            An <see cref="T:Nest.IIntervalsQuery" /> rule with an optional filter
            </summary>
    </member>
    <member name="P:Nest.IIntervals.Filter">
      <summary>
            An optional interval filter
            </summary>
    </member>
    <member name="T:Nest.IIntervalsNoFilter">
      <summary>
            An <see cref="T:Nest.IIntervalsQuery" /> rule
            </summary>
    </member>
    <member name="T:Nest.IntervalsBase">
      <summary>
            Base type for an <see cref="T:Nest.IIntervals" /> implementation
            </summary>
    </member>
    <member name="P:Nest.IntervalsBase.Filter">
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsNoFilterBase">
      <summary>
            Base type for an <see cref="T:Nest.IIntervalsNoFilter" /> implementation
            </summary>
    </member>
    <member name="T:Nest.IntervalsDescriptorBase`2">
      <summary>
            Base type for descriptors that define <see cref="T:Nest.IIntervals" /></summary>
    </member>
    <member name="M:Nest.IntervalsDescriptorBase`2.Filter(System.Func{Nest.IntervalsFilterDescriptor,Nest.IIntervalsFilter})">
      <summary>
            An optional interval filter
            </summary>
      <inheritdoc cref="T:Nest.IIntervalsFilter" />
    </member>
    <member name="T:Nest.IntervalsListDescriptor">
      <summary>
            Constructs a collection of <see cref="T:Nest.IntervalsContainer" /></summary>
    </member>
    <member name="M:Nest.IntervalsListDescriptor.Match(System.Func{Nest.IntervalsMatchDescriptor,Nest.IIntervalsMatch})">
      <inheritdoc cref="T:Nest.IIntervalsMatch" />
    </member>
    <member name="M:Nest.IntervalsListDescriptor.Prefix(System.Func{Nest.IntervalsPrefixDescriptor,Nest.IIntervalsPrefix})">
      <inheritdoc cref="T:Nest.IIntervalsPrefix" />
    </member>
    <member name="M:Nest.IntervalsListDescriptor.Wildcard(System.Func{Nest.IntervalsWildcardDescriptor,Nest.IIntervalsWildcard})">
      <inheritdoc cref="T:Nest.IIntervalsWildcard" />
    </member>
    <member name="M:Nest.IntervalsListDescriptor.AnyOf(System.Func{Nest.IntervalsAnyOfDescriptor,Nest.IIntervalsAnyOf})">
      <inheritdoc cref="T:Nest.IIntervalsAnyOf" />
    </member>
    <member name="M:Nest.IntervalsListDescriptor.AllOf(System.Func{Nest.IntervalsAllOfDescriptor,Nest.IIntervalsAllOf})">
      <inheritdoc cref="T:Nest.IIntervalsAllOf" />
    </member>
    <member name="T:Nest.IIntervalsWildcard">
      <summary>
            Matches terms using a wildcard pattern. This pattern can expand to match at most 128 terms.
            If the pattern matches more than 128 terms, Elasticsearch returns an error.
            <para />
            Available in Elasticsearch 7.3.0+
            </summary>
    </member>
    <member name="P:Nest.IIntervalsWildcard.Analyzer">
      <summary>
            Analyzer used to normalize the prefix. Defaults to the top-level field's analyzer.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsWildcard.Pattern">
      <summary>
            Wildcard pattern used to find matching terms. Supports two wildcard operators:
            <para />?, which matches any single character
            <para />*, which can match zero or more characters, including an empty one
            <para />Warning: Avoid beginning patterns with * or ?. This can increase the iterations needed to find matching terms and slow search performance.
            </summary>
    </member>
    <member name="P:Nest.IIntervalsWildcard.UseField">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            The prefix is normalized using the search analyzer from this field, unless a separate analyzer is specified.
            </summary>
    </member>
    <member name="T:Nest.IntervalsWildcard">
      <inheritdoc cref="T:Nest.IIntervalsWildcard" />
    </member>
    <member name="P:Nest.IntervalsWildcard.Analyzer">
      <summary>
            Analyzer used to normalize the prefix. Defaults to the top-level field's analyzer.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsWildcard.Pattern">
      <summary>
            Wildcard pattern used to find matching terms. Supports two wildcard operators:
            <para />?, which matches any single character
            <para />*, which can match zero or more characters, including an empty one
            <para />Warning: Avoid beginning patterns with * or ?. This can increase the iterations needed to find matching terms and slow search performance.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IntervalsWildcard.UseField">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            The prefix is normalized using the search analyzer from this field, unless a separate analyzer is specified.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IntervalsWildcardDescriptor">
      <inheritdoc cref="T:Nest.IIntervalsWildcard" />
    </member>
    <member name="M:Nest.IntervalsWildcardDescriptor.Analyzer(System.String)">
      <summary>
            Analyzer used to normalize the prefix. Defaults to the top-level field's analyzer.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsWildcard.Analyzer" />
    </member>
    <member name="M:Nest.IntervalsWildcardDescriptor.Pattern(System.String)">
      <summary>
            Wildcard pattern used to find matching terms. Supports two wildcard operators:
            <para />?, which matches any single character
            <para />*, which can match zero or more characters, including an empty one
            <para />Warning: Avoid beginning patterns with * or ?. This can increase the iterations needed to find matching terms and slow search performance.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsWildcard.Pattern" />
    </member>
    <member name="M:Nest.IntervalsWildcardDescriptor.UseField``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <inheritdoc cref="P:Nest.IIntervalsWildcard.UseField" />
    </member>
    <member name="M:Nest.IntervalsWildcardDescriptor.UseField(Nest.Field)">
      <summary>
            If specified, then match intervals from this field rather than the top-level field.
            The prefix is normalized using the search analyzer from this field, unless a separate analyzer is specified.
            </summary>
      <inheritdoc cref="P:Nest.IIntervalsWildcard.UseField" />
    </member>
    <member name="P:Nest.IMatchPhrasePrefixQuery.ZeroTermsQuery">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
    </member>
    <member name="P:Nest.MatchPhrasePrefixQuery.ZeroTermsQuery">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MatchPhrasePrefixQueryDescriptor`1.ZeroTermsQuery(System.Nullable{Nest.ZeroTermsQuery})">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.ZeroTermsQuery" />
    </member>
    <member name="T:Nest.IMatchQuery">
      <summary>
            A match query for a single field
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IMatchQuery.CutoffFrequency">
      <summary>
            A cutoff frequency that allows specifying an absolute or relative document frequency where
            high frequency terms are moved into an optional subquery and are only scored if one of the low frequency
            (below the cutoff) terms in the case of <see cref="F:Nest.Operator.Or" />,
            or all of the low frequency terms in the case of an <see cref="F:Nest.Operator.And" /> match.
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.Fuzziness">
      <summary>
            Allows fuzzy matching based on the type of field being queried.
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.FuzzyRewrite">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IMatchQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.MaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
    </member>
    <member name="P:Nest.IMatchQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.Operator">
      <summary>
            The operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
    </member>
    <member name="P:Nest.IMatchQuery.PrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.Query">
      <summary>
            The query to execute
            </summary>
    </member>
    <member name="P:Nest.IMatchQuery.ZeroTermsQuery">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
    </member>
    <member name="T:Nest.MatchQuery">
      <inheritdoc cref="T:Nest.IMatchQuery" />
    </member>
    <member name="P:Nest.MatchQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.CutoffFrequency">
      <summary>
            A cutoff frequency that allows specifying an absolute or relative document frequency where
            high frequency terms are moved into an optional subquery and are only scored if one of the low frequency
            (below the cutoff) terms in the case of <see cref="F:Nest.Operator.Or" />,
            or all of the low frequency terms in the case of an <see cref="F:Nest.Operator.And" /> match.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.Fuzziness">
      <summary>
            Allows fuzzy matching based on the type of field being queried.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.FuzzyRewrite">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IMatchQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.MaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.Operator">
      <summary>
            The operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.PrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.Query">
      <summary>
            The query to execute
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MatchQuery.ZeroTermsQuery">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.MatchQueryDescriptor`1">
      <inheritdoc cref="T:Nest.IMatchQuery" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.Query(System.String)">
      <summary>
            The query to execute
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.Query" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.Lenient" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.Analyzer(System.String)">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.Analyzer" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.Fuzziness(Nest.Fuzziness)">
      <summary>
            Allows fuzzy matching based on the type of field being queried.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.Fuzziness" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.FuzzyTranspositions(System.Nullable{System.Boolean})">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.FuzzyTranspositions" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.CutoffFrequency(System.Nullable{System.Double})">
      <summary>
            A cutoff frequency that allows specifying an absolute or relative document frequency where
            high frequency terms are moved into an optional subquery and are only scored if one of the low frequency
            (below the cutoff) terms in the case of <see cref="F:Nest.Operator.Or" />,
            or all of the low frequency terms in the case of an <see cref="F:Nest.Operator.And" /> match.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.CutoffFrequency" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.FuzzyRewrite(Nest.MultiTermQueryRewrite)">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IMatchQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.FuzzyRewrite" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.MinimumShouldMatch" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.Operator(System.Nullable{Nest.Operator})">
      <summary>
            The operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <inheritdoc cref="P:Nest.IMatchQuery.Operator" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.ZeroTermsQuery(System.Nullable{Nest.ZeroTermsQuery})">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.ZeroTermsQuery" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.PrefixLength(System.Nullable{System.Int32})">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.PrefixLength" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.MaxExpansions(System.Nullable{System.Int32})">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc cref="P:Nest.IMatchQuery.MaxExpansions" />
    </member>
    <member name="M:Nest.MatchQueryDescriptor`1.AutoGenerateSynonymsPhraseQuery(System.Nullable{System.Boolean})">
      <summary>
      </summary>
      <inheritdoc cref="P:Nest.IMatchQuery.AutoGenerateSynonymsPhraseQuery" />
    </member>
    <member name="T:Nest.IMultiMatchQuery">
      <summary>
            A match query across multiple fields.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.CutoffFrequency">
      <summary>
            A cutoff frequency that allows specifying an absolute or relative document frequency where
            high frequency terms are moved into an optional subquery and are only scored if one of the low frequency
            (below the cutoff) terms in the case of <see cref="F:Nest.Operator.Or" />,
            or all of the low frequency terms in the case of an <see cref="F:Nest.Operator.And" /> match.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Fields">
      <summary>
            The fields to perform the query against.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Fuzziness">
      <summary>
            Allows fuzzy matching based on the type of field being queried.
            Cannot be used with the
            <see cref="F:Nest.TextQueryType.CrossFields" />,
            <see cref="F:Nest.TextQueryType.Phrase" /> or
            <see cref="F:Nest.TextQueryType.PhrasePrefix" /> types.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.FuzzyRewrite">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IMultiMatchQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.MaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Operator">
      <summary>
            The operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <remarks>
        <see cref="F:Nest.TextQueryType.BestFields" /> and <see cref="F:Nest.TextQueryType.MostFields" /> types are field-centric ;
            they generate a match query per field. This means that <see cref="P:Nest.IMultiMatchQuery.Operator" /> and <see cref="P:Nest.IMultiMatchQuery.MinimumShouldMatch" />
            are applied to each field individually, which is probably not what you want.
            Consider using <see cref="F:Nest.TextQueryType.CrossFields" />.
            </remarks>
    </member>
    <member name="P:Nest.IMultiMatchQuery.PrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Query">
      <summary>
            The query to execute
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Slop">
      <summary>
            How far apart terms are allowed to be while still considering the document to be a match.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.TieBreaker">
      <summary>
            Used to influence how the score is calculated for <see cref="F:Nest.TextQueryType.BestFields" />. If specified,
            score is calculated using
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.Type">
      <summary>
            How the fields should be combined to build the text query.
            Default is <see cref="F:Nest.TextQueryType.BestFields" /></summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.UseDisMax">
      <summary>
            By default, a <see cref="T:Nest.IMultiMatchQuery" /> generates a match clause per field, then wraps them
            in a <see cref="T:Nest.IDisMaxQuery" />. By setting <see cref="P:Nest.IMultiMatchQuery.UseDisMax" /> to <c>false</c>,
            they will be wrapped in a <see cref="T:Nest.IBoolQuery" /> instead.
            </summary>
    </member>
    <member name="P:Nest.IMultiMatchQuery.ZeroTermsQuery">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
    </member>
    <member name="T:Nest.MultiMatchQuery">
      <inheritdoc cref="T:Nest.IMultiMatchQuery" />
    </member>
    <member name="P:Nest.MultiMatchQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.CutoffFrequency">
      <summary>
            A cutoff frequency that allows specifying an absolute or relative document frequency where
            high frequency terms are moved into an optional subquery and are only scored if one of the low frequency
            (below the cutoff) terms in the case of <see cref="F:Nest.Operator.Or" />,
            or all of the low frequency terms in the case of an <see cref="F:Nest.Operator.And" /> match.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Fields">
      <summary>
            The fields to perform the query against.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Fuzziness">
      <summary>
            Allows fuzzy matching based on the type of field being queried.
            Cannot be used with the
            <see cref="F:Nest.TextQueryType.CrossFields" />,
            <see cref="F:Nest.TextQueryType.Phrase" /> or
            <see cref="F:Nest.TextQueryType.PhrasePrefix" /> types.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.FuzzyRewrite">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IMultiMatchQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.MaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Operator">
      <summary>
            The operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <remarks>
        <see cref="F:Nest.TextQueryType.BestFields" /> and <see cref="F:Nest.TextQueryType.MostFields" /> types are field-centric ;
            they generate a match query per field. This means that <see cref="P:Nest.IMultiMatchQuery.Operator" /> and <see cref="P:Nest.IMultiMatchQuery.MinimumShouldMatch" />
            are applied to each field individually, which is probably not what you want.
            Consider using <see cref="F:Nest.TextQueryType.CrossFields" />.
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.PrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Query">
      <summary>
            The query to execute
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Slop">
      <summary>
            How far apart terms are allowed to be while still considering the document to be a match.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.TieBreaker">
      <summary>
            Used to influence how the score is calculated for <see cref="F:Nest.TextQueryType.BestFields" />. If specified,
            score is calculated using
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.Type">
      <summary>
            How the fields should be combined to build the text query.
            Default is <see cref="F:Nest.TextQueryType.BestFields" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.UseDisMax">
      <summary>
            By default, a <see cref="T:Nest.IMultiMatchQuery" /> generates a match clause per field, then wraps them
            in a <see cref="T:Nest.IDisMaxQuery" />. By setting <see cref="P:Nest.IMultiMatchQuery.UseDisMax" /> to <c>false</c>,
            they will be wrapped in a <see cref="T:Nest.IBoolQuery" /> instead.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.MultiMatchQuery.ZeroTermsQuery">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.MultiMatchQueryDescriptor`1">
      <inheritdoc cref="T:Nest.IMultiMatchQuery" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The fields to perform the query against.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Fields" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The fields to perform the query against.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Fields" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Query(System.String)">
      <summary>
            The query to execute
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Query" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Analyzer(System.String)">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Analyzer" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Fuzziness(Nest.Fuzziness)">
      <summary>
            Allows fuzzy matching based on the type of field being queried.
            Cannot be used with the
            <see cref="F:Nest.TextQueryType.CrossFields" />,
            <see cref="F:Nest.TextQueryType.Phrase" /> or
            <see cref="F:Nest.TextQueryType.PhrasePrefix" /> types.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Fuzziness" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.CutoffFrequency(System.Nullable{System.Double})">
      <summary>
            A cutoff frequency that allows specifying an absolute or relative document frequency where
            high frequency terms are moved into an optional subquery and are only scored if one of the low frequency
            (below the cutoff) terms in the case of <see cref="F:Nest.Operator.Or" />,
            or all of the low frequency terms in the case of an <see cref="F:Nest.Operator.And" /> match.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.CutoffFrequency" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.MinimumShouldMatch" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.FuzzyRewrite(Nest.MultiTermQueryRewrite)">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IMultiMatchQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.FuzzyRewrite" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.FuzzyTranspositions(System.Nullable{System.Boolean})">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.FuzzyTranspositions" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Lenient" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.PrefixLength(System.Nullable{System.Int32})">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.PrefixLength" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.MaxExpansions(System.Nullable{System.Int32})">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.MaxExpansions" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Slop(System.Nullable{System.Int32})">
      <summary>
            How far apart terms are allowed to be while still considering the document to be a match.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Slop" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Operator(System.Nullable{Nest.Operator})">
      <summary>
            The operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <remarks>
        <see cref="F:Nest.TextQueryType.BestFields" /> and <see cref="F:Nest.TextQueryType.MostFields" /> types are field-centric ;
            they generate a match query per field. This means that <see cref="P:Nest.IMultiMatchQuery.Operator" /> and <see cref="P:Nest.IMultiMatchQuery.MinimumShouldMatch" />
            are applied to each field individually, which is probably not what you want.
            Consider using <see cref="F:Nest.TextQueryType.CrossFields" />.
            </remarks>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Operator" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.TieBreaker(System.Nullable{System.Double})">
      <summary>
            Used to influence how the score is calculated for <see cref="F:Nest.TextQueryType.BestFields" />. If specified,
            score is calculated using
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.TieBreaker" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.Type(System.Nullable{Nest.TextQueryType})">
      <summary>
            How the fields should be combined to build the text query.
            Default is <see cref="F:Nest.TextQueryType.BestFields" /></summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.Type" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.UseDisMax(System.Nullable{System.Boolean})">
      <summary>
            By default, a <see cref="T:Nest.IMultiMatchQuery" /> generates a match clause per field, then wraps them
            in a <see cref="T:Nest.IDisMaxQuery" />. By setting <see cref="P:Nest.IMultiMatchQuery.UseDisMax" /> to <c>false</c>,
            they will be wrapped in a <see cref="T:Nest.IBoolQuery" /> instead.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.UseDisMax" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.ZeroTermsQuery(System.Nullable{Nest.ZeroTermsQuery})">
      <summary>
            If the analyzer used removes all tokens in a query like a stop filter does, the default behavior is
            to match no documents at all. In order to change that, <see cref="T:Nest.ZeroTermsQuery" /> can be used,
            which accepts <see cref="F:Nest.ZeroTermsQuery.None" /> (default) and <see cref="F:Nest.ZeroTermsQuery.All" />
            which corresponds to a match_all query.
            </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.ZeroTermsQuery" />
    </member>
    <member name="M:Nest.MultiMatchQueryDescriptor`1.AutoGenerateSynonymsPhraseQuery(System.Nullable{System.Boolean})">
      <summary>
      </summary>
      <inheritdoc cref="P:Nest.IMultiMatchQuery.AutoGenerateSynonymsPhraseQuery" />
    </member>
    <member name="T:Nest.IQueryStringQuery">
      <summary>
            A query that uses a query parser in order to parse its content
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.AllowLeadingWildcard">
      <summary>
            When set, <c>*</c> or <c>?</c> are allowed as the first character. Defaults to <c>true</c>.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.AnalyzeWildcard">
      <summary>
            By default, wildcards terms in a query are not analyzed.
            By setting this value to <c>true</c>, a best effort will be made to analyze those as well.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.DefaultField">
      <summary>
            The default field for query terms if no prefix field is specified.
            Defaults to the index.query.default_field index settings, which in turn defaults to *.
            * extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            All extracted fields are then combined to build a query when no prefix field is provided.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.DefaultOperator">
      <summary>
            The default operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.IQueryStringQuery.EnablePositionIncrements" -->
    <member name="P:Nest.IQueryStringQuery.Escape">
      <summary>
            Enables escaping of the query
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Fields">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Fuzziness">
      <summary>
            Set the fuzziness for fuzzy queries. Defaults to <see cref="P:Nest.Fuzziness.Auto" /></summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.FuzzyMaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.FuzzyPrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.FuzzyRewrite">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IQueryStringQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.MaximumDeterminizedStates">
      <summary>
            Limit on how many automaton states regexp queries are allowed to create.
            This protects against too-difficult (e.g. exponentially hard) regexps.
            Defaults to <c>10000</c>.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.PhraseSlop">
      <summary>
            Sets the default slop for phrases. If zero, then exact phrase matches are required.
            Default value is <c>0</c>.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Query">
      <summary>
            The query to be parsed
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.QuoteAnalyzer">
      <summary>
            The name of the analyzer that is used to analyze quoted phrases in the query string.
            For those parts, it overrides other analyzers that are set using the analyzer parameter
            or the search_quote_analyzer setting.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.QuoteFieldSuffix">
      <summary>
            A suffix to append to fields for quoted parts of the query string.
            This allows to use a field that has a different analysis chain for exact matching.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Rewrite">
      <summary>
            Controls how a multi term query such as a wildcard or prefix query, is rewritten.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.TieBreaker">
      <summary>
            The disjunction max tie breaker for multi fields. Defaults to <c>0</c></summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.TimeZone">
      <summary>
            Time Zone to be applied to any range query related to dates.
            </summary>
    </member>
    <member name="P:Nest.IQueryStringQuery.Type">
      <summary>
            How the fields should be combined to build the text query.
            Default is <see cref="F:Nest.TextQueryType.BestFields" /></summary>
    </member>
    <member name="T:Nest.QueryStringQuery">
      <inheritdoc cref="T:Nest.IQueryStringQuery" />
    </member>
    <member name="P:Nest.QueryStringQuery.AllowLeadingWildcard">
      <summary>
            When set, <c>*</c> or <c>?</c> are allowed as the first character. Defaults to <c>true</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.AnalyzeWildcard">
      <summary>
            By default, wildcards terms in a query are not analyzed.
            By setting this value to <c>true</c>, a best effort will be made to analyze those as well.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.DefaultField">
      <summary>
            The default field for query terms if no prefix field is specified.
            Defaults to the index.query.default_field index settings, which in turn defaults to *.
            * extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            All extracted fields are then combined to build a query when no prefix field is provided.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.DefaultOperator">
      <summary>
            The default operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.EnablePositionIncrements">
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Escape">
      <summary>
            Enables escaping of the query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Fields">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Fuzziness">
      <summary>
            Set the fuzziness for fuzzy queries. Defaults to <see cref="P:Nest.Fuzziness.Auto" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.FuzzyMaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.FuzzyPrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.FuzzyRewrite">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IQueryStringQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.MaximumDeterminizedStates">
      <summary>
            Limit on how many automaton states regexp queries are allowed to create.
            This protects against too-difficult (e.g. exponentially hard) regexps.
            Defaults to <c>10000</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.PhraseSlop">
      <summary>
            Sets the default slop for phrases. If zero, then exact phrase matches are required.
            Default value is <c>0</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Query">
      <summary>
            The query to be parsed
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.QuoteAnalyzer">
      <summary>
            The name of the analyzer that is used to analyze quoted phrases in the query string.
            For those parts, it overrides other analyzers that are set using the analyzer parameter
            or the search_quote_analyzer setting.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.QuoteFieldSuffix">
      <summary>
            A suffix to append to fields for quoted parts of the query string.
            This allows to use a field that has a different analysis chain for exact matching.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Rewrite">
      <summary>
            Controls how a multi term query such as a wildcard or prefix query, is rewritten.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.TieBreaker">
      <summary>
            The disjunction max tie breaker for multi fields. Defaults to <c>0</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.TimeZone">
      <summary>
            Time Zone to be applied to any range query related to dates.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.QueryStringQuery.Type">
      <summary>
            How the fields should be combined to build the text query.
            Default is <see cref="F:Nest.TextQueryType.BestFields" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.QueryStringQueryDescriptor`1">
      <inheritdoc cref="T:Nest.IQueryStringQuery" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.DefaultField(Nest.Field)">
      <summary>
            The default field for query terms if no prefix field is specified.
            Defaults to the index.query.default_field index settings, which in turn defaults to *.
            * extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            All extracted fields are then combined to build a query when no prefix field is provided.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.DefaultField" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.DefaultField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IQueryStringQuery.DefaultField" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Fields" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Fields" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Type(System.Nullable{Nest.TextQueryType})">
      <summary>
            How the fields should be combined to build the text query.
            Default is <see cref="F:Nest.TextQueryType.BestFields" /></summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Type" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Query(System.String)">
      <summary>
            The query to be parsed
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Query" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.DefaultOperator(System.Nullable{Nest.Operator})">
      <summary>
            The default operator used if no explicit operator is specified.
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.DefaultOperator" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Analyzer(System.String)">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Analyzer" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.QuoteAnalyzer(System.String)">
      <summary>
            The name of the analyzer that is used to analyze quoted phrases in the query string.
            For those parts, it overrides other analyzers that are set using the analyzer parameter
            or the search_quote_analyzer setting.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.QuoteAnalyzer" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.AllowLeadingWildcard(System.Nullable{System.Boolean})">
      <summary>
            When set, <c>*</c> or <c>?</c> are allowed as the first character. Defaults to <c>true</c>.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.AllowLeadingWildcard" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Fuzziness(Nest.Fuzziness)">
      <summary>
            Set the fuzziness for fuzzy queries. Defaults to <see cref="P:Nest.Fuzziness.Auto" /></summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Fuzziness" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.FuzzyPrefixLength(System.Nullable{System.Int32})">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c>.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.FuzzyPrefixLength" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.FuzzyMaxExpansions(System.Nullable{System.Int32})">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.FuzzyMaxExpansions" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.FuzzyTranspositions(System.Nullable{System.Boolean})">
      <summary>
            Sets whether transpositions are supported in fuzzy queries.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.FuzzyTranspositions" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.PhraseSlop(System.Nullable{System.Double})">
      <summary>
            Sets the default slop for phrases. If zero, then exact phrase matches are required.
            Default value is <c>0</c>.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.PhraseSlop" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.MinimumShouldMatch" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Lenient" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>
            By default, wildcards terms in a query are not analyzed.
            By setting this value to <c>true</c>, a best effort will be made to analyze those as well.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.AnalyzeWildcard" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.TieBreaker(System.Nullable{System.Double})">
      <summary>
            The disjunction max tie breaker for multi fields. Defaults to <c>0</c></summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.TieBreaker" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.MaximumDeterminizedStates(System.Nullable{System.Int32})">
      <summary>
            Limit on how many automaton states regexp queries are allowed to create.
            This protects against too-difficult (e.g. exponentially hard) regexps.
            Defaults to <c>10000</c>.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.MaximumDeterminizedStates" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.FuzzyRewrite(Nest.MultiTermQueryRewrite)">
      <summary>
            Controls how the query is rewritten if <see cref="P:Nest.IQueryStringQuery.Fuzziness" /> is set.
            In this scenario, the default is <see cref="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)" />.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.FuzzyRewrite" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Rewrite(Nest.MultiTermQueryRewrite)">
      <summary>
            Controls how a multi term query such as a wildcard or prefix query, is rewritten.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Rewrite" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.QuoteFieldSuffix(System.String)">
      <summary>
            A suffix to append to fields for quoted parts of the query string.
            This allows to use a field that has a different analysis chain for exact matching.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.QuoteFieldSuffix" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.Escape(System.Nullable{System.Boolean})">
      <summary>
            Enables escaping of the query
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.Escape" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.EnablePositionIncrements(System.Nullable{System.Boolean})">
      <inheritdoc cref="P:Nest.IQueryStringQuery.EnablePositionIncrements" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.TimeZone(System.String)">
      <summary>
            Time Zone to be applied to any range query related to dates.
            </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.TimeZone" />
    </member>
    <member name="M:Nest.QueryStringQueryDescriptor`1.AutoGenerateSynonymsPhraseQuery(System.Nullable{System.Boolean})">
      <summary>
      </summary>
      <inheritdoc cref="P:Nest.IQueryStringQuery.AutoGenerateSynonymsPhraseQuery" />
    </member>
    <member name="T:Nest.ISimpleQueryStringQuery">
      <summary>
            A query that uses the SimpleQueryParser to parse its context.
            Unlike the regular <see cref="T:Nest.IQueryStringQuery" />, the <see cref="T:Nest.ISimpleQueryStringQuery" /> query will
            never throw an exception, and discards invalid parts of the query.
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.AnalyzeWildcard">
      <summary>
            By default, wildcards terms in a query are not analyzed.
            By setting this value to <c>true</c>, a best effort will be made to analyze those as well.
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.DefaultOperator">
      <summary>
            The default operator used if no explicit operator is specified
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.Fields">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.Flags">
      <summary>
            Flags specifying which features to enable.
            Defaults to <see cref="F:Nest.SimpleQueryStringFlags.All" />.
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.FuzzyMaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.FuzzyPrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c></summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries. Default is <c>true</c>.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.Query">
      <summary>
            The query to be parsed
            </summary>
    </member>
    <member name="P:Nest.ISimpleQueryStringQuery.QuoteFieldSuffix">
      <summary>
            A suffix to append to fields for quoted parts of the query string.
            This allows to use a field that has a different analysis chain for exact matching.
            </summary>
    </member>
    <member name="T:Nest.SimpleQueryStringQuery">
      <inheritdoc cref="T:Nest.ISimpleQueryStringQuery" />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.Analyzer">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.AnalyzeWildcard">
      <summary>
            By default, wildcards terms in a query are not analyzed.
            By setting this value to <c>true</c>, a best effort will be made to analyze those as well.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.AutoGenerateSynonymsPhraseQuery">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.DefaultOperator">
      <summary>
            The default operator used if no explicit operator is specified
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.Fields">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.Flags">
      <summary>
            Flags specifying which features to enable.
            Defaults to <see cref="F:Nest.SimpleQueryStringFlags.All" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.FuzzyMaxExpansions">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.FuzzyPrefixLength">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.FuzzyTranspositions">
      <summary>
            Sets whether transpositions are supported in fuzzy queries. Default is <c>true</c>.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.Lenient">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.MinimumShouldMatch">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.Query">
      <summary>
            The query to be parsed
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SimpleQueryStringQuery.QuoteFieldSuffix">
      <summary>
            A suffix to append to fields for quoted parts of the query string.
            This allows to use a field that has a different analysis chain for exact matching.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SimpleQueryStringQueryDescriptor`1">
      <inheritdoc cref="T:Nest.ISimpleQueryStringQuery" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.Fields" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The fields to perform the parsed query against.
            Defaults to the <c>index.query.default_field</c> index settings, which in turn defaults to <c>*</c>.
            <c>*</c> extracts all fields in the mapping that are eligible to term queries and filters the metadata fields.
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.Fields" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.Query(System.String)">
      <summary>
            The query to be parsed
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.Query" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.Analyzer(System.String)">
      <summary>
            The analyzer name used to analyze the query
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.Analyzer" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.DefaultOperator(System.Nullable{Nest.Operator})">
      <summary>
            The default operator used if no explicit operator is specified
            The default operator is <see cref="F:Nest.Operator.Or" /></summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.DefaultOperator" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.Flags(System.Nullable{Nest.SimpleQueryStringFlags})">
      <summary>
            Flags specifying which features to enable.
            Defaults to <see cref="F:Nest.SimpleQueryStringFlags.All" />.
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.Flags" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.AnalyzeWildcard(System.Nullable{System.Boolean})">
      <summary>
            By default, wildcards terms in a query are not analyzed.
            By setting this value to <c>true</c>, a best effort will be made to analyze those as well.
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.AnalyzeWildcard" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.Lenient(System.Nullable{System.Boolean})">
      <summary>
            If set to <c>true</c> will cause format based failures (like providing text to a numeric field)
            to be ignored
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.Lenient" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
      <summary>
            A value controlling how many "should" clauses in the resulting boolean query should match.
            It can be an absolute value, a percentage or a combination of both
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.MinimumShouldMatch" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.QuoteFieldSuffix(System.String)">
      <summary>
            A suffix to append to fields for quoted parts of the query string.
            This allows to use a field that has a different analysis chain for exact matching.
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.QuoteFieldSuffix" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.FuzzyPrefixLength(System.Nullable{System.Int32})">
      <summary>
            Set the prefix length for fuzzy queries. Default is <c>0</c></summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.FuzzyPrefixLength" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.FuzzyMaxExpansions(System.Nullable{System.Int32})">
      <summary>
            Controls the number of terms fuzzy queries will expand to. Defaults to <c>50</c></summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.FuzzyMaxExpansions" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.FuzzyTranspositions(System.Nullable{System.Boolean})">
      <summary>
            Sets whether transpositions are supported in fuzzy queries. Default is <c>true</c>.
            <para />
            The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein
            distance formula which supports transpositions. Setting transposition to false will
            switch to classic Levenshtein distance.
            If not set, Damerau-Levenshtein distance metric will be used.
            </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.FuzzyTranspositions" />
    </member>
    <member name="M:Nest.SimpleQueryStringQueryDescriptor`1.AutoGenerateSynonymsPhraseQuery(System.Nullable{System.Boolean})">
      <summary>
      </summary>
      <inheritdoc cref="P:Nest.ISimpleQueryStringQuery.AutoGenerateSynonymsPhraseQuery" />
    </member>
    <member name="T:Nest.GeoLocation">
      <summary>
            Represents a Latitude/Longitude as a 2 dimensional point that gets serialized as { lat, lon }
            </summary>
    </member>
    <member name="M:Nest.GeoLocation.#ctor(System.Double,System.Double)">
      <summary>
            Represents a Latitude/Longitude as a 2 dimensional point.
            </summary>
      <param name="latitude">Value between -90 and 90</param>
      <param name="longitude">Value between -180 and 180</param>
      <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="latitude" /> or <paramref name="longitude" /> are invalid</exception>
    </member>
    <member name="P:Nest.GeoLocation.Latitude">
      <summary>
            Latitude
            </summary>
    </member>
    <member name="P:Nest.GeoLocation.Longitude">
      <summary>
            Longitude
            </summary>
    </member>
    <member name="M:Nest.GeoLocation.IsValidLatitude(System.Double)">
      <summary>
            True if <paramref name="latitude" /> is a valid latitude. Otherwise false.
            </summary>
      <param name="latitude">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.GeoLocation.IsValidLongitude(System.Double)">
      <summary>
            True if <paramref name="longitude" /> is a valid longitude. Otherwise false.
            </summary>
      <param name="longitude">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Nest.GeoLocation.TryCreate(System.Double,System.Double)">
      <summary>
            Try to create a <see cref="T:Nest.GeoLocation" />.
            Return
            <value>null</value>
            if either <paramref name="latitude" /> or <paramref name="longitude" /> are invalid.
            </summary>
      <param name="latitude">Value between -90 and 90</param>
      <param name="longitude">Value between -180 and 180</param>
      <returns>
      </returns>
    </member>
    <member name="T:Nest.GeoCoordinate">
      <summary>
            Represents a Latitude/Longitude and optional Z value as a 2 or 3 dimensional point
            that gets serialized as new [] { lon, lat, [z] }
            </summary>
    </member>
    <member name="M:Nest.GeoCoordinate.#ctor(System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Nest.GeoCoordinate" /></summary>
    </member>
    <member name="M:Nest.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Nest.GeoCoordinate" /></summary>
    </member>
    <member name="P:Nest.GeoCoordinate.Z">
      <summary>
            Gets or sets the Z value
            </summary>
    </member>
    <member name="M:Nest.GeoCoordinate.op_Implicit(System.Double[])~Nest.GeoCoordinate">
      <summary>
            Creates a new instance of <see cref="T:Nest.GeoCoordinate" /> from an array
            of 2 or 3 doubles, in the order Latitude, Longitude, and optional Z value.
            </summary>
    </member>
    <member name="T:Nest.IGeometryCollection">
      <summary>
            A geo shape representing a collection of <see cref="T:Nest.IGeoShape" /> geometries
            </summary>
    </member>
    <member name="P:Nest.IGeometryCollection.Geometries">
      <summary>
            A collection of <see cref="T:Nest.IGeoShape" /> geometries
            </summary>
    </member>
    <member name="T:Nest.GeometryCollection">
      <inheritdoc cref="T:Nest.IGeometryCollection" />
    </member>
    <member name="P:Nest.GeometryCollection.Geometries">
      <summary>
            A collection of <see cref="T:Nest.IGeoShape" /> geometries
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IGeoShape.Type">
      <summary>
            The type of geo shape
            </summary>
    </member>
    <member name="T:Nest.GeoShapeBase">
      <summary>
            Base type for geo shapes
            </summary>
    </member>
    <member name="P:Nest.GeoShapeBase.Type">
      <inheritdoc />
    </member>
    <member name="P:Nest.IGeoShapeQuery.IgnoreUnmapped">
      <summary>
            Will ignore an unmapped field and will not match any documents for this query.
            This can be useful when querying multiple indexes which might have different mappings.
            </summary>
    </member>
    <member name="P:Nest.IGeoShapeQuery.IndexedShape">
      <summary>
            Indexed geo shape to search with
            </summary>
    </member>
    <member name="P:Nest.IGeoShapeQuery.Relation">
      <summary>
            Controls the spatial relation operator to use at search time.
            </summary>
    </member>
    <member name="P:Nest.IGeoShapeQuery.Shape">
      <summary>
            The geo shape to search with
            </summary>
    </member>
    <member name="P:Nest.GeoShapeQuery.IgnoreUnmapped">
      <summary>
            Will ignore an unmapped field and will not match any documents for this query.
            This can be useful when querying multiple indexes which might have different mappings.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeQuery.IndexedShape">
      <summary>
            Indexed geo shape to search with
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeQuery.Relation">
      <summary>
            Controls the spatial relation operator to use at search time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GeoShapeQuery.Shape">
      <summary>
            The geo shape to search with
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GeoShapeQueryDescriptor`1.Relation(System.Nullable{Nest.GeoShapeRelation})">
      <summary>
            Controls the spatial relation operator to use at search time.
            </summary>
      <inheritdoc cref="P:Nest.IGeoShapeQuery.Relation" />
    </member>
    <member name="M:Nest.GeoShapeQueryDescriptor`1.IgnoreUnmapped(System.Nullable{System.Boolean})">
      <summary>
            Will ignore an unmapped field and will not match any documents for this query.
            This can be useful when querying multiple indexes which might have different mappings.
            </summary>
      <inheritdoc cref="P:Nest.IGeoShapeQuery.IgnoreUnmapped" />
    </member>
    <member name="M:Nest.GeoShapeQueryDescriptor`1.Shape(System.Func{Nest.GeoShapeDescriptor,Nest.IGeoShape})">
      <summary>
            The geo shape to search with
            </summary>
      <inheritdoc cref="P:Nest.IGeoShapeQuery.Shape" />
    </member>
    <member name="M:Nest.GeoShapeQueryDescriptor`1.IndexedShape(System.Func{Nest.FieldLookupDescriptor{`0},Nest.IFieldLookup})">
      <summary>
            Indexed geo shape to search with
            </summary>
      <inheritdoc cref="P:Nest.IGeoShapeQuery.IndexedShape" />
    </member>
    <member name="T:Nest.GeoShapeDescriptor">
      <summary>
            Descriptor for building a <see cref="T:Nest.IGeoShape" /></summary>
    </member>
    <member name="T:Nest.GeoWKTException">
      <summary>
            An exception when handling <see cref="T:Nest.IGeoShape" /> in Well-Known Text format
            </summary>
    </member>
    <member name="T:Nest.GeoWKTReader">
      <summary>
            Reads Well-Known Text (WKT) into <see cref="T:Nest.IGeoShape" /> types
            </summary>
    </member>
    <member name="M:Nest.GeoWKTReader.Read(System.String)">
      <summary>
            Reads Well-Known Text (WKT) into a new instance of <see cref="T:Nest.IGeoShape" /></summary>
    </member>
    <member name="T:Nest.CharacterType">
      <summary>
            Character types when parsing Well-Known Text
            </summary>
    </member>
    <member name="T:Nest.TokenType">
      <summary>
            Well-Known Text token types
            </summary>
    </member>
    <member name="T:Nest.WellKnownTextTokenizer">
      <summary>
            Tokenizes a sequence of characters into Well-Known Text
            (WKT) <see cref="P:Nest.WellKnownTextTokenizer.TokenType" /></summary>
    </member>
    <member name="P:Nest.WellKnownTextTokenizer.LineNumber">
      <summary>
            Gets the current line number
            </summary>
    </member>
    <member name="P:Nest.WellKnownTextTokenizer.Position">
      <summary>
            Gets the current position
            </summary>
    </member>
    <member name="P:Nest.WellKnownTextTokenizer.TokenType">
      <summary>
            Gets the current token type
            </summary>
    </member>
    <member name="P:Nest.WellKnownTextTokenizer.TokenValue">
      <summary>
            Gets the current token value
            </summary>
    </member>
    <member name="M:Nest.WellKnownTextTokenizer.Dispose">
      <summary>
            Disposes of the reader from which characters are read
            </summary>
    </member>
    <member name="M:Nest.WellKnownTextTokenizer.TokenString">
      <summary>
            A user friendly string for the current token
            </summary>
    </member>
    <member name="M:Nest.WellKnownTextTokenizer.PeekToken">
      <summary>
            Peeks at the next token without changing the state
            of the reader
            </summary>
    </member>
    <member name="M:Nest.WellKnownTextTokenizer.NextToken">
      <summary>
            Gets the next token, advancing the position
            </summary>
    </member>
    <member name="T:Nest.GeoWKTWriter">
      <summary>
            Writes <see cref="T:Nest.IGeoShape" /> types to Well-Known Text (WKT)
            </summary>
    </member>
    <member name="M:Nest.GeoWKTWriter.Write(Nest.IGeoShape)">
      <summary>
            Writes a <see cref="T:Nest.IGeoShape" /> to Well-Known Text (WKT)
            </summary>
    </member>
    <member name="P:Nest.IHasChildQuery.MaxChildren">
      <summary>
            Specify how many child documents are allowed to match.
            </summary>
    </member>
    <member name="P:Nest.HasChildQuery.MaxChildren">
      <summary>
            Specify how many child documents are allowed to match.
            </summary>
    </member>
    <member name="P:Nest.HasChildQueryDescriptor`1.Nest#IHasChildQuery#MaxChildren">
      <summary>
            Specify how many child documents are allowed to match.
            </summary>
    </member>
    <member name="M:Nest.HasChildQueryDescriptor`1.MaxChildren(System.Nullable{System.Int32})">
      <summary>
            Specify how many child documents are allowed to match.
            </summary>
    </member>
    <member name="P:Nest.IHasParentQuery.Score">
      <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent
            document.
            The default is false which ignores the score from the parent document.
            </summary>
    </member>
    <member name="P:Nest.HasParentQuery.Score">
      <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent
            document.
            The default is false which ignores the score from the parent document.
            </summary>
    </member>
    <member name="P:Nest.HasParentQueryDescriptor`1.Nest#IHasParentQuery#Score">
      <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent
            document.
            The default is false which ignores the score from the parent document.
            </summary>
    </member>
    <member name="M:Nest.HasParentQueryDescriptor`1.Score(System.Nullable{System.Boolean})">
      <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent
            document.
            The default is false which ignores the score from the parent document.
            </summary>
    </member>
    <member name="T:Nest.IParentIdQuery">
      <summary>
            The parent_id query can be used to find child documents which belong to a particular parent.
            </summary>
    </member>
    <member name="P:Nest.IParentIdQuery.Id">
      <summary>
            The id of the parent document to get children for.
            </summary>
    </member>
    <member name="P:Nest.IParentIdQuery.IgnoreUnmapped">
      <summary>
            When set to true this will ignore an unmapped type and will not match any documents for
            this query. This can be useful when querying multiple indexes which might have different mappings.
            </summary>
    </member>
    <member name="P:Nest.IParentIdQuery.Type">
      <summary>
            The child type. This must be a type with _parent field.
            </summary>
    </member>
    <member name="P:Nest.IMatchAllQuery.NormField">
      <summary>
            When indexing, a boost value can either be associated on the document level, or per field.
            The match all query does not take boosting into account by default. In order to take
            boosting into account, the norms_field needs to be provided in order to explicitly specify which
            field the boosting will be done on (Note, this will result in slower execution time).
            </summary>
    </member>
    <member name="P:Nest.MatchAllQuery.NormField">
      <summary>
            When indexing, a boost value can either be associated on the document level, or per field.
            The match all query does not take boosting into account by default. In order to take
            boosting into account, the norms_field needs to be provided in order to explicitly specify which
            field the boosting will be done on (Note, this will result in slower execution time).
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.MatchAllQueryDescriptor.NormField(System.String)">
      <summary>
            When indexing, a boost value can either be associated on the document level, or per field.
            The match all query does not take boosting into account by default. In order to take
            boosting into account, the norms_field needs to be provided in order to explicitly specify which
            field the boosting will be done on (Note, this will result in slower execution time).
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.RewriteMultiTerm">
      <summary>
            Multi term query rewrite method
            </summary>
    </member>
    <member name="F:Nest.RewriteMultiTerm.ConstantScore">
      <summary>
             A rewrite method that performs like constant_score_boolean when there are few matching terms and otherwise
             visits all matching terms in sequence and marks documents for that term. Matching documents are assigned a
             constant score equal to the query’s boost.
            </summary>
    </member>
    <member name="F:Nest.RewriteMultiTerm.ScoringBoolean">
      <summary>
            A rewrite method that first translates each term into a should clause in a boolean query, and keeps the scores
             as computed by the query. Note that typically such scores are meaningless to the user, and require non-trivial
             CPU to compute. This rewrite method will hit too many
             clauses failure if it exceeds the boolean query limit (defaults to 1024).
            </summary>
    </member>
    <member name="F:Nest.RewriteMultiTerm.ConstantScoreBoolean">
      <summary>
            Similar to scoring_boolean except scores are not computed. Instead, each matching document receives a constant
             score equal to the query’s boost. This rewrite method will hit too many clauses failure if it exceeds the
            boolean query limit (defaults to 1024).
            </summary>
    </member>
    <member name="F:Nest.RewriteMultiTerm.TopTermsN">
      <summary>
            A rewrite method that first translates each term into should clause in boolean query, and keeps the scores
            as computed by the query. This rewrite method only uses the top scoring terms so it will not overflow boolean
             max clause count. The N controls the size of the top scoring terms to use.
            </summary>
    </member>
    <member name="F:Nest.RewriteMultiTerm.TopTermsBoostN">
      <summary>
            A rewrite method that first translates each term into should clause in boolean query, but the scores are only
            computed as the boost. This rewrite method only uses the top scoring terms so it will not overflow the boolean
             max clause count. The N controls the size of the top scoring terms to use.
            </summary>
    </member>
    <member name="F:Nest.RewriteMultiTerm.TopTermsBlendedFreqsN">
      <summary>
            A rewrite method that first translates each term into should clause in boolean query, but all term queries compute
             scores as if they had the same frequency. In practice the frequency which is used is the maximum frequency of all
             matching terms. This rewrite method only uses the top scoring terms so it will not overflow boolean max clause count.
            The N controls the size of the top scoring terms to use.
            </summary>
    </member>
    <member name="T:Nest.MultiTermQueryRewrite">
      <summary>
            Controls how a multi term query such as a wildcard or prefix query, is rewritten.
            </summary>
    </member>
    <member name="P:Nest.MultiTermQueryRewrite.ConstantScore">
      <summary>
             A rewrite method that performs like constant_score_boolean when there are few matching terms and otherwise
             visits all matching terms in sequence and marks documents for that term. Matching documents are assigned a
             constant score equal to the query’s boost.
            </summary>
    </member>
    <member name="P:Nest.MultiTermQueryRewrite.ConstantScoreBoolean">
      <summary>
            Similar to scoring_boolean except scores are not computed. Instead, each matching document receives a constant
             score equal to the query’s boost. This rewrite method will hit too many clauses failure if it exceeds the
            boolean query limit (defaults to 1024).
            </summary>
    </member>
    <member name="P:Nest.MultiTermQueryRewrite.Rewrite">
      <summary>
            The type of multi term rewrite to perform
            </summary>
    </member>
    <member name="P:Nest.MultiTermQueryRewrite.ScoringBoolean">
      <summary>
            A rewrite method that first translates each term into a should clause in a boolean query, and keeps the scores
             as computed by the query. Note that typically such scores are meaningless to the user, and require non-trivial
             CPU to compute. This rewrite method will hit too many
             clauses failure if it exceeds the boolean query limit (defaults to 1024).
            </summary>
    </member>
    <member name="P:Nest.MultiTermQueryRewrite.Size">
      <summary>
            The size of the top scoring terms to use
            </summary>
    </member>
    <member name="M:Nest.MultiTermQueryRewrite.TopTerms(System.Int32)">
      <summary>
            A rewrite method that first translates each term into should clause in boolean query, and keeps the scores
            as computed by the query. This rewrite method only uses the top scoring terms so it will not overflow boolean
             max clause count.
            <param name="size" />
            controls the size of the top scoring terms to use.
            </summary>
    </member>
    <member name="M:Nest.MultiTermQueryRewrite.TopTermsBoost(System.Int32)">
      <summary>
            A rewrite method that first translates each term into should clause in boolean query, but the scores are only
            computed as the boost. This rewrite method only uses the top scoring terms so it will not overflow the boolean
             max clause count.
            <param name="size" />
            controls the size of the top scoring terms to use.
            </summary>
    </member>
    <member name="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)">
      <summary>
            A rewrite method that first translates each term into should clause in boolean query, but all term queries compute
             scores as if they had the same frequency. In practice the frequency which is used is the maximum frequency of all
             matching terms. This rewrite method only uses the top scoring terms so it will not overflow boolean max clause count.
            <param name="size" />
            controls the size of the top scoring terms to use.
            </summary>
    </member>
    <member name="M:Nest.Query`1.DistanceFeature(System.Func{Nest.DistanceFeatureQueryDescriptor{`0},Nest.IDistanceFeatureQuery})">
      <inheritdoc cref="T:Nest.IDistanceFeatureQuery" />
    </member>
    <member name="M:Nest.Query`1.Intervals(System.Func{Nest.IntervalsQueryDescriptor{`0},Nest.IIntervalsQuery})">
      <inheritdoc cref="T:Nest.IIntervalsQuery" />
    </member>
    <member name="M:Nest.Query`1.RankFeature(System.Func{Nest.RankFeatureQueryDescriptor{`0},Nest.IRankFeatureQuery})">
      <inheritdoc cref="T:Nest.IRankFeatureQuery" />
    </member>
    <member name="M:Nest.Query`1.ScriptScore(System.Func{Nest.ScriptScoreQueryDescriptor{`0},Nest.IScriptScoreQuery})">
      <inheritdoc cref="T:Nest.IScriptScoreQuery" />
    </member>
    <member name="T:Nest.IDistanceFeatureQuery">
      <summary>
            Boosts the relevance score of documents closer to a provided origin date or point. For example, you can use this query to give
            more weight to documents closer to a certain date or location.
            You can use the distance_feature query to find the nearest neighbors to a location. You can also use the query in a bool
            search’s should filter to add boosted relevance scores to the bool query’s scores.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.IDistanceFeatureQuery.Origin" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.IDistanceFeatureQuery.Pivot" -->
    <member name="T:Nest.DistanceFeatureQuery">
      <inheritdoc cref="T:Nest.IDistanceFeatureQuery" />
    </member>
    <member name="P:Nest.DistanceFeatureQuery.Origin">
      <inheritdoc />
    </member>
    <member name="P:Nest.DistanceFeatureQuery.Pivot">
      <inheritdoc />
    </member>
    <member name="M:Nest.DistanceFeatureQueryDescriptor`1.Origin(Nest.DateMath)">
      <inheritdoc cref="P:Nest.IDistanceFeatureQuery.Origin" />
    </member>
    <member name="M:Nest.DistanceFeatureQueryDescriptor`1.Origin(Nest.GeoCoordinate)">
      <inheritdoc cref="P:Nest.IDistanceFeatureQuery.Origin" />
    </member>
    <member name="M:Nest.DistanceFeatureQueryDescriptor`1.Pivot(Nest.Time)">
      <inheritdoc cref="P:Nest.IDistanceFeatureQuery.Pivot" />
    </member>
    <member name="M:Nest.DistanceFeatureQueryDescriptor`1.Pivot(Nest.Distance)">
      <inheritdoc cref="P:Nest.IDistanceFeatureQuery.Pivot" />
    </member>
    <member name="T:Nest.ILikeDocument">
      <summary>
            An indexed or artificial document with which to find likeness
            </summary>
    </member>
    <member name="P:Nest.ILikeDocument.Document">
      <summary>
            A document to find other documents like
            </summary>
    </member>
    <member name="P:Nest.ILikeDocument.Fields">
      <summary>
            The fields to use for likeness
            </summary>
    </member>
    <member name="P:Nest.ILikeDocument.Id">
      <summary>
            The id of an indexed document to find other documents like
            </summary>
    </member>
    <member name="P:Nest.ILikeDocument.Index">
      <summary>
            The index of an indexed document to find other documents like
            </summary>
    </member>
    <member name="P:Nest.ILikeDocument.PerFieldAnalyzer">
      <summary>
            A different analyzer than the one defined for the target fields
            </summary>
    </member>
    <member name="P:Nest.ILikeDocument.Routing">
      <summary>
            The routing value of an indexed document to find other documents like
            </summary>
    </member>
    <member name="T:Nest.LikeDocumentBase">
      <inheritdoc />
    </member>
    <member name="P:Nest.LikeDocumentBase.Document">
      <inheritdoc />
    </member>
    <member name="P:Nest.LikeDocumentBase.Fields">
      <inheritdoc />
    </member>
    <member name="P:Nest.LikeDocumentBase.Id">
      <inheritdoc />
    </member>
    <member name="P:Nest.LikeDocumentBase.Index">
      <inheritdoc />
    </member>
    <member name="P:Nest.LikeDocumentBase.PerFieldAnalyzer">
      <inheritdoc />
    </member>
    <member name="P:Nest.LikeDocumentBase.Routing">
      <inheritdoc />
    </member>
    <member name="T:Nest.LikeDocument`1">
      <inheritdoc cref="T:Nest.ILikeDocument" />
    </member>
    <member name="T:Nest.LikeDocumentDescriptor`1">
      <inheritdoc cref="T:Nest.ILikeDocument" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.Index(Nest.IndexName)">
      <summary>
            The index of an indexed document to find other documents like
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.Index" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.Id(Nest.Id)">
      <summary>
            The id of an indexed document to find other documents like
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.Id" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.Routing(Nest.Routing)">
      <summary>
            The routing value of an indexed document to find other documents like
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.Routing" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The fields to use for likeness
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.Fields" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The fields to use for likeness
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.Fields" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.Document(`0)">
      <summary>
            A document to find other documents like
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.Document" />
    </member>
    <member name="M:Nest.LikeDocumentDescriptor`1.PerFieldAnalyzer(System.Func{Nest.PerFieldAnalyzerDescriptor{`0},Nest.IPromise{Nest.IPerFieldAnalyzer}})">
      <summary>
            A different analyzer than the one defined for the target fields
            </summary>
      <inheritdoc cref="P:Nest.ILikeDocument.PerFieldAnalyzer" />
    </member>
    <member name="P:Nest.IMoreLikeThisQuery.PerFieldAnalyzer">
      <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
    </member>
    <member name="P:Nest.MoreLikeThisQuery.PerFieldAnalyzer">
      <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPercolateQuery">
      <summary>
            The percolate query can be used to match queries stored in an index
            </summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Document">
      <summary>
            The source of the document to percolate.
            </summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Documents">
      <summary>
            The source of the documents to percolate. Like <see cref="P:Nest.IPercolateQuery.Document" /> but allows
            multiple documents to be percolated.
            </summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Field">
      <summary>
            The name of the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Id">
      <summary>
            The id of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Index">
      <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Preference">
      <summary>
            Preference to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Routing">
      <summary>
            Routing to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
    </member>
    <member name="P:Nest.IPercolateQuery.Version">
      <summary>
            The expected version of the document to be fetched for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
    </member>
    <member name="T:Nest.PercolateQuery">
      <summary>
            The percolate query can be used to match queries stored in an index
            </summary>
    </member>
    <member name="P:Nest.PercolateQuery.Document">
      <summary>
            The source of the document to percolate.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Documents">
      <summary>
            The source of the documents to percolate. Like <see cref="P:Nest.IPercolateQuery.Document" /> but allows
            multiple documents to be percolated.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Field">
      <summary>
            The name of the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Id">
      <summary>
            The id of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Index">
      <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Preference">
      <summary>
            Preference to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Routing">
      <summary>
            Routing to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PercolateQuery.Version">
      <summary>
            The expected version of the document to be fetched for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PercolateQueryDescriptor`1">
      <summary>
            The percolate query can be used to match queries stored in an index
            </summary>
      <typeparam name="T">The document type that contains the percolated query</typeparam>
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Field(Nest.Field)">
      <summary>
            The name of the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
      <inheritdoc cref="P:Nest.IPercolateQuery.Field" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IPercolateQuery.Field" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)">
      <inheritdoc cref="P:Nest.IPercolateQuery.Document" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Documents``1(``0[])">
      <inheritdoc cref="P:Nest.IPercolateQuery.Documents" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Documents``1(System.Collections.Generic.IEnumerable{``0})">
      <inheritdoc cref="P:Nest.IPercolateQuery.Documents" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Id(System.String)">
      <summary>
            The id of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc cref="P:Nest.IPercolateQuery.Id" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Index(Nest.IndexName)">
      <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)" /></summary>
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Index``1">
      <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)" /></summary>
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Routing(Nest.Routing)">
      <summary>
            Routing to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc cref="P:Nest.IPercolateQuery.Routing" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Preference(System.String)">
      <summary>
            Preference to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc cref="P:Nest.IPercolateQuery.Preference" />
    </member>
    <member name="M:Nest.PercolateQueryDescriptor`1.Version(System.Nullable{System.Int64})">
      <summary>
            The expected version of the document to be fetched for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document" /></summary>
      <inheritdoc cref="P:Nest.IPercolateQuery.Version" />
    </member>
    <member name="T:Nest.IRankFeatureQuery">
      <summary>
             A query that only works on rank_feature fields and rank_features fields. Its goal is to boost the score of documents
             based on the values of numeric features. It is typically put in a should clause of a bool query so that its score
             is added to the score of the query.
            
             Compared to using function_score or other ways to modify the score, this query has the benefit of being able to efficiently
             skip non-competitive hits when track_total_hits is not set to true. Speedups may be spectacular.
             </summary>
    </member>
    <member name="P:Nest.IRankFeatureQuery.Function">
      <inheritdoc cref="T:Nest.IRankFeatureFunction" />
    </member>
    <member name="P:Nest.RankFeatureQuery.Function">
      <inheritdoc />
    </member>
    <member name="M:Nest.RankFeatureQueryDescriptor`1.Saturation(System.Func{Nest.RankFeatureSaturationFunctionDescriptor,Nest.IRankFeatureSaturationFunction})">
      <inheritdoc cref="T:Nest.IRankFeatureSaturationFunction" />
    </member>
    <member name="M:Nest.RankFeatureQueryDescriptor`1.Logarithm(System.Func{Nest.RankFeatureLogarithmFunctionDescriptor,Nest.IRankFeatureLogarithmFunction})">
      <inheritdoc cref="T:Nest.IRankFeatureLogarithmFunction" />
    </member>
    <member name="M:Nest.RankFeatureQueryDescriptor`1.Sigmoid(System.Func{Nest.RankFeatureSigmoidFunctionDescriptor,Nest.IRankFeatureSigmoidFunction})">
      <inheritdoc cref="T:Nest.IRankFeatureSigmoidFunction" />
    </member>
    <member name="T:Nest.IRankFeatureFunction">
      <summary>
            A function to boost scores in a rank_feature query, using the values of rank features.
            </summary>
    </member>
    <member name="T:Nest.IRankFeatureLogarithmFunction">
      <summary>
            Gives a score that is equal to log(scaling_factor + S) where S is the value of the rank feature and scaling_factor is a configurable
            scaling factor. Scores are unbounded.
            This function only supports rank features that have a positive score impact.
            </summary>
    </member>
    <member name="P:Nest.IRankFeatureLogarithmFunction.ScalingFactor">
      <summary>
            The scaling factor
            </summary>
    </member>
    <member name="T:Nest.RankFeatureLogarithmFunction">
      <inheritdoc />
    </member>
    <member name="P:Nest.RankFeatureLogarithmFunction.ScalingFactor">
      <summary>
            The scaling factor
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.RankFeatureLogarithmFunctionDescriptor">
      <inheritdoc cref="T:Nest.IRankFeatureLogarithmFunction" />
    </member>
    <member name="M:Nest.RankFeatureLogarithmFunctionDescriptor.ScalingFactor(System.Single)">
      <summary>
            The scaling factor
            </summary>
      <inheritdoc cref="P:Nest.IRankFeatureLogarithmFunction.ScalingFactor" />
    </member>
    <member name="T:Nest.IRankFeatureSaturationFunction">
      <summary>
            Gives a score that is equal to S / (S + pivot) where S is the value of the rank feature and pivot is a configurable pivot value
            so that the result will be less than 0.5 if S is less than pivot and greater than 0.5 otherwise. Scores are always is (0, 1).
            If the rank feature has a negative score impact then the function will be computed as pivot / (S + pivot), which decreases when S increases.
            </summary>
    </member>
    <member name="T:Nest.RankFeatureSaturationFunction">
      <inheritdoc />
    </member>
    <member name="T:Nest.RankFeatureSaturationFunctionDescriptor">
      <inheritdoc cref="T:Nest.IRankFeatureSaturationFunction" />
    </member>
    <member name="M:Nest.RankFeatureSaturationFunctionDescriptor.Pivot(System.Nullable{System.Single})">
      <inheritdoc cref="P:Nest.IRankFeatureSaturationFunction.Pivot" />
    </member>
    <member name="T:Nest.IRankFeatureSigmoidFunction">
      <summary>
             is an extension of saturation which adds a configurable exponent. Scores are computed as S^exp^ / (S^exp^ + pivot^exp^).
             Like for the saturation function, pivot is the value of S that gives a score of 0.5 and scores are in (0, 1).
            
             exponent must be positive, but is typically in [0.5, 1]. A good value should be computed via training. If you don’t have the opportunity
             to do so, we recommend that you stick to the saturation function instead.
             </summary>
    </member>
    <member name="P:Nest.IRankFeatureSigmoidFunction.Exponent">
      <summary>
            The exponent. Must be positive
            </summary>
    </member>
    <member name="T:Nest.RankFeatureSigmoidFunction">
      <inheritdoc cref="T:Nest.IRankFeatureSigmoidFunction" />
    </member>
    <member name="P:Nest.RankFeatureSigmoidFunction.Exponent">
      <summary>
            The exponent. Must be positive
            </summary>
      <inheritdoc cref="P:Nest.IRankFeatureSigmoidFunction.Exponent" />
    </member>
    <member name="T:Nest.RankFeatureSigmoidFunctionDescriptor">
      <inheritdoc cref="T:Nest.IRankFeatureSigmoidFunction" />
    </member>
    <member name="M:Nest.RankFeatureSigmoidFunctionDescriptor.Exponent(System.Single)">
      <summary>
            The exponent. Must be positive
            </summary>
      <inheritdoc cref="P:Nest.IRankFeatureSigmoidFunction.Exponent" />
    </member>
    <member name="M:Nest.RankFeatureSigmoidFunctionDescriptor.Pivot(System.Single)">
      <inheritdoc cref="P:Nest.IRankFeatureSigmoidFunction.Pivot" />
    </member>
    <member name="T:Nest.IScriptScoreQuery">
      <summary>
            A query allowing you to modify the score of documents that are retrieved by a query.
            This can be useful if, for example, a score function is computationally expensive and it is sufficient to
            compute the score on a filtered set of documents.
            </summary>
    </member>
    <member name="P:Nest.IScriptScoreQuery.Query">
      <summary>
            The query to execute
            </summary>
    </member>
    <member name="P:Nest.IScriptScoreQuery.Script">
      <summary>
            The script to execute
            </summary>
    </member>
    <member name="T:Nest.ScriptScoreQuery">
      <inheritdoc cref="T:Nest.IScriptScoreQuery" />
    </member>
    <member name="P:Nest.ScriptScoreQuery.Query">
      <summary>
            The query to execute
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ScriptScoreQuery.Script">
      <summary>
            The script to execute
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ScriptScoreQueryDescriptor`1">
      <inheritdoc cref="T:Nest.IScriptScoreQuery" />
    </member>
    <member name="M:Nest.ScriptScoreQueryDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <summary>
            The query to execute
            </summary>
      <inheritdoc cref="P:Nest.IScriptScoreQuery.Query" />
    </member>
    <member name="M:Nest.ScriptScoreQueryDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            The script to execute
            </summary>
      <inheritdoc cref="P:Nest.IScriptScoreQuery.Script" />
    </member>
    <member name="T:Nest.IScriptQuery">
      <summary>
            A query allowing to define a script to execute as a query
            </summary>
    </member>
    <member name="P:Nest.IScriptQuery.Script">
      <summary>
            The script to execute
            </summary>
    </member>
    <member name="T:Nest.ScriptQuery">
      <inheritdoc cref="T:Nest.IScriptQuery" />
    </member>
    <member name="P:Nest.ScriptQuery.Script">
      <summary>
            The script to execute
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ScriptQueryDescriptor`1">
      <inheritdoc cref="T:Nest.IScriptQuery" />
    </member>
    <member name="M:Nest.ScriptQueryDescriptor`1.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            The script to execute
            </summary>
      <inheritdoc cref="P:Nest.IScriptQuery.Script" />
    </member>
    <member name="T:Nest.ITermsSetQuery">
      <summary>
            Returns any documents that match with at least one or more of the provided terms.
            The terms are not analyzed and thus must match exactly.
            The number of terms that must match varies per document and is either controlled by a minimum should match
            field or computed per document in a minimum should match script.
            </summary>
    </member>
    <member name="P:Nest.ITermsSetQuery.MinimumShouldMatchField">
      <summary>
            A field containing the number of required terms that must match
            </summary>
    </member>
    <member name="P:Nest.ITermsSetQuery.MinimumShouldMatchScript">
      <summary>
            A script to control how many terms are required to match
            </summary>
    </member>
    <member name="P:Nest.ITermsSetQuery.Terms">
      <summary>
            The required terms to match
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:Nest.TermsSetQuery" -->
    <member name="P:Nest.TermsSetQuery.MinimumShouldMatchField">
      <summary>
            A field containing the number of required terms that must match
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermsSetQuery.MinimumShouldMatchScript">
      <summary>
            A script to control how many terms are required to match
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermsSetQuery.Terms">
      <summary>
            The required terms to match
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.TermsSetQueryDescriptor`1">
      <summary>
            Returns any documents that match with at least one or more of the provided terms.
            The terms are not analyzed and thus must match exactly.
            The number of terms that must match varies per document and is either controlled by a minimum should match
            field or computed per document in a minimum should match script.
            </summary>
      <typeparam name="T">The type that represents the expected hit type</typeparam>
    </member>
    <member name="M:Nest.TermsSetQueryDescriptor`1.Terms``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
            The required terms to match
            </summary>
    </member>
    <member name="M:Nest.TermsSetQueryDescriptor`1.Terms``1(``0[])">
      <summary>
            The required terms to match
            </summary>
    </member>
    <member name="M:Nest.TermsSetQueryDescriptor`1.MinimumShouldMatchField(Nest.Field)">
      <summary>
            A field containing the number of required terms that must match
            </summary>
    </member>
    <member name="M:Nest.TermsSetQueryDescriptor`1.MinimumShouldMatchField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            A field containing the number of required terms that must match
            </summary>
    </member>
    <member name="M:Nest.TermsSetQueryDescriptor`1.MinimumShouldMatchScript(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
      <summary>
            A script to control how many terms are required to match
            </summary>
    </member>
    <member name="T:Nest.TermsQueryDescriptor`1">
      <summary>
            A query that match on any (configurable) of the provided terms.
            This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
      <typeparam name="T">The type that represents the expected hit type</typeparam>
    </member>
    <member name="P:Nest.IQueryVisitor.Depth">
      <summary>
            The current depth of the node being visited
            </summary>
    </member>
    <member name="P:Nest.IQueryVisitor.Scope">
      <summary>
            Hints the relation with the parent, i,e queries inside a Must clause will have VisitorScope.Must set.
            </summary>
    </member>
    <member name="M:Nest.IQueryVisitor.Visit(Nest.IQueryContainer)">
      <summary>
            Visit the query container just before we dispatch into the query it holds
            </summary>
      <param name="queryDescriptor">
      </param>
    </member>
    <member name="M:Nest.IQueryVisitor.Visit(Nest.IQuery)">
      <summary>
            Visit every query item just before they are visited by their specialized Visit() implementation
            </summary>
      <param name="query">The IQuery object that will be visited</param>
    </member>
    <member name="T:Nest.IDeleteAutoFollowPatternRequest">
      <summary> Deletes a configured collection of auto-follow patterns. </summary>
    </member>
    <member name="T:Nest.DeleteAutoFollowPatternRequest">
      <summary>Request for DeleteAutoFollowPattern <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html</para></summary>
      <inheritdoc cref="T:Nest.IDeleteAutoFollowPatternRequest" />
    </member>
    <member name="M:Nest.DeleteAutoFollowPatternRequest.#ctor(Nest.Name)">
      <summary>/_ccr/auto_follow/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteAutoFollowPatternRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ICreateFollowIndexRequest">
      <summary>
            Creates a new follower index that is configured to follow the referenced leader index.
            When this API returns, the follower index exists, and cross-cluster replication starts replicating operations
            from the leader index to the follower index
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.ICreateFollowIndexRequest.RemoteCluster" -->
    <member name="P:Nest.ICreateFollowIndexRequest.LeaderIndex">
      <summary> the name of the index in the leader cluster to follow </summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxReadRequestOperationCount">
      <summary>the maximum number of operations to pull per read from the remote cluster </summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxOutstandingReadRequests">
      <summary>the maximum number of outstanding reads requests from the remote cluster</summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxRequestSize">
      <summary>the maximum size in bytes of per read of a batch of operations pulled from the remote cluster</summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestOperationCount">
      <summary>the maximum number of operations per bulk write request executed on the follower</summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestSize">
      <summary>the maximum total bytes of operations per bulk write request executed on the follower</summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxOutstandingWriteRequests">
      <summary>the maximum number of outstanding write requests on the follower</summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferCount">
      <summary>
            the maximum number of operations that can be queued for writing; when this limit is reached, reads from
            the remote cluster will be deferred until the number of queued operations goes below the limit
            </summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferSize">
      <summary>
            the maximum total bytes of operations that can be queued for writing; when this limit is reached, reads
            from the remote cluster will be deferred until the total bytes of queued operations goes below the limit
            </summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.MaxRetryDelay">
      <summary>
            the maximum time to wait before retrying an operation that failed exceptionally; an exponential backoff
            strategy is employed when retrying
            </summary>
    </member>
    <member name="P:Nest.ICreateFollowIndexRequest.ReadPollTimeout">
      <summary>
            the maximum time to wait for new operations on the remote cluster when the follower index is synchronized with the
            leader index; when the timeout has elapsed, the poll for operations will return to the follower so that it can
            update some statistics, and then the follower will immediately attempt to read from the leader again
            </summary>
    </member>
    <member name="T:Nest.CreateFollowIndexRequest">
      <summary>Request for CreateFollowIndex <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html</para></summary>
      <inheritdoc cref="T:Nest.ICreateFollowIndexRequest" />
    </member>
    <member name="M:Nest.CreateFollowIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/follow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateFollowIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.WaitForActiveShards">
      <summary>
             Sets the number of shard copies that must be active before returning. Defaults to 0. Set to `all` for all shard copies, otherwise set to
             any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)
            </summary>
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.RemoteCluster">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.RemoteCluster" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.LeaderIndex">
      <summary> the name of the index in the leader cluster to follow </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.LeaderIndex" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxReadRequestOperationCount">
      <summary>the maximum number of operations to pull per read from the remote cluster </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxReadRequestOperationCount" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxOutstandingReadRequests">
      <summary>the maximum number of outstanding reads requests from the remote cluster</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingReadRequests" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxRequestSize">
      <summary>the maximum size in bytes of per read of a batch of operations pulled from the remote cluster</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRequestSize" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxWriteRequestOperationCount">
      <summary>the maximum number of operations per bulk write request executed on the follower</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestOperationCount" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxWriteRequestSize">
      <summary>the maximum total bytes of operations per bulk write request executed on the follower</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestSize" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxOutstandingWriteRequests">
      <summary>the maximum number of outstanding write requests on the follower</summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingWriteRequests" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxWriteBufferCount">
      <summary>
            the maximum number of operations that can be queued for writing; when this limit is reached, reads from
            the remote cluster will be deferred until the number of queued operations goes below the limit
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferCount" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxWriteBufferSize">
      <summary>
            the maximum total bytes of operations that can be queued for writing; when this limit is reached, reads
            from the remote cluster will be deferred until the total bytes of queued operations goes below the limit
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferSize" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.MaxRetryDelay">
      <summary>
            the maximum time to wait before retrying an operation that failed exceptionally; an exponential backoff
            strategy is employed when retrying
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRetryDelay" />
    </member>
    <member name="P:Nest.CreateFollowIndexRequest.ReadPollTimeout">
      <summary>
            the maximum time to wait for new operations on the remote cluster when the follower index is synchronized with the
            leader index; when the timeout has elapsed, the poll for operations will return to the follower so that it can
            update some statistics, and then the follower will immediately attempt to read from the leader again
            </summary>
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.ReadPollTimeout" />
    </member>
    <member name="T:Nest.IFollowInfoRequest">
      <summary>
            Retrieves information about all follower indices.
            </summary>
    </member>
    <member name="T:Nest.FollowInfoRequest">
      <summary>Request for FollowInfo <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html</para></summary>
      <inheritdoc cref="T:Nest.IFollowInfoRequest" />
    </member>
    <member name="M:Nest.FollowInfoRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_ccr/info</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.FollowInfoRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.IFollowIndexStatsRequest">
      <summary>
            Gets follower stats. Will return shard-level stats about the following tasks associated with each shard for the
            specified indices.
            </summary>
    </member>
    <member name="T:Nest.FollowIndexStatsRequest">
      <summary>Request for FollowIndexStats <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html</para></summary>
      <inheritdoc cref="T:Nest.IFollowIndexStatsRequest" />
    </member>
    <member name="M:Nest.FollowIndexStatsRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_ccr/stats</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.FollowIndexStatsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.IForgetFollowerIndexRequest.FollowerCluster">
      <summary>
            The name of the cluster containing the follower index.
            </summary>
    </member>
    <member name="P:Nest.IForgetFollowerIndexRequest.FollowerIndex">
      <summary>
            The name of the follower index.
            </summary>
    </member>
    <member name="P:Nest.IForgetFollowerIndexRequest.FollowerIndexUUID">
      <summary>
            The UUID of the follower index.
            </summary>
    </member>
    <member name="P:Nest.IForgetFollowerIndexRequest.LeaderRemoteCluster">
      <summary>
            The alias (from the perspective of the cluster containing the follower index) of the remote cluster containing the leader index.
            </summary>
    </member>
    <member name="T:Nest.ForgetFollowerIndexRequest">
      <summary>Request for ForgetFollowerIndex <para>http://www.elastic.co/guide/en/elasticsearch/reference/current</para></summary>
      <inheritdoc cref="T:Nest.IForgetFollowerIndexRequest" />
    </member>
    <member name="M:Nest.ForgetFollowerIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/forget_follower</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.ForgetFollowerIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ForgetFollowerIndexRequest.FollowerCluster">
      <summary>
            The name of the cluster containing the follower index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.FollowerCluster" />
    </member>
    <member name="P:Nest.ForgetFollowerIndexRequest.FollowerIndex">
      <summary>
            The name of the follower index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.FollowerIndex" />
    </member>
    <member name="P:Nest.ForgetFollowerIndexRequest.FollowerIndexUUID">
      <summary>
            The UUID of the follower index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.FollowerIndexUUID" />
    </member>
    <member name="P:Nest.ForgetFollowerIndexRequest.LeaderRemoteCluster">
      <summary>
            The alias (from the perspective of the cluster containing the follower index) of the remote cluster containing the leader index.
            </summary>
      <inheritdoc cref="P:Nest.IForgetFollowerIndexRequest.LeaderRemoteCluster" />
    </member>
    <member name="T:Nest.IGetAutoFollowPatternRequest">
      <summary> Gets configured auto-follow patterns. This API will return the specified auto-follow pattern collection. </summary>
    </member>
    <member name="T:Nest.GetAutoFollowPatternRequest">
      <summary>Request for GetAutoFollowPattern <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html</para></summary>
      <inheritdoc cref="T:Nest.IGetAutoFollowPatternRequest" />
    </member>
    <member name="M:Nest.GetAutoFollowPatternRequest.#ctor">
      <summary>/_ccr/auto_follow</summary>
    </member>
    <member name="M:Nest.GetAutoFollowPatternRequest.#ctor(Nest.Name)">
      <summary>/_ccr/auto_follow/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="T:Nest.IPauseFollowIndexRequest">
      <summary>
            Pauses a follower index. When this API returns, the follower index will not fetch any additional operations from
            the leader index. You can resume following with the resume follower API. Pausing and resuming a follower index can be
            used to change the configuration of the following task.
            </summary>
    </member>
    <member name="T:Nest.PauseFollowIndexRequest">
      <summary>Request for PauseFollowIndex <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html</para></summary>
      <inheritdoc cref="T:Nest.IPauseFollowIndexRequest" />
    </member>
    <member name="M:Nest.PauseFollowIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/pause_follow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.PauseFollowIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ICreateAutoFollowPatternRequest">
      <summary>
            Creates a new named collection of auto-follow patterns against the remote cluster specified
            in the request body. Newly created indices on the remote cluster matching any of the specified patterns
            will be automatically configured as follower indices.
            </summary>
    </member>
    <member name="T:Nest.CreateAutoFollowPatternRequest">
      <summary>Request for CreateAutoFollowPattern <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html</para></summary>
      <inheritdoc cref="T:Nest.ICreateAutoFollowPatternRequest" />
    </member>
    <member name="M:Nest.CreateAutoFollowPatternRequest.#ctor(Nest.Name)">
      <summary>/_ccr/auto_follow/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateAutoFollowPatternRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.RemoteCluster">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.RemoteCluster" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.LeaderIndexPatterns">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.LeaderIndexPatterns" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.FollowIndexPattern">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.FollowIndexPattern" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxReadRequestOperationCount">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxReadRequestOperationCount" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxOutstandingReadRequests">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxOutstandingReadRequests" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxReadRequestSize">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxReadRequestSize" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxWriteRequestOperationCount">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteRequestOperationCount" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxWriteRequestSize">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteRequestSize" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxOutstandingWriteRequests">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxOutstandingWriteRequests" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxWriteBufferCount">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteBufferCount" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxWriteBufferSize">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteBufferSize" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxRetryDelay">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxRetryDelay" />
    </member>
    <member name="P:Nest.CreateAutoFollowPatternRequest.MaxPollTimeout">
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxPollTimeout" />
    </member>
    <member name="T:Nest.IResumeFollowIndexRequest">
      <summary>
            Resumes a follower index that has been paused either explicitly with the pause follower API or
            implicitly due to execution that can not be retried due to failure during following. When this API returns,
            the follower index will resume fetching operations from the leader index.
            </summary>
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxReadRequestOperationCount">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxReadRequestOperationCount" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxOutstandingReadRequests">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingReadRequests" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxRequestSize">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRequestSize" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxWriteRequestOperationCount">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestOperationCount" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxWriteRequestSize">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestSize" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxOutstandingWriteRequests">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingWriteRequests" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxWriteBufferCount">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferCount" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxWriteBufferSize">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferSize" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.MaxRetryDelay">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRetryDelay" />
    </member>
    <member name="P:Nest.IResumeFollowIndexRequest.ReadPollTimeout">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.ReadPollTimeout" />
    </member>
    <member name="T:Nest.ResumeFollowIndexRequest">
      <summary>Request for ResumeFollowIndex <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html</para></summary>
      <inheritdoc cref="T:Nest.IResumeFollowIndexRequest" />
    </member>
    <member name="M:Nest.ResumeFollowIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/resume_follow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.ResumeFollowIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxReadRequestOperationCount">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxReadRequestOperationCount" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxOutstandingReadRequests">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingReadRequests" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxRequestSize">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRequestSize" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxWriteRequestOperationCount">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestOperationCount" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxWriteRequestSize">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteRequestSize" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxOutstandingWriteRequests">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxOutstandingWriteRequests" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxWriteBufferCount">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferCount" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxWriteBufferSize">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxWriteBufferSize" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.MaxRetryDelay">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.MaxRetryDelay" />
    </member>
    <member name="P:Nest.ResumeFollowIndexRequest.ReadPollTimeout">
      <inheritdoc cref="P:Nest.ICreateFollowIndexRequest.ReadPollTimeout" />
    </member>
    <member name="T:Nest.ICcrStatsRequest">
      <summary>
            Gets cross-cluster replication stats. Returns all stats related to cross-cluster replication.
            In particular, this API returns stats about auto-following, and returns the same shard-level stats as in the get
            follower stats API. <see cref="M:Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace.FollowIndexStats(Nest.Indices,System.Func{Nest.FollowIndexStatsDescriptor,Nest.IFollowIndexStatsRequest})" /></summary>
    </member>
    <member name="T:Nest.CcrStatsRequest">
      <summary>Request for Stats <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html</para></summary>
      <inheritdoc cref="T:Nest.ICcrStatsRequest" />
    </member>
    <member name="T:Nest.IUnfollowIndexRequest">
      <summary>
            Stops the following task associated with a follower index and removes index metadata and settings associated with
            cross-cluster replication. This enables the index to treated as a regular index. The follower index must be paused and closed
            before invoking the unfollow API.
            </summary>
    </member>
    <member name="T:Nest.UnfollowIndexRequest">
      <summary>Request for UnfollowIndex <para>http://www.elastic.co/guide/en/elasticsearch/reference/current</para></summary>
      <inheritdoc cref="T:Nest.IUnfollowIndexRequest" />
    </member>
    <member name="M:Nest.UnfollowIndexRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ccr/unfollow</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.UnfollowIndexRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.GraphExploreRequest">
      <summary>Request for Explore <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html</para></summary>
    </member>
    <member name="M:Nest.GraphExploreRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_graph/explore</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GraphExploreRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.GraphExploreRequest.Routing" -->
    <member name="P:Nest.GraphExploreRequest.Timeout">
      <summary>Explicit operation timeout</summary>
    </member>
    <member name="M:Nest.GraphExploreRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_graph/explore</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GraphExploreRequest`1.#ctor">
      <summary>/{index}/_graph/explore</summary>
    </member>
    <member name="T:Nest.DeleteLifecycleRequest">
      <summary>Request for DeleteLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.DeleteLifecycleRequest.#ctor(Nest.Id)">
      <summary>/_ilm/policy/{policy_id}</summary>
      <param name="policyId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteLifecycleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ExplainLifecycleRequest">
      <summary>Request for ExplainLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.ExplainLifecycleRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ilm/explain</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainLifecycleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.GetLifecycleRequest">
      <summary>Request for GetLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.GetLifecycleRequest.#ctor(Nest.Id)">
      <summary>/_ilm/policy/{policy_id}</summary>
      <param name="policyId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetLifecycleRequest.#ctor">
      <summary>/_ilm/policy</summary>
    </member>
    <member name="T:Nest.GetIlmStatusRequest">
      <summary>Request for GetStatus <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html</para></summary>
    </member>
    <member name="T:Nest.MoveToStepRequest">
      <summary>Request for MoveToStep <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html</para></summary>
    </member>
    <member name="M:Nest.MoveToStepRequest.#ctor(Nest.IndexName)">
      <summary>/_ilm/move/{index}</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.MoveToStepRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.PutLifecycleRequest">
      <summary>Request for PutLifecycle <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html</para></summary>
    </member>
    <member name="M:Nest.PutLifecycleRequest.#ctor(Nest.Id)">
      <summary>/_ilm/policy/{policy_id}</summary>
      <param name="policyId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutLifecycleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.RemovePolicyRequest">
      <summary>Request for RemovePolicy <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html</para></summary>
    </member>
    <member name="M:Nest.RemovePolicyRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ilm/remove</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.RemovePolicyRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.RetryIlmRequest">
      <summary>Request for Retry <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html</para></summary>
    </member>
    <member name="M:Nest.RetryIlmRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_ilm/retry</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.RetryIlmRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.StartIlmRequest">
      <summary>Request for Start <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html</para></summary>
    </member>
    <member name="T:Nest.StopIlmRequest">
      <summary>Request for Stop <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html</para></summary>
    </member>
    <member name="T:Nest.ValidateQueryRequest">
      <summary>Request for ValidateQuery <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html</para></summary>
    </member>
    <member name="M:Nest.ValidateQueryRequest.#ctor">
      <summary>/_validate/query</summary>
    </member>
    <member name="M:Nest.ValidateQueryRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_validate/query</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.ValidateQueryRequest.AllShards">
      <summary>Execute validation on all shards instead of one random shard per index</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.AnalyzeWildcard">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.Analyzer">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.DefaultOperator">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.Df">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.Explain">
      <summary>Return detailed information about the error</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.Lenient">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.QueryOnQueryString">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <member name="P:Nest.ValidateQueryRequest.Rewrite">
      <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
    </member>
    <member name="M:Nest.ValidateQueryRequest`1.#ctor">
      <summary>/{index}/_validate/query</summary>
    </member>
    <member name="M:Nest.ValidateQueryRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_validate/query</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="T:Nest.DeleteLicenseRequest">
      <summary>Request for Delete <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html</para></summary>
    </member>
    <member name="T:Nest.GetLicenseRequest">
      <summary>Request for Get <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html</para></summary>
    </member>
    <member name="P:Nest.GetLicenseRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="T:Nest.IGetBasicLicenseStatusRequest">
      <summary>This API enables you to check the status of your basic license</summary>
    </member>
    <member name="T:Nest.GetBasicLicenseStatusRequest">
      <summary>Request for GetBasicStatus <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html</para></summary>
      <inheritdoc cref="T:Nest.IGetBasicLicenseStatusRequest" />
    </member>
    <member name="T:Nest.GetTrialLicenseStatusRequest">
      <summary>Request for GetTrialStatus <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html</para></summary>
    </member>
    <member name="T:Nest.PostLicenseRequest">
      <summary>Request for Post <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html</para></summary>
    </member>
    <member name="P:Nest.PostLicenseRequest.Acknowledge">
      <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
    </member>
    <member name="T:Nest.IStartBasicLicenseRequest">
      <summary>
            The start basic API enables you to initiate an indefinite basic license, which gives access to all
            the basic features. If the basic license does not support all of the features that are
            available with your current license, however, you are notified in the response. You must then
            re-submit the API request with the acknowledge parameter set to true.
            </summary>
    </member>
    <member name="T:Nest.StartBasicLicenseRequest">
      <summary>Request for StartBasic <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html</para></summary>
      <inheritdoc cref="T:Nest.IStartBasicLicenseRequest" />
    </member>
    <member name="P:Nest.StartBasicLicenseRequest.Acknowledge">
      <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
    </member>
    <member name="T:Nest.StartTrialLicenseRequest">
      <summary>Request for StartTrial <para>https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html</para></summary>
    </member>
    <member name="P:Nest.StartTrialLicenseRequest.Acknowledge">
      <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
    </member>
    <member name="P:Nest.StartTrialLicenseRequest.TypeQueryString">
      <summary>The type of trial license to generate (default: "trial")</summary>
    </member>
    <member name="T:Nest.CloseJobRequest">
      <summary>Request for CloseJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html</para></summary>
    </member>
    <member name="M:Nest.CloseJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_close</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.CloseJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.CloseJobRequest.AllowNoJobs">
      <summary>Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)</summary>
    </member>
    <member name="P:Nest.CloseJobRequest.Force">
      <summary>True if the job should be forcefully closed</summary>
    </member>
    <member name="P:Nest.CloseJobRequest.Timeout">
      <summary>Controls the time to wait until a job has closed. Default to 30 minutes</summary>
    </member>
    <member name="T:Nest.DeleteCalendarRequest">
      <summary>Request for DeleteCalendar</summary>
    </member>
    <member name="M:Nest.DeleteCalendarRequest.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteCalendarRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteCalendarEventRequest">
      <summary>Request for DeleteCalendarEvent</summary>
    </member>
    <member name="M:Nest.DeleteCalendarEventRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/events/{event_id}</summary>
      <param name="calendarId">this parameter is required</param>
      <param name="eventId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteCalendarEventRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteCalendarJobRequest">
      <summary>Request for DeleteCalendarJob</summary>
    </member>
    <member name="M:Nest.DeleteCalendarJobRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/jobs/{job_id}</summary>
      <param name="calendarId">this parameter is required</param>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteCalendarJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteDatafeedRequest">
      <summary>Request for DeleteDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html</para></summary>
    </member>
    <member name="M:Nest.DeleteDatafeedRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteDatafeedRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteDatafeedRequest.Force">
      <summary>True if the datafeed should be forcefully deleted</summary>
    </member>
    <member name="T:Nest.DeleteExpiredDataRequest">
      <summary>Request for DeleteExpiredData</summary>
    </member>
    <member name="T:Nest.IDeleteFilterRequest">
      <summary>
            Deletes a machine learning filter
            </summary>
    </member>
    <member name="T:Nest.DeleteFilterRequest">
      <summary>Request for DeleteFilter</summary>
      <inheritdoc cref="T:Nest.IDeleteFilterRequest" />
    </member>
    <member name="M:Nest.DeleteFilterRequest.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}</summary>
      <param name="filterId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteFilterRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteForecastRequest">
      <summary>Request for DeleteForecast <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html</para></summary>
    </member>
    <member name="M:Nest.DeleteForecastRequest.#ctor(Nest.Id,Nest.Ids)">
      <summary>/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="forecastId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteForecastRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteForecastRequest.AllowNoForecasts">
      <summary>Whether to ignore if `_all` matches no forecasts</summary>
    </member>
    <member name="P:Nest.DeleteForecastRequest.Timeout">
      <summary>Controls the time to wait until the forecast(s) are deleted. Default to 30 seconds</summary>
    </member>
    <member name="T:Nest.DeleteJobRequest">
      <summary>Request for DeleteJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html</para></summary>
    </member>
    <member name="M:Nest.DeleteJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteJobRequest.Force">
      <summary>True if the job should be forcefully deleted</summary>
    </member>
    <member name="P:Nest.DeleteJobRequest.WaitForCompletion">
      <summary>Should this request wait until the operation has completed before returning</summary>
    </member>
    <member name="T:Nest.DeleteModelSnapshotRequest">
      <summary>Request for DeleteModelSnapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html</para></summary>
    </member>
    <member name="M:Nest.DeleteModelSnapshotRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteModelSnapshotRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.IFlushJobRequest.AdvanceTime">
      <summary>
            Specifies that no data prior to this date is expected.
            </summary>
    </member>
    <member name="P:Nest.IFlushJobRequest.CalculateInterim">
      <summary>
            Calculates the interim results for the most recent bucket or all buckets within the latency period.
            </summary>
    </member>
    <member name="P:Nest.IFlushJobRequest.End">
      <summary>
             When used in conjunction with <see cref="P:Nest.IFlushJobRequest.CalculateInterim" />, specifies the range of buckets on
            which to calculate interim results.
            </summary>
    </member>
    <member name="P:Nest.IFlushJobRequest.Start">
      <summary>
            When used in conjunction with <see cref="P:Nest.IFlushJobRequest.CalculateInterim" />, specifies the range of buckets
            on which to calculate interim results.
            </summary>
    </member>
    <member name="T:Nest.FlushJobRequest">
      <summary>Request for FlushJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html</para></summary>
    </member>
    <member name="M:Nest.FlushJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_flush</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.FlushJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.FlushJobRequest.SkipTime">
      <summary>Skips time to the given value without generating results or updating the model for the skipped interval</summary>
    </member>
    <member name="P:Nest.FlushJobRequest.AdvanceTime">
      <summary>
            Specifies that no data prior to this date is expected.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlushJobRequest.CalculateInterim">
      <summary>
            Calculates the interim results for the most recent bucket or all buckets within the latency period.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlushJobRequest.End">
      <summary>
             When used in conjunction with <see cref="P:Nest.IFlushJobRequest.CalculateInterim" />, specifies the range of buckets on
            which to calculate interim results.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.FlushJobRequest.Start">
      <summary>
            When used in conjunction with <see cref="P:Nest.IFlushJobRequest.CalculateInterim" />, specifies the range of buckets
            on which to calculate interim results.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IForecastJobRequest">
      <summary>
            Uses historical behavior to predict the future behavior of a time series.
            </summary>
    </member>
    <member name="P:Nest.IForecastJobRequest.Duration">
      <summary>
            A period of time that indicates how far into the future to forecast. Defaults to 1 day.
            </summary>
    </member>
    <member name="P:Nest.IForecastJobRequest.ExpiresIn">
      <summary>
            The period of time that forecast results are retained.
            After a forecast expires, the results are deleted. Defaults to 14 days.
            </summary>
    </member>
    <member name="T:Nest.ForecastJobRequest">
      <summary>Request for ForecastJob</summary>
      <inheritdoc cref="T:Nest.IForecastJobRequest" />
    </member>
    <member name="M:Nest.ForecastJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_forecast</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.ForecastJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ForecastJobRequest.Duration">
      <summary>
            A period of time that indicates how far into the future to forecast. Defaults to 1 day.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ForecastJobRequest.ExpiresIn">
      <summary>
            The period of time that forecast results are retained.
            After a forecast expires, the results are deleted. Defaults to 14 days.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IGetBucketsRequest">
      <summary>
            Retrieve job results for one or more buckets.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.AnomalyScore">
      <summary>
            Returns buckets with anomaly scores higher than this value.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.Descending">
      <summary>
            If true, the buckets are sorted in descending order.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.End">
      <summary>
            Returns buckets with timestamps earlier than this time.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.Expand">
      <summary>
            If true, the output includes anomaly records.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.Page">
      <summary>
            Specifies pagination for the buckets
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.Sort">
      <summary>
            Specifies the sort field for the requested buckets. By default, the buckets are sorted by the timestamp field.
            </summary>
    </member>
    <member name="P:Nest.IGetBucketsRequest.Start">
      <summary>
            Returns buckets with timestamps after this time.
            </summary>
    </member>
    <member name="T:Nest.GetBucketsRequest">
      <summary>Request for GetBuckets <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetBucketsRequest.#ctor(Nest.Id,Nest.Timestamp)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="timestamp">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetBucketsRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/buckets</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetBucketsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetBucketsRequest.AnomalyScore">
      <summary>
            Returns buckets with anomaly scores higher than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.Descending">
      <summary>
            If true, the buckets are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.End">
      <summary>
            Returns buckets with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.Expand">
      <summary>
            If true, the output includes anomaly records.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.Page">
      <summary>
            Specifies pagination for the buckets
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.Sort">
      <summary>
            Specifies the sort field for the requested buckets. By default, the buckets are sorted by the timestamp field.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetBucketsRequest.Start">
      <summary>
            Returns buckets with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IGetCalendarEventsRequest">
      <summary>
            Retrieves configuration information for calendars.
            </summary>
    </member>
    <member name="P:Nest.IGetCalendarEventsRequest.From">
      <summary>
            	Skips a number of events
            </summary>
    </member>
    <member name="P:Nest.IGetCalendarEventsRequest.Size">
      <summary>
                Specifies a max number of events to get
            </summary>
    </member>
    <member name="T:Nest.GetCalendarEventsRequest">
      <summary>Request for GetCalendarEvents</summary>
    </member>
    <member name="M:Nest.GetCalendarEventsRequest.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/events</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetCalendarEventsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetCalendarEventsRequest.End">
      <summary>Get events before this time</summary>
    </member>
    <member name="P:Nest.GetCalendarEventsRequest.JobId">
      <summary>Get events for the job. When this option is used calendar_id must be '_all'</summary>
    </member>
    <member name="P:Nest.GetCalendarEventsRequest.Start">
      <summary>Get events after this time</summary>
    </member>
    <member name="P:Nest.GetCalendarEventsRequest.From">
      <summary>
            	Skips a number of events
            </summary>
      <inheritdoc cref="P:Nest.IGetCalendarEventsRequest.From" />
    </member>
    <member name="P:Nest.GetCalendarEventsRequest.Size">
      <summary>
                Specifies a max number of events to get
            </summary>
      <inheritdoc cref="P:Nest.IGetCalendarEventsRequest.Size" />
    </member>
    <member name="T:Nest.IGetCalendarsRequest">
      <summary>
            Retrieves configuration information for calendars.
            </summary>
    </member>
    <member name="P:Nest.IGetCalendarsRequest.Page">
      <summary>
            Specifies pagination for the calendars
            </summary>
    </member>
    <member name="T:Nest.GetCalendarsRequest">
      <summary>Request for GetCalendars</summary>
    </member>
    <member name="M:Nest.GetCalendarsRequest.#ctor">
      <summary>/_ml/calendars</summary>
    </member>
    <member name="M:Nest.GetCalendarsRequest.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}</summary>
      <param name="calendarId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetCalendarsRequest.Page">
      <summary>
            Specifies pagination for the calendars
            </summary>
      <inheritdoc cref="P:Nest.IGetCalendarsRequest.Page" />
    </member>
    <member name="T:Nest.IGetCategoriesRequest">
      <summary>
            Retrieve job results for one or more categories.
            </summary>
    </member>
    <member name="P:Nest.IGetCategoriesRequest.Page">
      <summary>
            Specifies pagination for the categories
            </summary>
    </member>
    <member name="T:Nest.GetCategoriesRequest">
      <summary>Request for GetCategories <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetCategoriesRequest.#ctor(Nest.Id,Nest.LongId)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="categoryId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetCategoriesRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/categories/</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetCategoriesRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetCategoriesRequest.Page">
      <summary>
            Specifies pagination for the categories
            </summary>
      <inheritdoc cref="P:Nest.IGetCategoriesRequest.Page" />
    </member>
    <member name="T:Nest.IGetDatafeedStatsRequest">
      <summary>
            Retrieve configuration information for machine learning datafeeds.
            </summary>
    </member>
    <member name="T:Nest.GetDatafeedStatsRequest">
      <summary>Request for GetDatafeedStats <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetDatafeedStatsRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_stats</summary>
      <param name="datafeedId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetDatafeedStatsRequest.#ctor">
      <summary>/_ml/datafeeds/_stats</summary>
    </member>
    <member name="P:Nest.GetDatafeedStatsRequest.AllowNoDatafeeds">
      <summary>Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)</summary>
    </member>
    <member name="T:Nest.IGetDatafeedsRequest">
      <summary>
            Retrieve configuration information for machine learning datafeeds.
            </summary>
    </member>
    <member name="T:Nest.GetDatafeedsRequest">
      <summary>Request for GetDatafeeds <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetDatafeedsRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}</summary>
      <param name="datafeedId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetDatafeedsRequest.#ctor">
      <summary>/_ml/datafeeds</summary>
    </member>
    <member name="P:Nest.GetDatafeedsRequest.AllowNoDatafeeds">
      <summary>Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)</summary>
    </member>
    <member name="T:Nest.IGetFiltersRequest">
      <summary>
            Retrieves configuration information for calendars.
            </summary>
    </member>
    <member name="T:Nest.GetFiltersRequest">
      <summary>Request for GetFilters</summary>
    </member>
    <member name="M:Nest.GetFiltersRequest.#ctor">
      <summary>/_ml/filters</summary>
    </member>
    <member name="M:Nest.GetFiltersRequest.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}</summary>
      <param name="filterId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetFiltersRequest.From">
      <summary>skips a number of filters</summary>
    </member>
    <member name="P:Nest.GetFiltersRequest.Size">
      <summary>specifies a max number of filters to get</summary>
    </member>
    <member name="T:Nest.IGetInfluencersRequest">
      <summary>
            Retrieve results for machine learning job influencers.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.Descending">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.End">
      <summary>
            Returns influencers with timestamps earlier than this time.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.InfluencerScore">
      <summary>
            Returns influencers with anomaly scores higher than this value.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.Page">
      <summary>
            Specifies pagination for the influencers.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.Sort">
      <summary>
            Specifies the sort field for the requested influencers. By default, the influencers are sorted by the
            <see cref="P:Nest.IGetInfluencersRequest.InfluencerScore" /> value.
            </summary>
    </member>
    <member name="P:Nest.IGetInfluencersRequest.Start">
      <summary>
            Returns influencers with timestamps after this time.
            </summary>
    </member>
    <member name="T:Nest.GetInfluencersRequest">
      <summary>Request for GetInfluencers <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetInfluencersRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/influencers</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetInfluencersRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetInfluencersRequest.Descending">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetInfluencersRequest.End">
      <summary>
            Returns influencers with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetInfluencersRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetInfluencersRequest.InfluencerScore">
      <summary>
            Returns influencers with anomaly scores higher than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetInfluencersRequest.Page">
      <summary>
            Specifies pagination for the influencers.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetInfluencersRequest.Sort">
      <summary>
            Specifies the sort field for the requested influencers. By default, the influencers are sorted by the
            <see cref="P:Nest.IGetInfluencersRequest.InfluencerScore" /> value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetInfluencersRequest.Start">
      <summary>
            Returns influencers with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IGetJobStatsRequest">
      <summary>
            Retrieve usage information for machine learning jobs.
            </summary>
    </member>
    <member name="T:Nest.GetJobStatsRequest">
      <summary>Request for GetJobStats <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetJobStatsRequest.#ctor">
      <summary>/_ml/anomaly_detectors/_stats</summary>
    </member>
    <member name="M:Nest.GetJobStatsRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_stats</summary>
      <param name="jobId">Optional, accepts null</param>
    </member>
    <member name="P:Nest.GetJobStatsRequest.AllowNoJobs">
      <summary>Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)</summary>
    </member>
    <member name="T:Nest.IGetJobsRequest">
      <summary>
            Retrieve usage information for machine learning jobs.
            </summary>
    </member>
    <member name="T:Nest.GetJobsRequest">
      <summary>Request for GetJobs <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetJobsRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}</summary>
      <param name="jobId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetJobsRequest.#ctor">
      <summary>/_ml/anomaly_detectors</summary>
    </member>
    <member name="P:Nest.GetJobsRequest.AllowNoJobs">
      <summary>Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)</summary>
    </member>
    <member name="T:Nest.IGetModelSnapshotsRequest">
      <summary>
            Retrieve usage information for machine learning jobs.
            </summary>
    </member>
    <member name="P:Nest.IGetModelSnapshotsRequest.Descending">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
    </member>
    <member name="P:Nest.IGetModelSnapshotsRequest.End">
      <summary>
            Returns snapshots with timestamps earlier than this time.
            </summary>
    </member>
    <member name="P:Nest.IGetModelSnapshotsRequest.Page">
      <summary>
            Specifies pagination for the snapshots.
            </summary>
    </member>
    <member name="P:Nest.IGetModelSnapshotsRequest.Sort">
      <summary>
            Specifies the sort field for the requested snapshots. By default, snapshots are sorted by their timestamp.
            </summary>
    </member>
    <member name="P:Nest.IGetModelSnapshotsRequest.Start">
      <summary>
            Returns snapshots with timestamps after this time.
            </summary>
    </member>
    <member name="T:Nest.GetModelSnapshotsRequest">
      <summary>Request for GetModelSnapshots <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetModelSnapshotsRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetModelSnapshotsRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetModelSnapshotsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetModelSnapshotsRequest.Descending">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetModelSnapshotsRequest.End">
      <summary>
            Returns snapshots with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetModelSnapshotsRequest.Page">
      <summary>
            Specifies pagination for the snapshots.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetModelSnapshotsRequest.Sort">
      <summary>
            Specifies the sort field for the requested snapshots. By default, snapshots are sorted by their timestamp.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetModelSnapshotsRequest.Start">
      <summary>
            Returns snapshots with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IGetOverallBucketsRequest">
      <summary>
            Retrieves overall bucket results that summarize the bucket results of multiple jobs.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.AllowNoJobs">
      <summary>
            If <c>false</c> and the job id does not match any job an error will be returned. The default value is true.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.BucketSpan">
      <summary>
            The span of the overall buckets.
            Must be greater or equal to the largest job’s bucket span. Defaults to the largest job’s bucket span.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.End">
      <summary>
            Returns overall buckets with timestamps earlier than this time.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim overall buckets. Overall buckets are interim if any of the job
            buckets within the overall bucket interval are interim. By default, interim results are included.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.OverallScore">
      <summary>
            Returns overall buckets with overall scores greater or equal than this value.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.Start">
      <summary>
            Returns overall buckets with timestamps after this time.
            </summary>
    </member>
    <member name="P:Nest.IGetOverallBucketsRequest.TopN">
      <summary>
            The number of top job bucket scores to be used in the
            <see cref="P:Nest.OverallBucket.OverallScore" /> calculation on the response.
            The default value is <c>1</c>.
            </summary>
    </member>
    <member name="T:Nest.GetOverallBucketsRequest">
      <summary>Request for GetOverallBuckets <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html</para></summary>
      <inheritdoc cref="T:Nest.IGetOverallBucketsRequest" />
    </member>
    <member name="M:Nest.GetOverallBucketsRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/overall_buckets</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetOverallBucketsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.AllowNoJobs">
      <summary>
            If <c>false</c> and the job id does not match any job an error will be returned. The default value is true.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.BucketSpan">
      <summary>
            The span of the overall buckets.
            Must be greater or equal to the largest job’s bucket span. Defaults to the largest job’s bucket span.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.End">
      <summary>
            Returns overall buckets with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim overall buckets. Overall buckets are interim if any of the job
            buckets within the overall bucket interval are interim. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.OverallScore">
      <summary>
            Returns overall buckets with overall scores greater or equal than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.Start">
      <summary>
            Returns overall buckets with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetOverallBucketsRequest.TopN">
      <summary>
            The number of top job bucket scores to be used in the
            <see cref="P:Nest.OverallBucket.OverallScore" /> calculation on the response.
            The default value is <c>1</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IGetAnomalyRecordsRequest">
      <summary>
            Retrieve anomaly records for a machine learning job.
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.Descending">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.End">
      <summary>
            Returns records with timestamps earlier than this time.
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.Page">
      <summary>
            Specifies pagination for the records
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.RecordScore">
      <summary>
            Returns records with anomaly scores higher than this value.
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.Sort">
      <summary>
            Specifies the sort field for the requested records. By default, records are sorted by the anomaly score value.
            </summary>
    </member>
    <member name="P:Nest.IGetAnomalyRecordsRequest.Start">
      <summary>
            Returns records with timestamps after this time.
            </summary>
    </member>
    <member name="T:Nest.GetAnomalyRecordsRequest">
      <summary>Request for GetAnomalyRecords <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.GetAnomalyRecordsRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/results/records</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.GetAnomalyRecordsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.Descending">
      <summary>
            If true, the results are sorted in descending order.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.End">
      <summary>
            Returns records with timestamps earlier than this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.ExcludeInterim">
      <summary>
            If true, the output excludes interim results. By default, interim results are included.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.Page">
      <summary>
            Specifies pagination for the records
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.RecordScore">
      <summary>
            Returns records with anomaly scores higher than this value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.Sort">
      <summary>
            Specifies the sort field for the requested records. By default, records are sorted by the anomaly score value.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.GetAnomalyRecordsRequest.Start">
      <summary>
            Returns records with timestamps after this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IMachineLearningInfoRequest">
      <summary>
            Returns defaults and limits used by machine learning.
            </summary>
    </member>
    <member name="T:Nest.MachineLearningInfoRequest">
      <summary>Request for Info</summary>
      <inheritdoc cref="T:Nest.IMachineLearningInfoRequest" />
    </member>
    <member name="T:Nest.IOpenJobRequest">
      <summary>
            Open a machine learning job.
            </summary>
    </member>
    <member name="P:Nest.IOpenJobRequest.Timeout">
      <summary>
            Controls the time to wait until a job has opened. The default value is 30 minutes.
            </summary>
    </member>
    <member name="T:Nest.OpenJobRequest">
      <summary>Request for OpenJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.OpenJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_open</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.OpenJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.OpenJobRequest.Timeout">
      <summary>
            Controls the time to wait until a job has opened. The default value is 30 minutes.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPostCalendarEventsRequest">
      <summary>
            Post scheduled events in a calendar.
            </summary>
    </member>
    <member name="P:Nest.IPostCalendarEventsRequest.Events">
      <summary>
             A list of one of more scheduled events.
            </summary>
    </member>
    <member name="T:Nest.PostCalendarEventsRequest">
      <summary>Request for PostCalendarEvents</summary>
      <inheritdoc cref="T:Nest.PostCalendarEventsRequest" />
    </member>
    <member name="M:Nest.PostCalendarEventsRequest.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/events</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.PostCalendarEventsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PostCalendarEventsRequest.Events">
      <summary>
             A list of one of more scheduled events.
            </summary>
      <inheritdoc cref="P:Nest.IPostCalendarEventsRequest.Events" />
    </member>
    <member name="P:Nest.IPostJobDataRequest.Data">
      <summary>
            The job data.
            </summary>
      <remarks>
            The job must have a state of open to receive and process the data.
            </remarks>
    </member>
    <member name="T:Nest.PostJobDataRequest">
      <summary>Request for PostJobData <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html</para></summary>
      <inheritdoc cref="T:Nest.IPostJobDataRequest" />
    </member>
    <member name="M:Nest.PostJobDataRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_data</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.PostJobDataRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PostJobDataRequest.ResetEnd">
      <summary>Optional parameter to specify the end of the bucket resetting range</summary>
    </member>
    <member name="P:Nest.PostJobDataRequest.ResetStart">
      <summary>Optional parameter to specify the start of the bucket resetting range</summary>
    </member>
    <member name="P:Nest.PostJobDataRequest.Data">
      <summary>
            The job data.
            </summary>
      <remarks>
            The job must have a state of open to receive and process the data.
            </remarks>
      <inheritdoc />
    </member>
    <member name="T:Nest.PreviewDatafeedRequest">
      <summary>Request for PreviewDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PreviewDatafeedRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_preview</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.PreviewDatafeedRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.IPutCalendarRequest">
      <summary>
            Creates a machine learning calendar.
            </summary>
    </member>
    <member name="P:Nest.IPutCalendarRequest.Description">
      <summary>
            A description of the calendar.
            </summary>
    </member>
    <member name="T:Nest.PutCalendarRequest">
      <summary>Request for PutCalendar</summary>
      <inheritdoc cref="T:Nest.PutCalendarRequest" />
    </member>
    <member name="M:Nest.PutCalendarRequest.#ctor(Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}</summary>
      <param name="calendarId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutCalendarRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutCalendarRequest.Description">
      <summary>
            A description of the calendar.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPutCalendarJobRequest">
      <summary>
            Adds a job to a calendar.
            </summary>
    </member>
    <member name="T:Nest.PutCalendarJobRequest">
      <summary>Request for PutCalendarJob</summary>
      <inheritdoc cref="T:Nest.PutCalendarJobRequest" />
    </member>
    <member name="M:Nest.PutCalendarJobRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/calendars/{calendar_id}/jobs/{job_id}</summary>
      <param name="calendarId">this parameter is required</param>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutCalendarJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.IPutDatafeedRequest">
      <summary>
            Creates a datafeed for a machine learning job.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.Aggregations">
      <summary>
            If set, the datafeed performs aggregation searches.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.ChunkingConfig">
      <summary>
            Specifies how data searches are split into time chunks.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.Indices">
      <summary>
             A list of index names to search within, wildcards are supported.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 a.m. might not be searchable until 10:06 a.m.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
    </member>
    <member name="P:Nest.IPutDatafeedRequest.ScrollSize">
      <summary>
            The size parameter that is used in Elasticsearch searches.
            </summary>
    </member>
    <member name="T:Nest.PutDatafeedRequest">
      <summary>Request for PutDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PutDatafeedRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutDatafeedRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutDatafeedRequest.Aggregations">
      <summary>
            If set, the datafeed performs aggregation searches.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.ChunkingConfig">
      <summary>
            Specifies how data searches are split into time chunks.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.Indices">
      <summary>
             A list of index names to search within, wildcards are supported.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 a.m. might not be searchable until 10:06 a.m.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutDatafeedRequest.ScrollSize">
      <summary>
            The size parameter that is used in Elasticsearch searches.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPutFilterRequest">
      <summary>
            Creates a machine learning filter.
            </summary>
    </member>
    <member name="P:Nest.IPutFilterRequest.Description">
      <summary>
            A description of the filter.
            </summary>
    </member>
    <member name="P:Nest.IPutFilterRequest.Items">
      <summary>
            The items of the filter. A wildcard * can be used at the beginning or
            the end of an item. Up to 10000 items are allowed in each filter.
            </summary>
    </member>
    <member name="T:Nest.PutFilterRequest">
      <summary>Request for PutFilter</summary>
      <inheritdoc cref="T:Nest.PutFilterRequest" />
    </member>
    <member name="M:Nest.PutFilterRequest.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}</summary>
      <param name="filterId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutFilterRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutFilterRequest.Description">
      <summary>
            A description of the filter.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutFilterRequest.Items">
      <summary>
            The items of the filter. A wildcard * can be used at the beginning or
            the end of an item. Up to 10000 items are allowed in each filter.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IPutJobRequest">
      <summary>
            Creates a machine learning job
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.AnalysisConfig">
      <summary>
            The analysis configuration, which specifies how to analyze the data.
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.AnalysisLimits">
      <summary>
            Defines approximate limits on the memory resource requirements for the job.
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.DataDescription">
      <summary>
            Describes the format of the input data. This object is required, but it can be empty
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.Description">
      <summary>
            An optional description of the job
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
    </member>
    <member name="P:Nest.IPutJobRequest.ResultsIndexName">
      <summary>
            The name of the index in which to store the machine learning results.
            The default value is shared, which corresponds to the index name .ml-anomalies-shared.
            </summary>
    </member>
    <member name="T:Nest.PutJobRequest">
      <summary>Request for PutJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PutJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.PutJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutJobRequest.AnalysisConfig">
      <summary>
            The analysis configuration, which specifies how to analyze the data.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutJobRequest.AnalysisLimits">
      <summary>
            Defines approximate limits on the memory resource requirements for the job.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutJobRequest.DataDescription">
      <summary>
            Describes the format of the input data. This object is required, but it can be empty
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutJobRequest.Description">
      <summary>
            An optional description of the job
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutJobRequest.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutJobRequest.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutJobRequest.ResultsIndexName">
      <summary>
            The name of the index in which to store the machine learning results.
            The default value is shared, which corresponds to the index name .ml-anomalies-shared.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IRevertModelSnapshotRequest">
      <summary>
            Revert a specific snapshot for a machine learning job
            </summary>
    </member>
    <member name="P:Nest.IRevertModelSnapshotRequest.DeleteInterveningResults">
      <summary>
            If true, deletes the results in the time period between the latest results and the time of
            the reverted snapshot. It also resets the model to accept records for this time period.
            The default value is false.
            </summary>
    </member>
    <member name="T:Nest.RevertModelSnapshotRequest">
      <summary>Request for RevertModelSnapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.RevertModelSnapshotRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">this parameter is required</param>
    </member>
    <member name="M:Nest.RevertModelSnapshotRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.RevertModelSnapshotRequest.DeleteInterveningResults">
      <summary>
            If true, deletes the results in the time period between the latest results and the time of
            the reverted snapshot. It also resets the model to accept records for this time period.
            The default value is false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IStartDatafeedRequest.End">
      <summary>
            The time that the datafeed should end. This value is exclusive.
            </summary>
    </member>
    <member name="P:Nest.IStartDatafeedRequest.Start">
      <summary>
            The time that the datafeed should begin. This value is inclusive.
            </summary>
    </member>
    <member name="P:Nest.IStartDatafeedRequest.Timeout">
      <summary>
            Controls the amount of time to wait until a datafeed starts.
            </summary>
    </member>
    <member name="T:Nest.StartDatafeedRequest">
      <summary>Request for StartDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StartDatafeedRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_start</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.StartDatafeedRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.StartDatafeedRequest.End">
      <summary>
            The time that the datafeed should end. This value is exclusive.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StartDatafeedRequest.Start">
      <summary>
            The time that the datafeed should begin. This value is inclusive.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StartDatafeedRequest.Timeout">
      <summary>
            Controls the amount of time to wait until a datafeed starts.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IStopDatafeedRequest.Force">
      <summary>
            If true, the datafeed is stopped forcefully.
            </summary>
    </member>
    <member name="P:Nest.IStopDatafeedRequest.Timeout">
      <summary>
            Controls the amount of time to wait until a datafeed stops.
            </summary>
    </member>
    <member name="T:Nest.StopDatafeedRequest">
      <summary>Request for StopDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.StopDatafeedRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_stop</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.StopDatafeedRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.StopDatafeedRequest.AllowNoDatafeeds">
      <summary>Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)</summary>
    </member>
    <member name="P:Nest.StopDatafeedRequest.Force">
      <summary>
            If true, the datafeed is stopped forcefully.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.StopDatafeedRequest.Timeout">
      <summary>
            Controls the amount of time to wait until a datafeed stops.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IUpdateDatafeedRequest">
      <summary>
            Updates a datafeed for a machine learning job.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.Aggregations">
      <summary>
            If set, the datafeed performs aggregation searches.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.ChunkingConfig">
      <summary>
            Specifies how data searches are split into time chunks.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.Indices">
      <summary>A list of index names to search within, wildcards are supported.</summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 a.m. might not be searchable until 10:06 a.m.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
    </member>
    <member name="P:Nest.IUpdateDatafeedRequest.ScrollSize">
      <summary>
            The size parameter used in searches.
            </summary>
    </member>
    <member name="T:Nest.UpdateDatafeedRequest">
      <summary>Request for UpdateDatafeed <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateDatafeedRequest.#ctor(Nest.Id)">
      <summary>/_ml/datafeeds/{datafeed_id}/_update</summary>
      <param name="datafeedId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateDatafeedRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.Aggregations">
      <summary>
            If set, the datafeed performs aggregation searches.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.ChunkingConfig">
      <summary>
            Specifies how data searches are split into time chunks.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.Indices">
      <summary>A list of index names to search within, wildcards are supported.</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 a.m. might not be searchable until 10:06 a.m.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateDatafeedRequest.ScrollSize">
      <summary>
            The size parameter used in searches.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IUpdateFilterRequest">
      <summary>
            Updates the description of a machine learning filter, adds items, or removes items.
            </summary>
    </member>
    <member name="P:Nest.IUpdateFilterRequest.AddItems">
      <summary>
            The items to add to the filter
            </summary>
    </member>
    <member name="P:Nest.IUpdateFilterRequest.Description">
      <summary>
            A description for the filter
            </summary>
    </member>
    <member name="P:Nest.IUpdateFilterRequest.RemoveItems">
      <summary>
            The items to remove from the filter
            </summary>
    </member>
    <member name="T:Nest.UpdateFilterRequest">
      <summary>Request for UpdateFilter</summary>
      <inheritdoc cref="T:Nest.UpdateFilterRequest" />
    </member>
    <member name="M:Nest.UpdateFilterRequest.#ctor(Nest.Id)">
      <summary>/_ml/filters/{filter_id}/_update</summary>
      <param name="filterId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateFilterRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UpdateFilterRequest.AddItems">
      <summary>
            The items to add to the filter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateFilterRequest.Description">
      <summary>
            A description for the filter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateFilterRequest.RemoveItems">
      <summary>
            The items to remove from the filter
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IUpdateJobRequest">
      <summary>
            Update a machine learning Job
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.AnalysisLimits">
      <summary>
            Optionally specifies runtime limits for the job.
            Requires a restart.
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.BackgroundPersistInterval">
      <summary>
            The time between each periodic persistence of the model. The default value is a randomized value between 3 to 4 hours,
            which avoids all jobs persisting at exactly the same time. The smallest allowed value is 1 hour.
            Requires a restart.
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.CustomSettings">
      <summary>
            Contains custom meta data about the job.
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.Description">
      <summary>
            An optional description of the job
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.RenormalizationWindowDays">
      <summary>
            The period over which adjustments to the score are applied, as new data is seen.
            </summary>
    </member>
    <member name="P:Nest.IUpdateJobRequest.ResultsRetentionDays">
      <summary>
            The number of days for which job results are retained. Once per day at 00:30 (server time),
            results older than this period are deleted from Elasticsearch. The default value is null,
            which means results are retained.
            </summary>
    </member>
    <member name="T:Nest.UpdateJobRequest">
      <summary>Request for UpdateJob <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateJobRequest.#ctor(Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/_update</summary>
      <param name="jobId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.IUpdateModelSnapshotRequest">
      <summary>
            Update a machine learning model snapshot.
            </summary>
    </member>
    <member name="P:Nest.IUpdateModelSnapshotRequest.Description">
      <summary>
            An optional description of the model snapshot. For example, "Before black friday".
            </summary>
    </member>
    <member name="P:Nest.IUpdateModelSnapshotRequest.Retain">
      <summary>
            If true, this snapshot will not be deleted during automatic cleanup of snapshots older than model_snapshot_retention_days.
            Note that this snapshot will still be deleted when the job is deleted.
            </summary>
    </member>
    <member name="T:Nest.UpdateModelSnapshotRequest">
      <summary>Request for UpdateModelSnapshot <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html</para></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.UpdateModelSnapshotRequest.#ctor(Nest.Id,Nest.Id)">
      <summary>/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update</summary>
      <param name="jobId">this parameter is required</param>
      <param name="snapshotId">this parameter is required</param>
    </member>
    <member name="M:Nest.UpdateModelSnapshotRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.UpdateModelSnapshotRequest.Description">
      <summary>
            An optional description of the model snapshot. For example, "Before black friday".
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.UpdateModelSnapshotRequest.Retain">
      <summary>
            If true, this snapshot will not be deleted during automatic cleanup of snapshots older than model_snapshot_retention_days.
            Note that this snapshot will still be deleted when the job is deleted.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IValidateJobRequest">
      <summary>
            Validates a machine learning job
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.AnalysisConfig">
      <summary>
            The analysis configuration, which specifies how to analyze the data.
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.AnalysisLimits">
      <summary>
            Optionally specifies runtime limits for the job.
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.DataDescription">
      <summary>
            Describes the format of the input data. This object is required, but it can be empty.
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.Description">
      <summary>
            An optional description of the job
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
    </member>
    <member name="P:Nest.IValidateJobRequest.ResultsIndexName">
      <summary>
            The name of the index in which to store the machine learning results.
            The default value is shared, which corresponds to the index name .ml-anomalies-shared.
            </summary>
    </member>
    <member name="T:Nest.ValidateJobRequest">
      <summary>Request for ValidateJob</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.AnalysisConfig">
      <summary>
            The analysis configuration, which specifies how to analyze the data.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.AnalysisLimits">
      <summary>
            Optionally specifies runtime limits for the job.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.DataDescription">
      <summary>
            Describes the format of the input data. This object is required, but it can be empty.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.Description">
      <summary>
            An optional description of the job
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateJobRequest.ResultsIndexName">
      <summary>
            The name of the index in which to store the machine learning results.
            The default value is shared, which corresponds to the index name .ml-anomalies-shared.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ValidateDetectorRequest">
      <summary>Request for ValidateDetector</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ValidateDetectorRequest.Detector">
      <inheritdoc />
    </member>
    <member name="T:Nest.DeprecationInfoRequest">
      <summary>Request for DeprecationInfo <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html</para></summary>
    </member>
    <member name="M:Nest.DeprecationInfoRequest.#ctor">
      <summary>/_migration/deprecations</summary>
    </member>
    <member name="M:Nest.DeprecationInfoRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_migration/deprecations</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="T:Nest.ClearScrollRequest">
      <summary>Request for ClearScroll <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</para></summary>
    </member>
    <member name="T:Nest.CountRequest">
      <summary>Request for Count <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html</para></summary>
    </member>
    <member name="M:Nest.CountRequest.#ctor">
      <summary>/_count</summary>
    </member>
    <member name="M:Nest.CountRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_count</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.CountRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.CountRequest.AnalyzeWildcard">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="P:Nest.CountRequest.Analyzer">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="P:Nest.CountRequest.DefaultOperator">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="P:Nest.CountRequest.Df">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="P:Nest.CountRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.CountRequest.IgnoreThrottled">
      <summary>Whether specified concrete, expanded or aliased indices should be ignored when throttled</summary>
    </member>
    <member name="P:Nest.CountRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.CountRequest.Lenient">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="P:Nest.CountRequest.MinScore">
      <summary>Include only documents with a specific `_score` value in the result</summary>
    </member>
    <member name="P:Nest.CountRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.CountRequest.QueryOnQueryString">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.CountRequest.Routing" -->
    <member name="P:Nest.CountRequest.TerminateAfter">
      <summary>The maximum count for each shard, upon reaching which the query execution will terminate early</summary>
    </member>
    <member name="M:Nest.CountRequest`1.#ctor">
      <summary>/{index}/_count</summary>
    </member>
    <member name="M:Nest.CountRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_count</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="T:Nest.ExplainRequest">
      <summary>Request for Explain <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html</para></summary>
    </member>
    <member name="M:Nest.ExplainRequest.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ExplainRequest.AnalyzeWildcard">
      <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
    </member>
    <member name="P:Nest.ExplainRequest.Analyzer">
      <summary>The analyzer for the query string query</summary>
    </member>
    <member name="P:Nest.ExplainRequest.DefaultOperator">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="P:Nest.ExplainRequest.Df">
      <summary>The default field for query string query (default: _all)</summary>
    </member>
    <member name="P:Nest.ExplainRequest.Lenient">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="P:Nest.ExplainRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.ExplainRequest.QueryOnQueryString">
      <summary>Query in the Lucene query string syntax</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.ExplainRequest.Routing" -->
    <member name="P:Nest.ExplainRequest.SourceEnabled">
      <summary>Whether the _source should be included in the response.</summary>
    </member>
    <member name="P:Nest.ExplainRequest.SourceExcludes">
      <summary>A list of fields to exclude from the returned _source field</summary>
    </member>
    <member name="P:Nest.ExplainRequest.SourceIncludes">
      <summary>A list of fields to extract and return from the _source field</summary>
    </member>
    <member name="M:Nest.ExplainRequest`1.#ctor(Nest.IndexName,Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="index">this parameter is required</param>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainRequest`1.#ctor(Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.ExplainRequest`1.#ctor(`0,Nest.IndexName,Nest.Id)">
      <summary>/{index}/_explain/{id}</summary>
      <param name="id">The document used to resolve the path from</param>
    </member>
    <member name="M:Nest.ExplainRequest`1.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.FieldCapabilitiesRequest">
      <summary>Request for FieldCapabilities <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html</para></summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesRequest.#ctor">
      <summary>/_field_caps</summary>
    </member>
    <member name="M:Nest.FieldCapabilitiesRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_field_caps</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.FieldCapabilitiesRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.FieldCapabilitiesRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.FieldCapabilitiesRequest.Fields">
      <summary>A comma-separated list of field names</summary>
    </member>
    <member name="P:Nest.FieldCapabilitiesRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.FieldCapabilitiesRequest.IncludeUnmapped">
      <summary>Indicates whether unmapped fields should be included in the response.</summary>
    </member>
    <member name="T:Nest.MultiSearchRequest">
      <summary>Request for MultiSearch <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html</para></summary>
    </member>
    <member name="M:Nest.MultiSearchRequest.#ctor">
      <summary>/_msearch</summary>
    </member>
    <member name="M:Nest.MultiSearchRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_msearch</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.MultiSearchRequest.CcsMinimizeRoundtrips">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="P:Nest.MultiSearchRequest.MaxConcurrentSearches">
      <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
    </member>
    <member name="P:Nest.MultiSearchRequest.MaxConcurrentShardRequests">
      <summary>
             The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of
             the search on the cluster in order to limit the number of concurrent shard requests
            </summary>
    </member>
    <member name="P:Nest.MultiSearchRequest.PreFilterShardSize">
      <summary>
             A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search
             request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can
             not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are
             disjoint.
            </summary>
    </member>
    <member name="P:Nest.MultiSearchRequest.SearchType">
      <summary>Search operation type</summary>
    </member>
    <member name="P:Nest.MultiSearchRequest.TotalHitsAsInteger">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="P:Nest.MultiSearchRequest.TypedKeys">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="T:Nest.MultiSearchTemplateRequest">
      <summary>Request for MultiSearchTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html</para></summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateRequest.#ctor">
      <summary>/_msearch/template</summary>
    </member>
    <member name="M:Nest.MultiSearchTemplateRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_msearch/template</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.MultiSearchTemplateRequest.CcsMinimizeRoundtrips">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="P:Nest.MultiSearchTemplateRequest.MaxConcurrentSearches">
      <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
    </member>
    <member name="P:Nest.MultiSearchTemplateRequest.SearchType">
      <summary>Search operation type</summary>
    </member>
    <member name="P:Nest.MultiSearchTemplateRequest.TotalHitsAsInteger">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="P:Nest.MultiSearchTemplateRequest.TypedKeys">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="T:Nest.RenderSearchTemplateRequest">
      <summary>Request for RenderSearchTemplate <para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html</para></summary>
    </member>
    <member name="M:Nest.RenderSearchTemplateRequest.#ctor">
      <summary>/_render/template</summary>
    </member>
    <member name="M:Nest.RenderSearchTemplateRequest.#ctor(Nest.Id)">
      <summary>/_render/template/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="T:Nest.ScrollRequest">
      <summary>Request for Scroll <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll</para></summary>
    </member>
    <member name="P:Nest.ScrollRequest.TotalHitsAsInteger">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="P:Nest.ISearchRequest.Aggregations">
      <summary>
            Specifies the aggregations to perform
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Collapse">
      <summary>
            Allows to collapse search results based on field values.
            The collapsing is done by selecting only the top sorted document per collapse key.
            For instance the query below retrieves the best tweet for each user and sorts them by number of likes.
            <para>
            NOTE: The collapsing is applied to the top hits only and does not affect aggregations.
            You can only collapse to a depth of 2.
            </para></summary>
    </member>
    <member name="P:Nest.ISearchRequest.Explain">
      <summary>
            Enables explanation for each hit on how its score was computed
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.From">
      <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Highlight">
      <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene
            fast-vector-highlighter or highlighter.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.IndicesBoost">
      <summary>
            Allows to configure different boost level per index when searching across
            more than one indices. This is very handy when hits coming from one index
            matter more than hits coming from another index (think social graph where each user has an index).
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.MinScore">
      <summary>
            Allows to filter out documents based on a minimum score
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.PostFilter">
      <summary>
            Specify a query to apply to the search hits at the very end of a search request,
            after aggregations have already been calculated. Useful when both search hits and aggregations
            will be returned in the response, and a filter should only be applied to the search hits.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Profile">
      <summary>
            The Profile API provides detailed timing information about the execution of individual components in a query.
            It gives the user insight into how queries are executed at a low level so that the user can understand
            why certain queries are slow, and take steps to improve their slow queries.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Query">
      <summary>
            Specify the search query to perform
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Rescore">
      <summary>
            Specify one or more queries to use for rescoring
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.ScriptFields">
      <summary>
            Allows to return a script evaluation (based on different fields) for each hit
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.SearchAfter">
      <summary>
             Sort values that can be used to start returning results "after" any document in the result list.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Size">
      <summary> The number of hits to return. Defaults to 10. </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Slice">
      <summary>
            For scroll queries that return a lot of documents it is possible to split the scroll in multiple slices which can be
            consumed independently
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Sort">
      <summary>
            Specifies how to sort the search hits
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Source">
      <summary>
            Specify how the _source field is returned for each search hit.
            <para>When <c>true</c>, _source retrieval is enabled (default)</para><para>When <c>false</c>, _source retrieval is disabled, and no _source will be returned for each hit</para><para>When <see cref="T:Nest.ISourceFilter" /> is specified, fields to include/exclude can be controlled</para></summary>
    </member>
    <member name="P:Nest.ISearchRequest.Suggest">
      <summary>
             The suggest feature suggests similar looking terms based on a provided text by using a suggester
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.TerminateAfter">
      <summary>
            The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate
            early.
            If set, the response will have a boolean field terminated_early to indicate whether the query execution has actually
            terminated_early.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Timeout">
      <summary>
            A search timeout, bounding the search request to be executed within the
            specified time value and bail with the hits accumulated up
            to that point, when expired. Defaults to no timeout.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.TrackScores">
      <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
    </member>
    <member name="P:Nest.ISearchRequest.Version">
      <summary>
            Return a version for each search hit
            </summary>
    </member>
    <member name="T:Nest.SearchRequest">
      <summary>Request for Search <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html</para></summary>
    </member>
    <member name="M:Nest.SearchRequest.#ctor">
      <summary>/_search</summary>
    </member>
    <member name="M:Nest.SearchRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_search</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SearchRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.SearchRequest.AllowPartialSearchResults">
      <summary>Indicate if an error should be returned if there is a partial search failure or timeout</summary>
    </member>
    <member name="P:Nest.SearchRequest.AnalyzeWildcard">
      <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
    </member>
    <member name="P:Nest.SearchRequest.Analyzer">
      <summary>The analyzer to use for the query string</summary>
    </member>
    <member name="P:Nest.SearchRequest.BatchedReduceSize">
      <summary>
             The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism
             to reduce the memory overhead per search request if the potential number of shards in the request can be large.
            </summary>
    </member>
    <member name="P:Nest.SearchRequest.CcsMinimizeRoundtrips">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="P:Nest.SearchRequest.DefaultOperator">
      <summary>The default operator for query string query (AND or OR)</summary>
    </member>
    <member name="P:Nest.SearchRequest.Df">
      <summary>The field to use as default where no field prefix is given in the query string</summary>
    </member>
    <member name="P:Nest.SearchRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.SearchRequest.IgnoreThrottled">
      <summary>Whether specified concrete, expanded or aliased indices should be ignored when throttled</summary>
    </member>
    <member name="P:Nest.SearchRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.SearchRequest.Lenient">
      <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
    </member>
    <member name="P:Nest.SearchRequest.MaxConcurrentShardRequests">
      <summary>
             The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the
             search on the cluster in order to limit the number of concurrent shard requests
            </summary>
    </member>
    <member name="P:Nest.SearchRequest.PreFilterShardSize">
      <summary>
             A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search
             request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can
             not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are
             disjoint.
            </summary>
    </member>
    <member name="P:Nest.SearchRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.SearchRequest.RequestCache">
      <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SearchRequest.Routing" -->
    <member name="P:Nest.SearchRequest.Scroll">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="P:Nest.SearchRequest.SearchType">
      <summary>Search operation type</summary>
    </member>
    <member name="P:Nest.SearchRequest.SequenceNumberPrimaryTerm">
      <summary>Specify whether to return sequence number and primary term of the last modification of each hit</summary>
    </member>
    <member name="P:Nest.SearchRequest.Stats">
      <summary>Specific 'tag' of the request for logging and statistical purposes</summary>
    </member>
    <member name="P:Nest.SearchRequest.SuggestField">
      <summary>Specify which field to use for suggestions</summary>
    </member>
    <member name="P:Nest.SearchRequest.SuggestMode">
      <summary>Specify suggest mode</summary>
    </member>
    <member name="P:Nest.SearchRequest.SuggestSize">
      <summary>How many suggestions to return in response</summary>
    </member>
    <member name="P:Nest.SearchRequest.SuggestText">
      <summary>The source text for which the suggestions should be returned</summary>
    </member>
    <member name="P:Nest.SearchRequest.TotalHitsAsInteger">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="P:Nest.SearchRequest.TypedKeys">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="P:Nest.SearchRequest.Aggregations">
      <summary>
            Specifies the aggregations to perform
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Collapse">
      <summary>
            Allows to collapse search results based on field values.
            The collapsing is done by selecting only the top sorted document per collapse key.
            For instance the query below retrieves the best tweet for each user and sorts them by number of likes.
            <para>
            NOTE: The collapsing is applied to the top hits only and does not affect aggregations.
            You can only collapse to a depth of 2.
            </para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.DocValueFields">
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Explain">
      <summary>
            Enables explanation for each hit on how its score was computed
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.From">
      <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Highlight">
      <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene
            fast-vector-highlighter or highlighter.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.IndicesBoost">
      <summary>
            Allows to configure different boost level per index when searching across
            more than one indices. This is very handy when hits coming from one index
            matter more than hits coming from another index (think social graph where each user has an index).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.MinScore">
      <summary>
            Allows to filter out documents based on a minimum score
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.PostFilter">
      <summary>
            Specify a query to apply to the search hits at the very end of a search request,
            after aggregations have already been calculated. Useful when both search hits and aggregations
            will be returned in the response, and a filter should only be applied to the search hits.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Profile">
      <summary>
            The Profile API provides detailed timing information about the execution of individual components in a query.
            It gives the user insight into how queries are executed at a low level so that the user can understand
            why certain queries are slow, and take steps to improve their slow queries.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Query">
      <summary>
            Specify the search query to perform
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Rescore">
      <summary>
            Specify one or more queries to use for rescoring
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.ScriptFields">
      <summary>
            Allows to return a script evaluation (based on different fields) for each hit
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.SearchAfter">
      <summary>
             Sort values that can be used to start returning results "after" any document in the result list.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Size">
      <summary> The number of hits to return. Defaults to 10. </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Slice">
      <summary>
            For scroll queries that return a lot of documents it is possible to split the scroll in multiple slices which can be
            consumed independently
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Sort">
      <summary>
            Specifies how to sort the search hits
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Source">
      <summary>
            Specify how the _source field is returned for each search hit.
            <para>When <c>true</c>, _source retrieval is enabled (default)</para><para>When <c>false</c>, _source retrieval is disabled, and no _source will be returned for each hit</para><para>When <see cref="T:Nest.ISourceFilter" /> is specified, fields to include/exclude can be controlled</para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.StoredFields">
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Suggest">
      <summary>
             The suggest feature suggests similar looking terms based on a provided text by using a suggester
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.TerminateAfter">
      <summary>
            The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate
            early.
            If set, the response will have a boolean field terminated_early to indicate whether the query execution has actually
            terminated_early.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Timeout">
      <summary>
            A search timeout, bounding the search request to be executed within the
            specified time value and bail with the hits accumulated up
            to that point, when expired. Defaults to no timeout.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.TrackScores">
      <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.TrackTotalHits">
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchRequest.Version">
      <summary>
            Return a version for each search hit
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.SearchRequest`1.#ctor">
      <summary>/{index}/_search</summary>
    </member>
    <member name="M:Nest.SearchRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_search</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="T:Nest.SearchShardsRequest">
      <summary>Request for SearchShards <para>http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html</para></summary>
    </member>
    <member name="M:Nest.SearchShardsRequest.#ctor">
      <summary>/_search_shards</summary>
    </member>
    <member name="M:Nest.SearchShardsRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_search_shards</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SearchShardsRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.SearchShardsRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.SearchShardsRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.SearchShardsRequest.Local">
      <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
    </member>
    <member name="P:Nest.SearchShardsRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SearchShardsRequest.Routing" -->
    <member name="M:Nest.SearchShardsRequest`1.#ctor">
      <summary>/{index}/_search_shards</summary>
    </member>
    <member name="M:Nest.SearchShardsRequest`1.#ctor(Nest.Indices)">
      <summary>/{index}/_search_shards</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="T:Nest.SearchTemplateRequest">
      <summary>Request for SearchTemplate <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</para></summary>
    </member>
    <member name="M:Nest.SearchTemplateRequest.#ctor">
      <summary>/_search/template</summary>
    </member>
    <member name="M:Nest.SearchTemplateRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_search/template</summary>
      <param name="index">Optional, accepts null</param>
    </member>
    <member name="P:Nest.SearchTemplateRequest.AllowNoIndices">
      <summary>
             Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have
             been specified)
            </summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.CcsMinimizeRoundtrips">
      <summary>Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.ExpandWildcards">
      <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.Explain">
      <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.IgnoreThrottled">
      <summary>Whether specified concrete, expanded or aliased indices should be ignored when throttled</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.IgnoreUnavailable">
      <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.Preference">
      <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.Profile">
      <summary>Specify whether to profile the query execution</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.SearchTemplateRequest.Routing" -->
    <member name="P:Nest.SearchTemplateRequest.Scroll">
      <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.SearchType">
      <summary>Search operation type</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.TotalHitsAsInteger">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="P:Nest.SearchTemplateRequest.TypedKeys">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="T:Nest.DeleteRollupJobRequest">
      <summary>Request for DeleteJob</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.DeleteRollupJobRequest.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRollupJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.GetRollupJobRequest">
      <summary>Request for GetJob</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.GetRollupJobRequest.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRollupJobRequest.#ctor">
      <summary>/_rollup/job/</summary>
    </member>
    <member name="T:Nest.GetRollupCapabilitiesRequest">
      <summary>Request for GetCapabilities</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.GetRollupCapabilitiesRequest.#ctor(Nest.Id)">
      <summary>/_rollup/data/{id}</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRollupCapabilitiesRequest.#ctor">
      <summary>/_rollup/data/</summary>
    </member>
    <member name="T:Nest.GetRollupIndexCapabilitiesRequest">
      <summary>Request for GetIndexCapabilities</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.GetRollupIndexCapabilitiesRequest.#ctor(Nest.IndexName)">
      <summary>/{index}/_rollup/data</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.GetRollupIndexCapabilitiesRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ICreateRollupJobRequest">
      <summary>
            This API enables you to create a rollup job. The job will be created in a STOPPED state, and must be started with the Start Job API.
            <para>You must have manage or manage_rollup cluster privileges to use this API.</para></summary>
    </member>
    <member name="P:Nest.ICreateRollupJobRequest.Cron">
      <summary> A cron string which defines when the rollup job should be executed. </summary>
    </member>
    <member name="P:Nest.ICreateRollupJobRequest.Groups">
      <summary> Defines the grouping fields that are defined for this rollup job </summary>
    </member>
    <member name="P:Nest.ICreateRollupJobRequest.IndexPattern">
      <summary> The index, or index pattern, that you wish to rollup. Supports wildcard-style patterns (logstash-*). </summary>
    </member>
    <member name="P:Nest.ICreateRollupJobRequest.Metrics">
      <summary> Defines the metrics that should be collected for each grouping tuple </summary>
    </member>
    <member name="P:Nest.ICreateRollupJobRequest.PageSize">
      <summary>
            The number of bucket results that should be processed on each iteration of the rollup indexer.
            A larger value will tend to execute faster, but will require more memory during processing.
            </summary>
    </member>
    <member name="P:Nest.ICreateRollupJobRequest.RollupIndex">
      <summary> The index that you wish to store rollup results into. Can be shared with other rollup jobs. </summary>
    </member>
    <member name="T:Nest.CreateRollupJobRequest">
      <summary>Request for CreateJob</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
      <inheritdoc cref="T:Nest.ICreateRollupJobRequest" />
    </member>
    <member name="M:Nest.CreateRollupJobRequest.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.CreateRollupJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRollupJobRequest.Cron" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRollupJobRequest.Groups" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRollupJobRequest.IndexPattern" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRollupJobRequest.Metrics" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRollupJobRequest.PageSize" -->
    <!-- Badly formed XML comment ignored for member "P:Nest.CreateRollupJobRequest.RollupIndex" -->
    <member name="P:Nest.IRollupSearchRequest.Aggregations">
      <summary> Describe the aggregations to perform</summary>
    </member>
    <member name="P:Nest.IRollupSearchRequest.Query">
      <summary> Describe the query to perform using a query descriptor lambda</summary>
    </member>
    <member name="P:Nest.IRollupSearchRequest.Size">
      <summary>When doing rollup searches against rolled up and live indices size needs to be set to 0 explicitly </summary>
    </member>
    <member name="T:Nest.RollupSearchRequest">
      <summary>Request for Search</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.RollupSearchRequest.#ctor(Nest.Indices)">
      <summary>/{index}/_rollup_search</summary>
      <param name="index">this parameter is required</param>
    </member>
    <member name="M:Nest.RollupSearchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.RollupSearchRequest.TotalHitsAsInteger">
      <summary>Indicates whether hits.total should be rendered as an integer or an object in the rest search response</summary>
    </member>
    <member name="P:Nest.RollupSearchRequest.TypedKeys">
      <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
    </member>
    <member name="P:Nest.RollupSearchRequest.Aggregations">
      <summary> Describe the aggregations to perform</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RollupSearchRequest.Query">
      <summary> Describe the query to perform using a query descriptor lambda</summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RollupSearchRequest.Size">
      <summary>When doing rollup searches against rolled up and live indices size needs to be set to 0 explicitly </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StartRollupJobRequest">
      <summary>Request for StartJob</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.StartRollupJobRequest.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}/_start</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.StartRollupJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.StopRollupJobRequest">
      <summary>Request for StopJob</summary>
      <remarks>Note: Experimental within the Elasticsearch server, this functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.</remarks>
    </member>
    <member name="M:Nest.StopRollupJobRequest.#ctor(Nest.Id)">
      <summary>/_rollup/job/{id}/_stop</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.StopRollupJobRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.StopRollupJobRequest.Timeout">
      <summary>Block for (at maximum) the specified duration while waiting for the job to stop. Defaults to 30s.</summary>
    </member>
    <member name="P:Nest.StopRollupJobRequest.WaitForCompletion">
      <summary>True if the API should block until the job has fully stopped, false if should be executed async. Defaults to false.</summary>
    </member>
    <member name="T:Nest.AuthenticateRequest">
      <summary>Request for Authenticate <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html</para></summary>
    </member>
    <member name="T:Nest.ChangePasswordRequest">
      <summary>Request for ChangePassword <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html</para></summary>
    </member>
    <member name="M:Nest.ChangePasswordRequest.#ctor(Nest.Name)">
      <summary>/_security/user/{username}/_password</summary>
      <param name="username">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ChangePasswordRequest.#ctor">
      <summary>/_security/user/_password</summary>
    </member>
    <member name="P:Nest.ChangePasswordRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.ClearCachedRealmsRequest">
      <summary>Request for ClearCachedRealms <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html</para></summary>
    </member>
    <member name="M:Nest.ClearCachedRealmsRequest.#ctor(Nest.Names)">
      <summary>/_security/realm/{realms}/_clear_cache</summary>
      <param name="realms">this parameter is required</param>
    </member>
    <member name="M:Nest.ClearCachedRealmsRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ClearCachedRealmsRequest.Usernames">
      <summary>Comma-separated list of usernames to clear from the cache</summary>
    </member>
    <member name="T:Nest.ClearCachedRolesRequest">
      <summary>Request for ClearCachedRoles <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html</para></summary>
    </member>
    <member name="M:Nest.ClearCachedRolesRequest.#ctor(Nest.Names)">
      <summary>/_security/role/{name}/_clear_cache</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.ClearCachedRolesRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.ICreateApiKeyRequest.Expiration">
      <summary>
            Optional expiration for the API key being generated.
            If expiration is not provided then the API keys do not expire.
            </summary>
    </member>
    <member name="P:Nest.ICreateApiKeyRequest.Name">
      <summary>
            Name for this API key
            </summary>
    </member>
    <member name="P:Nest.ICreateApiKeyRequest.Roles">
      <summary>
            Optional role descriptors for this API key, if not provided then permissions of authenticated user are applied.
            </summary>
    </member>
    <member name="T:Nest.CreateApiKeyRequest">
      <summary>Request for CreateApiKey <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html</para></summary>
    </member>
    <member name="P:Nest.CreateApiKeyRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="P:Nest.CreateApiKeyRequest.Expiration">
      <summary>
            Optional expiration for the API key being generated.
            If expiration is not provided then the API keys do not expire.
            </summary>
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Expiration" />
    </member>
    <member name="P:Nest.CreateApiKeyRequest.Name">
      <summary>
            Name for this API key
            </summary>
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Name" />
    </member>
    <member name="P:Nest.CreateApiKeyRequest.Roles">
      <summary>
            Optional role descriptors for this API key, if not provided then permissions of authenticated user are applied.
            </summary>
      <inheritdoc cref="P:Nest.ICreateApiKeyRequest.Roles" />
    </member>
    <member name="T:Nest.DeletePrivilegesRequest">
      <summary>Request for DeletePrivileges <para>TODO</para></summary>
    </member>
    <member name="M:Nest.DeletePrivilegesRequest.#ctor(Nest.Name,Nest.Name)">
      <summary>/_security/privilege/{application}/{name}</summary>
      <param name="application">this parameter is required</param>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeletePrivilegesRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeletePrivilegesRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.DeleteRoleRequest">
      <summary>Request for DeleteRole <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRoleRequest.#ctor(Nest.Name)">
      <summary>/_security/role/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRoleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteRoleRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.DeleteRoleMappingRequest">
      <summary>Request for DeleteRoleMapping <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html</para></summary>
    </member>
    <member name="M:Nest.DeleteRoleMappingRequest.#ctor(Nest.Name)">
      <summary>/_security/role_mapping/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteRoleMappingRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteRoleMappingRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.DeleteUserRequest">
      <summary>Request for DeleteUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html</para></summary>
    </member>
    <member name="M:Nest.DeleteUserRequest.#ctor(Nest.Name)">
      <summary>/_security/user/{username}</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteUserRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DeleteUserRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.DisableUserRequest">
      <summary>Request for DisableUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html</para></summary>
    </member>
    <member name="M:Nest.DisableUserRequest.#ctor(Nest.Name)">
      <summary>/_security/user/{username}/_disable</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.DisableUserRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.DisableUserRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.EnableUserRequest">
      <summary>Request for EnableUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html</para></summary>
    </member>
    <member name="M:Nest.EnableUserRequest.#ctor(Nest.Name)">
      <summary>/_security/user/{username}/_enable</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.EnableUserRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.EnableUserRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.GetApiKeyRequest">
      <summary>Request for GetApiKey <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html</para></summary>
    </member>
    <member name="P:Nest.GetApiKeyRequest.Id">
      <summary>API key id of the API key to be retrieved</summary>
    </member>
    <member name="P:Nest.GetApiKeyRequest.Name">
      <summary>API key name of the API key to be retrieved</summary>
    </member>
    <member name="P:Nest.GetApiKeyRequest.RealmName">
      <summary>realm name of the user who created this API key to be retrieved</summary>
    </member>
    <member name="P:Nest.GetApiKeyRequest.Username">
      <summary>user name of the user who created this API key to be retrieved</summary>
    </member>
    <member name="T:Nest.GetPrivilegesRequest">
      <summary>Request for GetPrivileges <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</para></summary>
    </member>
    <member name="M:Nest.GetPrivilegesRequest.#ctor">
      <summary>/_security/privilege</summary>
    </member>
    <member name="M:Nest.GetPrivilegesRequest.#ctor(Nest.Name)">
      <summary>/_security/privilege/{application}</summary>
      <param name="application">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetPrivilegesRequest.#ctor(Nest.Name,Nest.Name)">
      <summary>/_security/privilege/{application}/{name}</summary>
      <param name="application">Optional, accepts null</param>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="T:Nest.GetRoleRequest">
      <summary>Request for GetRole <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html</para></summary>
    </member>
    <member name="M:Nest.GetRoleRequest.#ctor(Nest.Name)">
      <summary>/_security/role/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRoleRequest.#ctor">
      <summary>/_security/role</summary>
    </member>
    <member name="T:Nest.GetRoleMappingRequest">
      <summary>Request for GetRoleMapping <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html</para></summary>
    </member>
    <member name="M:Nest.GetRoleMappingRequest.#ctor(Nest.Name)">
      <summary>/_security/role_mapping/{name}</summary>
      <param name="name">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetRoleMappingRequest.#ctor">
      <summary>/_security/role_mapping</summary>
    </member>
    <member name="T:Nest.GetUserAccessTokenRequest">
      <summary>Request for GetUserAccessToken <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html</para></summary>
    </member>
    <member name="T:Nest.GetUserRequest">
      <summary>Request for GetUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html</para></summary>
    </member>
    <member name="M:Nest.GetUserRequest.#ctor(Nest.Names)">
      <summary>/_security/user/{username}</summary>
      <param name="username">Optional, accepts null</param>
    </member>
    <member name="M:Nest.GetUserRequest.#ctor">
      <summary>/_security/user</summary>
    </member>
    <member name="T:Nest.GetUserPrivilegesRequest">
      <summary>Request for GetUserPrivileges <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html</para></summary>
    </member>
    <member name="P:Nest.IHasPrivilegesRequest.Application">
      <summary>
            The name of the application, a list of the privileges that you want to check for the specified resources,
            (may be either application privilege names, or the names of actions that are granted by those privileges,
            a list of resource names against which the privileges should be checked.
            </summary>
    </member>
    <member name="P:Nest.IHasPrivilegesRequest.Cluster">
      <summary>
            	A list of the cluster privileges that you want to check.
            </summary>
    </member>
    <member name="P:Nest.IHasPrivilegesRequest.Index">
      <summary>
            A list of indices and a list of the privileges that you want to check for the specified indices.
            </summary>
    </member>
    <member name="T:Nest.HasPrivilegesRequest">
      <summary>Request for HasPrivileges <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html</para></summary>
    </member>
    <member name="M:Nest.HasPrivilegesRequest.#ctor">
      <summary>/_security/user/_has_privileges</summary>
    </member>
    <member name="M:Nest.HasPrivilegesRequest.#ctor(Nest.Name)">
      <summary>/_security/user/{user}/_has_privileges</summary>
      <param name="user">Optional, accepts null</param>
    </member>
    <member name="P:Nest.HasPrivilegesRequest.Application">
      <summary>
            The name of the application, a list of the privileges that you want to check for the specified resources,
            (may be either application privilege names, or the names of actions that are granted by those privileges,
            a list of resource names against which the privileges should be checked.
            </summary>
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Application" />
    </member>
    <member name="P:Nest.HasPrivilegesRequest.Cluster">
      <summary>
            	A list of the cluster privileges that you want to check.
            </summary>
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Cluster" />
    </member>
    <member name="P:Nest.HasPrivilegesRequest.Index">
      <summary>
            A list of indices and a list of the privileges that you want to check for the specified indices.
            </summary>
      <inheritdoc cref="P:Nest.IHasPrivilegesRequest.Index" />
    </member>
    <member name="P:Nest.IInvalidateApiKeyRequest.Id">
      <summary>
            An API key id. This parameter cannot be used with any of Name, RealmName or Username are used.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateApiKeyRequest.Name">
      <summary>
            An API key name. This parameter cannot be used with any of Id, RealmName or Username are used.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateApiKeyRequest.RealmName">
      <summary>
            The name of an authentication realm. This parameter cannot be used with either Id or Name.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateApiKeyRequest.Username">
      <summary>
            The username of a user. This parameter cannot be used with either Id or Name.
            </summary>
    </member>
    <member name="T:Nest.InvalidateApiKeyRequest">
      <summary>Request for InvalidateApiKey <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html</para></summary>
    </member>
    <member name="P:Nest.InvalidateApiKeyRequest.Id">
      <summary>
            An API key id. This parameter cannot be used with any of Name, RealmName or Username are used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.InvalidateApiKeyRequest.Name">
      <summary>
            An API key name. This parameter cannot be used with any of Id, RealmName or Username are used.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.InvalidateApiKeyRequest.RealmName">
      <summary>
            The name of an authentication realm. This parameter cannot be used with either Id or Name.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.InvalidateApiKeyRequest.Username">
      <summary>
            The username of a user. This parameter cannot be used with either Id or Name.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IInvalidateUserAccessTokenRequest">
      <summary>
            Invalidates one or more access tokens or refresh tokens.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateUserAccessTokenRequest.Token">
      <summary>
            An access token.
            This parameter cannot be used if any of <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" />, <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RealmName" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Username" /> are used.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken">
      <summary>
            A refresh token.
            This parameter cannot be used any of <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" />, <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RealmName" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Username" /> are used.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateUserAccessTokenRequest.RealmName">
      <summary>
            The name of an authentication realm.
            This parameter cannot be used with either <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />.
            </summary>
    </member>
    <member name="P:Nest.IInvalidateUserAccessTokenRequest.Username">
      <summary>
            The username of a user.
            This parameter cannot be used with either <see cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" /> or <see cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />.
            </summary>
    </member>
    <member name="T:Nest.InvalidateUserAccessTokenRequest">
      <summary>Request for InvalidateUserAccessToken <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html</para></summary>
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenRequest.Nest#IInvalidateUserAccessTokenRequest#Token">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.Token" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenRequest.Nest#IInvalidateUserAccessTokenRequest#RefreshToken">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.RefreshToken" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenRequest.Nest#IInvalidateUserAccessTokenRequest#RealmName">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.RealmName" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenRequest.Nest#IInvalidateUserAccessTokenRequest#Username">
      <inheritdoc cref="P:Nest.IInvalidateUserAccessTokenRequest.Username" />
    </member>
    <member name="T:Nest.PutPrivilegesRequest">
      <summary>Request for PutPrivileges <para>TODO</para></summary>
    </member>
    <member name="P:Nest.PutPrivilegesRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="T:Nest.IPutRoleRequest">
      <summary>
            Adds and updates roles in the native realm.
            </summary>
    </member>
    <member name="P:Nest.IPutRoleRequest.Applications">
      <summary>
            A list of application privileges
            </summary>
    </member>
    <member name="P:Nest.IPutRoleRequest.Cluster">
      <summary>
            A list of cluster privileges
            </summary>
    </member>
    <member name="P:Nest.IPutRoleRequest.Global">
      <summary>
            An object defining global privileges. A global privilege is a form of cluster privilege that is
            request-aware. Support for global privileges is currently limited to
            the management of application privileges.
            </summary>
    </member>
    <member name="P:Nest.IPutRoleRequest.Indices">
      <summary>
            A list of indices permissions entries
            </summary>
    </member>
    <member name="P:Nest.IPutRoleRequest.Metadata">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
    </member>
    <member name="P:Nest.IPutRoleRequest.RunAs">
      <summary>
            A list of users that the owners of this role can impersonate.
            </summary>
    </member>
    <member name="T:Nest.PutRoleRequest">
      <summary>Request for PutRole <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html</para></summary>
      <inheritdoc cref="T:Nest.IPutRoleRequest" />
    </member>
    <member name="M:Nest.PutRoleRequest.#ctor(Nest.Name)">
      <summary>/_security/role/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutRoleRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutRoleRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="P:Nest.PutRoleRequest.Applications">
      <summary>
            A list of application privileges
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Applications" />
    </member>
    <member name="P:Nest.PutRoleRequest.Cluster">
      <summary>
            A list of cluster privileges
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Cluster" />
    </member>
    <member name="P:Nest.PutRoleRequest.Global">
      <summary>
            An object defining global privileges. A global privilege is a form of cluster privilege that is
            request-aware. Support for global privileges is currently limited to
            the management of application privileges.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Global" />
    </member>
    <member name="P:Nest.PutRoleRequest.Indices">
      <summary>
            A list of indices permissions entries
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Indices" />
    </member>
    <member name="P:Nest.PutRoleRequest.Metadata">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.Metadata" />
    </member>
    <member name="P:Nest.PutRoleRequest.RunAs">
      <summary>
            A list of users that the owners of this role can impersonate.
            </summary>
      <inheritdoc cref="P:Nest.IPutRoleRequest.RunAs" />
    </member>
    <member name="T:Nest.PutRoleMappingRequest">
      <summary>Request for PutRoleMapping <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html</para></summary>
    </member>
    <member name="M:Nest.PutRoleMappingRequest.#ctor(Nest.Name)">
      <summary>/_security/role_mapping/{name}</summary>
      <param name="name">this parameter is required</param>
    </member>
    <member name="M:Nest.PutRoleMappingRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutRoleMappingRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="P:Nest.IPutUserRequest.Email">
      <summary>
            The email of the user.
            </summary>
    </member>
    <member name="P:Nest.IPutUserRequest.FullName">
      <summary>
            The full name of the user.
            </summary>
    </member>
    <member name="P:Nest.IPutUserRequest.Metadata">
      <summary>
            Arbitrary metadata that you want to associate with the user.
            </summary>
    </member>
    <member name="P:Nest.IPutUserRequest.Password">
      <summary>
            The user’s password. Passwords must be at least 6 characters long.
            </summary>
      <remarks>
            When adding a user, one of <see cref="P:Nest.IPutUserRequest.Password" /> or <see cref="P:Nest.IPutUserRequest.PasswordHash" /> is required. When updating an
            existing user,
            the password is optional, so that other fields on the user (such as their roles) may be updated without modifying the
            user’s password.
            </remarks>
    </member>
    <member name="P:Nest.IPutUserRequest.PasswordHash">
      <summary>
            A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for
            password storage.
            Using this parameter allows the client to pre-hash the password for performance and/or confidentiality reasons.
            The <see cref="P:Nest.IPutUserRequest.Password" /> parameter and the <see cref="P:Nest.IPutUserRequest.PasswordHash" /> parameter cannot be used in the same request.
            </summary>
    </member>
    <member name="P:Nest.IPutUserRequest.Roles">
      <summary>
            A set of roles the user has. The roles determine the user’s access permissions. To create a user without any roles,
            specify an empty list.
            </summary>
    </member>
    <member name="T:Nest.PutUserRequest">
      <summary>Request for PutUser <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html</para></summary>
    </member>
    <member name="M:Nest.PutUserRequest.#ctor(Nest.Name)">
      <summary>/_security/user/{username}</summary>
      <param name="username">this parameter is required</param>
    </member>
    <member name="M:Nest.PutUserRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutUserRequest.Refresh">
      <summary>
             If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh
             to make this operation visible to search, if `false` then do nothing with refreshes.
            </summary>
    </member>
    <member name="P:Nest.PutUserRequest.Email">
      <summary>
            The email of the user.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserRequest.FullName">
      <summary>
            The full name of the user.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserRequest.Metadata">
      <summary>
            Arbitrary metadata that you want to associate with the user.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserRequest.Password">
      <summary>
            The user’s password. Passwords must be at least 6 characters long.
            </summary>
      <remarks>
            When adding a user, one of <see cref="P:Nest.IPutUserRequest.Password" /> or <see cref="P:Nest.IPutUserRequest.PasswordHash" /> is required. When updating an
            existing user,
            the password is optional, so that other fields on the user (such as their roles) may be updated without modifying the
            user’s password.
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserRequest.PasswordHash">
      <summary>
            A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for
            password storage.
            Using this parameter allows the client to pre-hash the password for performance and/or confidentiality reasons.
            The <see cref="P:Nest.IPutUserRequest.Password" /> parameter and the <see cref="P:Nest.IPutUserRequest.PasswordHash" /> parameter cannot be used in the same request.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutUserRequest.Roles">
      <summary>
            A set of roles the user has. The roles determine the user’s access permissions. To create a user without any roles,
            specify an empty list.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.GetCertificatesRequest">
      <summary>Request for GetCertificates <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html</para></summary>
    </member>
    <member name="P:Nest.IClearSqlCursorRequest.Cursor">
      <summary>
        <para>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </para>
      </summary>
    </member>
    <member name="T:Nest.ClearSqlCursorRequest">
      <summary>Request for ClearCursor <para>Clear SQL cursor</para></summary>
    </member>
    <member name="P:Nest.ClearSqlCursorRequest.Cursor">
      <summary>
        <para>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </para>
      </summary>
      <inheritdoc cref="P:Nest.IQuerySqlRequest.Cursor" />
            &gt;
        </member>
    <member name="P:Nest.IQuerySqlRequest.Cursor">
      <summary>
            Continue to the next page by sending back the cursor field returned in the previous response.
            <para>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </para></summary>
    </member>
    <member name="P:Nest.IQuerySqlRequest.Columnar">
      <summary>
            Return the results in a columnar fashion: one row represents all the values of a certain column from the current page of results.
            The following formats can be returned in columnar orientation: json, yaml, cbor and smile.
            </summary>
    </member>
    <member name="T:Nest.QuerySqlRequest">
      <summary>Request for Query <para>Execute SQL</para></summary>
    </member>
    <member name="P:Nest.QuerySqlRequest.Format">
      <summary>a short version of the Accept header, e.g. json, yaml</summary>
    </member>
    <member name="P:Nest.QuerySqlRequest.Cursor">
      <summary>
            Continue to the next page by sending back the cursor field returned in the previous response.
            <para>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </para></summary>
      <inheritdoc cref="P:Nest.IQuerySqlRequest.Cursor" />
            &gt;
        </member>
    <member name="P:Nest.QuerySqlRequest.Columnar">
      <summary>
            Return the results in a columnar fashion: one row represents all the values of a certain column from the current page of results.
            The following formats can be returned in columnar orientation: json, yaml, cbor and smile.
            </summary>
      <inheritdoc cref="P:Nest.IQuerySqlRequest.Columnar" />
            &gt;
        </member>
    <member name="P:Nest.QuerySqlRequest.FetchSize">
      <inheritdoc cref="P:Nest.ISqlRequest.FetchSize" />
            &gt;
        </member>
    <member name="P:Nest.QuerySqlRequest.Filter">
      <inheritdoc cref="P:Nest.ISqlRequest.Filter" />
            &gt;
        </member>
    <member name="P:Nest.QuerySqlRequest.Query">
      <inheritdoc cref="P:Nest.ISqlRequest.Query" />
            &gt;
        </member>
    <member name="P:Nest.QuerySqlRequest.TimeZone">
      <inheritdoc cref="P:Nest.ISqlRequest.TimeZone" />
            &gt;
        </member>
    <member name="T:Nest.TranslateSqlRequest">
      <summary>Request for Translate <para>Translate SQL into Elasticsearch queries</para></summary>
    </member>
    <member name="P:Nest.TranslateSqlRequest.FetchSize">
      <inheritdoc cref="P:Nest.ISqlRequest.FetchSize" />
            &gt;
        </member>
    <member name="P:Nest.TranslateSqlRequest.Filter">
      <inheritdoc cref="P:Nest.ISqlRequest.Filter" />
            &gt;
        </member>
    <member name="P:Nest.TranslateSqlRequest.Query">
      <inheritdoc cref="P:Nest.ISqlRequest.Query" />
            &gt;
        </member>
    <member name="P:Nest.TranslateSqlRequest.TimeZone">
      <inheritdoc cref="P:Nest.ISqlRequest.TimeZone" />
            &gt;
        </member>
    <member name="T:Nest.AcknowledgeWatchRequest">
      <summary>Request for Acknowledge <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</para></summary>
    </member>
    <member name="M:Nest.AcknowledgeWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{watch_id}/_ack</summary>
      <param name="watchId">this parameter is required</param>
    </member>
    <member name="M:Nest.AcknowledgeWatchRequest.#ctor(Nest.Id,Nest.Ids)">
      <summary>/_watcher/watch/{watch_id}/_ack/{action_id}</summary>
      <param name="watchId">this parameter is required</param>
      <param name="actionId">Optional, accepts null</param>
    </member>
    <member name="M:Nest.AcknowledgeWatchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.ActivateWatchRequest">
      <summary>Request for Activate <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</para></summary>
    </member>
    <member name="M:Nest.ActivateWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{watch_id}/_activate</summary>
      <param name="watchId">this parameter is required</param>
    </member>
    <member name="M:Nest.ActivateWatchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeactivateWatchRequest">
      <summary>Request for Deactivate <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</para></summary>
    </member>
    <member name="M:Nest.DeactivateWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{watch_id}/_deactivate</summary>
      <param name="watchId">this parameter is required</param>
    </member>
    <member name="M:Nest.DeactivateWatchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.DeleteWatchRequest">
      <summary>Request for Delete <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</para></summary>
    </member>
    <member name="M:Nest.DeleteWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.DeleteWatchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.ActionModes">
      <summary>
            Determines how to handle the watch actions as part of the watch execution.
            </summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.AlternativeInput">
      <summary>
            When present, the watch uses this object as a payload
            instead of executing its own input.
            </summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.IgnoreCondition">
      <summary>
            If this is set to true the watch execution will use the Always Condition.
            </summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.RecordExecution">
      <summary>
            If this is set to true the WatchRecord generated by executing the watch will be persisted
            to the .watcher_history index for the current time.
            Also the status of the watch is updated,
            possbily throttling subsequent executions.
            </summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.SimulatedActions">
      <summary>
            This field can either be a list of action ids or the string _all.
             If _all is set or an action that is executed by the watch appears in this list
             it will be executed in simulated mode.
            </summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.TriggerData">
      <summary>
            This structure will be parsed as a trigger event and used for the watch execution.
            </summary>
    </member>
    <member name="P:Nest.IExecuteWatchRequest.Watch">
      <summary>
            When present, this watch is used instead of the one specified in the request.
            This watch is not persisted to the index and record_execution cannot be set.
            </summary>
    </member>
    <member name="T:Nest.ExecuteWatchRequest">
      <summary>Request for Execute <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</para></summary>
    </member>
    <member name="M:Nest.ExecuteWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}/_execute</summary>
      <param name="id">Optional, accepts null</param>
    </member>
    <member name="M:Nest.ExecuteWatchRequest.#ctor">
      <summary>/_watcher/watch/_execute</summary>
    </member>
    <member name="P:Nest.ExecuteWatchRequest.Debug">
      <summary>indicates whether the watch should execute in debug mode</summary>
    </member>
    <member name="T:Nest.GetWatchRequest">
      <summary>Request for Get <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</para></summary>
    </member>
    <member name="M:Nest.GetWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.GetWatchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="T:Nest.IPutWatchRequest">
      <summary>
            A PutWatch request
            </summary>
    </member>
    <member name="P:Nest.IPutWatchRequest.Actions">
      <summary>
            The actions that will be run if the condition matches
            </summary>
    </member>
    <member name="P:Nest.IPutWatchRequest.Condition">
      <summary>
            Defines if the actions should be run
            </summary>
    </member>
    <member name="P:Nest.IPutWatchRequest.Input">
      <summary>
            Defines the input that loads the data for the watch
            </summary>
    </member>
    <member name="P:Nest.IPutWatchRequest.Metadata">
      <summary>
            Metadata that will be copied into the history entries
            </summary>
    </member>
    <member name="P:Nest.IPutWatchRequest.ThrottlePeriod">
      <summary>
            The minimum time between actions being run. Defaults to 5 seconds.
            </summary>
      <remarks>
            Default can be changed in the config file with the setting <code>xpack.watcher.throttle.period.default_period</code>.
            </remarks>
    </member>
    <member name="P:Nest.IPutWatchRequest.Transform">
      <summary>
            Processes and changes the payload in the watch execution context to prepare it for the actions.
            </summary>
    </member>
    <member name="P:Nest.IPutWatchRequest.Trigger">
      <summary>
            Defines when the watch should run
            </summary>
    </member>
    <member name="T:Nest.PutWatchRequest">
      <summary>Request for Put <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</para></summary>
      <inheritdoc cref="T:Nest.IPutWatchRequest" />
    </member>
    <member name="M:Nest.PutWatchRequest.#ctor(Nest.Id)">
      <summary>/_watcher/watch/{id}</summary>
      <param name="id">this parameter is required</param>
    </member>
    <member name="M:Nest.PutWatchRequest.#ctor">
      <summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
    </member>
    <member name="P:Nest.PutWatchRequest.Active">
      <summary>Specify whether the watch is in/active by default</summary>
    </member>
    <member name="P:Nest.PutWatchRequest.IfPrimaryTerm">
      <summary>only update the watch if the last operation that has changed the watch has the specified primary term</summary>
    </member>
    <member name="P:Nest.PutWatchRequest.IfSequenceNumber">
      <summary>only update the watch if the last operation that has changed the watch has the specified sequence number</summary>
    </member>
    <member name="P:Nest.PutWatchRequest.Version">
      <summary>Explicit version number for concurrency control</summary>
    </member>
    <member name="P:Nest.PutWatchRequest.Actions">
      <summary>
            The actions that will be run if the condition matches
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutWatchRequest.Condition">
      <summary>
            Defines if the actions should be run
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutWatchRequest.Input">
      <summary>
            Defines the input that loads the data for the watch
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutWatchRequest.Metadata">
      <summary>
            Metadata that will be copied into the history entries
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutWatchRequest.ThrottlePeriod">
      <summary>
            The minimum time between actions being run. Defaults to 5 seconds.
            </summary>
      <remarks>
            Default can be changed in the config file with the setting <code>xpack.watcher.throttle.period.default_period</code>.
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutWatchRequest.Transform">
      <summary>
            Processes and changes the payload in the watch execution context to prepare it for the actions.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PutWatchRequest.Trigger">
      <summary>
            Defines when the watch should run
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.StartWatcherRequest">
      <summary>Request for Start <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</para></summary>
    </member>
    <member name="T:Nest.WatcherStatsRequest">
      <summary>Request for Stats <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</para></summary>
    </member>
    <member name="M:Nest.WatcherStatsRequest.#ctor">
      <summary>/_watcher/stats</summary>
    </member>
    <member name="M:Nest.WatcherStatsRequest.#ctor(Nest.Metrics)">
      <summary>/_watcher/stats/{metric}</summary>
      <param name="metric">Optional, accepts null</param>
    </member>
    <member name="P:Nest.WatcherStatsRequest.EmitStacktraces">
      <summary>Emits stack traces of currently running watches</summary>
    </member>
    <member name="T:Nest.StopWatcherRequest">
      <summary>Request for Stop <para>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</para></summary>
    </member>
    <member name="T:Nest.XPackInfoRequest">
      <summary>Request for Info <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</para></summary>
    </member>
    <member name="P:Nest.XPackInfoRequest.Categories">
      <summary>Comma-separated list of info categories. Can be any of: build, license, features</summary>
    </member>
    <member name="T:Nest.XPackUsageRequest">
      <summary>Request for Usage <para>Retrieve information about xpack features usage</para></summary>
    </member>
    <member name="P:Nest.XPackUsageRequest.MasterTimeout">
      <summary>Specify timeout for watch write operation</summary>
    </member>
    <member name="T:Nest.ITypedSearchRequest">
      <summary> Signals the type to deserialize hits into </summary>
    </member>
    <member name="T:Nest.IFieldCollapse">
      <summary>
            Allows to collapse search results based on field values.
            The collapsing is done by selecting only the top sorted document per collapse key.
            For instance the query below retrieves the best tweet for each user and sorts them by number of likes.
            <para>
            NOTE: The collapsing is applied to the top hits only and does not affect aggregations.
            </para></summary>
    </member>
    <member name="P:Nest.IFieldCollapse.Field">
      <summary>
            The field used for collapsing must be a single valued keyword or number field with doc-values activated
            </summary>
    </member>
    <member name="P:Nest.IFieldCollapse.InnerHits">
      <summary>
            It is also possible to expand each collapsed top hits with the `inner_hits` option.
            </summary>
    </member>
    <member name="P:Nest.IFieldCollapse.MaxConcurrentGroupSearches">
      <summary>
            The expansion of the group is done by sending an additional query for each inner_hit request for each collapsed hit returned
            in the response. This can significantly slow things down if you have too many groups and/or inner_hit requests.
            The max_concurrent_group_searches request parameter can be used to control the maximum number of
            concurrent searches allowed in this phase. The default is based on the number of data nodes and the
            default search thread pool size.
            </summary>
    </member>
    <member name="T:Nest.FieldCollapse">
      <inheritdoc cref="T:Nest.IFieldCollapse" />
    </member>
    <member name="P:Nest.FieldCollapse.Field">
      <summary>
            The field used for collapsing must be a single valued keyword or number field with doc-values activated
            </summary>
      <inheritdoc cref="P:Nest.IFieldCollapse.Field" />
    </member>
    <member name="P:Nest.FieldCollapse.InnerHits">
      <summary>
            It is also possible to expand each collapsed top hits with the `inner_hits` option.
            </summary>
      <inheritdoc cref="P:Nest.IFieldCollapse.InnerHits" />
    </member>
    <member name="P:Nest.FieldCollapse.MaxConcurrentGroupSearches">
      <summary>
            The expansion of the group is done by sending an additional query for each inner_hit request for each collapsed hit returned
            in the response. This can significantly slow things down if you have too many groups and/or inner_hit requests.
            The max_concurrent_group_searches request parameter can be used to control the maximum number of
            concurrent searches allowed in this phase. The default is based on the number of data nodes and the
            default search thread pool size.
            </summary>
      <inheritdoc cref="P:Nest.IFieldCollapse.MaxConcurrentGroupSearches" />
    </member>
    <member name="T:Nest.FieldCollapseDescriptor`1">
      <inheritdoc cref="T:Nest.IFieldCollapse" />
    </member>
    <member name="M:Nest.FieldCollapseDescriptor`1.MaxConcurrentGroupSearches(System.Nullable{System.Int32})">
      <summary>
            The expansion of the group is done by sending an additional query for each inner_hit request for each collapsed hit returned
            in the response. This can significantly slow things down if you have too many groups and/or inner_hit requests.
            The max_concurrent_group_searches request parameter can be used to control the maximum number of
            concurrent searches allowed in this phase. The default is based on the number of data nodes and the
            default search thread pool size.
            </summary>
      <inheritdoc cref="P:Nest.IFieldCollapse.MaxConcurrentGroupSearches" />
    </member>
    <member name="M:Nest.FieldCollapseDescriptor`1.Field(Nest.Field)">
      <summary>
            The field used for collapsing must be a single valued keyword or number field with doc-values activated
            </summary>
      <inheritdoc cref="P:Nest.IFieldCollapse.Field" />
    </member>
    <member name="M:Nest.FieldCollapseDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IFieldCollapse.Field" />
    </member>
    <member name="M:Nest.FieldCollapseDescriptor`1.InnerHits(System.Func{Nest.InnerHitsDescriptor{`0},Nest.IInnerHits})">
      <summary>
            It is also possible to expand each collapsed top hits with the `inner_hits` option.
            </summary>
      <inheritdoc cref="P:Nest.IFieldCollapse.InnerHits" />
    </member>
    <member name="F:Nest.BoundaryScanner.Characters">
      <summary>
            (default mode for the FVH): allows to configure which characters (boundary_chars) constitute a boundary for highlighting. It’s a single
            string with each boundary character defined in it (defaults to .,!? \t\n). It also allows configuring the boundary_max_scan to
            control how far to look for boundary characters (defaults to 20). Works only with the Fast Vector Highlighter.
            </summary>
    </member>
    <member name="F:Nest.BoundaryScanner.Sentence">
      <summary>
            sentence and word: use Java’s BreakIterator to break the highlighted fragments at the next sentence or word boundary.
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
    </member>
    <member name="F:Nest.BoundaryScanner.Word">
      <summary>
            sentence and word: use Java’s BreakIterator to break the highlighted fragments at the next sentence or word boundary.
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.BoundaryChars">
      <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.BoundaryMaxScan">
      <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.BoundaryScanner">
      <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break the highlighted
            fragments using boundary_scanner
            </summary>
    </member>
    <member name="P:Nest.IHighlight.BoundaryScannerLocale">
      <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.Encoder">
      <summary>
            Define how highlighted text will be encoded.
            It can be either default (no encoding) or html (will escape html, if you use html highlighting tags).
            </summary>
    </member>
    <member name="P:Nest.IHighlight.Fragmenter">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
    </member>
    <member name="P:Nest.IHighlight.FragmentOffset">
      <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
    </member>
    <member name="P:Nest.IHighlight.FragmentSize">
      <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
    </member>
    <member name="P:Nest.IHighlight.NoMatchSize">
      <summary>
            In the case where there is no matching fragment to highlight, the default is to not return anything. Instead, we can return a snippet of
            text from
            the beginning of the field by setting no_match_size (default 0) to the length of the text that you want returned. The actual length may be
            shorter or longer than specified as it tries to break on a word boundary.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.NumberOfFragments">
      <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.Order">
      <summary>
            The order in which highlighted fragments are sorted
            </summary>
    </member>
    <member name="P:Nest.IHighlight.PostTags">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.PreTags">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
    </member>
    <member name="P:Nest.IHighlight.RequireFieldMatch">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
    </member>
    <member name="P:Nest.IHighlight.TagsSchema">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
    </member>
    <member name="P:Nest.Highlight.BoundaryChars">
      <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.BoundaryMaxScan">
      <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.BoundaryScanner">
      <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break the highlighted
            fragments using boundary_scanner
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.BoundaryScannerLocale">
      <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.Encoder">
      <summary>
            Define how highlighted text will be encoded.
            It can be either default (no encoding) or html (will escape html, if you use html highlighting tags).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.Fields">
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.Fragmenter">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.FragmentOffset">
      <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.FragmentSize">
      <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.MaxFragmentLength">
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.NoMatchSize">
      <summary>
            In the case where there is no matching fragment to highlight, the default is to not return anything. Instead, we can return a snippet of
            text from
            the beginning of the field by setting no_match_size (default 0) to the length of the text that you want returned. The actual length may be
            shorter or longer than specified as it tries to break on a word boundary.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.NumberOfFragments">
      <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.Order">
      <summary>
            The order in which highlighted fragments are sorted
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.PostTags">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.PreTags">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.RequireFieldMatch">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.Highlight.TagsSchema">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.Fields(System.Func{Nest.HighlightFieldDescriptor{`0},Nest.IHighlightField}[])">
      <inheritdoc cref="P:Nest.IHighlight.Fields" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.TagsSchema(System.Nullable{Nest.HighlighterTagsSchema})">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
      <inheritdoc cref="P:Nest.IHighlight.TagsSchema" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.PreTags(System.String[])">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.PreTags" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.PostTags(System.String[])">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.PostTags" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.PreTags(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.PreTags" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.PostTags(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.PostTags" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.FragmentSize(System.Nullable{System.Int32})">
      <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.FragmentSize" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.NumberOfFragments(System.Nullable{System.Int32})">
      <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.NumberOfFragments" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.FragmentOffset(System.Nullable{System.Int32})">
      <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.FragmentOffset" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.Encoder(System.Nullable{Nest.HighlighterEncoder})">
      <summary>
            Define how highlighted text will be encoded.
            It can be either default (no encoding) or html (will escape html, if you use html highlighting tags).
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.Encoder" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.Order(System.Nullable{Nest.HighlighterOrder})">
      <summary>
            The order in which highlighted fragments are sorted
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.Order" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.RequireFieldMatch(System.Nullable{System.Boolean})">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
      <inheritdoc cref="P:Nest.IHighlight.RequireFieldMatch" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.BoundaryChars(System.String)">
      <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.BoundaryChars" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.BoundaryMaxScan(System.Nullable{System.Int32})">
      <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.BoundaryMaxScan" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.MaxFragmentLength(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.IHighlight.MaxFragmentLength" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.NoMatchSize(System.Nullable{System.Int32})">
      <summary>
            In the case where there is no matching fragment to highlight, the default is to not return anything. Instead, we can return a snippet of
            text from
            the beginning of the field by setting no_match_size (default 0) to the length of the text that you want returned. The actual length may be
            shorter or longer than specified as it tries to break on a word boundary.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.NoMatchSize" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.BoundaryScanner(System.Nullable{Nest.BoundaryScanner})">
      <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break the highlighted
            fragments using boundary_scanner
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.BoundaryScanner" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.BoundaryScannerLocale(System.String)">
      <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.BoundaryScannerLocale" />
    </member>
    <member name="M:Nest.HighlightDescriptor`1.Fragmenter(System.Nullable{Nest.HighlighterFragmenter})">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
      <inheritdoc cref="P:Nest.IHighlight.Fragmenter" />
    </member>
    <member name="T:Nest.HighlighterEncoder">
      <summary>
            Indicates if the highlighted text should be HTML encoded
            </summary>
    </member>
    <member name="F:Nest.HighlighterEncoder.Default">
      <summary>
            No encoding
            </summary>
    </member>
    <member name="F:Nest.HighlighterEncoder.Html">
      <summary>
            Escapes HTML highlighting tags
            </summary>
    </member>
    <member name="T:Nest.HighlighterFragmenter">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
    </member>
    <member name="F:Nest.HighlighterFragmenter.Simple">
      <summary>
            Breaks up text into same sized fragments.
            </summary>
    </member>
    <member name="F:Nest.HighlighterFragmenter.Span">
      <summary>
            Same as the simple fragmenter, but tries not to break up text between highlighted terms (this is applicable
            when using phrase like queries). This is the default.
            </summary>
    </member>
    <member name="T:Nest.HighlighterOrder">
      <summary>
            Sorts highlighted fragments
            </summary>
    </member>
    <member name="F:Nest.HighlighterOrder.Score">
      <summary>
            Sorts highlighted fragments by score. Only valid for the <see cref="F:Nest.HighlighterType.Unified" /> highlighter
            </summary>
    </member>
    <member name="T:Nest.HighlighterTagsSchema">
      <summary>
            Use a built-in tag schema
            </summary>
    </member>
    <member name="F:Nest.HighlighterTagsSchema.Styled">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
        <para>Currently a single schema called "styled" with the following pre_tags:</para>
        <para>&lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,</para>
        <para>&lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,</para>
        <para>&lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,</para>
        <para>&lt;em class="hlt10"&gt;</para>
      </remarks>
    </member>
    <member name="T:Nest.HighlighterType">
      <summary>
            Type of highlighter
            </summary>
    </member>
    <member name="F:Nest.HighlighterType.Plain">
      <summary>
            Plain Highlighter.
            Uses the Lucene highlighter.
            It tries hard to reflect the query matching logic in terms of understanding word
            importance and any word positioning criteria in phrase queries.
            </summary>
    </member>
    <member name="F:Nest.HighlighterType.Fvh">
      <summary>
            Fast Vector Highlighter.
            If term_vector information is provided by setting term_vector to with_positions_offsets
            in the mapping then the fast vector highlighter will be used instead of the plain highlighter
            </summary>
    </member>
    <member name="F:Nest.HighlighterType.Unified">
      <summary>
            Unified Highlighter.
            The default choice.
            The unified highlighter can extract offsets from either term vectors, or via re-analyzing text.
            Under the hood it uses Lucene UnifiedHighlighter which picks its strategy depending on the field and the query to highlight.
            Independently of the strategy this highlighter breaks the text into sentences and scores individual sentences as if
            they were documents in this corpus, using the BM25 algorithm. It supports accurate phrase and multi-term
            (fuzzy, prefix, regex) highlighting
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.BoundaryChars">
      <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.BoundaryMaxScan">
      <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.BoundaryScanner">
      <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break
            the highlighted
            fragments using boundary_scanner
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.BoundaryScannerLocale">
      <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these
            boundaries.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.Field">
      <summary>
            The field on which to perform highlighting.
            </summary>
      <remarks>
            In order to perform highlighting, the actual content of the field is required.
            If the field in question is stored (has store set to true in the mapping) it will be used,
            otherwise, the actual _source will be loaded and the relevant field will be extracted from it.
            </remarks>
    </member>
    <member name="P:Nest.IHighlightField.ForceSource">
      <summary>
            Forces the highlighting to highlight fields based on the source even if fields are stored separately.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.Fragmenter">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.FragmentOffset">
      <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.FragmentSize">
      <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.HighlightQuery">
      <summary>
            The query to use for highlighting
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.MatchedFields">
      <summary>
            Combine matches on multiple fields to highlight a single field when using the fast vector highighter.
            This is most intuitive for multifields that analyze the same string in different ways.
            All matched fields must have term_vector set to with_positions_offsets, but only the field to
            which the matches are combined is loaded so only that field would benefit from having store set to yes.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.NoMatchSize">
      <summary>
            The length of a snippet of text from the beginning of the field to return
            when no match for highlighting is found. Default behaviour is to not return anything when a match is not found.
            The actual length may be shorter than specified as it tries to break on a word boundary.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.NumberOfFragments">
      <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.Order">
      <summary>
            The order in which highlighted fragments are sorted. Only valid for the unified highlighter.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.PhraseLimit">
      <summary>
            Controls the number of matching phrases in a document that are considered. Prevents the
            <see cref="F:Nest.HighlighterType.Fvh" /> highlighter from analyzing too many phrases and consuming too much memory.
            When using matched_fields, <see cref="P:Nest.IHighlightField.PhraseLimit" /> phrases per matched field are considered. Raising the limit
            increases query time
            and consumes more memory. Only supported by the <see cref="F:Nest.HighlighterType.Fvh" /> highlighter. Defaults to 256.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.PostTags">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.PreTags">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.RequireFieldMatch">
      <summary>
            Determines if only fields that hold a query match will be highlighted. Set to <c>false</c>
            will cause any field to be highlighted regardless of whether the query matched specifically on them. Default behaviour
            is <c>true</c>.
            </summary>
    </member>
    <member name="P:Nest.IHighlightField.TagsSchema">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
    </member>
    <member name="P:Nest.IHighlightField.Type">
      <summary>
            The type of highlighter to use. Can be a defined or custom highlighter
            </summary>
    </member>
    <member name="P:Nest.HighlightField.BoundaryChars">
      <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.BoundaryMaxScan">
      <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.BoundaryScanner">
      <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break
            the highlighted
            fragments using boundary_scanner
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.BoundaryScannerLocale">
      <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these
            boundaries.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.Field">
      <summary>
            The field on which to perform highlighting.
            </summary>
      <remarks>
            In order to perform highlighting, the actual content of the field is required.
            If the field in question is stored (has store set to true in the mapping) it will be used,
            otherwise, the actual _source will be loaded and the relevant field will be extracted from it.
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.ForceSource">
      <summary>
            Forces the highlighting to highlight fields based on the source even if fields are stored separately.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.Fragmenter">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.FragmentOffset">
      <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.FragmentSize">
      <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.HighlightQuery">
      <summary>
            The query to use for highlighting
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.MatchedFields">
      <summary>
            Combine matches on multiple fields to highlight a single field when using the fast vector highighter.
            This is most intuitive for multifields that analyze the same string in different ways.
            All matched fields must have term_vector set to with_positions_offsets, but only the field to
            which the matches are combined is loaded so only that field would benefit from having store set to yes.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.MaxFragmentLength">
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.NoMatchSize">
      <summary>
            The length of a snippet of text from the beginning of the field to return
            when no match for highlighting is found. Default behaviour is to not return anything when a match is not found.
            The actual length may be shorter than specified as it tries to break on a word boundary.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.NumberOfFragments">
      <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.Order">
      <summary>
            The order in which highlighted fragments are sorted. Only valid for the unified highlighter.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.PhraseLimit">
      <summary>
            Controls the number of matching phrases in a document that are considered. Prevents the
            <see cref="F:Nest.HighlighterType.Fvh" /> highlighter from analyzing too many phrases and consuming too much memory.
            When using matched_fields, <see cref="P:Nest.IHighlightField.PhraseLimit" /> phrases per matched field are considered. Raising the limit
            increases query time
            and consumes more memory. Only supported by the <see cref="F:Nest.HighlighterType.Fvh" /> highlighter. Defaults to 256.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.PostTags">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.PreTags">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.RequireFieldMatch">
      <summary>
            Determines if only fields that hold a query match will be highlighted. Set to <c>false</c>
            will cause any field to be highlighted regardless of whether the query matched specifically on them. Default behaviour
            is <c>true</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.TagsSchema">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.HighlightField.Type">
      <summary>
            The type of highlighter to use. Can be a defined or custom highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.Field(Nest.Field)">
      <summary>
            The field on which to perform highlighting.
            </summary>
      <remarks>
            In order to perform highlighting, the actual content of the field is required.
            If the field in question is stored (has store set to true in the mapping) it will be used,
            otherwise, the actual _source will be loaded and the relevant field will be extracted from it.
            </remarks>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.AllField">
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.TagsSchema(System.Nullable{Nest.HighlighterTagsSchema})">
      <summary>
            Use a specific "tag" schemas.
            </summary>
      <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.ForceSource(System.Nullable{System.Boolean})">
      <summary>
            Forces the highlighting to highlight fields based on the source even if fields are stored separately.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.Type(Nest.HighlighterType)">
      <summary>
            The type of highlighter to use. Can be a defined or custom highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.Type(System.String)">
      <summary>
            The type of highlighter to use. Can be a defined or custom highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.PreTags(System.String[])">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.PostTags(System.String[])">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.PreTags(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.PostTags(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.FragmentSize(System.Nullable{System.Int32})">
      <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.NoMatchSize(System.Nullable{System.Int32})">
      <summary>
            The length of a snippet of text from the beginning of the field to return
            when no match for highlighting is found. Default behaviour is to not return anything when a match is not found.
            The actual length may be shorter than specified as it tries to break on a word boundary.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.NumberOfFragments(System.Nullable{System.Int32})">
      <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.FragmentOffset(System.Nullable{System.Int32})">
      <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.Order(System.Nullable{Nest.HighlighterOrder})">
      <summary>
            The order in which highlighted fragments are sorted. Only valid for the unified highlighter.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.RequireFieldMatch(System.Nullable{System.Boolean})">
      <summary>
            Determines if only fields that hold a query match will be highlighted. Set to <c>false</c>
            will cause any field to be highlighted regardless of whether the query matched specifically on them. Default behaviour
            is <c>true</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryCharacters(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryMaxScan(System.Nullable{System.Int32})">
      <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.MatchedFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            Combine matches on multiple fields to highlight a single field when using the fast vector highighter.
            This is most intuitive for multifields that analyze the same string in different ways.
            All matched fields must have term_vector set to with_positions_offsets, but only the field to
            which the matches are combined is loaded so only that field would benefit from having store set to yes.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.HighlightQuery(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
      <summary>
            The query to use for highlighting
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.MaxFragmentLength(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryScanner(System.Nullable{Nest.BoundaryScanner})">
      <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break
            the highlighted
            fragments using boundary_scanner
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryScannerLocale(System.String)">
      <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these
            boundaries.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.Fragmenter(System.Nullable{Nest.HighlighterFragmenter})">
      <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HighlightFieldDescriptor`1.PhraseLimit(System.Nullable{System.Int32})">
      <summary>
            Controls the number of matching phrases in a document that are considered. Prevents the
            <see cref="F:Nest.HighlighterType.Fvh" /> highlighter from analyzing too many phrases and consuming too much memory.
            When using matched_fields, <see cref="P:Nest.IHighlightField.PhraseLimit" /> phrases per matched field are considered. Raising the limit
            increases query time
            and consumes more memory. Only supported by the <see cref="F:Nest.HighlighterType.Fvh" /> highlighter. Defaults to 256.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IHitMetadata`1">
      <summary>
            Metadata about a hit matching a query
            </summary>
      <typeparam name="TDocument">The type of the source document</typeparam>
    </member>
    <member name="P:Nest.IHitMetadata`1.Id">
      <summary>
            The id of the hit
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.Index">
      <summary>
            The index in which the hit resides
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.PrimaryTerm">
      <summary>
            The primary term of the hit
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.Routing">
      <summary>
            The routing value for the hit
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.SequenceNumber">
      <summary>
            The sequence number for this hit
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.Source">
      <summary>
            The source document for the hit
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.Type">
      <summary>
            The type of hit
            </summary>
    </member>
    <member name="P:Nest.IHitMetadata`1.Version">
      <summary>
            The version of the hit
            </summary>
    </member>
    <member name="T:Nest.IHit`1">
      <summary>
            A hit matching a query
            </summary>
      <typeparam name="TDocument">The type of the source document</typeparam>
    </member>
    <member name="P:Nest.IHit`1.Explanation">
      <summary>
            An explanation for why the hit is a match for a query
            </summary>
    </member>
    <member name="P:Nest.IHit`1.Fields">
      <summary>
            The individual fields requested for a hit
            </summary>
    </member>
    <member name="P:Nest.IHit`1.Highlight">
      <summary>
            The field highlights
            </summary>
    </member>
    <member name="P:Nest.IHit`1.InnerHits">
      <summary>
            The inner hits
            </summary>
    </member>
    <member name="P:Nest.IHit`1.MatchedQueries">
      <summary>
            Which queries the hit is a match for, when a compound query is involved
            and named queries used
            </summary>
    </member>
    <member name="P:Nest.IHit`1.Score">
      <summary>
            The score for the hit in relation to the query
            </summary>
    </member>
    <member name="P:Nest.IHit`1.Sorts">
      <summary>
            The sort values used in sorting the hit relative to other hits
            </summary>
    </member>
    <member name="T:Nest.Hit`1">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Explanation">
      <summary>
            An explanation for why the hit is a match for a query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Fields">
      <summary>
            The individual fields requested for a hit
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Highlight">
      <summary>
            The field highlights
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Id">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Index">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.InnerHits">
      <summary>
            The inner hits
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.MatchedQueries">
      <summary>
            Which queries the hit is a match for, when a compound query is involved
            and named queries used
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Nested">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.PrimaryTerm">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Routing">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Score">
      <summary>
            The score for the hit in relation to the query
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.SequenceNumber">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Sorts">
      <summary>
            The sort values used in sorting the hit relative to other hits
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Source">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Type">
      <inheritdoc />
    </member>
    <member name="P:Nest.Hit`1.Version">
      <inheritdoc />
    </member>
    <member name="M:Nest.InnerHitsResult.Documents``1">
      <summary>
            Retrieve <see cref="P:Nest.InnerHitsResult.Hits" /> documents as a strongly typed
            collection
            </summary>
      <typeparam name="T">The hits document type</typeparam>
    </member>
    <member name="T:Nest.TotalHits">
      <summary>
            Description of the total number of hits of a query. The total hit count
            can't generally be computed accurately without visiting all matches, which
            is costly for queries that match lots of documents. Given that it is often
            enough to have a lower bounds of the number of hits, such as
            "there are more than 1000 hits", Elasticsearch has options to stop counting as soon
            as a threshold has been reached in order to improve query times.
            </summary>
    </member>
    <member name="P:Nest.TotalHits.Relation">
      <summary>Whether <see cref="P:Nest.TotalHits.Value" /> is the exact hit count, in which case <see cref="P:Nest.TotalHits.Relation" /> is
            <see cref="F:Nest.TotalHitsRelation.EqualTo" />, or a lower bound of the total hit count, in which case
            <see cref="P:Nest.TotalHits.Relation" /> is <see cref="F:Nest.TotalHitsRelation.GreaterThanOrEqualTo" /></summary>
    </member>
    <member name="P:Nest.TotalHits.Value">
      <summary>The value of the total hit count. Must be interpreted in the context of <see cref="P:Nest.TotalHits.Relation" /></summary>
    </member>
    <member name="T:Nest.TotalHitsRelation">
      <summary>How the <see cref="P:Nest.TotalHits.Value" /> should be interpreted</summary>
    </member>
    <member name="F:Nest.TotalHitsRelation.EqualTo">
      <summary>The total hit count is equal to <see cref="P:Nest.TotalHits.Value" /></summary>
    </member>
    <member name="F:Nest.TotalHitsRelation.GreaterThanOrEqualTo">
      <summary>The total hit count is greater than or equal to <see cref="P:Nest.TotalHits.Value" /></summary>
    </member>
    <member name="P:Nest.IInnerHits.Collapse">
      <summary>
            Provides a second level of collapsing, NOTE: Elasticsearch only supports collapsing up to two levels.
            </summary>
    </member>
    <member name="P:Nest.InnerHits.Collapse">
      <summary>
            Provides a second level of collapsing, NOTE: Elasticsearch only supports collapsing up to two levels.
            </summary>
      <inheritdoc cref="P:Nest.IInnerHits.Collapse" />
    </member>
    <member name="M:Nest.InnerHitsDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
      <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter.
            </summary>
    </member>
    <member name="M:Nest.InnerHitsDescriptor`1.Collapse(System.Func{Nest.FieldCollapseDescriptor{`0},Nest.IFieldCollapse})">
      <summary>
            Provides a second level of collapsing, NOTE: Elasticsearch only supports collapsing up to two levels.
            </summary>
      <inheritdoc cref="P:Nest.IInnerHits.Collapse" />
    </member>
    <member name="P:Nest.AggregationProfile.Breakdown">
      <summary>
            Detailed stats about how the time was spent
            </summary>
    </member>
    <member name="P:Nest.AggregationProfile.Description">
      <summary>
            The user defined name of the aggregation
            </summary>
    </member>
    <member name="P:Nest.AggregationProfile.TimeInNanoseconds">
      <summary>
            The time this aggregation took, in nanoseconds
            </summary>
    </member>
    <member name="P:Nest.AggregationProfile.Type">
      <summary>
            The Elasticsearch aggregation type
            </summary>
    </member>
    <member name="P:Nest.QueryProfile.Breakdown">
      <summary>
            Detailed stats about how the time was spent
            </summary>
    </member>
    <member name="P:Nest.QueryProfile.Children">
      <summary>
            Sub-queries of this query
            </summary>
    </member>
    <member name="P:Nest.QueryProfile.Description">
      <summary>
            The lucene explanation text for the query
            </summary>
    </member>
    <member name="P:Nest.QueryProfile.TimeInNanoseconds">
      <summary>
            The time that this query took in nanoseconds
            </summary>
    </member>
    <member name="P:Nest.QueryProfile.Type">
      <summary>
            The lucene class name for the type of query
            </summary>
    </member>
    <member name="T:Nest.ISearchResponse`1">
      <summary>
            A response to a search request
            </summary>
      <typeparam name="TDocument">The document type</typeparam>
    </member>
    <member name="P:Nest.ISearchResponse`1.Aggregations">
      <summary>
            Gets the collection of aggregations
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Clusters">
      <summary>
            Gets the statistics about the clusters on which the search query was executed.
            </summary>
      <remarks>
            Valid for cross cluster searches and Elasticsearch 6.1.0+
            </remarks>
    </member>
    <member name="P:Nest.ISearchResponse`1.Documents">
      <summary>
            Gets the documents inside the hits, by deserializing <see cref="P:Nest.IHitMetadata`1.Source" /> into <typeparamref name="TDocument" /><para>
            NOTE: if you use <see cref="P:Nest.ISearchRequest.StoredFields" /> on the search request,
            <see cref="P:Nest.ISearchResponse`1.Documents" /> will be empty and you should use <see cref="P:Nest.ISearchResponse`1.Fields" />
            instead to get the field values. As an alternative to
            <see cref="P:Nest.ISearchResponse`1.Fields" />, try source filtering using <see cref="P:Nest.ISearchRequest.Source" /> on the
            search request to return <see cref="P:Nest.ISearchResponse`1.Documents" /> with partial fields selected
            </para></summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Fields">
      <summary>
            Gets the field values inside the hits, when the search request uses
            <see cref="P:Nest.SearchRequest.StoredFields" />.
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Hits">
      <summary>
            Gets the collection of hits that matched the query
            </summary>
      <value>
            The hits.
            </value>
    </member>
    <member name="P:Nest.ISearchResponse`1.HitsMetadata">
      <summary>
            Gets the meta data about the hits that match the search query criteria.
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.MaxScore">
      <summary>
            Gets the maximum score for documents matching the search query criteria
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.NumberOfReducePhases">
      <summary>
            Number of times the server performed an incremental reduce phase
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Profile">
      <summary>
            Gets the results of profiling the search query. Has a value only when
            <see cref="P:Nest.ISearchRequest.Profile" /> is set to <c>true</c> on the search request.
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.ScrollId">
      <summary>
            Gets the scroll id which can be passed to the Scroll API in order to retrieve the next batch
            of results. Has a value only when <see cref="P:Nest.SearchRequest.Scroll" /> is specified on the
            search request
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Shards">
      <summary>
            Gets the statistics about the shards on which the search query was executed.
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Suggest">
      <summary>
            Gets the suggester results.
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.TerminatedEarly">
      <summary>
            Gets a value indicating whether the search was terminated early
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.TimedOut">
      <summary>
            Gets a value indicating whether the search timed out or not
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Took">
      <summary>
            Time in milliseconds for Elasticsearch to execute the search
            </summary>
    </member>
    <member name="P:Nest.ISearchResponse`1.Total">
      <summary>
            Gets the total number of documents matching the search query criteria
            </summary>
    </member>
    <member name="P:Nest.SearchResponse`1.Aggregations">
      <summary>
            Gets the collection of aggregations
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Clusters">
      <summary>
            Gets the statistics about the clusters on which the search query was executed.
            </summary>
      <remarks>
            Valid for cross cluster searches and Elasticsearch 6.1.0+
            </remarks>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Documents">
      <summary>
            Gets the documents inside the hits, by deserializing <see cref="P:Nest.IHitMetadata`1.Source" /> into <typeparamref name="TDocument" /><para>
            NOTE: if you use <see cref="P:Nest.ISearchRequest.StoredFields" /> on the search request,
            <see cref="P:Nest.ISearchResponse`1.Documents" /> will be empty and you should use <see cref="P:Nest.ISearchResponse`1.Fields" />
            instead to get the field values. As an alternative to
            <see cref="P:Nest.ISearchResponse`1.Fields" />, try source filtering using <see cref="P:Nest.ISearchRequest.Source" /> on the
            search request to return <see cref="P:Nest.ISearchResponse`1.Documents" /> with partial fields selected
            </para></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Fields">
      <summary>
            Gets the field values inside the hits, when the search request uses
            <see cref="P:Nest.SearchRequest.StoredFields" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Hits">
      <summary>
            Gets the collection of hits that matched the query
            </summary>
      <value>
            The hits.
            </value>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.HitsMetadata">
      <summary>
            Gets the meta data about the hits that match the search query criteria.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.MaxScore">
      <summary>
            Gets the maximum score for documents matching the search query criteria
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.NumberOfReducePhases">
      <summary>
            Number of times the server performed an incremental reduce phase
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Profile">
      <summary>
            Gets the results of profiling the search query. Has a value only when
            <see cref="P:Nest.ISearchRequest.Profile" /> is set to <c>true</c> on the search request.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.ScrollId">
      <summary>
            Gets the scroll id which can be passed to the Scroll API in order to retrieve the next batch
            of results. Has a value only when <see cref="P:Nest.SearchRequest.Scroll" /> is specified on the
            search request
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Shards">
      <summary>
            Gets the statistics about the shards on which the search query was executed.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Suggest">
      <summary>
            Gets the suggester results.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.TerminatedEarly">
      <summary>
            Gets a value indicating whether the search was terminated early
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.TimedOut">
      <summary>
            Gets a value indicating whether the search timed out or not
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Took">
      <summary>
            Time in milliseconds for Elasticsearch to execute the search
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchResponse`1.Total">
      <summary>
            Gets the total number of documents matching the search query criteria
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IGeoDistanceSort">
      <summary> Allows you to sort based on a proximity to one or more <see cref="T:Nest.GeoLocation" /></summary>
    </member>
    <member name="P:Nest.IGeoDistanceSort.DistanceType">
      <summary>
            How to compute the distance. Can either be arc (default), or plane (faster, but
            inaccurate on long distances and close to the poles).
            </summary>
    </member>
    <member name="P:Nest.IGeoDistanceSort.Unit">
      <summary> The unit to use when computing sort values. The default is m (meters) </summary>
    </member>
    <member name="P:Nest.IGeoDistanceSort.IgnoreUnmapped">
      <summary>
            Indicates if the unmapped field should be treated as a missing value. Setting it to `true` is equivalent to specifying
            an `unmapped_type` in the field sort. The default is `false` (unmapped field are causing the search to fail)
            </summary>
    </member>
    <member name="T:Nest.GeoDistanceSort">
      <inheritdoc cref="T:Nest.IGeoDistanceSort" />
    </member>
    <member name="P:Nest.GeoDistanceSort.DistanceType">
      <summary>
            How to compute the distance. Can either be arc (default), or plane (faster, but
            inaccurate on long distances and close to the poles).
            </summary>
      <inheritdoc cref="P:Nest.IGeoDistanceSort.DistanceType" />
    </member>
    <member name="P:Nest.GeoDistanceSort.Unit">
      <summary> The unit to use when computing sort values. The default is m (meters) </summary>
      <inheritdoc cref="P:Nest.IGeoDistanceSort.Unit" />
    </member>
    <member name="P:Nest.GeoDistanceSort.IgnoreUnmapped">
      <summary>
            Indicates if the unmapped field should be treated as a missing value. Setting it to `true` is equivalent to specifying
            an `unmapped_type` in the field sort. The default is `false` (unmapped field are causing the search to fail)
            </summary>
      <inheritdoc cref="P:Nest.IGeoDistanceSort.IgnoreUnmapped" />
    </member>
    <member name="T:Nest.GeoDistanceSortDescriptor`1">
      <inheritdoc cref="T:Nest.IGeoDistanceSort" />
    </member>
    <member name="M:Nest.GeoDistanceSortDescriptor`1.Unit(System.Nullable{Nest.DistanceUnit})">
      <summary> The unit to use when computing sort values. The default is m (meters) </summary>
      <inheritdoc cref="P:Nest.IGeoDistanceSort.Unit" />
    </member>
    <member name="M:Nest.GeoDistanceSortDescriptor`1.DistanceType(System.Nullable{Nest.GeoDistanceType})">
      <summary>
            How to compute the distance. Can either be arc (default), or plane (faster, but
            inaccurate on long distances and close to the poles).
            </summary>
      <inheritdoc cref="P:Nest.IGeoDistanceSort.DistanceType" />
    </member>
    <member name="M:Nest.GeoDistanceSortDescriptor`1.IgnoreUnmapped(System.Nullable{System.Boolean})">
      <summary>
            Indicates if the unmapped field should be treated as a missing value. Setting it to `true` is equivalent to specifying
            an `unmapped_type` in the field sort. The default is `false` (unmapped field are causing the search to fail)
            </summary>
      <inheritdoc cref="P:Nest.IGeoDistanceSort.IgnoreUnmapped" />
    </member>
    <member name="T:Nest.NumericType">
      <summary>
            For numeric fields it is also possible to cast the values from one type to another using this option. This can be useful for cross-index
            search if the sort field is mapped differently on some indices.
            </summary>
    </member>
    <member name="P:Nest.ISort.Missing">
      <summary>
            Specifies how documents which are missing the sort field should
            be treated.
            </summary>
    </member>
    <member name="P:Nest.ISort.Mode">
      <summary>
            Controls what collection value is picked for sorting a document
            when the field is a collection
            </summary>
    </member>
    <member name="P:Nest.ISort.NumericType">
      <summary>
            Set a single resolution for the sort
            </summary>
    </member>
    <member name="P:Nest.ISort.Nested">
      <summary>
            Specifies the path and filter to apply when sorting on a nested field
            </summary>
    </member>
    <member name="P:Nest.ISort.Order">
      <summary>
            Controls the order of sorting
            </summary>
    </member>
    <member name="P:Nest.ISort.SortKey">
      <summary>
            The field on which to sort
            </summary>
    </member>
    <member name="P:Nest.SortBase.Missing">
      <inheritdoc />
    </member>
    <member name="P:Nest.SortBase.Mode">
      <inheritdoc />
    </member>
    <member name="P:Nest.SortBase.NumericType">
      <inheritdoc />
    </member>
    <member name="P:Nest.SortBase.Nested">
      <inheritdoc />
    </member>
    <member name="P:Nest.SortBase.Order">
      <inheritdoc />
    </member>
    <member name="P:Nest.SortBase.SortKey">
      <summary>
            The field on which to sort
            </summary>
    </member>
    <member name="P:Nest.SortBase.Nest#ISort#SortKey">
      <inheritdoc />
    </member>
    <member name="P:Nest.SortDescriptorBase`3.SortKey">
      <summary>
            The field on which to sort
            </summary>
    </member>
    <member name="M:Nest.SortDescriptorBase`3.Ascending">
      <summary>
            Sorts by ascending sort order
            </summary>
    </member>
    <member name="M:Nest.SortDescriptorBase`3.Descending">
      <summary>
            Sorts by descending sort order
            </summary>
    </member>
    <member name="M:Nest.SortDescriptorBase`3.Order(System.Nullable{Nest.SortOrder})">
      <summary>
            Controls the order of sorting
            </summary>
      <inheritdoc cref="P:Nest.ISort.Order" />
    </member>
    <member name="M:Nest.SortDescriptorBase`3.NumericType(System.Nullable{Nest.NumericType})">
      <summary>
            Set a single resolution for the sort
            </summary>
      <inheritdoc cref="P:Nest.ISort.NumericType" />
    </member>
    <member name="M:Nest.SortDescriptorBase`3.Mode(System.Nullable{Nest.SortMode})">
      <summary>
            Controls what collection value is picked for sorting a document
            when the field is a collection
            </summary>
      <inheritdoc cref="P:Nest.ISort.Mode" />
    </member>
    <member name="M:Nest.SortDescriptorBase`3.MissingLast">
      <summary>
            Specifies that documents which are missing the sort field should be ordered last
            </summary>
    </member>
    <member name="M:Nest.SortDescriptorBase`3.MissingFirst">
      <summary>
            Specifies that documents which are missing the sort field should be ordered first
            </summary>
    </member>
    <member name="M:Nest.SortDescriptorBase`3.Missing(System.Object)">
      <summary>
            Specifies how documents which are missing the sort field should
            be treated.
            </summary>
      <inheritdoc cref="P:Nest.ISort.Missing" />
    </member>
    <member name="M:Nest.SortDescriptorBase`3.Nested(System.Func{Nest.NestedSortDescriptor{`2},Nest.INestedSort})">
      <summary>
            Specifies the path and filter to apply when sorting on a nested field
            </summary>
      <inheritdoc cref="P:Nest.ISort.Nested" />
    </member>
    <member name="T:Nest.SortMode">
      <summary>
            Elasticsearch supports sorting by array or multi-valued fields. The mode option controls what array value is picked for
            sorting the document it belongs to.
            </summary>
    </member>
    <member name="F:Nest.SortMode.Min">
      <summary> Pick the lowest value. </summary>
    </member>
    <member name="F:Nest.SortMode.Max">
      <summary> Pick the highest value.</summary>
    </member>
    <member name="F:Nest.SortMode.Sum">
      <summary> Use the sum of all values as sort value. Only applicable for number based array fields. </summary>
    </member>
    <member name="F:Nest.SortMode.Average">
      <summary> Use the average of all values as sort value. Only applicable for number based array fields. </summary>
    </member>
    <member name="F:Nest.SortMode.Median">
      <summary> Use the median of all values as sort value. Only applicable for number based array fields. </summary>
    </member>
    <member name="T:Nest.CompletionField">
      <summary>
            A field mapped as an <see cref="T:Nest.ICompletionProperty" />. Convenience class to use when indexing completion
            fields.
            </summary>
    </member>
    <member name="P:Nest.CompletionField.Contexts">
      <summary>
            The contexts to associate with the input which can be used at query time to filter and boost suggestions
            </summary>
    </member>
    <member name="P:Nest.CompletionField.Input">
      <summary>
            The input to store. Can be a single or multiple inputs
            </summary>
    </member>
    <member name="P:Nest.CompletionField.Weight">
      <summary>
            A positive integer which defines a weight and allows you to rank your suggestions. This field is optional.
            </summary>
    </member>
    <member name="T:Nest.ICompletionSuggester">
      <summary>
            The completion suggester provides auto-complete/search-as-you-type functionality.
            This is a navigational feature to guide users to relevant results as they are typing, improving search precision.
            It is not meant for spell correction or did-you-mean functionality like the term or phrase suggesters.
            </summary>
    </member>
    <member name="P:Nest.ICompletionSuggester.Contexts">
      <summary>
            Context mappings used to filter and/or boost suggestions
            </summary>
    </member>
    <member name="P:Nest.ICompletionSuggester.Fuzzy">
      <summary>
            Support fuzziness for the suggestions
            </summary>
    </member>
    <member name="P:Nest.ICompletionSuggester.Prefix">
      <summary>
            Prefix used to search for suggestions
            </summary>
    </member>
    <member name="P:Nest.ICompletionSuggester.Regex">
      <summary>
            Prefix as a regular expression used to search for suggestions
            </summary>
    </member>
    <member name="P:Nest.ICompletionSuggester.SkipDuplicates">
      <summary>
            Whether duplicate suggestions should be filtered out. Defaults to <c>false</c></summary>
    </member>
    <member name="T:Nest.CompletionSuggester">
      <inheritdoc cref="T:Nest.ICompletionSuggester" />
    </member>
    <member name="P:Nest.CompletionSuggester.Contexts">
      <summary>
            Context mappings used to filter and/or boost suggestions
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CompletionSuggester.Fuzzy">
      <summary>
            Support fuzziness for the suggestions
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CompletionSuggester.Prefix">
      <summary>
            Prefix used to search for suggestions
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CompletionSuggester.Regex">
      <summary>
            Prefix as a regular expression used to search for suggestions
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.CompletionSuggester.SkipDuplicates">
      <summary>
            Whether duplicate suggestions should be filtered out. Defaults to <c>false</c></summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.CompletionSuggesterDescriptor`1">
      <inheritdoc cref="T:Nest.ICompletionSuggester" />
    </member>
    <member name="M:Nest.CompletionSuggesterDescriptor`1.Prefix(System.String)">
      <summary>
            Prefix used to search for suggestions
            </summary>
      <inheritdoc cref="P:Nest.ICompletionSuggester.Prefix" />
    </member>
    <member name="M:Nest.CompletionSuggesterDescriptor`1.Regex(System.String)">
      <summary>
            Prefix as a regular expression used to search for suggestions
            </summary>
      <inheritdoc cref="P:Nest.ICompletionSuggester.Regex" />
    </member>
    <member name="M:Nest.CompletionSuggesterDescriptor`1.Fuzzy(System.Func{Nest.SuggestFuzzinessDescriptor{`0},Nest.ISuggestFuzziness})">
      <summary>
            Support fuzziness for the suggestions
            </summary>
      <inheritdoc cref="P:Nest.ICompletionSuggester.Fuzzy" />
    </member>
    <member name="M:Nest.CompletionSuggesterDescriptor`1.Contexts(System.Func{Nest.SuggestContextQueriesDescriptor{`0},Nest.IPromise{System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{Nest.ISuggestContextQuery}}}})">
      <summary>
            Context mappings used to filter and/or boost suggestions
            </summary>
      <inheritdoc cref="P:Nest.ICompletionSuggester.Contexts" />
    </member>
    <member name="M:Nest.CompletionSuggesterDescriptor`1.SkipDuplicates(System.Nullable{System.Boolean})">
      <summary>
            Whether duplicate suggestions should be filtered out. Defaults to <c>false</c></summary>
      <inheritdoc cref="P:Nest.ICompletionSuggester.SkipDuplicates" />
    </member>
    <member name="T:Nest.ISuggestFuzziness">
      <summary>
            Fuzziness options for a suggester
            </summary>
    </member>
    <member name="P:Nest.ISuggestFuzziness.Fuzziness">
      <summary>
            The fuzziness factor. defaults to AUTO
            </summary>
    </member>
    <member name="P:Nest.ISuggestFuzziness.MinLength">
      <summary>
            Minimum length of the input before fuzzy suggestions are returned. Defaults to 3
            </summary>
    </member>
    <member name="P:Nest.ISuggestFuzziness.PrefixLength">
      <summary>
            Minimum length of the input, which is not checked for fuzzy alternatives. Defaults to 1
            </summary>
    </member>
    <member name="P:Nest.ISuggestFuzziness.Transpositions">
      <summary>
            if set to true, transpositions are counted as one change instead of two. Defaults to true
            </summary>
    </member>
    <member name="P:Nest.ISuggestFuzziness.UnicodeAware">
      <summary>
            If true, all measurements (like fuzzy edit distance, transpositions, and lengths) are measured in Unicode code
            points instead of in bytes. This is slightly slower than raw bytes, so it is set to false by default.
            </summary>
    </member>
    <member name="T:Nest.SuggestFuzziness">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestFuzziness.Fuzziness">
      <summary>
            The fuzziness factor. defaults to AUTO
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestFuzziness.MinLength">
      <summary>
            Minimum length of the input before fuzzy suggestions are returned. Defaults to 3
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestFuzziness.PrefixLength">
      <summary>
            Minimum length of the input, which is not checked for fuzzy alternatives. Defaults to 1
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestFuzziness.Transpositions">
      <summary>
            if set to true, transpositions are counted as one change instead of two. Defaults to true
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestFuzziness.UnicodeAware">
      <summary>
            If true, all measurements (like fuzzy edit distance, transpositions, and lengths) are measured in Unicode code
            points instead of in bytes. This is slightly slower than raw bytes, so it is set to false by default.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SuggestFuzzinessDescriptor`1">
      <inheritdoc cref="T:Nest.ISuggestFuzziness" />
    </member>
    <member name="M:Nest.SuggestFuzzinessDescriptor`1.Fuzziness(Nest.Fuzziness)">
      <summary>
            The fuzziness factor. defaults to AUTO
            </summary>
      <inheritdoc cref="P:Nest.ISuggestFuzziness.Fuzziness" />
    </member>
    <member name="M:Nest.SuggestFuzzinessDescriptor`1.UnicodeAware(System.Nullable{System.Boolean})">
      <summary>
            If true, all measurements (like fuzzy edit distance, transpositions, and lengths) are measured in Unicode code
            points instead of in bytes. This is slightly slower than raw bytes, so it is set to false by default.
            </summary>
      <inheritdoc cref="P:Nest.ISuggestFuzziness.UnicodeAware" />
    </member>
    <member name="M:Nest.SuggestFuzzinessDescriptor`1.Transpositions(System.Nullable{System.Boolean})">
      <summary>
            if set to true, transpositions are counted as one change instead of two. Defaults to true
            </summary>
      <inheritdoc cref="P:Nest.ISuggestFuzziness.Transpositions" />
    </member>
    <member name="M:Nest.SuggestFuzzinessDescriptor`1.MinLength(System.Nullable{System.Int32})">
      <summary>
            Minimum length of the input before fuzzy suggestions are returned. Defaults to 3
            </summary>
      <inheritdoc cref="P:Nest.ISuggestFuzziness.MinLength" />
    </member>
    <member name="M:Nest.SuggestFuzzinessDescriptor`1.PrefixLength(System.Nullable{System.Int32})">
      <summary>
            Minimum length of the input, which is not checked for fuzzy alternatives. Defaults to 1
            </summary>
      <inheritdoc cref="P:Nest.ISuggestFuzziness.PrefixLength" />
    </member>
    <member name="T:Nest.IPhraseSuggestCollate">
      <summary>
            Checks each suggestion against the specified query to prune suggestions
            for which no matching docs exist in the index.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggestCollate.Params">
      <summary>
            The parameters for the query. the suggestion value will be added to the variables you specify.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggestCollate.Prune">
      <summary>
            Controls if all phrase suggestions will be returned. When set to <c>true</c>, the suggestions will have
            an additional option collate_match, which will be <c>true</c> if matching documents for the phrase was found,
            <c>false</c> otherwise. The default value for <see cref="P:Nest.IPhraseSuggestCollate.Prune" /> is <c>false</c>.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggestCollate.Query">
      <summary>
            The collate query to run.
            </summary>
    </member>
    <member name="T:Nest.PhraseSuggestCollate">
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestCollate.Params">
      <summary>
            The parameters for the query. the suggestion value will be added to the variables you specify.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestCollate.Prune">
      <summary>
            Controls if all phrase suggestions will be returned. When set to <c>true</c>, the suggestions will have
            an additional option collate_match, which will be <c>true</c> if matching documents for the phrase was found,
            <c>false</c> otherwise. The default value for <see cref="P:Nest.IPhraseSuggestCollate.Prune" /> is <c>false</c>.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestCollate.Query">
      <summary>
            The collate query to run.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PhraseSuggestCollateDescriptor`1">
      <inheritdoc cref="T:Nest.IPhraseSuggestCollate" />
    </member>
    <member name="M:Nest.PhraseSuggestCollateDescriptor`1.Query(System.Func{Nest.PhraseSuggestCollateQueryDescriptor,Nest.IPhraseSuggestCollateQuery})">
      <summary>
            The collate query to run.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestCollate.Query" />
    </member>
    <member name="M:Nest.PhraseSuggestCollateDescriptor`1.Prune(System.Nullable{System.Boolean})">
      <summary>
            Controls if all phrase suggestions will be returned. When set to <c>true</c>, the suggestions will have
            an additional option collate_match, which will be <c>true</c> if matching documents for the phrase was found,
            <c>false</c> otherwise. The default value for <see cref="P:Nest.IPhraseSuggestCollate.Prune" /> is <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestCollate.Prune" />
    </member>
    <member name="M:Nest.PhraseSuggestCollateDescriptor`1.Params(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            The parameters for the query. the suggestion value will be added to the variables you specify.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestCollate.Params" />
    </member>
    <member name="M:Nest.PhraseSuggestCollateDescriptor`1.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            The parameters for the query. the suggestion value will be added to the variables you specify.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestCollate.Params" />
    </member>
    <member name="T:Nest.IPhraseSuggestCollateQuery">
      <summary>
            A query to run for a phrase suggester collate
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggestCollateQuery.Id">
      <summary>
            The id for a stored script to execute
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggestCollateQuery.Source">
      <summary>
            The source script to be executed
            </summary>
    </member>
    <member name="T:Nest.PhraseSuggestCollateQuery">
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestCollateQuery.Id">
      <summary>
            The id for a stored script to execute
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestCollateQuery.Source">
      <summary>
            The source script to be executed
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PhraseSuggestCollateQueryDescriptor">
      <inheritdoc cref="T:Nest.IPhraseSuggestCollateQuery" />
    </member>
    <member name="M:Nest.PhraseSuggestCollateQueryDescriptor.Source(System.String)">
      <summary>
            The source script to be executed
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestCollateQuery.Source" />
    </member>
    <member name="M:Nest.PhraseSuggestCollateQueryDescriptor.Id(Nest.Id)">
      <summary>
            The id for a stored script to execute
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestCollateQuery.Id" />
    </member>
    <member name="T:Nest.IPhraseSuggester">
      <summary>
            The phrase suggester adds additional logic on top of the <see cref="T:Nest.ITermSuggester">term suggester</see> to select entire corrected phrases instead of
            individual tokens weighted based on ngram-language models. In practice this suggester will be able to make better decisions
            about which tokens to pick based on co-occurrence and frequencies.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.Collate">
      <summary>
            Checks each suggestion against the specified query to prune suggestions for which no matching docs exist in the index.
            The collate query for a suggestion is run only on the local shard from which the suggestion has been generated from.
            The query must be specified and can be templated. The current suggestion is automatically made available as
            the {{suggestion}} variable, which should be used in your query. You can still specify your own template params ,
            the suggestion value will be added to the variables you specify.
            Additionally, you can specify a prune to control if all phrase suggestions will be returned; when set to true the
            suggestions will have an additional option collate_match, which will be true if matching documents for the phrase was found,
            false otherwise. The default value for prune is false.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.Confidence">
      <summary>
            The confidence level defines a factor applied to the input phrases score which is used as a threshold for other suggest candidates.
            Only candidates that score higher than the threshold will be included in the result.
            For instance a confidence level of 1.0 will only return suggestions that score higher than the input phrase.
            If set to 0.0 the top N candidates are returned. The default is 1.0.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.DirectGenerator">
      <summary>
            Candidate generators used to produce a list of possible terms per term in the given text.
            A single candidate generator is similar to a term suggester called for each individual term in the text.
            The output of the generators is subsequently scored in combination with the candidates from the other terms for suggestion candidates.
            Each of the generators is called per term in the original text.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.ForceUnigrams">
      <summary>
      </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.GramSize">
      <summary>
            Sets max size of the n-grams (shingles) in the field. If the field doesn’t contain n-grams (shingles), this should be omitted or set to 1.
            Note that Elasticsearch tries to detect the gram size based on the specified field. If the field uses a shingle filter,
            the gram_size is set to the max_shingle_size if not explicitly set.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.Highlight">
      <summary>
            Sets up suggestion highlighting. If not provided then no highlighted field is returned.
            If provided must contain exactly pre_tag and post_tag, which are wrapped around the changed tokens.
            If multiple tokens in a row are changed the entire phrase of changed tokens is wrapped rather than each token.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.MaxErrors">
      <summary>
            The maximum percentage of the terms considered to be misspellings in order to form a correction.
            This method accepts a float value in the range [0..1) as a fraction of the actual query terms or a number &gt;=1 as an absolute number
            of query terms. The default is set to 1.0, meaning only corrections with at most one misspelled term are returned.
            Note that setting this too high can negatively impact performance. Low values like 1 or 2 are recommended; otherwise the time spend
            in suggest calls might exceed the time spend in query execution.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.RealWordErrorLikelihood">
      <summary>
            The likelihood of a term being a misspelled even if the term exists in the dictionary.
            The default is 0.95, meaning 5% of the real words are misspelled.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.Separator">
      <summary>
            The separator that is used to separate terms in the bigram field.
            If not set the whitespace character is used as a separator.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.ShardSize">
      <summary>
            Sets the maximum number of suggested terms to be retrieved from each individual shard.
            During the reduce phase, only the top N suggestions are returned based on the size option. Defaults to 5.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.Smoothing">
      <summary>
            Smoothing model to balance weight between infrequent grams (grams (shingles) are not existing in the index)
            and frequent grams (appear at least once in the index).
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.Text">
      <summary>
            Sets the text / query to provide suggestions for.
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggester.TokenLimit">
      <summary>
      </summary>
    </member>
    <member name="T:Nest.PhraseSuggester">
      <inheritdoc cref="T:Nest.IPhraseSuggester" />
    </member>
    <member name="P:Nest.PhraseSuggester.Collate">
      <summary>
            Checks each suggestion against the specified query to prune suggestions for which no matching docs exist in the index.
            The collate query for a suggestion is run only on the local shard from which the suggestion has been generated from.
            The query must be specified and can be templated. The current suggestion is automatically made available as
            the {{suggestion}} variable, which should be used in your query. You can still specify your own template params ,
            the suggestion value will be added to the variables you specify.
            Additionally, you can specify a prune to control if all phrase suggestions will be returned; when set to true the
            suggestions will have an additional option collate_match, which will be true if matching documents for the phrase was found,
            false otherwise. The default value for prune is false.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.Confidence">
      <summary>
            The confidence level defines a factor applied to the input phrases score which is used as a threshold for other suggest candidates.
            Only candidates that score higher than the threshold will be included in the result.
            For instance a confidence level of 1.0 will only return suggestions that score higher than the input phrase.
            If set to 0.0 the top N candidates are returned. The default is 1.0.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.DirectGenerator">
      <summary>
            Candidate generators used to produce a list of possible terms per term in the given text.
            A single candidate generator is similar to a term suggester called for each individual term in the text.
            The output of the generators is subsequently scored in combination with the candidates from the other terms for suggestion candidates.
            Each of the generators is called per term in the original text.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.ForceUnigrams">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.GramSize">
      <summary>
            Sets max size of the n-grams (shingles) in the field. If the field doesn’t contain n-grams (shingles), this should be omitted or set to 1.
            Note that Elasticsearch tries to detect the gram size based on the specified field. If the field uses a shingle filter,
            the gram_size is set to the max_shingle_size if not explicitly set.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.Highlight">
      <summary>
            Sets up suggestion highlighting. If not provided then no highlighted field is returned.
            If provided must contain exactly pre_tag and post_tag, which are wrapped around the changed tokens.
            If multiple tokens in a row are changed the entire phrase of changed tokens is wrapped rather than each token.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.MaxErrors">
      <summary>
            The maximum percentage of the terms considered to be misspellings in order to form a correction.
            This method accepts a float value in the range [0..1) as a fraction of the actual query terms or a number &gt;=1 as an absolute number
            of query terms. The default is set to 1.0, meaning only corrections with at most one misspelled term are returned.
            Note that setting this too high can negatively impact performance. Low values like 1 or 2 are recommended; otherwise the time spend
            in suggest calls might exceed the time spend in query execution.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.RealWordErrorLikelihood">
      <summary>
            The likelihood of a term being a misspelled even if the term exists in the dictionary.
            The default is 0.95, meaning 5% of the real words are misspelled.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.Separator">
      <summary>
            The separator that is used to separate terms in the bigram field.
            If not set the whitespace character is used as a separator.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.ShardSize">
      <summary>
            Sets the maximum number of suggested terms to be retrieved from each individual shard.
            During the reduce phase, only the top N suggestions are returned based on the size option. Defaults to 5.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.Smoothing">
      <summary>
            Smoothing model to balance weight between infrequent grams (grams (shingles) are not existing in the index)
            and frequent grams (appear at least once in the index).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.Text">
      <summary>
            Sets the text / query to provide suggestions for.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggester.TokenLimit">
      <summary>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PhraseSuggesterDescriptor`1">
      <inheritdoc cref="T:Nest.IPhraseSuggester" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.Text(System.String)">
      <summary>
            Sets the text / query to provide suggestions for.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.Text" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.ShardSize(System.Nullable{System.Int32})">
      <summary>
            Sets the maximum number of suggested terms to be retrieved from each individual shard.
            During the reduce phase, only the top N suggestions are returned based on the size option. Defaults to 5.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.ShardSize" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.GramSize(System.Nullable{System.Int32})">
      <summary>
            Sets max size of the n-grams (shingles) in the field. If the field doesn’t contain n-grams (shingles), this should be omitted or set to 1.
            Note that Elasticsearch tries to detect the gram size based on the specified field. If the field uses a shingle filter,
            the gram_size is set to the max_shingle_size if not explicitly set.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.GramSize" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.Confidence(System.Nullable{System.Double})">
      <summary>
            The confidence level defines a factor applied to the input phrases score which is used as a threshold for other suggest candidates.
            Only candidates that score higher than the threshold will be included in the result.
            For instance a confidence level of 1.0 will only return suggestions that score higher than the input phrase.
            If set to 0.0 the top N candidates are returned. The default is 1.0.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.Confidence" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.MaxErrors(System.Nullable{System.Double})">
      <summary>
            The maximum percentage of the terms considered to be misspellings in order to form a correction.
            This method accepts a float value in the range [0..1) as a fraction of the actual query terms or a number &gt;=1 as an absolute number
            of query terms. The default is set to 1.0, meaning only corrections with at most one misspelled term are returned.
            Note that setting this too high can negatively impact performance. Low values like 1 or 2 are recommended; otherwise the time spend
            in suggest calls might exceed the time spend in query execution.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.MaxErrors" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.Separator(System.Nullable{System.Char})">
      <summary>
            The separator that is used to separate terms in the bigram field.
            If not set the whitespace character is used as a separator.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.Separator" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.DirectGenerator(System.Func{Nest.DirectGeneratorDescriptor{`0},Nest.IDirectGenerator}[])">
      <summary>
            Candidate generators used to produce a list of possible terms per term in the given text.
            A single candidate generator is similar to a term suggester called for each individual term in the text.
            The output of the generators is subsequently scored in combination with the candidates from the other terms for suggestion candidates.
            Each of the generators is called per term in the original text.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.DirectGenerator" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.RealWordErrorLikelihood(System.Nullable{System.Double})">
      <summary>
            The likelihood of a term being a misspelled even if the term exists in the dictionary.
            The default is 0.95, meaning 5% of the real words are misspelled.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.RealWordErrorLikelihood" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.Highlight(System.Func{Nest.PhraseSuggestHighlightDescriptor,Nest.IPhraseSuggestHighlight})">
      <summary>
            Sets up suggestion highlighting. If not provided then no highlighted field is returned.
            If provided must contain exactly pre_tag and post_tag, which are wrapped around the changed tokens.
            If multiple tokens in a row are changed the entire phrase of changed tokens is wrapped rather than each token.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.Highlight" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.Collate(System.Func{Nest.PhraseSuggestCollateDescriptor{`0},Nest.IPhraseSuggestCollate})">
      <summary>
            Checks each suggestion against the specified query to prune suggestions for which no matching docs exist in the index.
            The collate query for a suggestion is run only on the local shard from which the suggestion has been generated from.
            The query must be specified and can be templated. The current suggestion is automatically made available as
            the {{suggestion}} variable, which should be used in your query. You can still specify your own template params ,
            the suggestion value will be added to the variables you specify.
            Additionally, you can specify a prune to control if all phrase suggestions will be returned; when set to true the
            suggestions will have an additional option collate_match, which will be true if matching documents for the phrase was found,
            false otherwise. The default value for prune is false.
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.Collate" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.Smoothing(System.Func{Nest.SmoothingModelContainerDescriptor,Nest.SmoothingModelContainer})">
      <summary>
            Smoothing model to balance weight between infrequent grams (grams (shingles) are not existing in the index)
            and frequent grams (appear at least once in the index).
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.Smoothing" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.TokenLimit(System.Nullable{System.Int32})">
      <summary>
      </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.TokenLimit" />
    </member>
    <member name="M:Nest.PhraseSuggesterDescriptor`1.ForceUnigrams(System.Nullable{System.Boolean})">
      <summary>
      </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggester.ForceUnigrams" />
    </member>
    <member name="T:Nest.IPhraseSuggestHighlight">
      <summary>
            Highlighting for <see cref="T:Nest.IPhraseSuggester" /></summary>
    </member>
    <member name="P:Nest.IPhraseSuggestHighlight.PostTag">
      <summary>
            The post tag
            </summary>
    </member>
    <member name="P:Nest.IPhraseSuggestHighlight.PreTag">
      <summary>
            The pre tag
            </summary>
    </member>
    <member name="T:Nest.PhraseSuggestHighlight">
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestHighlight.PostTag">
      <summary>
            The post tag
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.PhraseSuggestHighlight.PreTag">
      <summary>
            The pre tag
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.PhraseSuggestHighlightDescriptor">
      <inheritdoc cref="T:Nest.IPhraseSuggestHighlight" />
    </member>
    <member name="M:Nest.PhraseSuggestHighlightDescriptor.PreTag(System.String)">
      <summary>
            The pre tag
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestHighlight.PreTag" />
    </member>
    <member name="M:Nest.PhraseSuggestHighlightDescriptor.PostTag(System.String)">
      <summary>
            The post tag
            </summary>
      <inheritdoc cref="P:Nest.IPhraseSuggestHighlight.PostTag" />
    </member>
    <member name="M:Nest.SuggestContainerDescriptor`1.Term(System.String,System.Func{Nest.TermSuggesterDescriptor{`0},Nest.ITermSuggester})">
      <inheritdoc cref="T:Nest.ITermSuggester" />
    </member>
    <member name="M:Nest.SuggestContainerDescriptor`1.Phrase(System.String,System.Func{Nest.PhraseSuggesterDescriptor{`0},Nest.IPhraseSuggester})">
      <inheritdoc cref="T:Nest.IPhraseSuggester" />
    </member>
    <member name="M:Nest.SuggestContainerDescriptor`1.Completion(System.String,System.Func{Nest.CompletionSuggesterDescriptor{`0},Nest.ICompletionSuggester})">
      <summary>
            The completion suggester is a so-called prefix suggester.
            It does not do spell correction like the term or phrase suggesters but allows basic auto-complete functionality.
            </summary>
    </member>
    <member name="T:Nest.ISuggester">
      <summary>
            A suggester that suggests similar looking terms based on a provided text
            </summary>
    </member>
    <member name="P:Nest.ISuggester.Analyzer">
      <summary>
            The analyzer to analyse the suggest text with.
            Defaults to the search analyzer of the suggest field.
            </summary>
    </member>
    <member name="P:Nest.ISuggester.Field">
      <summary>
            The name of the field on which to run the query
            </summary>
    </member>
    <member name="P:Nest.ISuggester.Size">
      <summary>
            The number of suggestions to return. Defaults to 5
            </summary>
    </member>
    <member name="T:Nest.SuggesterBase">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggesterBase.Analyzer">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggesterBase.Field">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggesterBase.Size">
      <inheritdoc />
    </member>
    <member name="T:Nest.SuggestDescriptorBase`3">
      <inheritdoc cref="T:Nest.ISuggester" />
    </member>
    <member name="M:Nest.SuggestDescriptorBase`3.Size(System.Nullable{System.Int32})">
      <inheritdoc cref="P:Nest.ISuggester.Size" />
    </member>
    <member name="M:Nest.SuggestDescriptorBase`3.Analyzer(System.String)">
      <inheritdoc cref="P:Nest.ISuggester.Analyzer" />
    </member>
    <member name="M:Nest.SuggestDescriptorBase`3.Field(Nest.Field)">
      <inheritdoc cref="P:Nest.ISuggester.Field" />
    </member>
    <member name="M:Nest.SuggestDescriptorBase`3.Field``1(System.Linq.Expressions.Expression{System.Func{`2,``0}})">
      <inheritdoc cref="P:Nest.ISuggester.Field" />
    </member>
    <member name="T:Nest.ISuggestOption`1">
      <summary>
            Suggest option
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.CollateMatch">
      <summary>
            Phrase suggestions only, true if matching documents for the collate query were found,
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Contexts">
      <summary>
            Completion suggester only, the contexts associated with the completed document
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Frequency">
      <summary>
            Term suggester only
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Highlighted">
      <summary>
            Phrase suggester only, highlighted version of text
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Id">
      <summary>
            Completion suggester only, the id of the completed document
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Index">
      <summary>
            Completion suggester only, the index of the completed document
            </summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Score">
      <summary> Either the <see cref="P:Nest.ISuggestOption`1.DocumentScore" /> or the <see cref="P:Nest.ISuggestOption`1.SuggestScore" /></summary>
    </member>
    <member name="P:Nest.ISuggestOption`1.Source">
      <summary>
            Completion suggester only, the source of the completed document
            </summary>
    </member>
    <member name="T:Nest.SuggestOption`1">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.CollateMatch">
      <summary>
            Phrase suggestions only, true if matching documents for the collate query were found,
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Contexts">
      <summary>
            Completion suggester only, the contexts associated with the completed document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Frequency">
      <summary>
            Term suggester only
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Highlighted">
      <summary>
            Phrase suggester only, highlighted version of text
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Id">
      <summary>
            Completion suggester only, the id of the completed document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Index">
      <summary>
            Completion suggester only, the index of the completed document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Score">
      <summary> Either the <see cref="P:Nest.ISuggestOption`1.DocumentScore" /> or the <see cref="P:Nest.ISuggestOption`1.SuggestScore" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Source">
      <summary>
            Completion suggester only, the source of the completed document
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.Text">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.DocumentScore">
      <inheritdoc />
    </member>
    <member name="P:Nest.SuggestOption`1.SuggestScore">
      <inheritdoc />
    </member>
    <member name="T:Nest.StringDistance">
      <summary>
            String distance implementation to use for comparing how similar suggested terms are
            </summary>
    </member>
    <member name="F:Nest.StringDistance.Internal">
      <summary>
            The default based on damerau_levenshtein but highly optimized for comparing string distance for terms inside the index.
            </summary>
    </member>
    <member name="F:Nest.StringDistance.DamerauLevenshtein">
      <summary>
            String distance algorithm based on Damerau-Levenshtein algorithm.
            </summary>
    </member>
    <member name="F:Nest.StringDistance.Levenshtein">
      <summary>
            String distance algorithm based on Levenshtein edit distance algorithm.
            </summary>
    </member>
    <member name="F:Nest.StringDistance.Jarowinkler">
      <summary>
            String distance algorithm based on Jaro-Winkler algorithm.
            </summary>
    </member>
    <member name="F:Nest.StringDistance.Ngram">
      <summary>
            String distance algorithm based on character n-grams.
            </summary>
    </member>
    <member name="T:Nest.SuggestSort">
      <summary>
            How suggestions should be sorted per suggest text term.
            </summary>
    </member>
    <member name="F:Nest.SuggestSort.Score">
      <summary>
            Sort by score first, then document frequency and then the term itself
            </summary>
    </member>
    <member name="F:Nest.SuggestSort.Frequency">
      <summary>
            Sort by document frequency first, then similarity score and then the term itself
            </summary>
    </member>
    <member name="T:Nest.ITermSuggester">
      <summary>
            The term suggester suggests terms based on edit distance. The provided suggest text is analyzed before terms are suggested.
            The suggested terms are provided per analyzed suggest text token.
            The term suggester doesn’t take the query into account that is part of request.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.LowercaseTerms">
      <summary>
            Lower cases the suggest text terms after text analysis.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.MaxEdits">
      <summary>
            The maximum edit distance candidate suggestions can have in order to be considered as a suggestion.
            Can only be a value between 1 and 2. Any other value result in an bad request error being thrown.
            Defaults to 2.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.MaxInspections">
      <summary>
            A factor that is used to multiply with the shards_size in order to inspect more candidate spell
            corrections on the shard level. Can improve accuracy at the cost of performance. Defaults to 5.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.MaxTermFrequency">
      <summary>
            The maximum threshold in number of documents a suggest text token can exist in order to be included.
            Can be a relative percentage number (e.g 0.4) or an absolute number to represent document frequencies.
            If an value higher than 1 is specified then fractional can not be specified. Defaults to 0.01f. This can be used to
            exclude high frequency terms from being spellchecked. High frequency terms are usually spelled correctly on top of this
            also improves the spellcheck performance. The shard level document frequencies are used for this option.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.MinDocFrequency">
      <summary>
            The minimal threshold in number of documents a suggestion should appear in. This can be specified as an
            absolute number or as a relative percentage of number of documents. This can improve quality by only
            suggesting high frequency terms. Defaults to 0f and is not enabled. If a value higher than 1 is specified then the
            number cannot be fractional. The shard level document frequencies are used for this option.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.MinWordLength">
      <summary>
            The minimum length a suggest text term must have in order to be included. Defaults to 4.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.PrefixLength">
      <summary>
            The number of minimal prefix characters that must match in order be a candidate suggestions. Defaults to 1.
            Increasing this number improves spellcheck performance. Usually misspellings don’t occur in the
            beginning of terms.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.ShardSize">
      <summary>
            Sets the maximum number of suggestions to be retrieved from each individual shard.
            During the reduce phase only the top N suggestions are returned based on the size option.
            Defaults to the size option. Setting this to a value higher than the size can be useful in order to
            get a more accurate document frequency for spelling corrections at the cost of performance.
            Due to the fact that terms are partitioned amongst shards, the shard level document frequencies of spelling corrections
            may not be precise. Increasing this will make these document frequencies more precise.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.Sort">
      <summary>
            Defines how suggestions should be sorted per suggest text term
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.StringDistance">
      <summary>
            Which string distance implementation to use for comparing how similar suggested terms are.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.SuggestMode">
      <summary>
            Controls what suggestions are included or controls for what suggest text terms, suggestions should be suggested.
            </summary>
    </member>
    <member name="P:Nest.ITermSuggester.Text">
      <summary>
            The suggest text
            </summary>
    </member>
    <member name="T:Nest.TermSuggester">
      <inheritdoc cref="T:Nest.ITermSuggester" />
    </member>
    <member name="P:Nest.TermSuggester.LowercaseTerms">
      <summary>
            Lower cases the suggest text terms after text analysis.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.MaxEdits">
      <summary>
            The maximum edit distance candidate suggestions can have in order to be considered as a suggestion.
            Can only be a value between 1 and 2. Any other value result in an bad request error being thrown.
            Defaults to 2.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.MaxInspections">
      <summary>
            A factor that is used to multiply with the shards_size in order to inspect more candidate spell
            corrections on the shard level. Can improve accuracy at the cost of performance. Defaults to 5.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.MaxTermFrequency">
      <summary>
            The maximum threshold in number of documents a suggest text token can exist in order to be included.
            Can be a relative percentage number (e.g 0.4) or an absolute number to represent document frequencies.
            If an value higher than 1 is specified then fractional can not be specified. Defaults to 0.01f. This can be used to
            exclude high frequency terms from being spellchecked. High frequency terms are usually spelled correctly on top of this
            also improves the spellcheck performance. The shard level document frequencies are used for this option.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.MinDocFrequency">
      <summary>
            The minimal threshold in number of documents a suggestion should appear in. This can be specified as an
            absolute number or as a relative percentage of number of documents. This can improve quality by only
            suggesting high frequency terms. Defaults to 0f and is not enabled. If a value higher than 1 is specified then the
            number cannot be fractional. The shard level document frequencies are used for this option.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.MinWordLength">
      <summary>
            The minimum length a suggest text term must have in order to be included. Defaults to 4.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.PrefixLength">
      <summary>
            The number of minimal prefix characters that must match in order be a candidate suggestions. Defaults to 1.
            Increasing this number improves spellcheck performance. Usually misspellings don’t occur in the
            beginning of terms.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.ShardSize">
      <summary>
            Sets the maximum number of suggestions to be retrieved from each individual shard.
            During the reduce phase only the top N suggestions are returned based on the size option.
            Defaults to the size option. Setting this to a value higher than the size can be useful in order to
            get a more accurate document frequency for spelling corrections at the cost of performance.
            Due to the fact that terms are partitioned amongst shards, the shard level document frequencies of spelling corrections
            may not be precise. Increasing this will make these document frequencies more precise.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.Sort">
      <summary>
            Defines how suggestions should be sorted per suggest text term
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.StringDistance">
      <summary>
            Which string distance implementation to use for comparing how similar suggested terms are.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.SuggestMode">
      <summary>
            Controls what suggestions are included or controls for what suggest text terms, suggestions should be suggested.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.TermSuggester.Text">
      <summary>
            The suggest text
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.TermSuggesterDescriptor`1">
      <inheritdoc cref="T:Nest.ITermSuggester" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.Text(System.String)">
      <summary>
            The suggest text
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.Text" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.ShardSize(System.Nullable{System.Int32})">
      <summary>
            Sets the maximum number of suggestions to be retrieved from each individual shard.
            During the reduce phase only the top N suggestions are returned based on the size option.
            Defaults to the size option. Setting this to a value higher than the size can be useful in order to
            get a more accurate document frequency for spelling corrections at the cost of performance.
            Due to the fact that terms are partitioned amongst shards, the shard level document frequencies of spelling corrections
            may not be precise. Increasing this will make these document frequencies more precise.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.ShardSize" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.SuggestMode(System.Nullable{Elasticsearch.Net.SuggestMode})">
      <summary>
            Controls what suggestions are included or controls for what suggest text terms, suggestions should be suggested.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.SuggestMode" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.MinWordLength(System.Nullable{System.Int32})">
      <summary>
            The minimum length a suggest text term must have in order to be included. Defaults to 4.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.MinWordLength" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.PrefixLength(System.Nullable{System.Int32})">
      <summary>
            The number of minimal prefix characters that must match in order be a candidate suggestions. Defaults to 1.
            Increasing this number improves spellcheck performance. Usually misspellings don’t occur in the
            beginning of terms.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.PrefixLength" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.MaxEdits(System.Nullable{System.Int32})">
      <summary>
            The maximum edit distance candidate suggestions can have in order to be considered as a suggestion.
            Can only be a value between 1 and 2. Any other value result in an bad request error being thrown.
            Defaults to 2.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.MaxEdits" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.MaxInspections(System.Nullable{System.Int32})">
      <summary>
            A factor that is used to multiply with the shards_size in order to inspect more candidate spell
            corrections on the shard level. Can improve accuracy at the cost of performance. Defaults to 5.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.MaxInspections" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.MinDocFrequency(System.Nullable{System.Single})">
      <summary>
            The minimal threshold in number of documents a suggestion should appear in. This can be specified as an
            absolute number or as a relative percentage of number of documents. This can improve quality by only
            suggesting high frequency terms. Defaults to 0f and is not enabled. If a value higher than 1 is specified then the
            number cannot be fractional. The shard level document frequencies are used for this option.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.MinDocFrequency" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.MaxTermFrequency(System.Nullable{System.Single})">
      <summary>
            The maximum threshold in number of documents a suggest text token can exist in order to be included.
            Can be a relative percentage number (e.g 0.4) or an absolute number to represent document frequencies.
            If an value higher than 1 is specified then fractional can not be specified. Defaults to 0.01f. This can be used to
            exclude high frequency terms from being spellchecked. High frequency terms are usually spelled correctly on top of this
            also improves the spellcheck performance. The shard level document frequencies are used for this option.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.MaxTermFrequency" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.Sort(System.Nullable{Nest.SuggestSort})">
      <summary>
            Defines how suggestions should be sorted per suggest text term
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.Sort" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.LowercaseTerms(System.Nullable{System.Boolean})">
      <summary>
            Lower cases the suggest text terms after text analysis.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.LowercaseTerms" />
    </member>
    <member name="M:Nest.TermSuggesterDescriptor`1.StringDistance(System.Nullable{Nest.StringDistance})">
      <summary>
            Which string distance implementation to use for comparing how similar suggested terms are.
            </summary>
      <inheritdoc cref="P:Nest.ITermSuggester.StringDistance" />
    </member>
    <member name="P:Nest.ValidateQueryResponse.Explanations">
      <summary>
            Gets the explanations if Explain() was set.
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.FollowIndexPattern">
      <summary>
            the name of follower index; the template {{leader_index}} can be used to derive the name of the follower index from the
            name of the leader index
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.LeaderIndexPatterns">
      <summary>
            an array of simple index patterns to match against indices in the remote cluster specified by the remote_cluster field
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxOutstandingReadRequests">
      <summary>
            the maximum number of outstanding reads requests from the remote cluster
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxOutstandingWriteRequests">
      <summary>
            the maximum number of outstanding write requests on the follower
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxPollTimeout">
      <summary>
            the maximum time to wait for new operations on the remote cluster when the follower index is synchronized with the
            leader index; when the timeout has elapsed, the poll for operations will return to the follower so that it can update
            some statistics, and then the follower will immediately attempt to read from the leader again
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxReadRequestOperationCount">
      <summary>
            the maximum number of operations to pull per read from the remote cluster
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxReadRequestSize">
      <summary>
            the maximum size in bytes of per read of a batch of operations pulled from the remote cluster
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxRetryDelay">
      <summary>
            the maximum time to wait before retrying an operation that failed exceptionally; an exponential backoff strategy is
            employed when retrying
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxWriteBufferCount">
      <summary>
            the maximum number of operations that can be queued for writing; when this limit is reached, reads from the remote
            cluster will be deferred until the number of queued operations goes below the limit
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxWriteBufferSize">
      <summary>
            the maximum total bytes of operations that can be queued for writing; when this limit is reached, reads from the remote
            cluster will be deferred until the total bytes of queued operations goes below the limit
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxWriteRequestOperationCount">
      <summary>
            the maximum number of operations per bulk write request executed on the follower
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.MaxWriteRequestSize">
      <summary>
            the maximum total bytes of operations per bulk write request executed on the follower
            </summary>
    </member>
    <member name="P:Nest.IAutoFollowPattern.RemoteCluster">
      <summary>
            the remote cluster containing the leader indices to match against
            </summary>
    </member>
    <member name="P:Nest.AutoFollowPattern.FollowIndexPattern">
      <summary>
            the name of follower index; the template {{leader_index}} can be used to derive the name of the follower index from the
            name of the leader index
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.FollowIndexPattern" />
    </member>
    <member name="P:Nest.AutoFollowPattern.LeaderIndexPatterns">
      <summary>
            an array of simple index patterns to match against indices in the remote cluster specified by the remote_cluster field
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.LeaderIndexPatterns" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxOutstandingReadRequests">
      <summary>
            the maximum number of outstanding reads requests from the remote cluster
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxOutstandingReadRequests" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxOutstandingWriteRequests">
      <summary>
            the maximum number of outstanding write requests on the follower
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxOutstandingWriteRequests" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxPollTimeout">
      <summary>
            the maximum time to wait for new operations on the remote cluster when the follower index is synchronized with the
            leader index; when the timeout has elapsed, the poll for operations will return to the follower so that it can update
            some statistics, and then the follower will immediately attempt to read from the leader again
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxPollTimeout" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxReadRequestOperationCount">
      <summary>
            the maximum number of operations to pull per read from the remote cluster
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxReadRequestOperationCount" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxReadRequestSize">
      <summary>
            the maximum size in bytes of per read of a batch of operations pulled from the remote cluster
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxReadRequestSize" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxRetryDelay">
      <summary>
            the maximum time to wait before retrying an operation that failed exceptionally; an exponential backoff strategy is
            employed when retrying
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxRetryDelay" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxWriteBufferCount">
      <summary>
            the maximum number of operations that can be queued for writing; when this limit is reached, reads from the remote
            cluster will be deferred until the number of queued operations goes below the limit
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteBufferCount" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxWriteBufferSize">
      <summary>
            the maximum total bytes of operations that can be queued for writing; when this limit is reached, reads from the remote
            cluster will be deferred until the total bytes of queued operations goes below the limit
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteBufferSize" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxWriteRequestOperationCount">
      <summary>
            the maximum number of operations per bulk write request executed on the follower
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteRequestOperationCount" />
    </member>
    <member name="P:Nest.AutoFollowPattern.MaxWriteRequestSize">
      <summary>
            the maximum total bytes of operations per bulk write request executed on the follower
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.MaxWriteRequestSize" />
    </member>
    <member name="P:Nest.AutoFollowPattern.RemoteCluster">
      <summary>
            the remote cluster containing the leader indices to match against
            </summary>
      <inheritdoc cref="P:Nest.IAutoFollowPattern.RemoteCluster" />
    </member>
    <member name="P:Nest.FollowIndexShardStats.BytesRead">
      <summary>
            the total of transferred bytes read from the leader (note this is only an estimate, and does not
            account for compression if enabled)
            </summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FailedReadRequests">
      <summary>the number of failed reads</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FailedWriteRequests">
      <summary>the number of failed bulk write requests executed on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FollowerGlobalCheckpoint">
      <summary>
            the current global checkpoint on the follower; the difference between the leader_global_checkpoint and
            the follower_global_checkpoint is an indication of how much the follower is lagging the leader
            </summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FollowerIndex">
      <summary>the name of the follower index</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FollowerMappingVersion">
      <summary>the mapping version the follower is synced up to</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FollowerMaxSequenceNumber">
      <summary>the current maximum sequence number on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FollowerSettingsVersion">
      <summary>the index settings version the follower is synced up to</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FollowerAliasesVersion">
      <summary>The index aliases version the follower is synced up to</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.LastRequestedSequenceNumber">
      <summary>the starting sequence number of the last batch of operations requested from the leader</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.LeaderGlobalCheckpoint">
      <summary>the current global checkpoint on the leader known to the follower task</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.LeaderIndex">
      <summary>the name of the index in the leader cluster being followed</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.LeaderMaxSequenceNumber">
      <summary>the current maximum sequence number on the leader known to the follower task</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.OperationsRead">
      <summary>the total number of operations read from the leader</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.OperationsWritten">
      <summary>the number of operations written on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.OutstandingReadRequests">
      <summary>the number of active read requests from the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.OutstandingWriteRequest">
      <summary>the number of active bulk write requests on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.RemoteCluster">
      <summary>the remote cluster containing the leader index</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.ShardId">
      <summary>the numerical shard ID, with values from 0 to one less than the number of replicas</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.SuccessfulReadRequests">
      <summary>the number of successful fetches</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.SuccessfulWriteRequests">
      <summary>the number of bulk write requests executed on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.TotalReadRemoteExecutionTimeInMilliseconds">
      <summary>the total time reads spent executing on the remote cluster</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.TotalReadTimeInMilliseconds">
      <summary>
            the total time reads were outstanding, measured from the time a read was sent to the leader to the time
            a reply was returned to the follower
            </summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.TotalWriteTimeInMilliseconds">
      <summary>the total time spent writing on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.WriteBufferOperationCount">
      <summary>the number of write operations queued on the follower</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.WriteBufferSizeInBytes">
      <summary>the total number of bytes of operations currently queued for writing</summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.TimeSinceLastReadInMilliseconds">
      <summary>
             the number of milliseconds since a read request was sent to the leader; note that when the follower is caught up
             to the leader, this number will increase up to the configured read_poll_timeout at which point another read request
             will be sent to the leader
             </summary>
    </member>
    <member name="P:Nest.FollowIndexShardStats.FatalException">
      <summary>
             an object representing a fatal exception that cancelled the following task; in this situation,
             the following task must be resumed manually with the resume follower API
             </summary>
    </member>
    <member name="P:Nest.FollowIndexReadException.FromSquenceNumber">
      <summary>the starting sequence number of the batch requested from the leader</summary>
    </member>
    <member name="P:Nest.FollowIndexReadException.Retries">
      <summary>the number of times the batch has been retried</summary>
    </member>
    <member name="P:Nest.FollowIndexReadException.Exception">
      <summary>Represents the exception that caused the read to fail</summary>
    </member>
    <member name="P:Nest.FollowIndexStatsResponse.Indices">
      <inheritdoc cref="P:Nest.FollowIndexStatsResponse.Indices" />
    </member>
    <member name="P:Nest.CcrStatsResponse.AutoFollowStats">
      <inheritdoc cref="P:Nest.CcrStatsResponse.AutoFollowStats" />
    </member>
    <member name="P:Nest.CcrStatsResponse.FollowStats">
      <inheritdoc cref="P:Nest.CcrStatsResponse.FollowStats" />
    </member>
    <member name="P:Nest.CcrFollowStats.Indices">
      <inheritdoc cref="P:Nest.FollowIndexStatsResponse.Indices" />
    </member>
    <member name="P:Nest.CcrAutoFollowStats.NumberOfFailedFollowIndices">
      <summary>
            The number of indices that the auto-follow coordinator failed to automatically follow; the causes of recent failures are
            captured in the logs of the elected master node, and in the <see cref="P:Nest.CcrAutoFollowStats.RecentAutoFollowErrors" /> field.
            </summary>
    </member>
    <member name="P:Nest.CcrAutoFollowStats.NumberOfFailedRemoteClusterStateRequests">
      <summary>
            The number of times that the auto-follow coordinator failed to retrieve the cluster state from a
            remote cluster registered in a collection of auto-follow patterns.
            </summary>
    </member>
    <member name="P:Nest.CcrAutoFollowStats.NumberOfSuccessfulFollowIndices">
      <summary>The number of indices that the auto-follow coordinator successfully followed.</summary>
    </member>
    <member name="P:Nest.CcrAutoFollowStats.RecentAutoFollowErrors">
      <summary>An array of objects representing failures by the auto-follow coordinator.</summary>
    </member>
    <member name="P:Nest.CcrAutoFollowStats.AutoFollowedClusters">
      <summary>
             An array of auto followed clusters.
            </summary>
    </member>
    <member name="P:Nest.AutoFollowedCluster.ClusterName">
      <summary>
            The cluster name.
            </summary>
    </member>
    <member name="P:Nest.AutoFollowedCluster.TimeSinceLastCheck">
      <summary>
            Time since last check.
            </summary>
    </member>
    <member name="P:Nest.AutoFollowedCluster.LastSeenMetadataVersion">
      <summary>
            Last seen metadata version.
            </summary>
    </member>
    <member name="T:Nest.IAllocateLifecycleAction">
      <summary>
            The Allocate action allows you to specify which nodes are allowed to host the shards of the index and set the number of
            replicas. Behind the scenes, it is modifying the index settings for shard filtering and/or replica counts. When
            updating the number of replicas, configuring allocation rules is optional. When configuring allocation rules, setting
            number of replicas is optional. Although this action can be treated as two separate index settings updates, both can be
            configured at once.
            </summary>
    </member>
    <member name="P:Nest.IAllocateLifecycleAction.Exclude">
      <summary>
            Assigns an index to nodes having none of the attributes
            </summary>
    </member>
    <member name="P:Nest.IAllocateLifecycleAction.Include">
      <summary>
            Assigns an index to nodes having at least one of the attributes
            </summary>
    </member>
    <member name="P:Nest.IAllocateLifecycleAction.NumberOfReplicas">
      <summary>
            The number of replicas to assign to the index
            </summary>
    </member>
    <member name="P:Nest.IAllocateLifecycleAction.Require">
      <summary>
            Assigns an index to nodes having all of the attributes
            </summary>
    </member>
    <member name="P:Nest.AllocateLifecycleAction.Exclude">
      <summary>
            Assigns an index to nodes having none of the attributes
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocateLifecycleAction.Include">
      <summary>
            Assigns an index to nodes having at least one of the attributes
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocateLifecycleAction.NumberOfReplicas">
      <summary>
            The number of replicas to assign to the index
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocateLifecycleAction.Require">
      <summary>
            Assigns an index to nodes having all of the attributes
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AllocateLifecycleActionDescriptor.Nest#IAllocateLifecycleAction#Exclude">
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.Exclude" />
    </member>
    <member name="P:Nest.AllocateLifecycleActionDescriptor.Nest#IAllocateLifecycleAction#Include">
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.Include" />
    </member>
    <member name="P:Nest.AllocateLifecycleActionDescriptor.Nest#IAllocateLifecycleAction#NumberOfReplicas">
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.NumberOfReplicas" />
    </member>
    <member name="P:Nest.AllocateLifecycleActionDescriptor.Nest#IAllocateLifecycleAction#Require">
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.Require" />
    </member>
    <member name="M:Nest.AllocateLifecycleActionDescriptor.NumberOfReplicas(System.Nullable{System.Int32})">
      <summary>
            The number of replicas to assign to the index
            </summary>
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.NumberOfReplicas" />
    </member>
    <member name="M:Nest.AllocateLifecycleActionDescriptor.Include(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <summary>
            Assigns an index to nodes having at least one of the attributes
            </summary>
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.Include" />
    </member>
    <member name="M:Nest.AllocateLifecycleActionDescriptor.Exclude(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <summary>
            Assigns an index to nodes having none of the attributes
            </summary>
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.Exclude" />
    </member>
    <member name="M:Nest.AllocateLifecycleActionDescriptor.Require(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <summary>
            Assigns an index to nodes having all of the attributes
            </summary>
      <inheritdoc cref="P:Nest.IAllocateLifecycleAction.Require" />
    </member>
    <member name="T:Nest.IDeleteLifecycleAction">
      <summary>
            The Delete Action deletes the index.
            </summary>
      <remarks>
            Phases allowed: delete.
            </remarks>
    </member>
    <member name="T:Nest.IForceMergeLifecycleAction">
      <summary>
            The Force Merge Action force merges the index into at most a specific number of segments.
            </summary>
      <remarks>
            Phases allowed: warm.
            </remarks>
    </member>
    <member name="P:Nest.IForceMergeLifecycleAction.MaximumNumberOfSegments">
      <summary>
            The number of segments to merge to. To fully merge the index, set it to 1
            </summary>
    </member>
    <member name="P:Nest.ForceMergeLifecycleAction.MaximumNumberOfSegments">
      <summary>
            The number of segments to merge to. To fully merge the index, set it to 1
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ForceMergeLifecycleActionDescriptor.Nest#IForceMergeLifecycleAction#MaximumNumberOfSegments">
      <inheritdoc cref="P:Nest.IForceMergeLifecycleAction.MaximumNumberOfSegments" />
    </member>
    <member name="M:Nest.ForceMergeLifecycleActionDescriptor.MaximumNumberOfSegments(System.Nullable{System.Int32})">
      <summary>
            The number of segments to merge to. To fully merge the index, set it to 1
            </summary>
      <inheritdoc cref="P:Nest.IForceMergeLifecycleAction.MaximumNumberOfSegments" />
    </member>
    <member name="T:Nest.IFreezeLifecycleAction">
      <summary>
            This action will freeze the index by calling the Freeze Index API.
            Note: Freezing an index will close the index and reopen it within the same API call.
            This causes primaries to not be allocated for a short amount of time and
            causes the cluster to go red until the primaries are allocated again.
            This limitation might be removed in the future.
            </summary>
      <remarks>
            Phases allowed: cold.
            </remarks>
    </member>
    <member name="T:Nest.IReadOnlyLifecycleAction">
      <summary>
            This action will set the index to be read-only.
            </summary>
      <remarks>
            Phases allowed: warm.
            </remarks>
    </member>
    <member name="T:Nest.IRolloverLifecycleAction">
      <summary>
            The Rollover Action rolls an alias over to a new index when the existing index meets one of the rollover conditions.
            </summary>
      <remarks>
            Phases allowed: hot.
            </remarks>
    </member>
    <member name="P:Nest.IRolloverLifecycleAction.MaximumAge">
      <summary>
            Max time elapsed from index creation.
            </summary>
    </member>
    <member name="P:Nest.IRolloverLifecycleAction.MaximumDocuments">
      <summary>
            Max number of documents an index is to contain before rolling over.
            </summary>
    </member>
    <member name="P:Nest.IRolloverLifecycleAction.MaximumSize">
      <summary>
            Max primary shard index storage size using byte notation (e.g. $0gb, 100mb...)
            </summary>
    </member>
    <member name="P:Nest.RolloverLifecycleAction.MaximumAge">
      <summary>
            Max time elapsed from index creation.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RolloverLifecycleAction.MaximumDocuments">
      <summary>
            Max number of documents an index is to contain before rolling over.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RolloverLifecycleAction.MaximumSize">
      <summary>
            Max primary shard index storage size using byte notation (e.g. $0gb, 100mb...)
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.RolloverLifecycleActionDescriptor.Nest#IRolloverLifecycleAction#MaximumAge">
      <inheritdoc cref="P:Nest.IRolloverLifecycleAction.MaximumAge" />
    </member>
    <member name="P:Nest.RolloverLifecycleActionDescriptor.Nest#IRolloverLifecycleAction#MaximumDocuments">
      <inheritdoc cref="P:Nest.IRolloverLifecycleAction.MaximumDocuments" />
    </member>
    <member name="P:Nest.RolloverLifecycleActionDescriptor.Nest#IRolloverLifecycleAction#MaximumSize">
      <inheritdoc cref="P:Nest.IRolloverLifecycleAction.MaximumSize" />
    </member>
    <member name="M:Nest.RolloverLifecycleActionDescriptor.MaximumSize(System.String)">
      <summary>
            Max primary shard index storage size using byte notation (e.g. $0gb, 100mb...)
            </summary>
      <inheritdoc cref="P:Nest.IRolloverLifecycleAction.MaximumSize" />
    </member>
    <member name="M:Nest.RolloverLifecycleActionDescriptor.MaximumAge(Nest.Time)">
      <summary>
            Max time elapsed from index creation.
            </summary>
      <inheritdoc cref="P:Nest.IRolloverLifecycleAction.MaximumAge" />
    </member>
    <member name="M:Nest.RolloverLifecycleActionDescriptor.MaximumDocuments(System.Nullable{System.Int64})">
      <summary>
            Max number of documents an index is to contain before rolling over.
            </summary>
      <inheritdoc cref="P:Nest.IRolloverLifecycleAction.MaximumDocuments" />
    </member>
    <member name="T:Nest.ISetPriorityLifecycleAction">
      <summary>
            This action sets the index priority on the index as soon as the policy enters the hot, warm, or cold phase. Indices
            with a higher priority will be recovered before indices with lower priorities following a node restart. Generally,
            indexes in the hot phase should have the highest value and indexes in the cold phase should have the lowest values. For
            example: 100 for the hot phase, 50 for the warm phase, and 0 for the cold phase. Indicies that don’t set this value
            have an implicit default priority of 1.
            </summary>
      <remarks>
            Phases allowed: hot, warm, cold.
            </remarks>
    </member>
    <member name="P:Nest.ISetPriorityLifecycleAction.Priority">
      <summary>
            The priority for the index. Must be 0 or greater. The value may also be set to null to remove the priority.
            </summary>
    </member>
    <member name="P:Nest.SetPriorityLifecycleAction.Priority">
      <summary>
            The priority for the index. Must be 0 or greater. The value may also be set to null to remove the priority.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SetPriorityLifecycleActionDescriptor.Nest#ISetPriorityLifecycleAction#Priority">
      <inheritdoc cref="P:Nest.ISetPriorityLifecycleAction.Priority" />
    </member>
    <member name="M:Nest.SetPriorityLifecycleActionDescriptor.Priority(System.Nullable{System.Int32})">
      <summary>
            The priority for the index. Must be 0 or greater. The value may also be set to null to remove the priority.
            </summary>
      <inheritdoc cref="P:Nest.ISetPriorityLifecycleAction.Priority" />
    </member>
    <member name="T:Nest.IShrinkLifecycleAction">
      <summary>
            This action shrinks an existing index into a new index with fewer primary shards. It calls the Shrink API to shrink the
            index. Since allocating all the primary shards of the index to one node is a prerequisite, this action will first
            allocate the primary shards to a valid node. After shrinking, it will swap aliases pointing to the original index into
            the new shrunken index. The new index will also have a new name: "shrink-[origin-index-name]". So if the original index
            was
            called "logs", then the new index will be named "shrink-logs".
            </summary>
    </member>
    <member name="P:Nest.IShrinkLifecycleAction.NumberOfShards">
      <summary>
            The number of shards to shrink to. must be a factor of the number of shards in the source index.
            </summary>
    </member>
    <member name="P:Nest.ShrinkLifecycleAction.NumberOfShards">
      <summary>
            The number of shards to shrink to. must be a factor of the number of shards in the source index.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ShrinkLifecycleActionDescriptor.Nest#IShrinkLifecycleAction#NumberOfShards">
      <inheritdoc cref="P:Nest.IShrinkLifecycleAction.NumberOfShards" />
    </member>
    <member name="M:Nest.ShrinkLifecycleActionDescriptor.NumberOfShards(System.Nullable{System.Int32})">
      <summary>
            The number of shards to shrink to. must be a factor of the number of shards in the source index.
            </summary>
      <inheritdoc cref="P:Nest.IShrinkLifecycleAction.NumberOfShards" />
    </member>
    <member name="T:Nest.IUnfollowLifecycleAction">
      <summary>
            This action turns a ccr follower index into a regular index. This can be desired when moving follower indices into the
            next phase. Also certain actions like shrink and rollover can then be performed safely on follower indices.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.ActionTime">
      <summary>
            When the index entered the current action.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.FailedStep">
      <summary>
            The step that caused the error, if applicable.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.LifecycleDate">
      <summary>
            The timestamp used for minimum age.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.Managed">
      <summary>
            Shows if the index is being managed by Index Lifecycle Management (ILM). If the index is not managed by ILM the other
            fields will not be shown.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.PhaseTime">
      <summary>
            When the index entered the current phase.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.Policy">
      <summary>
            The name of the policy which ILM is using for this index.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.StepInfo">
      <summary>
            Step error details, if applicable.
            </summary>
    </member>
    <member name="P:Nest.LifecycleExplain.StepTime">
      <summary>
            When the index entered the current step.
            </summary>
    </member>
    <member name="P:Nest.PhaseExecution.ModifiedDate">
      <summary>
            The date the loaded policy was last modified.
            </summary>
    </member>
    <member name="P:Nest.PhaseExecution.PhaseDefinition">
      <summary>
            The phase definition loaded from the specified policy when the index entered this phase.
            </summary>
    </member>
    <member name="P:Nest.PhaseExecution.Version">
      <summary>
            The version of the policy that was loaded.
            </summary>
    </member>
    <member name="P:Nest.MachineLearningUsage.NodeCount">
      <remarks>Valid only for Elasticsearch 6.5.0+</remarks>
    </member>
    <member name="P:Nest.MachineLearningUsage.ForecastStatistics.Jobs">
      <summary>
            The number of jobs that have at least one forecast.
            </summary>
    </member>
    <member name="P:Nest.MachineLearningUsage.ForecastStatistics.MemoryBytes">
      <summary>
            Statistics about the memory usage: minimum, maximum, average and total.
            </summary>
    </member>
    <member name="P:Nest.MachineLearningUsage.ForecastStatistics.ProcessingTimeMilliseconds">
      <summary>
            Statistics about the forecast runtime in milliseconds: minimum, maximum, average and total.
            </summary>
    </member>
    <member name="P:Nest.MachineLearningUsage.ForecastStatistics.Records">
      <summary>
            Statistics about the number of forecast records: minimum, maximum, average and total.
            </summary>
    </member>
    <member name="P:Nest.MachineLearningUsage.ForecastStatistics.Status">
      <summary>
            Counts per forecast status.
            </summary>
    </member>
    <member name="P:Nest.MachineLearningUsage.ForecastStatistics.Total">
      <summary>
            The number of forecasts currently available for this model.
            </summary>
    </member>
    <member name="T:Nest.LicenseAcknowledgement">
      <summary>
            If the license is valid but is older or has less capabilities this will list out the reasons why a resubmission with acknowledge=true is
            required
            </summary>
    </member>
    <member name="P:Nest.PostLicenseResponse.Acknowledge">
      <summary>
            If the license is valid but is older or has less capabilities this will list out the reasons why a resubmission with acknowledge=true is
            required.
            null if no acknowledge resubmission is needed
            </summary>
    </member>
    <member name="T:Nest.IChunkingConfig">
      <summary>
            Datafeeds might be required to search over long time periods, for several months or years.
            This search is split into time chunks in order to ensure the load on Elasticsearch is managed.
            Chunking configuration controls how the size of these time chunks are calculated.
            </summary>
    </member>
    <member name="P:Nest.IChunkingConfig.Mode">
      <summary>
            The chunking mode
            </summary>
    </member>
    <member name="P:Nest.IChunkingConfig.TimeSpan">
      <summary>
            The time span that each search will be querying.
            This setting is only applicable when <see cref="P:Nest.IChunkingConfig.Mode" /> is set to <see cref="F:Nest.ChunkingMode.Manual" />.
            </summary>
    </member>
    <member name="T:Nest.ChunkingConfig">
      <inheritdoc />
    </member>
    <member name="P:Nest.ChunkingConfig.Mode">
      <summary>
            The chunking mode
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ChunkingConfig.TimeSpan">
      <summary>
            The time span that each search will be querying.
            This setting is only applicable when <see cref="P:Nest.IChunkingConfig.Mode" /> is set to <see cref="F:Nest.ChunkingMode.Manual" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ChunkingConfigDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.ChunkingConfigDescriptor.Mode(System.Nullable{Nest.ChunkingMode})">
      <summary>
            The chunking mode
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ChunkingConfigDescriptor.TimeSpan(Nest.Time)">
      <summary>
            The time span that each search will be querying.
            This setting is only applicable when <see cref="P:Nest.IChunkingConfig.Mode" /> is set to <see cref="F:Nest.ChunkingMode.Manual" />.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ChunkingMode">
      <summary>
            The chunking mode
            </summary>
    </member>
    <member name="F:Nest.ChunkingMode.Auto">
      <summary>
            The chunk size will be dynamically calculated. This is the default and recommended value.
            </summary>
    </member>
    <member name="F:Nest.ChunkingMode.Manual">
      <summary>
            Chunking will be applied according to the specified time span.
            </summary>
    </member>
    <member name="F:Nest.ChunkingMode.Off">
      <summary>
            No chunking will be applied.
            </summary>
    </member>
    <member name="T:Nest.DatafeedConfig">
      <summary>
            Configuration of a machine learning Datafeed
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.Aggregations">
      <summary>
            The aggregation searches to perform for the datafeed.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.ChunkingConfig">
      <summary>
            Specifies how data searches are split into time chunks.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.DatafeedId">
      <summary>
            The datafeed id.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.Indices">
      <summary>
            A list of index names to search within, wildcards are supported.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 A.M. might not be searchable until 10:06 A.M.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
    </member>
    <member name="P:Nest.DatafeedConfig.ScrollSize">
      <summary>
            The size parameter that is used in searches.
            </summary>
    </member>
    <member name="P:Nest.DiscoveryNode.Attributes">
      <summary>
            The node attributes
            </summary>
    </member>
    <member name="P:Nest.DiscoveryNode.EphemeralId">
      <summary>
            The ephemeral id of the node.
            </summary>
    </member>
    <member name="P:Nest.DiscoveryNode.Id">
      <summary>
            The unique identifier of the node.
            </summary>
    </member>
    <member name="P:Nest.DiscoveryNode.Name">
      <summary>
            The node name.
            </summary>
    </member>
    <member name="P:Nest.DiscoveryNode.TransportAddress">
      <summary>
            The host and port where transport HTTP connections are accepted.
            </summary>
    </member>
    <member name="T:Nest.DeleteCalendarJobResponse">
      <summary>
            The response from deleting a calendar job.
            </summary>
    </member>
    <member name="T:Nest.GetCalendarEventsResponse">
      <summary>
            Retrieves configuration information for calendars.
            </summary>
    </member>
    <member name="P:Nest.GetCalendarEventsResponse.Count">
      <summary>
            Count of scheduled event resources.
            </summary>
    </member>
    <member name="P:Nest.GetCalendarEventsResponse.Events">
      <summary>
            	An array of scheduled event resources.
            </summary>
    </member>
    <member name="T:Nest.GetCalendarsResponse">
      <summary>
            Retrieves configuration information for calendars.
            </summary>
    </member>
    <member name="P:Nest.GetCalendarsResponse.Count">
      <summary>
            The count of calendars.
            </summary>
    </member>
    <member name="P:Nest.GetCalendarsResponse.Calendars">
      <summary>
            An array of calendar resources.
            </summary>
    </member>
    <member name="T:Nest.Filter">
      <summary>
            A machine learning filter
            </summary>
    </member>
    <member name="P:Nest.Filter.Description">
      <summary>
            A description of the filter
            </summary>
    </member>
    <member name="P:Nest.Filter.FilterId">
      <summary>
            The filter ID
            </summary>
    </member>
    <member name="P:Nest.Filter.Items">
      <summary>
            The items of the filter
            </summary>
    </member>
    <member name="T:Nest.GetFiltersResponse">
      <summary>
            Retrieves configuration information for machine learning filters.
            </summary>
    </member>
    <member name="P:Nest.GetFiltersResponse.Count">
      <summary>
            The count of filters.
            </summary>
    </member>
    <member name="P:Nest.GetFiltersResponse.Filters">
      <summary>
            An array of filters resources
            </summary>
    </member>
    <member name="T:Nest.GetJobsResponse">
      <summary>
            A response of the configuration for machine learning jobs.
            </summary>
    </member>
    <member name="P:Nest.GetJobsResponse.Count">
      <summary>
            The count of jobs
            </summary>
    </member>
    <member name="P:Nest.GetJobsResponse.Jobs">
      <summary>
            The configuration of machine learning jobs
            </summary>
    </member>
    <member name="T:Nest.IAnalysisConfig">
      <summary>
            An analysis configuration for a machine learning job.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.BucketSpan">
      <summary>
            The size of the interval that the analysis is aggregated into, typically between 5m and 1h.
            The default value is 5m.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.CategorizationFieldName">
      <summary>
            If this property is specified, the values of the specified field will be categorized.
            The resulting categories must be used in a detector by setting by_field_name, over_field_name,
            or partition_field_name to the keyword mlcategory
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.CategorizationFilters">
      <summary>
            If categorization_field_name is specified, you can also define optional filters.
            This property expects an array of regular expressions.
            The expressions are used to filter out matching sequences off the categorization field values.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.Detectors">
      <summary>
            A collection of detectors, which describe the anomaly detectors that are used in the job.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.Influencers">
      <summary>
            A collection of influencer field names. Typically these can be the by, over, or partition fields
            that are used in the detector configuration. You might also want to use a field name that is not
            specifically named in a detector, but is available as part of the input data.
            When you use multiple detectors, the use of influencers is recommended as it aggregates results for each influencer
            entity.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.Latency">
      <summary>
            The size of the window in which to expect data that is out of time order. The default value is 0 (no latency).
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.MultivariateByFields">
      <summary>
            If set to true, the analysis will automatically find correlations between metrics
            for a given by field value and report anomalies when those correlations cease to hold.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisConfig.SummaryCountFieldName">
      <summary>
            The name of the field that contains the count of raw data points that have been summarized, if
            data that is fed to the job is expected to be pre-summarized.
            </summary>
    </member>
    <member name="T:Nest.AnalysisConfig">
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.BucketSpan">
      <summary>
            The size of the interval that the analysis is aggregated into, typically between 5m and 1h.
            The default value is 5m.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.CategorizationFieldName">
      <summary>
            If this property is specified, the values of the specified field will be categorized.
            The resulting categories must be used in a detector by setting by_field_name, over_field_name,
            or partition_field_name to the keyword mlcategory
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.CategorizationFilters">
      <summary>
            If categorization_field_name is specified, you can also define optional filters.
            This property expects an array of regular expressions.
            The expressions are used to filter out matching sequences off the categorization field values.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.Detectors">
      <summary>
            A collection of detectors, which describe the anomaly detectors that are used in the job.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.Influencers">
      <summary>
            A collection of influencer field names. Typically these can be the by, over, or partition fields
            that are used in the detector configuration. You might also want to use a field name that is not
            specifically named in a detector, but is available as part of the input data.
            When you use multiple detectors, the use of influencers is recommended as it aggregates results for each influencer
            entity.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.Latency">
      <summary>
            The size of the window in which to expect data that is out of time order. The default value is 0 (no latency).
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.MultivariateByFields">
      <summary>
            If set to true, the analysis will automatically find correlations between metrics
            for a given by field value and report anomalies when those correlations cease to hold.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisConfig.SummaryCountFieldName">
      <summary>
            The name of the field that contains the count of raw data points that have been summarized, if
            data that is fed to the job is expected to be pre-summarized.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.AnalysisConfigDescriptor`1">
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.BucketSpan(Nest.Time)">
      <summary>
            The size of the interval that the analysis is aggregated into, typically between 5m and 1h.
            The default value is 5m.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.CategorizationFieldName(Nest.Field)">
      <summary>
            If this property is specified, the values of the specified field will be categorized.
            The resulting categories must be used in a detector by setting by_field_name, over_field_name,
            or partition_field_name to the keyword mlcategory
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.CategorizationFieldName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.CategorizationFilters(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            If categorization_field_name is specified, you can also define optional filters.
            This property expects an array of regular expressions.
            The expressions are used to filter out matching sequences off the categorization field values.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.CategorizationFilters(System.String[])">
      <summary>
            If categorization_field_name is specified, you can also define optional filters.
            This property expects an array of regular expressions.
            The expressions are used to filter out matching sequences off the categorization field values.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.Detectors(System.Func{Nest.DetectorsDescriptor{`0},Nest.IPromise{System.Collections.Generic.IEnumerable{Nest.IDetector}}})">
      <summary>
            A collection of detectors, which describe the anomaly detectors that are used in the job.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.Influencers(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            A collection of influencer field names. Typically these can be the by, over, or partition fields
            that are used in the detector configuration. You might also want to use a field name that is not
            specifically named in a detector, but is available as part of the input data.
            When you use multiple detectors, the use of influencers is recommended as it aggregates results for each influencer
            entity.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.Influencers(Nest.Fields)">
      <summary>
            A collection of influencer field names. Typically these can be the by, over, or partition fields
            that are used in the detector configuration. You might also want to use a field name that is not
            specifically named in a detector, but is available as part of the input data.
            When you use multiple detectors, the use of influencers is recommended as it aggregates results for each influencer
            entity.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.Latency(Nest.Time)">
      <summary>
            The size of the window in which to expect data that is out of time order. The default value is 0 (no latency).
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.MultivariateByFields(System.Nullable{System.Boolean})">
      <summary>
            If set to true, the analysis will automatically find correlations between metrics
            for a given by field value and report anomalies when those correlations cease to hold.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.SummaryCountFieldName(Nest.Field)">
      <summary>
            The name of the field that contains the count of raw data points that have been summarized, if
            data that is fed to the job is expected to be pre-summarized.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisConfigDescriptor`1.SummaryCountFieldName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="T:Nest.IAnalysisLimits">
      <summary>
            Limits applied for the resources required to hold the mathematical models in memory.
            These limits are approximate and can be set per job. They do not control the memory used by other processes,
            for example the Elasticsearch Java processes.
            If necessary, you can increase the limits after the job is created.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisLimits.CategorizationExamplesLimit">
      <summary>
            The maximum number of examples stored per category in memory and in the results data store.
            The default value is 4. If you increase this value, more examples are available,
            however it requires that you have more storage available.
            If you set this value to 0, no examples are stored.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisLimits.ModelMemoryLimit">
      <summary>
            The approximate maximum amount of memory resources that are required for analytical processing,
            in MiB. Once this limit is approached, data pruning becomes more aggressive.
            Upon exceeding this limit, new entities are not modeled. The default value is 4096.
            </summary>
    </member>
    <member name="T:Nest.AnalysisLimits">
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisLimits.CategorizationExamplesLimit">
      <summary>
            The maximum number of examples stored per category in memory and in the results data store.
            The default value is 4. If you increase this value, more examples are available,
            however it requires that you have more storage available.
            If you set this value to 0, no examples are stored.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisLimits.ModelMemoryLimit">
      <summary>
            The approximate maximum amount of memory resources that are required for analytical processing,
            in MiB. Once this limit is approached, data pruning becomes more aggressive.
            Upon exceeding this limit, new entities are not modeled. The default value is 4096.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.AnalysisLimitsDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisLimitsDescriptor.CategorizationExamplesLimit(System.Nullable{System.Int64})">
      <summary>
            The maximum number of examples stored per category in memory and in the results data store.
            The default value is 4. If you increase this value, more examples are available,
            however it requires that you have more storage available.
            If you set this value to 0, no examples are stored.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisLimitsDescriptor.ModelMemoryLimit(System.String)">
      <summary>
            The approximate maximum amount of memory resources that are required for analytical processing,
            in MiB. Once this limit is approached, data pruning becomes more aggressive.
            Upon exceeding this limit, new entities are not modeled. The default value is 4096.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IAnalysisMemoryLimit">
      <summary>
            Limits applied for the resources required to hold the mathematical models in memory.
            </summary>
    </member>
    <member name="P:Nest.IAnalysisMemoryLimit.ModelMemoryLimit">
      <summary>
            The approximate maximum amount of memory resources that are required for analytical processing,
            in MiB. Once this limit is approached, data pruning becomes more aggressive.
            Upon exceeding this limit, new entities are not modeled. The default value is 4096.
            </summary>
    </member>
    <member name="T:Nest.AnalysisMemoryLimit">
      <inheritdoc />
    </member>
    <member name="P:Nest.AnalysisMemoryLimit.ModelMemoryLimit">
      <summary>
            The approximate maximum amount of memory resources that are required for analytical processing,
            in MiB. Once this limit is approached, data pruning becomes more aggressive.
            Upon exceeding this limit, new entities are not modeled. The default value is 4096.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.AnalysisMemoryLimitDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.AnalysisMemoryLimitDescriptor.ModelMemoryLimit(System.String)">
      <summary>
            The approximate maximum amount of memory resources that are required for analytical processing,
            in MiB. Once this limit is approached, data pruning becomes more aggressive.
            Upon exceeding this limit, new entities are not modeled. The default value is 4096.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IDataDescription">
      <summary>
            Defines the format of the input data when you send data to the machine learning job.
            Note that when configure a datafeed, these properties are automatically set.
            </summary>
    </member>
    <member name="P:Nest.IDataDescription.Format">
      <summary>
            Only JSON format is supported at this time.
            </summary>
    </member>
    <member name="P:Nest.IDataDescription.TimeField">
      <summary>
            The name of the field that contains the timestamp. The default value is time.
            </summary>
    </member>
    <member name="P:Nest.IDataDescription.TimeFormat">
      <summary>
            The time format, which can be epoch, epoch_ms, or a custom pattern.
            </summary>
    </member>
    <member name="T:Nest.DataDescription">
      <inheritdoc />
    </member>
    <member name="P:Nest.DataDescription.Format">
      <summary>
            Only JSON format is supported at this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DataDescription.TimeField">
      <summary>
            The name of the field that contains the timestamp. The default value is time.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DataDescription.TimeFormat">
      <summary>
            The time format, which can be epoch, epoch_ms, or a custom pattern.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DataDescriptionDescriptor`1">
      <inheritdoc />
    </member>
    <member name="M:Nest.DataDescriptionDescriptor`1.Format(System.String)">
      <summary>
            Only JSON format is supported at this time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DataDescriptionDescriptor`1.TimeField(Nest.Field)">
      <summary>
            The name of the field that contains the timestamp. The default value is time.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.DataDescriptionDescriptor`1.TimeField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.DataDescriptionDescriptor`1.TimeFormat(System.String)">
      <summary>
            The time format, which can be epoch, epoch_ms, or a custom pattern.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Job.AnalysisConfig">
      <summary>
            The analysis configuration, which specifies how to analyze the data.
            </summary>
    </member>
    <member name="P:Nest.Job.AnalysisLimits">
      <summary>
            Optionally specifies runtime limits for the job.
            </summary>
    </member>
    <member name="P:Nest.Job.BackgroundPersistInterval">
      <summary>
            Advanced configuration option. The time between each periodic persistence of the model.
            The default value is a randomized value between 3 to 4 hours, which avoids all jobs persisting
            at exactly the same time. The smallest allowed value is 1 hour.
            </summary>
      <remarks>
            For very large models (several GB), persistence could take 10-20 minutes, so do not set the value too low.
            </remarks>
    </member>
    <member name="P:Nest.Job.CreateTime">
      <summary>
            The time the job was created.
            </summary>
    </member>
    <member name="P:Nest.Job.DataDescription">
      <summary>
            Describes the format of the input data. This object is required, but it can be empty.
            </summary>
    </member>
    <member name="P:Nest.Job.Description">
      <summary>
            An optional description of the job.
            </summary>
    </member>
    <member name="P:Nest.Job.FinishedTime">
      <summary>
            If the job closed or failed, this is the time the job finished, otherwise it is null.
            </summary>
    </member>
    <member name="P:Nest.Job.JobId">
      <summary>
            The unique identifier for the job.
            </summary>
    </member>
    <member name="P:Nest.Job.JobType">
      <summary>
            The job type.
            </summary>
      <remarks>
            Reserved for future use.
            </remarks>
    </member>
    <member name="P:Nest.Job.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities.
            </summary>
    </member>
    <member name="P:Nest.Job.ModelSnapshotId">
      <summary>
            A numerical character string that uniquely identifies the model snapshot.
            </summary>
    </member>
    <member name="P:Nest.Job.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
    </member>
    <member name="P:Nest.Job.RenormalizationWindowDays">
      <summary>
            Advanced configuration option. The period over which adjustments to the score are applied, as new data
            is seen. The default value is the longer of 30 days or 100 bucket spans.
            </summary>
    </member>
    <member name="P:Nest.Job.ResultsIndexName">
      <summary>
            The name of the index in which to store the machine learning results.
            The default value is shared (which corresponds to the index name .ml-anomalies-shared).
            </summary>
    </member>
    <member name="P:Nest.Job.ResultsRetentionDays">
      <summary>
            Advanced configuration option. The number of days for which job results are retained.
            Once per day at 00:30 (server time), results older than this period are deleted from Elasticsearch.
            The default value is null, which means results are retained.
            </summary>
    </member>
    <member name="T:Nest.JobState">
      <summary>
            The state of a machine learning job
            </summary>
    </member>
    <member name="F:Nest.JobState.Closing">
      <summary>
            The job close action is in progress and has not yet completed. A closing job cannot accept further data.
            </summary>
    </member>
    <member name="F:Nest.JobState.Closed">
      <summary>
            The job finished successfully with its model state persisted.
            The job must be opened before it can accept further data.
            </summary>
    </member>
    <member name="F:Nest.JobState.Opened">
      <summary>
            The job is available to receive and process data.
            </summary>
    </member>
    <member name="F:Nest.JobState.Failed">
      <summary>
            The job did not finish successfully due to an error. This situation can occur due to invalid input data.
            If the job had irrevocably failed, it must be force closed and then deleted.
            If the datafeed can be corrected, the job can be closed and then re-opened.
            </summary>
    </member>
    <member name="F:Nest.JobState.Opening">
      <summary>
            The job open action is in progress and has not yet completed.
            </summary>
    </member>
    <member name="T:Nest.JobStats">
      <summary>
            Provides statistics about the operation progress of a machine learning job.
            </summary>
    </member>
    <member name="P:Nest.JobStats.AssignmentExplanation">
      <summary>
            For open jobs only, contains messages relating to the selection of a node to run the job.
            </summary>
    </member>
    <member name="P:Nest.JobStats.DataCounts">
      <summary>
            Describes the number of records processed and any related error counts.
            </summary>
    </member>
    <member name="P:Nest.JobStats.Forecasts">
      <summary>
             Contains job statistics if job contains a forecast.
            </summary>
    </member>
    <member name="P:Nest.JobStats.JobId">
      <summary>
            A unique identifier for the job.
            </summary>
    </member>
    <member name="P:Nest.JobStats.ModelSizeStats">
      <summary>
            Provides information about the size and contents of the model.
            </summary>
    </member>
    <member name="P:Nest.JobStats.Node">
      <summary>
            For open jobs only, contains information about the node where the job runs.
            </summary>
    </member>
    <member name="P:Nest.JobStats.OpenTime">
      <summary>
            For open jobs only, the elapsed time for which the job has been open.
            </summary>
    </member>
    <member name="P:Nest.JobStats.State">
      <summary>
            The status of the job.
            </summary>
    </member>
    <member name="P:Nest.JobStats.TimingStats">
      <summary>
            Timing-related statistics about the job's progress
            <para />
            Valid only in Elasticsearch 7.3.0+
            </summary>
    </member>
    <member name="P:Nest.TimingStats.MinimumBucketProcessingTimeMilliseconds">
      <summary>
            Minimum among all bucket processing times in milliseconds
            </summary>
    </member>
    <member name="P:Nest.TimingStats.MaximumBucketProcessingTimeMilliseconds">
      <summary>
            Maximum among all bucket processing times in milliseconds
            </summary>
    </member>
    <member name="P:Nest.TimingStats.AverageBucketProcessingTimeMilliseconds">
      <summary>
            Average of all bucket processing times in milliseconds
            </summary>
    </member>
    <member name="P:Nest.TimingStats.ExponentialAverageBucketProcessingTimeMilliseconds">
      <summary>
            Exponential moving average of all bucket processing times in milliseconds
            </summary>
    </member>
    <member name="P:Nest.JobForecastStatistics.MemoryBytes">
      <summary>
            Statistics about the memory usage: minimum, maximum, average and total.
            </summary>
    </member>
    <member name="P:Nest.JobForecastStatistics.ProcessingTimeMilliseconds">
      <summary>
            Statistics about the forecast runtime in milliseconds: minimum, maximum, average and total.
            </summary>
    </member>
    <member name="P:Nest.JobForecastStatistics.Records">
      <summary>
            Statistics about the number of forecast records: minimum, maximum, average and total.
            </summary>
    </member>
    <member name="P:Nest.JobForecastStatistics.Status">
      <summary>
            Counts per forecast status.
            </summary>
    </member>
    <member name="P:Nest.JobForecastStatistics.Total">
      <summary>
            The number of forecasts currently available for this model.
            </summary>
    </member>
    <member name="T:Nest.MemoryStatus">
      <summary>
            The status of the mathematical models.
            </summary>
    </member>
    <member name="F:Nest.MemoryStatus.Ok">
      <summary>
            The models stayed below the configured value.
            </summary>
    </member>
    <member name="F:Nest.MemoryStatus.SoftLimit">
      <summary>
            The models used more than 60% of the configured memory limit and older
            unused models will be pruned to free up space.
            </summary>
    </member>
    <member name="F:Nest.MemoryStatus.HardLimit">
      <summary>
            The models used more space than the configured memory limit.
            As a result, not all incoming data was processed.
            </summary>
    </member>
    <member name="T:Nest.IModelPlotConfig">
      <summary>
            Stores model information along with the results.
            It provides a more detailed view into anomaly detection.
            </summary>
    </member>
    <member name="P:Nest.IModelPlotConfig.Terms">
      <summary>
            Limits data collection to this list of partition or by field values.
            If terms are not specified, no filtering is applied.
            </summary>
      <remarks>
            This is experimental. Only the specified terms can be viewed when using the Single Metric Viewer.
            </remarks>
    </member>
    <member name="T:Nest.ModelPlotConfig">
      <inheritdoc />
    </member>
    <member name="P:Nest.ModelPlotConfig.Enabled">
      <inheritdoc />
    </member>
    <member name="P:Nest.ModelPlotConfig.Terms">
      <summary>
            Limits data collection to this list of partition or by field values.
            If terms are not specified, no filtering is applied.
            </summary>
      <remarks>
            This is experimental. Only the specified terms can be viewed when using the Single Metric Viewer.
            </remarks>
      <inheritdoc />
    </member>
    <member name="T:Nest.ModelPlotConfigDescriptor`1">
      <inheritdoc />
    </member>
    <member name="M:Nest.ModelPlotConfigDescriptor`1.Enabled(System.Nullable{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ModelPlotConfigDescriptor`1.Terms(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            Limits data collection to this list of partition or by field values.
            If terms are not specified, no filtering is applied.
            </summary>
      <remarks>
            This is experimental. Only the specified terms can be viewed when using the Single Metric Viewer.
            </remarks>
      <inheritdoc />
    </member>
    <member name="M:Nest.ModelPlotConfigDescriptor`1.Terms(Nest.Fields)">
      <summary>
            Limits data collection to this list of partition or by field values.
            If terms are not specified, no filtering is applied.
            </summary>
      <remarks>
            This is experimental. Only the specified terms can be viewed when using the Single Metric Viewer.
            </remarks>
      <inheritdoc />
    </member>
    <member name="T:Nest.IModelPlotConfigEnabled">
      <summary>
            Stores model information along with the results.
            It provides a more detailed view into anomaly detection.
            </summary>
    </member>
    <member name="P:Nest.IModelPlotConfigEnabled.Enabled">
      <summary>
            Enables calculation and storage of the model bounds for each entity that is being analyzed.
            By default, this is not enabled.
            </summary>
    </member>
    <member name="T:Nest.ModelPlotConfigEnabled">
      <inheritdoc />
    </member>
    <member name="P:Nest.ModelPlotConfigEnabled.Enabled">
      <summary>
            Enables calculation and storage of the model bounds for each entity that is being analyzed.
            By default, this is not enabled.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ModelPlotConfigEnabledDescriptor`1">
      <inheritdoc />
    </member>
    <member name="M:Nest.ModelPlotConfigEnabledDescriptor`1.Enabled(System.Nullable{System.Boolean})">
      <summary>
            Enables calculation and storage of the model bounds for each entity that is being analyzed.
            By default, this is not enabled.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.NonZeroCountDetector">
      <summary>
            Detects anomalies when the number of events in a bucket is anomalous, but it ignores cases where the bucket count is zero.
            Use this function if you know your data is sparse or has gaps and the gaps are not important.
            </summary>
    </member>
    <member name="T:Nest.HighNonZeroCountDetector">
      <summary>
            Detects anomalies when the number of events in a bucket is unusually high and it ignores cases where the bucket count is zero.
            </summary>
    </member>
    <member name="T:Nest.LowNonZeroCountDetector">
      <summary>
            Detects anomalies when the number of events in a bucket is unusually low and it ignores cases where the bucket count is zero.
            </summary>
    </member>
    <member name="T:Nest.IDetectionRule">
      <summary>
            A machine learning detection rule
            </summary>
    </member>
    <member name="P:Nest.IDetectionRule.Actions">
      <summary>
            The actions to take when rule is satisfied
            </summary>
    </member>
    <member name="P:Nest.IDetectionRule.Conditions">
      <summary>
            The conditions of the rule
            </summary>
    </member>
    <member name="P:Nest.IDetectionRule.Scope">
      <summary>
            The scopes of the rule
            </summary>
    </member>
    <member name="T:Nest.DetectionRule">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectionRule.Actions">
      <summary>
            The actions to take when rule is satisfied
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectionRule.Conditions">
      <summary>
            The conditions of the rule
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectionRule.Scope">
      <summary>
            The scopes of the rule
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IDetector">
      <summary>
            A machine learning detector
            </summary>
    </member>
    <member name="P:Nest.IDetector.CustomRules">
      <summary>
            Custom rules enable you to change the behaviour of anomaly detectors based on domain-specific knowledge.
            Custom rules describe when a detector should take a certain action instead of following its default behaviour.
            To specify the "when", a rule uses a scope and conditions. You can think of scope as the categorical
            specification of a rule, while conditions are the numerical part. A rule can have a scope,
            one or more conditions, or a combination of scope and conditions.
            </summary>
    </member>
    <member name="P:Nest.IDetector.DetectorDescription">
      <summary>
            A description of the detector. For example, "Low event rate".
            </summary>
    </member>
    <member name="P:Nest.IDetector.DetectorIndex">
      <summary>
            A unique identifier for the detector. This identifier is based on the order of the
            detectors in the analysis config, starting at zero. You can use this
            identifier when you want to update a specific detector.
            </summary>
    </member>
    <member name="P:Nest.IDetector.ExcludeFrequent">
      <summary>
            If set, frequent entities are excluded from influencing the anomaly results.
            Entities can be considered frequent over time or frequent in a population.
            If you are working with both over and by fields, then you can set exclude_frequent
            to all for both fields, or to by or over for those specific fields.
            </summary>
    </member>
    <member name="P:Nest.IDetector.Function">
      <summary>
            The analysis function used
            </summary>
    </member>
    <member name="P:Nest.IDetector.UseNull">
      <summary>
            Defines whether a new series is used as the null series when there
            is no value for the by or partition fields. The default value is <c>false</c>.
            </summary>
    </member>
    <member name="T:Nest.IFieldNameDetector">
      <summary>
            A machine learning detector with a field name
            </summary>
    </member>
    <member name="P:Nest.IFieldNameDetector.FieldName">
      <summary>
            The field that the detector uses in the function. If you use an event
            rate function such as count or rare, do not specify this field.
            </summary>
    </member>
    <member name="T:Nest.IByFieldNameDetector">
      <summary>
            A machine learning detector with a by field
            </summary>
    </member>
    <member name="P:Nest.IByFieldNameDetector.ByFieldName">
      <summary>
            The field used to split the data. In particular, this property is used for analyzing the splits with
            respect to their own history. It is used for finding unusual values in the context of the split.
            </summary>
    </member>
    <member name="T:Nest.IOverFieldNameDetector">
      <summary>
            A machine learning detector with an over field
            </summary>
    </member>
    <member name="P:Nest.IOverFieldNameDetector.OverFieldName">
      <summary>
            The field used to split the data. In particular, this property is used for analyzing the splits
            with respect to the history of all splits. It is used for finding unusual values in the population of all splits.
            </summary>
    </member>
    <member name="T:Nest.IPartitionFieldNameDetector">
      <summary>
            A machine learning detector with a partition field
            </summary>
    </member>
    <member name="P:Nest.IPartitionFieldNameDetector.PartitionFieldName">
      <summary>
            The field used to segment the analysis. When you use this property, you have completely
            independent baselines for each value of this field.
            </summary>
    </member>
    <member name="T:Nest.DetectorBase">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectorBase.CustomRules">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectorBase.DetectorDescription">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectorBase.DetectorIndex">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectorBase.ExcludeFrequent">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectorBase.Function">
      <inheritdoc />
    </member>
    <member name="P:Nest.DetectorBase.UseNull">
      <inheritdoc />
    </member>
    <member name="T:Nest.DetectorDescriptorBase`2">
      <inheritdoc cref="T:Nest.IDetector" />
    </member>
    <member name="M:Nest.DetectorDescriptorBase`2.DetectorDescription(System.String)">
      <summary>
            A description of the detector. For example, "Low event rate".
            </summary>
      <inheritdoc cref="P:Nest.IDetector.DetectorDescription" />
    </member>
    <member name="M:Nest.DetectorDescriptorBase`2.ExcludeFrequent(System.Nullable{Nest.ExcludeFrequent})">
      <summary>
            If set, frequent entities are excluded from influencing the anomaly results.
            Entities can be considered frequent over time or frequent in a population.
            If you are working with both over and by fields, then you can set exclude_frequent
            to all for both fields, or to by or over for those specific fields.
            </summary>
      <inheritdoc cref="P:Nest.IDetector.ExcludeFrequent" />
    </member>
    <member name="M:Nest.DetectorDescriptorBase`2.UseNull(System.Nullable{System.Boolean})">
      <summary>
            Defines whether a new series is used as the null series when there
            is no value for the by or partition fields. The default value is <c>false</c>.
            </summary>
      <inheritdoc cref="P:Nest.IDetector.UseNull" />
    </member>
    <member name="M:Nest.DetectorDescriptorBase`2.DetectorIndex(System.Nullable{System.Int32})">
      <summary>
            A unique identifier for the detector. This identifier is based on the order of the
            detectors in the analysis config, starting at zero. You can use this
            identifier when you want to update a specific detector.
            </summary>
      <inheritdoc cref="P:Nest.IDetector.DetectorIndex" />
    </member>
    <member name="M:Nest.DetectorDescriptorBase`2.CustomRules(System.Func{Nest.DetectionRulesDescriptor,Nest.IPromise{System.Collections.Generic.List{Nest.IDetectionRule}}})">
      <summary>
            Custom rules enable you to change the behaviour of anomaly detectors based on domain-specific knowledge.
            Custom rules describe when a detector should take a certain action instead of following its default behaviour.
            To specify the "when", a rule uses a scope and conditions. You can think of scope as the categorical
            specification of a rule, while conditions are the numerical part. A rule can have a scope,
            one or more conditions, or a combination of scope and conditions.
            </summary>
      <inheritdoc cref="P:Nest.IDetector.CustomRules" />
    </member>
    <member name="P:Nest.IPage.From">
      <summary>
            Skips the specified number of buckets.
            </summary>
    </member>
    <member name="P:Nest.IPage.Size">
      <summary>
            Specifies the maximum number of buckets to obtain.
            </summary>
    </member>
    <member name="P:Nest.Page.From">
      <summary>
            Skips the specified number of buckets.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.Page.Size">
      <summary>
            Specifies the maximum number of buckets to obtain.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PageDescriptor.From(System.Nullable{System.Int32})">
      <summary>
            Skips the specified number of buckets.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.PageDescriptor.Size(System.Nullable{System.Int32})">
      <summary>
            Specifies the maximum number of buckets to obtain.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DataCounts.BucketCount">
      <summary>
            The number of bucket results produced by the job.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.EarliestRecordTimestamp">
      <summary>
            The timestamp of the earliest chronologically ordered record.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.EmptyBucketCount">
      <summary>
            The number of buckets which did not contain any data. If your data contains many empty buckets,
            consider increasing your bucket_span or using functions that are tolerant to gaps in
            data such as mean, non_null_sum or non_zero_count.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.InputBytes">
      <summary>
            The number of raw bytes read by the job.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.InputFieldCount">
      <summary>
            The total number of record fields read by the job.
            This count includes fields that are not used in the analysis.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.InputRecordCount">
      <summary>
            The number of data records read by the job.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.InvalidDateCount">
      <summary>
            The number of records with either a missing date field or a date that could not be parsed.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.JobId">
      <summary>
             A unique identifier for the job.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.LastDataTime">
      <summary>
            The timestamp at which data was last analyzed, according to server time.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.LatestEmptyBucketTimestamp">
      <summary>
            The timestamp of the last bucket that did not contain any data.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.LatestRecordTimestamp">
      <summary>
            The timestamp of the last processed record.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.LatestSparseBucketTimestamp">
      <summary>
            The timestamp of the last bucket that was considered sparse.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.MissingFieldCount">
      <summary>
            The number of records that are missing a field that the job is configured to analyze.
            Records with missing fields are still processed because it is possible that not all fields are missing.
            The value of <see cref="P:Nest.DataCounts.ProcessedRecordCount" /> includes this count.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.OutOfOrderTimestampCount">
      <summary>
            The number of records that are out of time sequence and outside of the latency window.
            These out of order records are discarded, since jobs require time series data to be in
            ascending chronological order.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.ProcessedFieldCount">
      <summary>
            The total number of fields in all the records that have been processed by the job.
            Only fields that are specified in the detector configuration contribute to this count.
            The time stamp is not included in this count.
            </summary>
    </member>
    <member name="P:Nest.DataCounts.ProcessedRecordCount">
      <summary>
             The number of records that have been processed by the job. This value includes records with missing fields,
             since they are nonetheless analyzed.
             If you use datafeeds and have aggregations in your search query, the <see cref="P:Nest.DataCounts.ProcessedRecordCount" />
            will be the number of aggregated records processed, not the number of Elasticsearch documents.
            </summary>
    </member>
    <member name="T:Nest.ModelSizeStats">
      <summary>
            Provides information about the size and contents of the model.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.BucketAllocationFailuresCount">
      <summary>
            The number of buckets for which new entities in incoming data were not processed due to
            insufficient model memory.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.JobId">
      <summary>
             A unique identifier for the job.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.LogTime">
      <summary>
            The timestamp according to server time.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.MemoryStatus">
      <summary>
            The status of the mathematical models.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.ModelBytes">
      <summary>
            The number of bytes of memory used by the models. This is the maximum value since the last time the
            model was persisted. If the job is closed, this value indicates the latest size.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.ResultType">
      <summary>
            For internal use. The type of result.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.Timestamp">
      <summary>
            The timestamp according to the timestamp of the data.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.TotalByFieldCount">
      <summary>
            The number of by field values that were analyzed by the models.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.TotalOverFieldCount">
      <summary>
            The number of over field values that were analyzed by the models.
            </summary>
    </member>
    <member name="P:Nest.ModelSizeStats.TotalPartitionFieldCount">
      <summary>
            The number of partition field values that were analyzed by the models.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.Description">
      <summary>
            An optional description of the job.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.JobId">
      <summary>
            The unique identifier for the job
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.LatestRecordTimeStamp">
      <summary>
            The timestamp of the latest processed record.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.LatestResultTimeStamp">
      <summary>
            The timestamp of the latest bucket result.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.ModelSizeStats">
      <summary>
            Summary information describing the model.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.Retain">
      <summary>
            If true, this snapshot will not be deleted during automatic cleanup of snapshots older than
            the model snapshot retention days. However, this snapshot will be deleted when the
            job is deleted. The default value is false.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.SnapshotDocCount">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.SnapshotId">
      <summary>
            A numerical character string that uniquely identifies the model snapshot.
            </summary>
    </member>
    <member name="P:Nest.ModelSnapshot.Timestamp">
      <summary>
            The creation timestamp for the snapshot.
            </summary>
    </member>
    <member name="T:Nest.AnomalyCause">
      <summary>
            Cause for the anomaly that has been identified for the over field.
            </summary>
    </member>
    <member name="T:Nest.AnomalyRecord">
      <summary>
            Detailed analytical results of anomalous activity that has been
            identified in the input data based on the detector configuration.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Actual">
      <summary>
            The actual value for the bucket.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.BucketSpan">
      <summary>
            The length of the bucket. This value matches the <see cref="P:Nest.AnalysisConfig.BucketSpan" /> that is specified in the job.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.ByFieldName">
      <summary>
            The name of the analyzed field. This value is present only if it is specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.ByFieldValue">
      <summary>
            The value of <see cref="P:Nest.AnomalyRecord.ByFieldName" />. This value is present only if it is specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Causes">
      <summary>
            For population analysis, an over field must be specified in the detector.
            This property contains an array of anomaly records that are the causes for the anomaly that has been
            identified for the over field. If no over fields exist, this field is not present.
            Contains the most anomalous records for the <see cref="P:Nest.AnomalyRecord.OverFieldName" />. For scalability reasons,
            a maximum of the 10 most significant causes of the anomaly are returned.
            As part of the core analytical modeling, these low-level anomaly records are aggregated for their
            parent over field record.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.DetectorIndex">
      <summary>
            A unique identifier for the detector.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.FieldName">
      <summary>
            Certain functions require a field to operate on, for example, sum().
            For those functions, this value is the name of the field to be analyzed.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Function">
      <summary>
            The function in which the anomaly occurs, as specified in the detector configuration.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.FunctionDescription">
      <summary>
            The description of the function in which the anomaly occurs, as specified in the detector configuration.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Influencers">
      <summary>
            If influencers was specified in the detector configuration, then this
            contains influencers that contributed to or were to blame for an anomaly.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.InitialRecordScore">
      <summary>
            A normalized score between 0-100, which is based on the probability of the anomalousness of this record.
            This is the initial value that was calculated at the time the bucket was processed.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.IsInterim">
      <summary>
            If true, this is an interim result. In other words, the anomaly record is calculated
            based on partial input data.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.JobId">
      <summary>
            The unique identifier for the job that these results belong to.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.OverFieldName">
      <summary>
            The name of the over field that was used in the analysis. This value is present only if it was
            specified in the detector. Over fields are used in population analysis.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.OverFieldValue">
      <summary>
            The value of <see cref="P:Nest.AnomalyRecord.OverFieldName" />. This value is present only if it is specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.PartitionFieldName">
      <summary>
            The name of the partition field that was used in the analysis.
            This value is present only if it was specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.PartitionFieldValue">
      <summary>
            The value of <see cref="P:Nest.AnomalyRecord.PartitionFieldName" />. This value is present only if it is specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Probability">
      <summary>
            The probability of the individual anomaly occurring, in the range 0 to 1.
            This value can be held to a high precision of over 300 decimal places, so the <see cref="P:Nest.AnomalyRecord.RecordScore" />
            is provided as a human-readable and friendly interpretation of this.
            </summary>
      <example>0.0000772031</example>
    </member>
    <member name="P:Nest.AnomalyRecord.RecordScore">
      <summary>
            A normalized score between 0-100, which is based on the probability of the anomalousness of this record.
            Unlike <see cref="P:Nest.AnomalyRecord.InitialRecordScore" />, this value will be updated by a re-normalization process
            as new data is analyzed.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.ResultType">
      <summary>
            Internal. This is always set to record.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Timestamp">
      <summary>
            The start time of the bucket for which these results were calculated.
            </summary>
    </member>
    <member name="P:Nest.AnomalyRecord.Typical">
      <summary>
            The typical value for the bucket, according to analytical modeling.
            </summary>
      <remarks>
            Additional record properties are added, depending on the fields being analyzed.
            For example, if it’s analyzing hostname as a by field, then a field hostname is added to the
            result document. This information enables you to filter the anomaly results more easily.
            </remarks>
    </member>
    <member name="P:Nest.Bucket.AnomalyScore">
      <summary>
            The maximum anomaly score, between 0-100, for any of the bucket influencers. This is an overall, rate-limited score for
            the job. All the
            anomaly records in the bucket contribute to this score. This value might be updated as new data is analyzed.
            </summary>
    </member>
    <member name="P:Nest.Bucket.BucketInfluencers">
      <summary>
            An array of bucket influencer objects.
            </summary>
    </member>
    <member name="P:Nest.Bucket.BucketSpan">
      <summary>
            The length of the bucket. This value matches the bucket_span that is specified in the job.
            </summary>
    </member>
    <member name="P:Nest.Bucket.EventCount">
      <summary>
            The number of input data records processed in this bucket.
            </summary>
    </member>
    <member name="P:Nest.Bucket.InitialAnomalyScore">
      <summary>
            The maximum anomaly_score for any of the bucket influencers. This is the initial value that was calculated at the time
            the bucket was
            processed.
            </summary>
    </member>
    <member name="P:Nest.Bucket.IsInterim">
      <summary>
            If true, this is an interim result. In other words, the bucket results are calculated based on partial input data.
            </summary>
    </member>
    <member name="P:Nest.Bucket.JobId">
      <summary>
            The unique identifier for the job that these results belong to.
            </summary>
    </member>
    <member name="P:Nest.Bucket.PartitionScores">
      <summary>
            An array of partition score objects.
            </summary>
    </member>
    <member name="P:Nest.Bucket.ProcessingTimeMilliseconds">
      <summary>
            The amount of time, in milliseconds, that it took to analyze the bucket contents and calculate results.
            </summary>
    </member>
    <member name="P:Nest.Bucket.ResultType">
      <summary>
            Internal. This value is always set to bucket.
            </summary>
    </member>
    <member name="P:Nest.Bucket.Timestamp">
      <summary>
            The start time of the bucket. This timestamp uniquely identifies the bucket.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.BucketSpan">
      <summary>
            The length of the bucket. This value matches the bucket_span that is specified in the job.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.InfluencerFieldName">
      <summary>
            The field name of the influencer.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.InfluencerFieldValue">
      <summary>
            The entity that influenced, contributed to, or was to blame for the anomaly.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.InfluencerScore">
      <summary>
            A normalized score between 0-100, which is based on the probability of the influencer in this bucket aggregated across detectors. Updated
            by a re-normalization process as new data is analyzed.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.InitialInfluencerScore">
      <summary>
            A normalized score between 0-100, which is based on the probability of the influencer in this bucket aggregated across detectors.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.IsInterim">
      <summary>
            If true, this is an interim result. In other words, the influencer results are calculated based on partial input data.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.BucketInfluencer.JobId" -->
    <member name="P:Nest.BucketInfluencer.Probability">
      <summary>
            The probability that the influencer has this behavior, in the range 0 to 1. This value can be held to a high precision of over 300 decimal
            places.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.ResultType">
      <summary>
            Internal. This value is always set to influencer.
            </summary>
    </member>
    <member name="P:Nest.BucketInfluencer.Timestamp">
      <summary>
            The start time of the bucket for which these results were calculated.
            </summary>
    </member>
    <member name="P:Nest.CategoryDefinition.CategoryId">
      <summary>
            A unique identifier for the category.
            </summary>
    </member>
    <member name="P:Nest.CategoryDefinition.Examples">
      <summary>
            A list of examples of actual values that matched the category.
            </summary>
    </member>
    <member name="P:Nest.CategoryDefinition.JobId">
      <summary>
            The unique identifier for the job that these results belong to.
            </summary>
    </member>
    <member name="P:Nest.CategoryDefinition.MaxMatchingLength">
      <summary>
            The maximum length of the fields that matched the category. The value is increased by 10% to enable matching for similar fields that have
            not been analyzed.
            </summary>
    </member>
    <member name="P:Nest.CategoryDefinition.Regex">
      <summary>
            A regular expression that is used to search for values that match the category.
            </summary>
    </member>
    <member name="P:Nest.CategoryDefinition.Terms">
      <summary>
            A space separated list of the common tokens that are matched in values of the category.
            </summary>
    </member>
    <member name="P:Nest.Influence.InfluencerFieldName">
      <summary>
            The field name of the influencer.
            </summary>
    </member>
    <member name="P:Nest.Influence.InfluencerFieldValues">
      <summary>
            The entities that influenced, contributed to, or was to blame for the influence.
            </summary>
    </member>
    <member name="P:Nest.OverallBucket.BucketSpan">
      <summary>
            The length of the bucket. This value matches the bucket_span that is specified in the job.
            </summary>
    </member>
    <member name="P:Nest.OverallBucket.IsInterim">
      <summary>
            If true, this is an interim result. In other words, the bucket results are calculated based on partial input data.
            </summary>
    </member>
    <member name="P:Nest.OverallBucket.Jobs">
      <summary>
            An array of partition score objects.
            </summary>
    </member>
    <member name="P:Nest.OverallBucket.OverallScore">
      <summary>
            The overall score
            </summary>
    </member>
    <member name="P:Nest.OverallBucket.ResultType">
      <summary>
            Internal. This value is always set to overall_bucket.
            </summary>
    </member>
    <member name="P:Nest.OverallBucket.Timestamp">
      <summary>
            The start time of the bucket. This timestamp uniquely identifies the bucket.
            </summary>
    </member>
    <member name="P:Nest.PartitionScore.InitialRecordScore">
      <summary>
            A normalized score between 0-100, which is based on the probability of the anomalousness of this record. This is the initial value that was
            calculated at the time the bucket was processed.
            </summary>
    </member>
    <member name="P:Nest.PartitionScore.PartitionFieldName">
      <summary>
            The name of the partition field that was used in the analysis. This value is present only if it was specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.PartitionScore.PartitionFieldValue">
      <summary>
            The value of partition_field_name. This value is present only if it was specified in the detector.
            </summary>
    </member>
    <member name="P:Nest.PartitionScore.Probability">
      <summary>
            The probability of the individual anomaly occurring, in the range 0 to 1. This value can be held to a high precision of over 300 decimal
            places.
            </summary>
    </member>
    <member name="P:Nest.PartitionScore.RecordScore">
      <summary>
            A normalized score between 0-100, which is based on the probability of the anomalousness of this record. Unlike initial_record_score, this
            value will be updated by a re-normalization process as new data is analyzed.
            </summary>
    </member>
    <member name="P:Nest.ScheduledEvent.CalendarId">
      <summary>
            An identifier for the calendar that contains the scheduled event.
            </summary>
    </member>
    <member name="P:Nest.ScheduledEvent.Description">
      <summary>
             A description of the scheduled event.
            </summary>
    </member>
    <member name="P:Nest.ScheduledEvent.StartTime">
      <summary>
            The timestamp for the beginning of the scheduled event.
            </summary>
    </member>
    <member name="P:Nest.ScheduledEvent.EndTime">
      <summary>
            The timestamp for the end of the scheduled event.
            </summary>
    </member>
    <member name="P:Nest.ScheduledEvent.EventId">
      <summary>
            An automatically-generated identifier for the scheduled event.
            </summary>
    </member>
    <member name="T:Nest.PostCalendarEventsResponse">
      <summary>
            The response from creating a calendar.
            </summary>
    </member>
    <member name="P:Nest.PostCalendarEventsResponse.Events">
      <summary>
             A list of one of more scheduled events.
            </summary>
    </member>
    <member name="T:Nest.PostJobDataResponse">
      <summary>
            The Post Job Data API response
            </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.BucketCount">
      <summary>The count of buckets. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.EarliestRecordTimestamp">
      <summary> The earliest record timestamp</summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Nest.PostJobDataResponse.EmptyBucketCount" -->
    <member name="P:Nest.PostJobDataResponse.InputBytes">
      <summary>Total input bytes.</summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.InputFieldCount">
      <summary> The count of input fields. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.InputRecordCount">
      <summary> The count of input records. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.InvalidDateCount">
      <summary> The count of invalid dates. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.JobId">
      <summary>The unique identifier for the job.</summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.LastDataTime">
      <summary> The time of the last data item. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.LatestRecordTimestamp">
      <summary> The latest record timestamp </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.MissingFieldCount">
      <summary> The count of missing fields. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.OutOfOrderTimestampCount">
      <summary>
            The count of out of order timestamps.
            </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.ProcessedFieldCount">
      <summary> The count of processed fields. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.ProcessedRecordCount">
      <summary> The count of processed records. </summary>
    </member>
    <member name="P:Nest.PostJobDataResponse.SparseBucketCount">
      <summary> The count of sparse buckets. </summary>
    </member>
    <member name="T:Nest.PutCalendarJobResponse">
      <summary> The response from creating a calendar job. </summary>
    </member>
    <member name="T:Nest.PutCalendarResponse">
      <summary> The response from creating a calendar.</summary>
    </member>
    <member name="T:Nest.PutDatafeedResponse">
      <summary> The response from creating a datafeed. </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.Aggregations">
      <summary> The aggregation searches to perform for the datafeed.</summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.ChunkingConfig">
      <summary> Specifies how data searches are split into time chunks.</summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.DatafeedId">
      <summary>The datafeed id. </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.Indices">
      <summary>
             A list of index names to search within, wildcards are supported.
            </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 a.m. might not be searchable until 10:06 a.m.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed. T
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
    </member>
    <member name="P:Nest.PutDatafeedResponse.ScrollSize">
      <summary> The size parameter that used in searches </summary>
    </member>
    <member name="T:Nest.PutFilterResponse">
      <summary>
            The response from creating a machine learning filter.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.AnalysisConfig">
      <summary>
            The analysis configuration, which specifies how to analyze the data.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.AnalysisLimits">
      <summary>
            Optionally specifies runtime limits for the job.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.BackgroundPersistInterval">
      <summary>
            Advanced configuration option. The time between each periodic persistence of the model.
            The default value is a randomized value between 3 to 4 hours, which avoids all jobs persisting
            at exactly the same time. The smallest allowed value is 1 hour.
            </summary>
      <remarks>
            For very large models (several GB), persistence could take 10-20 minutes,
            so do not set the background_persist_interval value too low.
            </remarks>
    </member>
    <member name="P:Nest.PutJobResponse.CreateTime">
      <summary>
            The time the job was created.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.DataDescription">
      <summary>
            Describes the format of the input data. This object is required, but it can be empty.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.Description">
      <summary>
            An optional description of the job.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.JobId">
      <summary>
            The unique identifier for the job.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.JobType">
      <summary>
            The job type.
            </summary>
      <remarks>
            Reserved for future use.
            </remarks>
    </member>
    <member name="P:Nest.PutJobResponse.ModelPlotConfig">
      <summary>
            This advanced configuration option stores model information along with the results.
            This adds overhead to the performance of the system and is not feasible for jobs with many entities
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.ModelSnapshotId">
      <summary>
            A numerical character string that uniquely identifies the model snapshot.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.ModelSnapshotRetentionDays">
      <summary>
            The time in days that model snapshots are retained for the job.
            Older snapshots are deleted. The default value is 1 day.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.RenormalizationWindowDays">
      <summary>
            Advanced configuration option. The period over which adjustments to the score are applied, as new data
            is seen. The default value is the longer of 30 days or 100 bucket_spans.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.ResultsIndexName">
      <summary>
            The name of the index in which to store the machine learning results.
            The default value is shared, which corresponds to the index name .ml-anomalies-shared.
            </summary>
    </member>
    <member name="P:Nest.PutJobResponse.ResultsRetentionDays">
      <summary>
            Advanced configuration option. The number of days for which job results are retained.
            Once per day at 00:30 (server time), results older than this period are deleted from Elasticsearch.
            The default value is null, which means results are retained.
            </summary>
    </member>
    <member name="T:Nest.UpdateDatafeedResponse">
      <summary>
            The response from updating a datafeed
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.Aggregations">
      <summary>
            The aggregation searches to perform for the datafeed.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.ChunkingConfig">
      <summary>
            Specifies how data searches are split into time chunks.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.DatafeedId">
      <summary>
            The datafeed id.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.Frequency">
      <summary>
            The interval at which scheduled queries are made while the datafeed runs in real time.
            The default value is either the bucket span for short bucket spans, or, for longer bucket spans,
            a sensible fraction of the bucket span.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.Indices">
      <summary>A list of index names to search within, wildcards are supported.</summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.JobId">
      <summary>
            A numerical character string that uniquely identifies the job.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.Query">
      <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.QueryDelay">
      <summary>
            The number of seconds behind real time that data is queried.
            For example, if data from 10:04 a.m. might not be searchable until 10:06 a.m.,
            set this property to 120 seconds. The default value is 60s.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.ScriptFields">
      <summary>
            Specifies scripts that evaluate custom expressions and returns script fields to the datafeed.
            The detector configuration in a job can contain functions that use these script fields.
            </summary>
    </member>
    <member name="P:Nest.UpdateDatafeedResponse.ScrollSize">
      <summary>
            The size parameter that is used in Elasticsearch searches
            </summary>
    </member>
    <member name="T:Nest.UpdateFilterResponse">
      <summary>
            The response from updating a machine learning filter.
            </summary>
    </member>
    <member name="T:Nest.DeprecationWarningLevel">
      <summary> The deprecation warning level</summary>
    </member>
    <member name="F:Nest.DeprecationWarningLevel.None">
      <summary> Everything is good </summary>
    </member>
    <member name="F:Nest.DeprecationWarningLevel.Information">
      <summary>
            An advisory note that something has changed. No action needed.
            </summary>
    </member>
    <member name="F:Nest.DeprecationWarningLevel.Warning">
      <summary>
            You can upgrade directly, but you are using deprecated functionality
            which will not be available in the next major version.
            </summary>
    </member>
    <member name="F:Nest.DeprecationWarningLevel.Critical">
      <summary> You cannot upgrade without fixing this problem.</summary>
    </member>
    <member name="T:Nest.DeprecationInfo">
      <summary>
            Information about a deprecation
            </summary>
    </member>
    <member name="F:Nest.IndexingJobState.Started">
      <summary> Indexer is running, but not actively indexing data (e.g. it's idle) </summary>
    </member>
    <member name="F:Nest.IndexingJobState.Indexing">
      <summary> Indexer is actively indexing data </summary>
    </member>
    <member name="F:Nest.IndexingJobState.Stopping">
      <summary> Transition state to where an indexer has acknowledged the stop but is still in process of halting </summary>
    </member>
    <member name="F:Nest.IndexingJobState.Stopped">
      <summary> Indexer is "paused" and ignoring scheduled triggers </summary>
    </member>
    <member name="F:Nest.IndexingJobState.Aborting">
      <summary> Something (internal or external) has requested the indexer abort and shutdown </summary>
    </member>
    <member name="P:Nest.RollupJobConfiguration.Cron">
      <inheritdoc cref="P:Nest.ICreateRollupJobRequest.Cron" />
    </member>
    <member name="P:Nest.RollupJobConfiguration.Groups">
      <inheritdoc cref="P:Nest.ICreateRollupJobRequest.Groups" />
    </member>
    <member name="P:Nest.RollupJobConfiguration.IndexPattern">
      <inheritdoc cref="P:Nest.ICreateRollupJobRequest.IndexPattern" />
    </member>
    <member name="P:Nest.RollupJobConfiguration.Metrics">
      <inheritdoc cref="P:Nest.ICreateRollupJobRequest.Metrics" />
    </member>
    <member name="P:Nest.RollupJobConfiguration.PageSize">
      <inheritdoc cref="P:Nest.ICreateRollupJobRequest.PageSize" />
    </member>
    <member name="P:Nest.RollupJobConfiguration.RollupIndex">
      <inheritdoc cref="P:Nest.ICreateRollupJobRequest.RollupIndex" />
    </member>
    <member name="T:Nest.IDateHistogramRollupGrouping">
      <summary>
            A date_histogram group aggregates a date field into time-based buckets. The date_histogram group is mandatory ,
            you currently cannot rollup documents without a timestamp and a date_histogram group
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramRollupGrouping.Delay">
      <summary>
            How long to wait before rolling up new documents. By default, the indexer attempts to roll up all data that is
            available.
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramRollupGrouping.Field">
      <summary>
            The date field that is to be rolled up
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramRollupGrouping.Format">
      <summary>
            Date format. Supports expressive date format pattern.
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramRollupGrouping.Interval">
      <summary>
            The interval of time buckets to be generated when rolling up. E.g. "60m" will produce 60 minute (hourly) rollups.
            The interval defines the minimum interval that can be aggregated only.
            </summary>
    </member>
    <member name="P:Nest.IDateHistogramRollupGrouping.TimeZone">
      <summary>
            Defines what time_zone the rollup documents are stored as. Unlike raw data, which can shift timezones on the fly,
            rolled
            documents have to be stored with a specific timezone. By default, rollup documents are stored in UT
            </summary>
    </member>
    <member name="T:Nest.DateHistogramRollupGrouping">
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramRollupGrouping.Delay">
      <summary>
            How long to wait before rolling up new documents. By default, the indexer attempts to roll up all data that is
            available.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramRollupGrouping.Field">
      <summary>
            The date field that is to be rolled up
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramRollupGrouping.Format">
      <summary>
            Date format. Supports expressive date format pattern.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramRollupGrouping.Interval">
      <summary>
            The interval of time buckets to be generated when rolling up. E.g. "60m" will produce 60 minute (hourly) rollups.
            The interval defines the minimum interval that can be aggregated only.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.DateHistogramRollupGrouping.TimeZone">
      <summary>
            Defines what time_zone the rollup documents are stored as. Unlike raw data, which can shift timezones on the fly,
            rolled
            documents have to be stored with a specific timezone. By default, rollup documents are stored in UT
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.DateHistogramRollupGroupingDescriptor`1">
      <inheritdoc cref="T:Nest.IDateHistogramRollupGrouping" />
    </member>
    <member name="M:Nest.DateHistogramRollupGroupingDescriptor`1.Field(Nest.Field)">
      <summary>
            The date field that is to be rolled up
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramRollupGrouping.Field" />
    </member>
    <member name="M:Nest.DateHistogramRollupGroupingDescriptor`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <inheritdoc cref="P:Nest.IDateHistogramRollupGrouping.Field" />
    </member>
    <member name="M:Nest.DateHistogramRollupGroupingDescriptor`1.Interval(Nest.Time)">
      <summary>
            The interval of time buckets to be generated when rolling up. E.g. "60m" will produce 60 minute (hourly) rollups.
            The interval defines the minimum interval that can be aggregated only.
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramRollupGrouping.Interval" />
    </member>
    <member name="M:Nest.DateHistogramRollupGroupingDescriptor`1.Delay(Nest.Time)">
      <summary>
            How long to wait before rolling up new documents. By default, the indexer attempts to roll up all data that is
            available.
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramRollupGrouping.Delay" />
    </member>
    <member name="M:Nest.DateHistogramRollupGroupingDescriptor`1.TimeZone(System.String)">
      <summary>
            Defines what time_zone the rollup documents are stored as. Unlike raw data, which can shift timezones on the fly,
            rolled
            documents have to be stored with a specific timezone. By default, rollup documents are stored in UT
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramRollupGrouping.TimeZone" />
    </member>
    <member name="M:Nest.DateHistogramRollupGroupingDescriptor`1.Format(System.String)">
      <summary>
            Date format. Supports expressive date format pattern.
            </summary>
      <inheritdoc cref="P:Nest.IDateHistogramRollupGrouping.Format" />
    </member>
    <member name="T:Nest.IHistogramRollupGrouping">
      <summary> The histogram group aggregates one or more numeric fields into numeric histogram intervals. </summary>
    </member>
    <member name="P:Nest.IHistogramRollupGrouping.Fields">
      <summary>
            The set of fields that you wish to build histograms for. All fields specified must be some kind of numeric. Order does not matter
            </summary>
    </member>
    <member name="P:Nest.IHistogramRollupGrouping.Interval">
      <summary>
            The interval of histogram buckets to be generated when rolling up. Note that only one interval can be specified in the
            histogram group, meaning that all fields being grouped via the histogram must share the same interval.
            </summary>
    </member>
    <member name="T:Nest.HistogramRollupGrouping">
      <inheritdoc />
    </member>
    <member name="P:Nest.HistogramRollupGrouping.Fields">
      <summary>
            The set of fields that you wish to build histograms for. All fields specified must be some kind of numeric. Order does not matter
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HistogramRollupGrouping.Interval">
      <summary>
            The interval of histogram buckets to be generated when rolling up. Note that only one interval can be specified in the
            histogram group, meaning that all fields being grouped via the histogram must share the same interval.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.HistogramRollupGroupingDescriptor`1">
      <inheritdoc cref="T:Nest.IHistogramRollupGrouping" />
    </member>
    <member name="M:Nest.HistogramRollupGroupingDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The set of fields that you wish to build histograms for. All fields specified must be some kind of numeric. Order does not matter
            </summary>
      <inheritdoc cref="P:Nest.IHistogramRollupGrouping.Fields" />
    </member>
    <member name="M:Nest.HistogramRollupGroupingDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The set of fields that you wish to build histograms for. All fields specified must be some kind of numeric. Order does not matter
            </summary>
      <inheritdoc cref="P:Nest.IHistogramRollupGrouping.Fields" />
    </member>
    <member name="M:Nest.HistogramRollupGroupingDescriptor`1.Interval(System.Nullable{System.Int64})">
      <summary>
            The interval of histogram buckets to be generated when rolling up. Note that only one interval can be specified in the
            histogram group, meaning that all fields being grouped via the histogram must share the same interval.
            </summary>
      <inheritdoc cref="P:Nest.IHistogramRollupGrouping.Interval" />
    </member>
    <member name="T:Nest.IRollupGroupings">
      <summary>
            The groups section of the configuration is where you decide which fields should be grouped on, and with what aggregations.
            These fields will then be available later for aggregating into buckets
            </summary>
    </member>
    <member name="P:Nest.IRollupGroupings.DateHistogram">
      <inheritdoc cref="T:Nest.IDateHistogramRollupGrouping" />
    </member>
    <member name="P:Nest.IRollupGroupings.Histogram">
      <inheritdoc cref="T:Nest.IHistogramRollupGrouping" />
    </member>
    <member name="P:Nest.IRollupGroupings.Terms">
      <inheritdoc cref="T:Nest.ITermsRollupGrouping" />
    </member>
    <member name="T:Nest.RollupGroupings">
      <inheritdoc cref="T:Nest.IRollupGroupings" />
    </member>
    <member name="P:Nest.RollupGroupings.DateHistogram">
      <inheritdoc />
    </member>
    <member name="P:Nest.RollupGroupings.Histogram">
      <inheritdoc />
    </member>
    <member name="P:Nest.RollupGroupings.Terms">
      <inheritdoc />
    </member>
    <member name="T:Nest.RollupGroupingsDescriptor`1">
      <inheritdoc cref="T:Nest.IRollupGroupings" />
    </member>
    <member name="M:Nest.RollupGroupingsDescriptor`1.DateHistogram(System.Func{Nest.DateHistogramRollupGroupingDescriptor{`0},Nest.IDateHistogramRollupGrouping})">
      <inheritdoc cref="T:Nest.IDateHistogramRollupGrouping" />
    </member>
    <member name="M:Nest.RollupGroupingsDescriptor`1.Histogram(System.Func{Nest.HistogramRollupGroupingDescriptor{`0},Nest.IHistogramRollupGrouping})">
      <inheritdoc cref="T:Nest.IHistogramRollupGrouping" />
    </member>
    <member name="M:Nest.RollupGroupingsDescriptor`1.Terms(System.Func{Nest.TermsRollupGroupingDescriptor{`0},Nest.ITermsRollupGrouping})">
      <inheritdoc cref="T:Nest.ITermsRollupGrouping" />
    </member>
    <member name="T:Nest.ITermsRollupGrouping">
      <summary>
            The terms group can be used on keyword or numeric fields, to allow bucketing via the terms aggregation at a
            later point. The terms group is optional. If defined, the indexer will enumerate and store all values of a field for
            each time-period.
            </summary>
    </member>
    <member name="P:Nest.ITermsRollupGrouping.Fields">
      <summary>
            The set of fields that you wish to collect terms for. This array can contain fields that are both keyword and numerics.
            Order does not matter
            </summary>
    </member>
    <member name="T:Nest.TermsRollupGrouping">
      <inheritdoc />
    </member>
    <member name="P:Nest.TermsRollupGrouping.Fields">
      <summary>
            The set of fields that you wish to collect terms for. This array can contain fields that are both keyword and numerics.
            Order does not matter
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.TermsRollupGroupingDescriptor`1">
      <inheritdoc cref="T:Nest.ITermsRollupGrouping" />
    </member>
    <member name="M:Nest.TermsRollupGroupingDescriptor`1.Fields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
      <summary>
            The set of fields that you wish to collect terms for. This array can contain fields that are both keyword and numerics.
            Order does not matter
            </summary>
      <inheritdoc cref="P:Nest.ITermsRollupGrouping.Fields" />
    </member>
    <member name="M:Nest.TermsRollupGroupingDescriptor`1.Fields(Nest.Fields)">
      <summary>
            The set of fields that you wish to collect terms for. This array can contain fields that are both keyword and numerics.
            Order does not matter
            </summary>
      <inheritdoc cref="P:Nest.ITermsRollupGrouping.Fields" />
    </member>
    <member name="P:Nest.IApiKeyPrivileges.Names">
      <summary>
            A list of names.
            </summary>
    </member>
    <member name="P:Nest.IApiKeyPrivileges.Privileges">
      <summary>
            A list of privileges.
            </summary>
    </member>
    <member name="P:Nest.ApiKeyPrivileges.Names">
      <summary>
            A list of names.
            </summary>
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Names" />
    </member>
    <member name="P:Nest.ApiKeyPrivileges.Privileges">
      <summary>
            A list of privileges.
            </summary>
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Privileges" />
    </member>
    <member name="P:Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor.Nest#IApiKeyPrivileges#Names">
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Names" />
    </member>
    <member name="P:Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor.Nest#IApiKeyPrivileges#Privileges">
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Privileges" />
    </member>
    <member name="M:Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor.Privileges(System.String[])">
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Privileges" />
    </member>
    <member name="M:Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor.Privileges(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Privileges" />
    </member>
    <member name="M:Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor.Names(System.String[])">
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Names" />
    </member>
    <member name="M:Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor.Names(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IApiKeyPrivileges.Names" />
    </member>
    <member name="P:Nest.IApiKeyRole.Cluster">
      <summary>
            A list of clusters
            </summary>
    </member>
    <member name="P:Nest.IApiKeyRole.Index">
      <summary>
            A list of API key privileges for indices.
            </summary>
    </member>
    <member name="P:Nest.ApiKeyRole.Cluster">
      <summary>
            A list of clusters
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ApiKeyRole.Index">
      <summary>
            A list of API key privileges for indices.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ApiKeyRoleDescriptor.Nest#IApiKeyRole#Cluster">
      <inheritdoc cref="P:Nest.IApiKeyRole.Cluster" />
    </member>
    <member name="P:Nest.ApiKeyRoleDescriptor.Nest#IApiKeyRole#Index">
      <inheritdoc cref="P:Nest.IApiKeyRole.Index" />
    </member>
    <member name="M:Nest.ApiKeyRoleDescriptor.Cluster(System.String[])">
      <summary>
            A list of clusters
            </summary>
      <inheritdoc cref="P:Nest.IApiKeyRole.Cluster" />
    </member>
    <member name="M:Nest.ApiKeyRoleDescriptor.Cluster(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of clusters
            </summary>
      <inheritdoc cref="P:Nest.IApiKeyRole.Cluster" />
    </member>
    <member name="M:Nest.ApiKeyRoleDescriptor.Indices(System.Func{Nest.ApiKeyPrivilegesDescriptor,Nest.IPromise{System.Collections.Generic.List{Nest.IApiKeyPrivileges}}})">
      <inheritdoc cref="P:Nest.IApiKeyRole.Index" />
    </member>
    <member name="P:Nest.CreateApiKeyResponse.Id">
      <summary>
            Id for the API key
            </summary>
    </member>
    <member name="P:Nest.CreateApiKeyResponse.Name">
      <summary>
            Name of the API key
            </summary>
    </member>
    <member name="P:Nest.CreateApiKeyResponse.Expiration">
      <summary>
            Optional expiration time for the API key in milliseconds
            </summary>
    </member>
    <member name="P:Nest.CreateApiKeyResponse.ApiKey">
      <summary>
            Generated API key
            </summary>
    </member>
    <member name="P:Nest.GetApiKeyResponse.ApiKeys">
      <inheritdoc />
    </member>
    <member name="P:Nest.ApiKeys.Creation">
      <summary>
            Creation time for the API key
            </summary>
    </member>
    <member name="P:Nest.ApiKeys.Expiration">
      <summary>
            Optional expiration time for the API key in milliseconds
            </summary>
    </member>
    <member name="P:Nest.ApiKeys.Id">
      <summary>
            Id for the API key
            </summary>
    </member>
    <member name="P:Nest.ApiKeys.Invalidated">
      <summary>
            Invalidation status for the API key. If the key has been invalidated, it has a value of true. Otherwise, it is false.
            </summary>
    </member>
    <member name="P:Nest.ApiKeys.Name">
      <summary>
            Name of the API key
            </summary>
    </member>
    <member name="P:Nest.ApiKeys.Realm">
      <summary>
            Realm name of the principal for which this API key was created
            </summary>
    </member>
    <member name="P:Nest.ApiKeys.Username">
      <summary>
            Principal for which this API key was created
            </summary>
    </member>
    <member name="P:Nest.InvalidateApiKeyResponse.ErrorCount">
      <summary>
            The number of errors that were encountered when invalidating the API keys.
            </summary>
    </member>
    <member name="P:Nest.InvalidateApiKeyResponse.ErrorDetails">
      <summary>
            Details about these errors. This field is not present in the response when there are no errors.
            </summary>
    </member>
    <member name="P:Nest.InvalidateApiKeyResponse.InvalidatedApiKeys">
      <summary>
            The ids of the API keys that were invalidated as part of this request.
            </summary>
    </member>
    <member name="P:Nest.InvalidateApiKeyResponse.PreviouslyInvalidatedApiKeys">
      <summary>
            The ids of the API keys that were already invalidated.
            </summary>
    </member>
    <member name="P:Nest.IIndexPrivilegesCheck.Names">
      <summary>
            A list of indices.
            </summary>
    </member>
    <member name="P:Nest.IIndexPrivilegesCheck.Privileges">
      <summary>
            A list of the privileges that you want to check for the specified indices.
            </summary>
    </member>
    <member name="P:Nest.IndexPrivilegesCheck.Names">
      <summary>
            A list of indices.
            </summary>
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Names" />
    </member>
    <member name="P:Nest.IndexPrivilegesCheck.Privileges">
      <summary>
            A list of the privileges that you want to check for the specified indices.
            </summary>
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Privileges" />
    </member>
    <member name="P:Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor.Nest#IIndexPrivilegesCheck#Names">
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Names" />
    </member>
    <member name="P:Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor.Nest#IIndexPrivilegesCheck#Privileges">
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Privileges" />
    </member>
    <member name="M:Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor.Privileges(System.String[])">
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Privileges" />
    </member>
    <member name="M:Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor.Privileges(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Privileges" />
    </member>
    <member name="M:Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor.Names(System.String[])">
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Names" />
    </member>
    <member name="M:Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor.Names(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IIndexPrivilegesCheck.Names" />
    </member>
    <member name="P:Nest.IApplicationPrivilegesCheck.Name">
      <summary>
            The name of the application.
            </summary>
    </member>
    <member name="P:Nest.IApplicationPrivilegesCheck.Privileges">
      <summary>
            A list of the privileges that you want to check for the specified resources.
            May be either application privilege names, or the names of actions
            that are granted by those privileges.
            </summary>
    </member>
    <member name="P:Nest.IApplicationPrivilegesCheck.Resources">
      <summary>
            A list of resource names against which the privileges should be checked.
            </summary>
    </member>
    <member name="P:Nest.ApplicationPrivilegesCheck.Name">
      <summary>
            The name of the application.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Name" />
    </member>
    <member name="P:Nest.ApplicationPrivilegesCheck.Privileges">
      <summary>
            A list of the privileges that you want to check for the specified resources.
            May be either application privilege names, or the names of actions
            that are granted by those privileges.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Privileges" />
    </member>
    <member name="P:Nest.ApplicationPrivilegesCheck.Resources">
      <summary>
            A list of resource names against which the privileges should be checked.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Resources" />
    </member>
    <member name="P:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Nest#IApplicationPrivilegesCheck#Name">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Name" />
    </member>
    <member name="P:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Nest#IApplicationPrivilegesCheck#Privileges">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Privileges" />
    </member>
    <member name="P:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Nest#IApplicationPrivilegesCheck#Resources">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Resources" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Name(System.String)">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Name" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Privileges(System.String[])">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Privileges" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Privileges(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Privileges" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Resources(System.String[])">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Resources" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor.Resources(System.Collections.Generic.IEnumerable{System.String})">
      <inheritdoc cref="P:Nest.IApplicationPrivilegesCheck.Resources" />
    </member>
    <member name="P:Nest.IPrivilegesActions.Actions">
      <summary>
            A list of action names that are granted by this privilege. This field must exist and cannot be an empty array.
            Action names can contain any number of printable ASCII characters and must contain
            at least one of the following characters: / *, :
            </summary>
    </member>
    <member name="P:Nest.IPrivilegesActions.Metadata">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
    </member>
    <member name="P:Nest.PrivilegesActions.Actions">
      <summary>
            A list of action names that are granted by this privilege. This field must exist and cannot be an empty array.
            Action names can contain any number of printable ASCII characters and must contain
            at least one of the following characters: / *, :
            </summary>
      <inheritdoc cref="P:Nest.IPrivilegesActions.Actions" />
    </member>
    <member name="P:Nest.PrivilegesActions.Metadata">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
      <inheritdoc cref="P:Nest.IPrivilegesActions.Metadata" />
    </member>
    <member name="P:Nest.PrivilegesActionsDescriptor.Nest#IPrivilegesActions#Actions">
      <inheritdoc cref="P:Nest.IPrivilegesActions.Actions" />
    </member>
    <member name="P:Nest.PrivilegesActionsDescriptor.Nest#IPrivilegesActions#Metadata">
      <inheritdoc cref="P:Nest.IPrivilegesActions.Metadata" />
    </member>
    <member name="M:Nest.PrivilegesActionsDescriptor.Actions(System.String[])">
      <summary>
            A list of action names that are granted by this privilege. This field must exist and cannot be an empty array.
            Action names can contain any number of printable ASCII characters and must contain
            at least one of the following characters: / *, :
            </summary>
      <inheritdoc cref="P:Nest.IPrivilegesActions.Actions" />
    </member>
    <member name="M:Nest.PrivilegesActionsDescriptor.Actions(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of action names that are granted by this privilege. This field must exist and cannot be an empty array.
            Action names can contain any number of printable ASCII characters and must contain
            at least one of the following characters: / *, :
            </summary>
      <inheritdoc cref="P:Nest.IPrivilegesActions.Actions" />
    </member>
    <member name="M:Nest.PrivilegesActionsDescriptor.Metadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
      <inheritdoc cref="P:Nest.IPrivilegesActions.Metadata" />
    </member>
    <member name="M:Nest.PrivilegesActionsDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <summary>
            Optional meta-data. Within the metadata object, keys that begin with _ are reserved for system usage.
            </summary>
      <inheritdoc cref="P:Nest.IPrivilegesActions.Metadata" />
    </member>
    <member name="P:Nest.PutPrivilegesStatus.Created">
      <summary>
            Whether the privilege has been created or updated.
            When an existing privilege is updated, created is set to false.
            </summary>
    </member>
    <member name="T:Nest.IApplicationPrivileges">
      <summary>
            Privileges for an application
            </summary>
    </member>
    <member name="P:Nest.IApplicationPrivileges.Application">
      <summary>
            The name of the application to which this entry applies
            </summary>
    </member>
    <member name="P:Nest.IApplicationPrivileges.Privileges">
      <summary>
            A list of strings, where each element is the name of an application privilege or action.
            </summary>
    </member>
    <member name="P:Nest.IApplicationPrivileges.Resources">
      <summary>
            A list resources to which the privileges are applied.
            </summary>
    </member>
    <member name="T:Nest.ApplicationPrivileges">
      <inheritdoc />
    </member>
    <member name="P:Nest.ApplicationPrivileges.Application">
      <summary>
            The name of the application to which this entry applies
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ApplicationPrivileges.Privileges">
      <summary>
            A list of strings, where each element is the name of an application privilege or action.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.ApplicationPrivileges.Resources">
      <summary>
            A list resources to which the privileges are applied.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.ApplicationPrivilegesListDescriptor.Add(System.Func{Nest.ApplicationPrivilegesDescriptor,Nest.IApplicationPrivileges})">
      <summary>
            Adds an application privilege
            </summary>
    </member>
    <member name="T:Nest.ApplicationPrivilegesDescriptor">
      <inheritdoc cref="T:Nest.IApplicationPrivileges" />
    </member>
    <member name="P:Nest.ApplicationPrivilegesDescriptor.Nest#IApplicationPrivileges#Application">
      <inheritdoc />
    </member>
    <member name="P:Nest.ApplicationPrivilegesDescriptor.Nest#IApplicationPrivileges#Privileges">
      <inheritdoc />
    </member>
    <member name="P:Nest.ApplicationPrivilegesDescriptor.Nest#IApplicationPrivileges#Resources">
      <inheritdoc />
    </member>
    <member name="M:Nest.ApplicationPrivilegesDescriptor.Application(System.String)">
      <summary>
            The name of the application to which this entry applies
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivileges.Application" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesDescriptor.Privileges(System.String[])">
      <summary>
            A list of strings, where each element is the name of an application privilege or action.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivileges.Privileges" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesDescriptor.Privileges(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list of strings, where each element is the name of an application privilege or action.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivileges.Privileges" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesDescriptor.Resources(System.String[])">
      <summary>
            A list resources to which the privileges are applied.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivileges.Resources" />
    </member>
    <member name="M:Nest.ApplicationPrivilegesDescriptor.Resources(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A list resources to which the privileges are applied.
            </summary>
      <inheritdoc cref="P:Nest.IApplicationPrivileges.Resources" />
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenResponse.InvalidatedTokens">
      <summary>
            The number of the tokens that were invalidated as part of this request.
            </summary>
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenResponse.PreviouslyInvalidatedTokens">
      <summary>
            The number of tokens that were already invalidated.
            </summary>
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenResponse.ErrorCount">
      <summary>
            The number of errors that were encountered when invalidating the tokens.
            </summary>
    </member>
    <member name="P:Nest.InvalidateUserAccessTokenResponse.ErrorDetails">
      <summary>
            Details about these errors. This field is not present in the response when there are no errors.
            </summary>
    </member>
    <member name="T:Nest.ISqlRequest">
      <summary> Shared properties of <see cref="T:Nest.IQuerySqlRequest" /> and <see cref="T:Nest.ITranslateSqlRequest" /></summary>
    </member>
    <member name="P:Nest.ISqlRequest.FetchSize">
      <summary>
            fetch_size is a hint for how many results to return in each page. SQL might chose to return more or fewer results though.
            </summary>
    </member>
    <member name="P:Nest.ISqlRequest.Filter">
      <summary> Further filter the results returned by the SQL query provided on <see cref="P:Nest.ISqlRequest.Query" /></summary>
    </member>
    <member name="P:Nest.ISqlRequest.Query">
      <summary> The SQL query you want Elasticsearch to execute </summary>
    </member>
    <member name="P:Nest.ISqlRequest.TimeZone">
      <summary>
            time_zone is the time zone to use for date functions and date parsing. time_zone defaults to utc
            and can take any values as documented on Joda time's DateTimeZone enum.
            </summary>
    </member>
    <member name="P:Nest.QuerySqlResponse.Columns">
      <summary>
            Describes the columns being returned, this property will only be set on the first page of results.
            </summary>
    </member>
    <member name="P:Nest.QuerySqlResponse.Cursor">
      <summary>
            You’ve reached the last page when there is no cursor returned in the results. Like Elasticsearch’s scroll,
            SQL may keep state in Elasticsearch to support the cursor.
            Unlike scroll, receiving the last page is enough to guarantee that the Elasticsearch state is cleared.
            </summary>
    </member>
    <member name="P:Nest.QuerySqlResponse.Rows">
      <summary>
            If <see cref="P:Nest.IQuerySqlRequest.Columnar" /> has been set to false, this property will contain the row values
            </summary>
    </member>
    <member name="P:Nest.QuerySqlResponse.Values">
      <summary>
            If <see cref="P:Nest.IQuerySqlRequest.Columnar" /> has been set to true, this property will contain the column values
            </summary>
    </member>
    <member name="T:Nest.IAction">
      <summary>
            A Watcher action
            </summary>
    </member>
    <member name="P:Nest.IAction.ActionType">
      <summary>
            The type of action
            </summary>
    </member>
    <member name="P:Nest.IAction.Name">
      <summary>
            The name of the action
            </summary>
    </member>
    <member name="P:Nest.IAction.ThrottlePeriod">
      <summary>
            Limit how often an action is executed, after it has been executed.
            When a throttling period is set, repeated executions of the action are prevented if it has already
            executed within the throttling period time frame (now - throttling period).
            </summary>
    </member>
    <member name="P:Nest.IAction.Foreach">
      <summary>
            Trigger the configured action for every element within an array
            defined by the path assigned.
            <para />
            Valid only in Elasticsearch 7.3.0+
            </summary>
    </member>
    <member name="P:Nest.IAction.Transform">
      <summary>
            Transforms the payload before executing the action. The transformation is only applied
            for the payload for this action.
            </summary>
    </member>
    <member name="P:Nest.IAction.Condition">
      <summary>
            A condition for the action. Allows a single watch to specify multiple actions, but
            further control when each action will be executed.
            </summary>
    </member>
    <member name="T:Nest.ActionBase">
      <inheritdoc />
    </member>
    <member name="P:Nest.ActionBase.Name">
      <inheritdoc />
    </member>
    <member name="P:Nest.ActionBase.ThrottlePeriod">
      <inheritdoc />
    </member>
    <member name="P:Nest.ActionBase.Foreach">
      <inheritdoc />
    </member>
    <member name="P:Nest.ActionBase.Transform">
      <inheritdoc />
    </member>
    <member name="P:Nest.ActionBase.Condition">
      <inheritdoc />
    </member>
    <member name="T:Nest.ActionsDescriptorBase`2">
      <inheritdoc cref="T:Nest.IAction" />
    </member>
    <member name="M:Nest.ActionsDescriptorBase`2.Transform(System.Func{Nest.TransformDescriptor,Nest.TransformContainer})">
      <inheritdoc cref="P:Nest.IAction.Transform" />
    </member>
    <member name="M:Nest.ActionsDescriptorBase`2.Condition(System.Func{Nest.ConditionDescriptor,Nest.ConditionContainer})">
      <inheritdoc cref="P:Nest.IAction.Condition" />
    </member>
    <member name="M:Nest.ActionsDescriptorBase`2.ThrottlePeriod(Nest.Time)">
      <inheritdoc cref="P:Nest.IAction.ThrottlePeriod" />
    </member>
    <member name="M:Nest.ActionsDescriptorBase`2.Foreach(System.String)">
      <inheritdoc cref="P:Nest.IAction.Foreach" />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Authentication(System.Func{Nest.HttpInputAuthenticationDescriptor,Nest.IHttpInputAuthentication})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Body(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.ConnectionTimeout(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Headers(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Headers(System.Collections.Generic.Dictionary{System.String,System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Host(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Method(System.Nullable{Nest.HttpInputMethod})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Path(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Params(System.Collections.Generic.Dictionary{System.String,System.String})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Port(System.Nullable{System.Int32})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Proxy(System.Func{Nest.HttpInputProxyDescriptor,Nest.IHttpInputProxy})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.ReadTimeout(Nest.Time)">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Scheme(System.Nullable{Nest.ConnectionScheme})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WebhookActionDescriptor.Url(System.String)">
      <inheritdoc />
    </member>
    <member name="T:Nest.IConditionContainer">
      <summary>
            Conditions for a watch
            </summary>
    </member>
    <member name="P:Nest.IConditionContainer.Always">
      <summary>
            Forces the watch actions to be executed unless they are throttled.
            </summary>
    </member>
    <member name="P:Nest.IConditionContainer.ArrayCompare">
      <summary>
            Compares an array of values in the execution context to a given value.
            </summary>
    </member>
    <member name="P:Nest.IConditionContainer.Compare">
      <summary>
            Performs a simple comparison against a value in the watch payload.
            </summary>
    </member>
    <member name="P:Nest.IConditionContainer.Never">
      <summary>
            Watch actions are never executed when the watch is triggered.
            The watch input is executed, a record is added to the watch history,
            and the watch execution ends.
            </summary>
      <remarks>
            This condition is generally used for testing.
            </remarks>
    </member>
    <member name="P:Nest.IConditionContainer.Script">
      <summary>
            A watch condition that evaluates a script.
            You can use any of the scripting languages supported by Elasticsearch as long as the
            language supports evaluating expressions to Boolean values.
            Note that the mustache and expression languages are too limited to be used by this condition.
            </summary>
    </member>
    <member name="T:Nest.ConditionContainer">
      <inheritdoc />
    </member>
    <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Always">
      <inheritdoc />
    </member>
    <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#ArrayCompare">
      <inheritdoc />
    </member>
    <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Compare">
      <inheritdoc />
    </member>
    <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Never">
      <inheritdoc />
    </member>
    <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Script">
      <inheritdoc />
    </member>
    <member name="T:Nest.ConditionDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.ConditionDescriptor.Always">
      <inheritdoc />
    </member>
    <member name="M:Nest.ConditionDescriptor.Never">
      <inheritdoc />
    </member>
    <member name="M:Nest.ConditionDescriptor.Compare(System.Func{Nest.CompareConditionDescriptor,Nest.ICompareCondition})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ConditionDescriptor.ArrayCompare(System.Func{Nest.ArrayCompareConditionDescriptor,Nest.IArrayCompareCondition})">
      <inheritdoc />
    </member>
    <member name="M:Nest.ConditionDescriptor.Script(System.Func{Nest.ScriptConditionDescriptor,Nest.IScriptCondition})">
      <inheritdoc />
    </member>
    <member name="F:Nest.ActionExecutionMode.Simulate">
      <summary>
            The action will be simulated (not actually executed)
             and it will be throttled if needed.
            </summary>
    </member>
    <member name="F:Nest.ActionExecutionMode.ForceSimulate">
      <summary>
            The action will be simulated (not actually executed) and it will
            not be throttled.
            </summary>
    </member>
    <member name="F:Nest.ActionExecutionMode.Execute">
      <summary>
            The action will be executed and it will be throttled if needed.
            </summary>
    </member>
    <member name="F:Nest.ActionExecutionMode.ForceExecute">
      <summary>
            The action will be executed and it will not be throttled.
            </summary>
    </member>
    <member name="F:Nest.ActionExecutionMode.Skip">
      <summary>
            The action will be skipped (it won't be executed nor simulated)
            - effectively it will be forcefully throttled
            </summary>
    </member>
    <member name="T:Nest.IChainInput">
      <summary>
             input to load data from multiple sources into the watch execution context when the watch is triggered.
            </summary>
    </member>
    <member name="P:Nest.IChainInput.Inputs">
      <summary>
            The input sources
            </summary>
    </member>
    <member name="T:Nest.ChainInput">
      <inheritdoc />
    </member>
    <member name="P:Nest.ChainInput.Inputs">
      <summary>
            The input sources
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ChainInputDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.ChainInputDescriptor.Input(System.String,System.Func{Nest.InputDescriptor,Nest.InputContainer})">
      <inheritdoc />
    </member>
    <member name="T:Nest.IHttpInput">
      <summary>
            input to submit a request to an HTTP endpoint and load the response
            into the watch execution context when a watch is triggered.
            </summary>
    </member>
    <member name="P:Nest.IHttpInput.Extract">
      <summary>
            A array of json keys to extract from the input response and use as payload.
            In cases when an input generates a large response this can be used to filter
            the relevant piece of the response to be used as payload.
            </summary>
    </member>
    <member name="P:Nest.IHttpInput.Request">
      <summary>
            The HTTP input request details
            </summary>
    </member>
    <member name="P:Nest.IHttpInput.ResponseContentType">
      <summary>
            The expected content type the response body will contain.
            If the format is text, <see cref="P:Nest.HttpInput.Extract" /> cannot exist.
            Note that this overrides the header that is returned in the HTTP response.
            </summary>
    </member>
    <member name="T:Nest.HttpInput">
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInput.Extract">
      <summary>
            A array of json keys to extract from the input response and use as payload.
            In cases when an input generates a large response this can be used to filter
            the relevant piece of the response to be used as payload.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInput.Request">
      <summary>
            The HTTP input request details
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInput.ResponseContentType">
      <summary>
            The expected content type the response body will contain.
            If the format is text, <see cref="P:Nest.HttpInput.Extract" /> cannot exist.
            Note that this overrides the header that is returned in the HTTP response.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.HttpInputDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputDescriptor.Request(System.Func{Nest.HttpInputRequestDescriptor,Nest.IHttpInputRequest})">
      <summary>
            The HTTP input request details
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputDescriptor.Extract(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A array of json keys to extract from the input response and use as payload.
            In cases when an input generates a large response this can be used to filter
            the relevant piece of the response to be used as payload.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputDescriptor.Extract(System.String[])">
      <summary>
            A array of json keys to extract from the input response and use as payload.
            In cases when an input generates a large response this can be used to filter
            the relevant piece of the response to be used as payload.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputDescriptor.ResponseContentType(System.Nullable{Nest.ResponseContentType})">
      <summary>
            The expected content type the response body will contain.
            If the format is text, <see cref="P:Nest.HttpInput.Extract" /> cannot exist.
            Note that this overrides the header that is returned in the HTTP response.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IHttpInputAuthentication">
      <summary>
            The Authentication mechanism for a request to a HTTP endpoint
            </summary>
    </member>
    <member name="P:Nest.IHttpInputAuthentication.Basic">
      <summary>
            Basic Authentication credentials
            </summary>
    </member>
    <member name="T:Nest.HttpInputAuthentication">
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputAuthentication.Basic">
      <summary>
            Basic Authentication credentials
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.HttpInputAuthenticationDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputAuthenticationDescriptor.Basic(System.Func{Nest.HttpInputBasicAuthenticationDescriptor,Nest.IHttpInputBasicAuthentication})">
      <summary>
            Basic Authentication credentials
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.IHttpInputBasicAuthentication">
      <summary>
            Basic Authentication credentials
            </summary>
    </member>
    <member name="P:Nest.IHttpInputBasicAuthentication.Password">
      <summary>
            Password for Basic Authentication
            </summary>
    </member>
    <member name="P:Nest.IHttpInputBasicAuthentication.Username">
      <summary>
            Username for Basic Authentication
            </summary>
    </member>
    <member name="T:Nest.HttpInputBasicAuthentication">
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputBasicAuthentication.Password">
      <summary>
            Password for Basic Authentication
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputBasicAuthentication.Username">
      <summary>
            Username for Basic Authentication
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.HttpInputBasicAuthenticationDescriptor">
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputBasicAuthenticationDescriptor.Username(System.String)">
      <summary>
            Username for Basic Authentication
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputBasicAuthenticationDescriptor.Password(System.String)">
      <summary>
            Password for Basic Authentication
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.IHttpInputRequest.Authentication">
      <summary>
            Authentication related HTTP headers.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Body">
      <summary>
            The HTTP request body.
            The body can be static text or include mustache templates.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.ConnectionTimeout">
      <summary>
            The timeout for setting up the http connection.
            If the connection could not be set up within this time,
            the input will timeout and fail.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Headers">
      <summary>
            The HTTP request headers.
            The header values can be static text or include mustache templates.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Host">
      <summary>
            The host to connect to. This is required
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Method">
      <summary>
            The HTTP method. Defaults to <see cref="F:Nest.HttpInputMethod.Get" /></summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Params">
      <summary>
            The url query string parameters.
            The parameter values can be static text or contain mustache templates.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Path">
      <summary>
            The url path. The path can be static text or contain mustache templates.
            Url query string parameters must be specified with <see cref="P:Nest.IHttpInputRequest.Params" /></summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Port">
      <summary>
            The port that the http service is listening on.
            This is required
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Proxy">
      <summary>
            The proxy to use when connecting to the host.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.ReadTimeout">
      <summary>
            The timeout for reading data from http connection.
            If no response was received within this time,
            the input will timeout and fail.
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Scheme">
      <summary>
            The url scheme
            </summary>
    </member>
    <member name="P:Nest.IHttpInputRequest.Url">
      <summary>
            Sets the scheme, host, port and params all at once by specifying a real URL.
            May not be combined with <see cref="P:Nest.IHttpInputRequest.Scheme" />, <see cref="P:Nest.IHttpInputRequest.Host" />,
            <see cref="P:Nest.IHttpInputRequest.Port" /> and <see cref="P:Nest.IHttpInputRequest.Params" />.
            As if parameters are set, specifying them individually might overwrite them.
            </summary>
    </member>
    <member name="P:Nest.HttpInputRequest.Authentication">
      <summary>
            Authentication related HTTP headers.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Body">
      <summary>
            The HTTP request body.
            The body can be static text or include mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.ConnectionTimeout">
      <summary>
            The timeout for setting up the http connection.
            If the connection could not be set up within this time,
            the input will timeout and fail.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Headers">
      <summary>
            The HTTP request headers.
            The header values can be static text or include mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Host">
      <summary>
            The host to connect to. This is required
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Method">
      <summary>
            The HTTP method. Defaults to <see cref="F:Nest.HttpInputMethod.Get" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Params">
      <summary>
            The url query string parameters.
            The parameter values can be static text or contain mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Path">
      <summary>
            The url path. The path can be static text or contain mustache templates.
            Url query string parameters must be specified with <see cref="P:Nest.IHttpInputRequest.Params" /></summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Port">
      <summary>
            The port that the http service is listening on.
            This is required
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Proxy">
      <summary>
            The proxy to use when connecting to the host.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.ReadTimeout">
      <summary>
            The timeout for reading data from http connection.
            If no response was received within this time,
            the input will timeout and fail.
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Scheme">
      <summary>
            The url scheme
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.HttpInputRequest.Url">
      <summary>
            Sets the scheme, host, port and params all at once by specifying a real URL.
            May not be combined with <see cref="P:Nest.IHttpInputRequest.Scheme" />, <see cref="P:Nest.IHttpInputRequest.Host" />,
            <see cref="P:Nest.IHttpInputRequest.Port" /> and <see cref="P:Nest.IHttpInputRequest.Params" />.
            As if parameters are set, specifying them individually might overwrite them.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Authentication(System.Func{Nest.HttpInputAuthenticationDescriptor,Nest.IHttpInputAuthentication})">
      <summary>
            Authentication related HTTP headers.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Body(System.String)">
      <summary>
            The HTTP request body.
            The body can be static text or include mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.ConnectionTimeout(Nest.Time)">
      <summary>
            The timeout for setting up the http connection.
            If the connection could not be set up within this time,
            the input will timeout and fail.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Headers(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <summary>
            The HTTP request headers.
            The header values can be static text or include mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Headers(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            The HTTP request headers.
            The header values can be static text or include mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Host(System.String)">
      <summary>
            The host to connect to. This is required
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Method(System.Nullable{Nest.HttpInputMethod})">
      <summary>
            The HTTP method. Defaults to <see cref="F:Nest.HttpInputMethod.Get" /></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Path(System.String)">
      <summary>
            The url path. The path can be static text or contain mustache templates.
            Url query string parameters must be specified with <see cref="P:Nest.IHttpInputRequest.Params" /></summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
      <summary>
            The url query string parameters.
            The parameter values can be static text or contain mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Params(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            The url query string parameters.
            The parameter values can be static text or contain mustache templates.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Port(System.Nullable{System.Int32})">
      <summary>
            The port that the http service is listening on.
            This is required
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Proxy(System.Func{Nest.HttpInputProxyDescriptor,Nest.IHttpInputProxy})">
      <summary>
            The proxy to use when connecting to the host.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.ReadTimeout(Nest.Time)">
      <summary>
            The timeout for reading data from http connection.
            If no response was received within this time,
            the input will timeout and fail.
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Scheme(System.Nullable{Nest.ConnectionScheme})">
      <summary>
            The url scheme
            </summary>
      <inheritdoc />
    </member>
    <member name="M:Nest.HttpInputRequestDescriptor.Url(System.String)">
      <summary>
            Sets the scheme, host, port and params all at once by specifying a real URL.
            May not be combined with <see cref="P:Nest.IHttpInputRequest.Scheme" />, <see cref="P:Nest.IHttpInputRequest.Host" />,
            <see cref="P:Nest.IHttpInputRequest.Port" /> and <see cref="P:Nest.IHttpInputRequest.Params" />.
            As if parameters are set, specifying them individually might overwrite them.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.ISearchInput">
      <summary>
            An input to load the results of an Elasticsearch search request into the execution
            context when a watch is triggered.
            </summary>
    </member>
    <member name="P:Nest.ISearchInput.Extract">
      <summary>
            A array of json keys to extract from the search response and load as the payload.
            When a search generates a large response, you can use extract
            to select the relevant fields instead of loading the entire response
            </summary>
    </member>
    <member name="P:Nest.ISearchInput.Request">
      <summary>
            The search request details
            </summary>
    </member>
    <member name="P:Nest.ISearchInput.Timeout">
      <summary>
            The timeout for waiting for the search api call to return.
            If no response is returned within this time, the search input times out and fails.
            This setting overrides the default search operations timeouts.
            </summary>
    </member>
    <member name="T:Nest.SearchInput">
      <inheritdoc cref="T:Nest.ISearchInput" />
    </member>
    <member name="P:Nest.SearchInput.Extract">
      <summary>
            A array of json keys to extract from the search response and load as the payload.
            When a search generates a large response, you can use extract
            to select the relevant fields instead of loading the entire response
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchInput.Request">
      <summary>
            The search request details
            </summary>
      <inheritdoc />
    </member>
    <member name="P:Nest.SearchInput.Timeout">
      <summary>
            The timeout for waiting for the search api call to return.
            If no response is returned within this time, the search input times out and fails.
            This setting overrides the default search operations timeouts.
            </summary>
      <inheritdoc />
    </member>
    <member name="T:Nest.SearchInputDescriptor">
      <inheritdoc cref="T:Nest.ISearchInput" />
    </member>
    <member name="M:Nest.SearchInputDescriptor.Request(System.Func{Nest.SearchInputRequestDescriptor,Nest.ISearchInputRequest})">
      <summary>
            The search request details
            </summary>
      <inheritdoc cref="P:Nest.ISearchInput.Request" />
    </member>
    <member name="M:Nest.SearchInputDescriptor.Extract(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            A array of json keys to extract from the search response and load as the payload.
            When a search generates a large response, you can use extract
            to select the relevant fields instead of loading the entire response
            </summary>
      <inheritdoc cref="P:Nest.ISearchInput.Extract" />
    </member>
    <member name="M:Nest.SearchInputDescriptor.Extract(System.String[])">
      <summary>
            A array of json keys to extract from the search response and load as the payload.
            When a search generates a large response, you can use extract
            to select the relevant fields instead of loading the entire response
            </summary>
      <inheritdoc cref="P:Nest.ISearchInput.Extract" />
    </member>
    <member name="M:Nest.SearchInputDescriptor.Timeout(Nest.Time)">
      <summary>
            The timeout for waiting for the search api call to return.
            If no response is returned within this time, the search input times out and fails.
            This setting overrides the default search operations timeouts.
            </summary>
      <inheritdoc cref="P:Nest.ISearchInput.Timeout" />
    </member>
    <member name="M:Nest.ChainTransformDescriptor.Transform(System.Func{Nest.TransformDescriptor,Nest.TransformContainer})">
      <inheritdoc />
    </member>
    <member name="M:Nest.WatchDescriptor.Actions(System.Func{Nest.ActionsDescriptor,Nest.IPromise{Nest.Actions}})">
      <inheritdoc cref="P:Nest.IWatch.Actions" />
    </member>
    <member name="M:Nest.WatchDescriptor.Condition(System.Func{Nest.ConditionDescriptor,Nest.ConditionContainer})">
      <inheritdoc cref="P:Nest.IWatch.Condition" />
    </member>
    <member name="M:Nest.WatchDescriptor.Input(System.Func{Nest.InputDescriptor,Nest.InputContainer})">
      <inheritdoc cref="P:Nest.IWatch.Input" />
    </member>
    <member name="M:Nest.WatchDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
      <inheritdoc cref="P:Nest.IWatch.Metadata" />
    </member>
    <member name="M:Nest.WatchDescriptor.Metadata(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <inheritdoc cref="P:Nest.IWatch.Metadata" />
    </member>
    <member name="M:Nest.WatchDescriptor.ThrottlePeriod(System.String)">
      <inheritdoc cref="P:Nest.IWatch.ThrottlePeriod" />
    </member>
    <member name="M:Nest.WatchDescriptor.Transform(System.Func{Nest.TransformDescriptor,Nest.TransformContainer})">
      <inheritdoc cref="P:Nest.IWatch.Transform" />
    </member>
    <member name="M:Nest.WatchDescriptor.Trigger(System.Func{Nest.TriggerDescriptor,Nest.TriggerContainer})">
      <inheritdoc cref="P:Nest.IWatch.Trigger" />
    </member>
  </members>
</doc>