@using MyOnlineNotesEntities

@model List<Note>

<!-- Page Content -->
<div class="container">

    <div class="row">

        <div class="col-lg-3">
            @*kategoriler*@
            @Html.Partial("_PartialCategories")
        </div>
        <!-- /.col-lg-3 -->

        <div class="col-lg-9">
            @*carousel*@
            <div id="carouselExampleIndicators" class="carousel slide my-4" data-ride="carousel">
                <ol class="carousel-indicators">
                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                </ol>
                <div class="carousel-inner" role="listbox">
                    <div class="carousel-item active">
                        <img class="d-block img-fluid" src="http://placehold.it/900x350" alt="First slide">
                    </div>
                    <div class="carousel-item">
                        <img class="d-block img-fluid" src="http://placehold.it/900x350" alt="Second slide">
                    </div>
                    <div class="carousel-item">
                        <img class="d-block img-fluid" src="http://placehold.it/900x350" alt="Third slide">
                    </div>
                </div>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>



            @*NOTLAR*@
            <div class="row">

                @foreach (Note note in Model)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card h-100">
                            <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="@note.Title"></a>
                            <div class="card-body">
                                <h4 class="card-title">
                                    <a href="#">
                                        @note.Title
                                    </a>
                                </h4>
                                <p>
                                    <span class="fas fa-calendar-alt mr-1"></span>@note.ModifiedOn.ToString()<br />
                                    <span class="fas fa-user-tie mr-1"></span>@note.Owner.Username<br />
                                </p>
                                <hr />

                                @if (string.IsNullOrEmpty(note.Text) == false && note.Text.Length > 70)
                                {

                                    <p> @(note.Text.Substring(0, 70) + "...")</p>
                                    <p><a href="#" class="btn btn-dark btn-sm ">devamı <span class="fas fa-arrow-right"></span></a></p>
                                }
                                else
                                {
                                    <p>
                                        @note.Text
                                    </p>
                                }

                            </div>
                            <div>
                                <p class="float-right mr-4">
                                    <button type="button" class="btn btn-success"  data-toggle="modal" data-target="#modal_comment" data-note-id="@note.Id">
                                        <span class="glyphicon glyphicon-comment mr-2"></span>Yorumlar
                                    </button>
                                </p>
                                <p>
                                    <button class=" float-left ml-2 btn-danger btn-sm" type="button">
                                        <span class="glyphicon glyphicon-star-empty mr-2"></span>@note.LikeCount
                                    </button>
                                </p>
                            </div>
                        </div>
                    </div>
                }


            </div>
            <!-- /.row -->
        </div>
        <!-- /.col-lg-9 -->
    </div>
    <!-- /.row -->

</div>
<!-- /.container -->


@section footer {
    @Html.Partial("_PartialFooter")
}


@BootstrapHelper.ModalPopup(id:"modal_comment", title:"Yorumlar")

<script>

    var noteid = -1;

    var modalCommenBodyId = "#modal_comment_body"; 


    $(function () {
        //modal show olduktan sonra ilgili conroller altındaki action ı ilgili elemente yükleyecek
        $('#modal_comment').on('show.bs.modal', function (e) {

            var btn = $(e.relatedTarget);// butonu yakaladım
             noteid = btn.data("note-id");

            $(modalCommenBodyId).load("/Comment/ShowNoteComments/" + noteid);
        })
    });



    function doComment(btn, e, commentId, spanId) {


        var button = $(btn);
        var mode = button.data("edit-mode");
        


        //eğer edit moddaysam butonu yeşile çevirmem ikonu tik yapmam gerekiyor
        if (e == "edit_clicked")
        {

            //ilk tıklamamızda edit mode false ise açmam gerekiyor
            if (!mode) {
                button.data("edit-mode", true);
                button.removeClass("btn-warning");
                button.addClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.removeClass("glyphicon-edit");
                btnSpan.addClass("glyphicon-ok");

                $(spanId).addClass("editable"); // eitable true olduğunda css kodlarım devreye girecek

                $(spanId).attr("contenteditable", true);
            }
            //ikinci kez tıkladığımda
            else
            {
                button.data("edit-mode", false);
                button.addClass("btn-warning");
                button.removeClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.addClass("glyphicon-edit");
                btnSpan.removeClass("glyphicon-ok");

                $(spanId).removeClass("editable");
                $(spanId).focus();

                $(spanId).attr("contenteditable", false);


                //update sorgusunu çalıştırmam gerekecek

                var txt = $(spanId).text();

                $.ajax({
                    method: "POST",
                    url: "/Comment/Edit/" + commentId,
                    data: { text: txt }
                }).done(function (data) {

                    //başarılıysa
                    if (data.result) {

                        //yorumlar partial tekrar yüklenir
                        $(modalCommenBodyId).load("/Comment/ShowNoteComments/" + noteid);


                    }
                    else
                    {
                        alert("Yorum Güncellenemedi !");
                    }

                }).fail(function () {

                    alert("Sunucu ile Bağlantı Kurulamadı !");

                });


            }


        }
        //eğer delete butonuna bastıysam 
        else if (e == "delete_clicked")
        {

            var dialog_res = confirm("Yorum Silinsin mi ?");

            if (dialog_res == false) {
                return false;
            }
            else
            {
                $(spanId).focus();

                $.ajax({
                        method: "GET",
                        url: "/Comment/Delete/" + commentId,
                    }).done(function (data) {
                        //başarılıysa
                        if (data.result) {
                            //yorumlar partial tekrar yüklenir
                            $(modalCommenBodyId).load("/Comment/ShowNoteComments/" + noteid);
                        }
                        else
                        {
                            alert("Yorum Silinemedi !");
                        }

                    }).fail(function () {

                        alert("Sunucu ile Bağlantı Kurulamadı !");

                    });
            }
        }
        //eğer yeni yorum eklersem
        else if (e == "new_clicked")
        {

            var txt = $('#new_comment_text').val();


             $.ajax({
                        method: "POST",
                        url: "/Comment/Create/",
                        data: { "text":txt , "noteid":noteid }
                    }).done(function (data) {
                        //başarılıysa
                        if (data.result) {
                            //yorumlar partial tekrar yüklenir
                            $(modalCommenBodyId).load("/Comment/ShowNoteComments/" + noteid);
                        }
                        else
                        {
                            alert("Yorum Eklenemedi !");
                        }

                    }).fail(function () {

                        alert("Sunucu ile Bağlantı Kurulamadı !");

                    });


        }


    }






</script>
